predicate gecode_global_cardinality(array[int] of var int: x, array[int] of int: cover, array[int] of var int: counts);
array [1..400] of int: aux
var 2..19: opponent_00001_00001:: output_var ;
var 2..20: opponent_00001_00002:: output_var ;
var 2..20: opponent_00001_00003:: output_var ;
var 2..20: opponent_00001_00004:: output_var ;
var 2..20: opponent_00001_00005:: output_var ;
var 2..20: opponent_00001_00006:: output_var ;
var 2..20: opponent_00001_00007:: output_var ;
var 2..20: opponent_00001_00008:: output_var ;
var 2..20: opponent_00001_00009:: output_var ;
var 2..20: opponent_00001_00010:: output_var ;
var 2..20: opponent_00001_00011:: output_var ;
var 2..20: opponent_00001_00012:: output_var ;
var 2..20: opponent_00001_00013:: output_var ;
var 2..20: opponent_00001_00014:: output_var ;
var 2..20: opponent_00001_00015:: output_var ;
var 2..20: opponent_00001_00016:: output_var ;
var 2..20: opponent_00001_00017:: output_var ;
var 2..20: opponent_00001_00018:: output_var ;
var 3..20: opponent_00001_00019:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00002_00001:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00002_00002:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00002_00003:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00002_00004:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00002_00005:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00002_00006:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00002_00007:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00002_00008:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00002_00009:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00002_00010:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00002_00011:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00002_00012:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00002_00013:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00002_00014:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00002_00015:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00002_00016:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00002_00017:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00002_00018:: output_var ;
var 3..20: opponent_00002_00019:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00003_00001:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00003_00002:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00003_00003:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00003_00004:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00003_00005:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00003_00006:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00003_00007:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00003_00008:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00003_00009:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00003_00010:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00003_00011:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00003_00012:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00003_00013:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00003_00014:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00003_00015:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00003_00016:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00003_00017:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00003_00018:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00003_00019:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00004_00001:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00004_00002:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00004_00003:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00004_00004:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00004_00005:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00004_00006:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00004_00007:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00004_00008:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00004_00009:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00004_00010:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00004_00011:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00004_00012:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00004_00013:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00004_00014:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00004_00015:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00004_00016:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00004_00017:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00004_00018:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00004_00019:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00005_00001:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00005_00002:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00005_00003:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00005_00004:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00005_00005:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00005_00006:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00005_00007:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00005_00008:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00005_00009:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00005_00010:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00005_00011:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00005_00012:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00005_00013:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00005_00014:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00005_00015:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00005_00016:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00005_00017:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00005_00018:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00005_00019:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00006_00001:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00006_00002:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00006_00003:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00006_00004:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00006_00005:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00006_00006:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00006_00007:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00006_00008:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00006_00009:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00006_00010:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00006_00011:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00006_00012:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00006_00013:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00006_00014:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00006_00015:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00006_00016:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00006_00017:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00006_00018:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00006_00019:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00007_00001:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00007_00002:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00007_00003:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00007_00004:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00007_00005:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00007_00006:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00007_00007:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00007_00008:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00007_00009:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00007_00010:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00007_00011:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00007_00012:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00007_00013:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00007_00014:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00007_00015:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00007_00016:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00007_00017:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00007_00018:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00007_00019:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00008_00001:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00008_00002:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00008_00003:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00008_00004:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00008_00005:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00008_00006:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00008_00007:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00008_00008:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00008_00009:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00008_00010:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00008_00011:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00008_00012:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00008_00013:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00008_00014:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00008_00015:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00008_00016:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00008_00017:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00008_00018:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20}: opponent_00008_00019:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20}: opponent_00009_00001:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20}: opponent_00009_00002:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20}: opponent_00009_00003:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20}: opponent_00009_00004:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20}: opponent_00009_00005:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20}: opponent_00009_00006:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20}: opponent_00009_00007:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20}: opponent_00009_00008:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20}: opponent_00009_00009:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20}: opponent_00009_00010:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20}: opponent_00009_00011:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20}: opponent_00009_00012:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20}: opponent_00009_00013:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20}: opponent_00009_00014:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20}: opponent_00009_00015:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20}: opponent_00009_00016:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20}: opponent_00009_00017:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20}: opponent_00009_00018:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20}: opponent_00009_00019:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20}: opponent_00010_00001:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20}: opponent_00010_00002:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20}: opponent_00010_00003:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20}: opponent_00010_00004:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20}: opponent_00010_00005:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20}: opponent_00010_00006:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20}: opponent_00010_00007:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20}: opponent_00010_00008:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20}: opponent_00010_00009:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20}: opponent_00010_00010:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20}: opponent_00010_00011:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20}: opponent_00010_00012:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20}: opponent_00010_00013:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20}: opponent_00010_00014:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20}: opponent_00010_00015:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20}: opponent_00010_00016:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20}: opponent_00010_00017:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20}: opponent_00010_00018:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20}: opponent_00010_00019:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20}: opponent_00011_00001:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20}: opponent_00011_00002:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20}: opponent_00011_00003:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20}: opponent_00011_00004:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20}: opponent_00011_00005:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20}: opponent_00011_00006:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20}: opponent_00011_00007:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20}: opponent_00011_00008:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20}: opponent_00011_00009:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20}: opponent_00011_00010:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20}: opponent_00011_00011:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20}: opponent_00011_00012:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20}: opponent_00011_00013:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20}: opponent_00011_00014:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20}: opponent_00011_00015:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20}: opponent_00011_00016:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20}: opponent_00011_00017:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20}: opponent_00011_00018:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20}: opponent_00011_00019:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20}: opponent_00012_00001:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20}: opponent_00012_00002:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20}: opponent_00012_00003:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20}: opponent_00012_00004:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20}: opponent_00012_00005:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20}: opponent_00012_00006:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20}: opponent_00012_00007:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20}: opponent_00012_00008:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20}: opponent_00012_00009:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20}: opponent_00012_00010:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20}: opponent_00012_00011:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20}: opponent_00012_00012:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20}: opponent_00012_00013:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20}: opponent_00012_00014:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20}: opponent_00012_00015:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20}: opponent_00012_00016:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20}: opponent_00012_00017:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20}: opponent_00012_00018:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20}: opponent_00012_00019:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20}: opponent_00013_00001:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20}: opponent_00013_00002:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20}: opponent_00013_00003:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20}: opponent_00013_00004:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20}: opponent_00013_00005:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20}: opponent_00013_00006:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20}: opponent_00013_00007:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20}: opponent_00013_00008:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20}: opponent_00013_00009:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20}: opponent_00013_00010:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20}: opponent_00013_00011:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20}: opponent_00013_00012:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20}: opponent_00013_00013:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20}: opponent_00013_00014:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20}: opponent_00013_00015:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20}: opponent_00013_00016:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20}: opponent_00013_00017:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20}: opponent_00013_00018:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20}: opponent_00013_00019:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20}: opponent_00014_00001:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20}: opponent_00014_00002:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20}: opponent_00014_00003:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20}: opponent_00014_00004:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20}: opponent_00014_00005:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20}: opponent_00014_00006:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20}: opponent_00014_00007:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20}: opponent_00014_00008:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20}: opponent_00014_00009:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20}: opponent_00014_00010:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20}: opponent_00014_00011:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20}: opponent_00014_00012:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20}: opponent_00014_00013:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20}: opponent_00014_00014:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20}: opponent_00014_00015:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20}: opponent_00014_00016:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20}: opponent_00014_00017:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20}: opponent_00014_00018:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20}: opponent_00014_00019:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20}: opponent_00015_00001:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20}: opponent_00015_00002:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20}: opponent_00015_00003:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20}: opponent_00015_00004:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20}: opponent_00015_00005:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20}: opponent_00015_00006:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20}: opponent_00015_00007:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20}: opponent_00015_00008:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20}: opponent_00015_00009:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20}: opponent_00015_00010:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20}: opponent_00015_00011:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20}: opponent_00015_00012:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20}: opponent_00015_00013:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20}: opponent_00015_00014:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20}: opponent_00015_00015:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20}: opponent_00015_00016:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20}: opponent_00015_00017:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20}: opponent_00015_00018:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20}: opponent_00015_00019:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20}: opponent_00016_00001:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20}: opponent_00016_00002:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20}: opponent_00016_00003:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20}: opponent_00016_00004:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20}: opponent_00016_00005:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20}: opponent_00016_00006:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20}: opponent_00016_00007:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20}: opponent_00016_00008:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20}: opponent_00016_00009:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20}: opponent_00016_00010:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20}: opponent_00016_00011:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20}: opponent_00016_00012:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20}: opponent_00016_00013:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20}: opponent_00016_00014:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20}: opponent_00016_00015:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20}: opponent_00016_00016:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20}: opponent_00016_00017:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20}: opponent_00016_00018:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20}: opponent_00016_00019:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20}: opponent_00017_00001:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20}: opponent_00017_00002:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20}: opponent_00017_00003:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20}: opponent_00017_00004:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20}: opponent_00017_00005:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20}: opponent_00017_00006:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20}: opponent_00017_00007:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20}: opponent_00017_00008:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20}: opponent_00017_00009:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20}: opponent_00017_00010:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20}: opponent_00017_00011:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20}: opponent_00017_00012:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20}: opponent_00017_00013:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20}: opponent_00017_00014:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20}: opponent_00017_00015:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20}: opponent_00017_00016:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20}: opponent_00017_00017:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20}: opponent_00017_00018:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20}: opponent_00017_00019:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20}: opponent_00018_00001:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20}: opponent_00018_00002:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20}: opponent_00018_00003:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20}: opponent_00018_00004:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20}: opponent_00018_00005:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20}: opponent_00018_00006:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20}: opponent_00018_00007:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20}: opponent_00018_00008:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20}: opponent_00018_00009:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20}: opponent_00018_00010:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20}: opponent_00018_00011:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20}: opponent_00018_00012:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20}: opponent_00018_00013:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20}: opponent_00018_00014:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20}: opponent_00018_00015:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20}: opponent_00018_00016:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20}: opponent_00018_00017:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20}: opponent_00018_00018:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20}: opponent_00018_00019:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20}: opponent_00019_00001:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20}: opponent_00019_00002:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20}: opponent_00019_00003:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20}: opponent_00019_00004:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20}: opponent_00019_00005:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20}: opponent_00019_00006:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20}: opponent_00019_00007:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20}: opponent_00019_00008:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20}: opponent_00019_00009:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20}: opponent_00019_00010:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20}: opponent_00019_00011:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20}: opponent_00019_00012:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20}: opponent_00019_00013:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20}: opponent_00019_00014:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20}: opponent_00019_00015:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20}: opponent_00019_00016:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20}: opponent_00019_00017:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20}: opponent_00019_00018:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20}: opponent_00019_00019:: output_var ;
var 2..19: opponent_00020_00001:: output_var ;
var 1..19: opponent_00020_00002:: output_var ;
var 1..19: opponent_00020_00003:: output_var ;
var 1..19: opponent_00020_00004:: output_var ;
var 1..19: opponent_00020_00005:: output_var ;
var 1..19: opponent_00020_00006:: output_var ;
var 1..19: opponent_00020_00007:: output_var ;
var 1..19: opponent_00020_00008:: output_var ;
var 1..19: opponent_00020_00009:: output_var ;
var 1..19: opponent_00020_00010:: output_var ;
var 1..19: opponent_00020_00011:: output_var ;
var 1..19: opponent_00020_00012:: output_var ;
var 1..19: opponent_00020_00013:: output_var ;
var 1..19: opponent_00020_00014:: output_var ;
var 1..19: opponent_00020_00015:: output_var ;
var 1..19: opponent_00020_00016:: output_var ;
var 1..19: opponent_00020_00017:: output_var ;
var 1..19: opponent_00020_00018:: output_var ;
var 1..19: opponent_00020_00019:: output_var ;
var 1..2: venue_00001_00001:: output_var ;
var 1..2: venue_00001_00002:: output_var ;
var 1..2: venue_00001_00003:: output_var ;
var 1..2: venue_00001_00004:: output_var ;
var 1..2: venue_00001_00005:: output_var ;
var 1..2: venue_00001_00006:: output_var ;
var 1..2: venue_00001_00007:: output_var ;
var 1..2: venue_00001_00008:: output_var ;
var 1..2: venue_00001_00009:: output_var ;
var 1..2: venue_00001_00010:: output_var ;
var 1..2: venue_00001_00011:: output_var ;
var 1..2: venue_00001_00012:: output_var ;
var 1..2: venue_00001_00013:: output_var ;
var 1..2: venue_00001_00014:: output_var ;
var 1..2: venue_00001_00015:: output_var ;
var 1..2: venue_00001_00016:: output_var ;
var 1..2: venue_00001_00017:: output_var ;
var 1..2: venue_00001_00018:: output_var ;
var 1..2: venue_00001_00019:: output_var ;
var 1..2: venue_00002_00001:: output_var ;
var 1..2: venue_00002_00002:: output_var ;
var 1..2: venue_00002_00003:: output_var ;
var 1..2: venue_00002_00004:: output_var ;
var 1..2: venue_00002_00005:: output_var ;
var 1..2: venue_00002_00006:: output_var ;
var 1..2: venue_00002_00007:: output_var ;
var 1..2: venue_00002_00008:: output_var ;
var 1..2: venue_00002_00009:: output_var ;
var 1..2: venue_00002_00010:: output_var ;
var 1..2: venue_00002_00011:: output_var ;
var 1..2: venue_00002_00012:: output_var ;
var 1..2: venue_00002_00013:: output_var ;
var 1..2: venue_00002_00014:: output_var ;
var 1..2: venue_00002_00015:: output_var ;
var 1..2: venue_00002_00016:: output_var ;
var 1..2: venue_00002_00017:: output_var ;
var 1..2: venue_00002_00018:: output_var ;
var 1..2: venue_00002_00019:: output_var ;
var 1..2: venue_00003_00001:: output_var ;
var 1..2: venue_00003_00002:: output_var ;
var 1..2: venue_00003_00003:: output_var ;
var 1..2: venue_00003_00004:: output_var ;
var 1..2: venue_00003_00005:: output_var ;
var 1..2: venue_00003_00006:: output_var ;
var 1..2: venue_00003_00007:: output_var ;
var 1..2: venue_00003_00008:: output_var ;
var 1..2: venue_00003_00009:: output_var ;
var 1..2: venue_00003_00010:: output_var ;
var 1..2: venue_00003_00011:: output_var ;
var 1..2: venue_00003_00012:: output_var ;
var 1..2: venue_00003_00013:: output_var ;
var 1..2: venue_00003_00014:: output_var ;
var 1..2: venue_00003_00015:: output_var ;
var 1..2: venue_00003_00016:: output_var ;
var 1..2: venue_00003_00017:: output_var ;
var 1..2: venue_00003_00018:: output_var ;
var 1..2: venue_00003_00019:: output_var ;
var 1..2: venue_00004_00001:: output_var ;
var 1..2: venue_00004_00002:: output_var ;
var 1..2: venue_00004_00003:: output_var ;
var 1..2: venue_00004_00004:: output_var ;
var 1..2: venue_00004_00005:: output_var ;
var 1..2: venue_00004_00006:: output_var ;
var 1..2: venue_00004_00007:: output_var ;
var 1..2: venue_00004_00008:: output_var ;
var 1..2: venue_00004_00009:: output_var ;
var 1..2: venue_00004_00010:: output_var ;
var 1..2: venue_00004_00011:: output_var ;
var 1..2: venue_00004_00012:: output_var ;
var 1..2: venue_00004_00013:: output_var ;
var 1..2: venue_00004_00014:: output_var ;
var 1..2: venue_00004_00015:: output_var ;
var 1..2: venue_00004_00016:: output_var ;
var 1..2: venue_00004_00017:: output_var ;
var 1..2: venue_00004_00018:: output_var ;
var 1..2: venue_00004_00019:: output_var ;
var 1..2: venue_00005_00001:: output_var ;
var 1..2: venue_00005_00002:: output_var ;
var 1..2: venue_00005_00003:: output_var ;
var 1..2: venue_00005_00004:: output_var ;
var 1..2: venue_00005_00005:: output_var ;
var 1..2: venue_00005_00006:: output_var ;
var 1..2: venue_00005_00007:: output_var ;
var 1..2: venue_00005_00008:: output_var ;
var 1..2: venue_00005_00009:: output_var ;
var 1..2: venue_00005_00010:: output_var ;
var 1..2: venue_00005_00011:: output_var ;
var 1..2: venue_00005_00012:: output_var ;
var 1..2: venue_00005_00013:: output_var ;
var 1..2: venue_00005_00014:: output_var ;
var 1..2: venue_00005_00015:: output_var ;
var 1..2: venue_00005_00016:: output_var ;
var 1..2: venue_00005_00017:: output_var ;
var 1..2: venue_00005_00018:: output_var ;
var 1..2: venue_00005_00019:: output_var ;
var 1..2: venue_00006_00001:: output_var ;
var 1..2: venue_00006_00002:: output_var ;
var 1..2: venue_00006_00003:: output_var ;
var 1..2: venue_00006_00004:: output_var ;
var 1..2: venue_00006_00005:: output_var ;
var 1..2: venue_00006_00006:: output_var ;
var 1..2: venue_00006_00007:: output_var ;
var 1..2: venue_00006_00008:: output_var ;
var 1..2: venue_00006_00009:: output_var ;
var 1..2: venue_00006_00010:: output_var ;
var 1..2: venue_00006_00011:: output_var ;
var 1..2: venue_00006_00012:: output_var ;
var 1..2: venue_00006_00013:: output_var ;
var 1..2: venue_00006_00014:: output_var ;
var 1..2: venue_00006_00015:: output_var ;
var 1..2: venue_00006_00016:: output_var ;
var 1..2: venue_00006_00017:: output_var ;
var 1..2: venue_00006_00018:: output_var ;
var 1..2: venue_00006_00019:: output_var ;
var 1..2: venue_00007_00001:: output_var ;
var 1..2: venue_00007_00002:: output_var ;
var 1..2: venue_00007_00003:: output_var ;
var 1..2: venue_00007_00004:: output_var ;
var 1..2: venue_00007_00005:: output_var ;
var 1..2: venue_00007_00006:: output_var ;
var 1..2: venue_00007_00007:: output_var ;
var 1..2: venue_00007_00008:: output_var ;
var 1..2: venue_00007_00009:: output_var ;
var 1..2: venue_00007_00010:: output_var ;
var 1..2: venue_00007_00011:: output_var ;
var 1..2: venue_00007_00012:: output_var ;
var 1..2: venue_00007_00013:: output_var ;
var 1..2: venue_00007_00014:: output_var ;
var 1..2: venue_00007_00015:: output_var ;
var 1..2: venue_00007_00016:: output_var ;
var 1..2: venue_00007_00017:: output_var ;
var 1..2: venue_00007_00018:: output_var ;
var 1..2: venue_00007_00019:: output_var ;
var 1..2: venue_00008_00001:: output_var ;
var 1..2: venue_00008_00002:: output_var ;
var 1..2: venue_00008_00003:: output_var ;
var 1..2: venue_00008_00004:: output_var ;
var 1..2: venue_00008_00005:: output_var ;
var 1..2: venue_00008_00006:: output_var ;
var 1..2: venue_00008_00007:: output_var ;
var 1..2: venue_00008_00008:: output_var ;
var 1..2: venue_00008_00009:: output_var ;
var 1..2: venue_00008_00010:: output_var ;
var 1..2: venue_00008_00011:: output_var ;
var 1..2: venue_00008_00012:: output_var ;
var 1..2: venue_00008_00013:: output_var ;
var 1..2: venue_00008_00014:: output_var ;
var 1..2: venue_00008_00015:: output_var ;
var 1..2: venue_00008_00016:: output_var ;
var 1..2: venue_00008_00017:: output_var ;
var 1..2: venue_00008_00018:: output_var ;
var 1..2: venue_00008_00019:: output_var ;
var 1..2: venue_00009_00001:: output_var ;
var 1..2: venue_00009_00002:: output_var ;
var 1..2: venue_00009_00003:: output_var ;
var 1..2: venue_00009_00004:: output_var ;
var 1..2: venue_00009_00005:: output_var ;
var 1..2: venue_00009_00006:: output_var ;
var 1..2: venue_00009_00007:: output_var ;
var 1..2: venue_00009_00008:: output_var ;
var 1..2: venue_00009_00009:: output_var ;
var 1..2: venue_00009_00010:: output_var ;
var 1..2: venue_00009_00011:: output_var ;
var 1..2: venue_00009_00012:: output_var ;
var 1..2: venue_00009_00013:: output_var ;
var 1..2: venue_00009_00014:: output_var ;
var 1..2: venue_00009_00015:: output_var ;
var 1..2: venue_00009_00016:: output_var ;
var 1..2: venue_00009_00017:: output_var ;
var 1..2: venue_00009_00018:: output_var ;
var 1..2: venue_00009_00019:: output_var ;
var 1..2: venue_00010_00001:: output_var ;
var 1..2: venue_00010_00002:: output_var ;
var 1..2: venue_00010_00003:: output_var ;
var 1..2: venue_00010_00004:: output_var ;
var 1..2: venue_00010_00005:: output_var ;
var 1..2: venue_00010_00006:: output_var ;
var 1..2: venue_00010_00007:: output_var ;
var 1..2: venue_00010_00008:: output_var ;
var 1..2: venue_00010_00009:: output_var ;
var 1..2: venue_00010_00010:: output_var ;
var 1..2: venue_00010_00011:: output_var ;
var 1..2: venue_00010_00012:: output_var ;
var 1..2: venue_00010_00013:: output_var ;
var 1..2: venue_00010_00014:: output_var ;
var 1..2: venue_00010_00015:: output_var ;
var 1..2: venue_00010_00016:: output_var ;
var 1..2: venue_00010_00017:: output_var ;
var 1..2: venue_00010_00018:: output_var ;
var 1..2: venue_00010_00019:: output_var ;
var 1..2: venue_00011_00001:: output_var ;
var 1..2: venue_00011_00002:: output_var ;
var 1..2: venue_00011_00003:: output_var ;
var 1..2: venue_00011_00004:: output_var ;
var 1..2: venue_00011_00005:: output_var ;
var 1..2: venue_00011_00006:: output_var ;
var 1..2: venue_00011_00007:: output_var ;
var 1..2: venue_00011_00008:: output_var ;
var 1..2: venue_00011_00009:: output_var ;
var 1..2: venue_00011_00010:: output_var ;
var 1..2: venue_00011_00011:: output_var ;
var 1..2: venue_00011_00012:: output_var ;
var 1..2: venue_00011_00013:: output_var ;
var 1..2: venue_00011_00014:: output_var ;
var 1..2: venue_00011_00015:: output_var ;
var 1..2: venue_00011_00016:: output_var ;
var 1..2: venue_00011_00017:: output_var ;
var 1..2: venue_00011_00018:: output_var ;
var 1..2: venue_00011_00019:: output_var ;
var 1..2: venue_00012_00001:: output_var ;
var 1..2: venue_00012_00002:: output_var ;
var 1..2: venue_00012_00003:: output_var ;
var 1..2: venue_00012_00004:: output_var ;
var 1..2: venue_00012_00005:: output_var ;
var 1..2: venue_00012_00006:: output_var ;
var 1..2: venue_00012_00007:: output_var ;
var 1..2: venue_00012_00008:: output_var ;
var 1..2: venue_00012_00009:: output_var ;
var 1..2: venue_00012_00010:: output_var ;
var 1..2: venue_00012_00011:: output_var ;
var 1..2: venue_00012_00012:: output_var ;
var 1..2: venue_00012_00013:: output_var ;
var 1..2: venue_00012_00014:: output_var ;
var 1..2: venue_00012_00015:: output_var ;
var 1..2: venue_00012_00016:: output_var ;
var 1..2: venue_00012_00017:: output_var ;
var 1..2: venue_00012_00018:: output_var ;
var 1..2: venue_00012_00019:: output_var ;
var 1..2: venue_00013_00001:: output_var ;
var 1..2: venue_00013_00002:: output_var ;
var 1..2: venue_00013_00003:: output_var ;
var 1..2: venue_00013_00004:: output_var ;
var 1..2: venue_00013_00005:: output_var ;
var 1..2: venue_00013_00006:: output_var ;
var 1..2: venue_00013_00007:: output_var ;
var 1..2: venue_00013_00008:: output_var ;
var 1..2: venue_00013_00009:: output_var ;
var 1..2: venue_00013_00010:: output_var ;
var 1..2: venue_00013_00011:: output_var ;
var 1..2: venue_00013_00012:: output_var ;
var 1..2: venue_00013_00013:: output_var ;
var 1..2: venue_00013_00014:: output_var ;
var 1..2: venue_00013_00015:: output_var ;
var 1..2: venue_00013_00016:: output_var ;
var 1..2: venue_00013_00017:: output_var ;
var 1..2: venue_00013_00018:: output_var ;
var 1..2: venue_00013_00019:: output_var ;
var 1..2: venue_00014_00001:: output_var ;
var 1..2: venue_00014_00002:: output_var ;
var 1..2: venue_00014_00003:: output_var ;
var 1..2: venue_00014_00004:: output_var ;
var 1..2: venue_00014_00005:: output_var ;
var 1..2: venue_00014_00006:: output_var ;
var 1..2: venue_00014_00007:: output_var ;
var 1..2: venue_00014_00008:: output_var ;
var 1..2: venue_00014_00009:: output_var ;
var 1..2: venue_00014_00010:: output_var ;
var 1..2: venue_00014_00011:: output_var ;
var 1..2: venue_00014_00012:: output_var ;
var 1..2: venue_00014_00013:: output_var ;
var 1..2: venue_00014_00014:: output_var ;
var 1..2: venue_00014_00015:: output_var ;
var 1..2: venue_00014_00016:: output_var ;
var 1..2: venue_00014_00017:: output_var ;
var 1..2: venue_00014_00018:: output_var ;
var 1..2: venue_00014_00019:: output_var ;
var 1..2: venue_00015_00001:: output_var ;
var 1..2: venue_00015_00002:: output_var ;
var 1..2: venue_00015_00003:: output_var ;
var 1..2: venue_00015_00004:: output_var ;
var 1..2: venue_00015_00005:: output_var ;
var 1..2: venue_00015_00006:: output_var ;
var 1..2: venue_00015_00007:: output_var ;
var 1..2: venue_00015_00008:: output_var ;
var 1..2: venue_00015_00009:: output_var ;
var 1..2: venue_00015_00010:: output_var ;
var 1..2: venue_00015_00011:: output_var ;
var 1..2: venue_00015_00012:: output_var ;
var 1..2: venue_00015_00013:: output_var ;
var 1..2: venue_00015_00014:: output_var ;
var 1..2: venue_00015_00015:: output_var ;
var 1..2: venue_00015_00016:: output_var ;
var 1..2: venue_00015_00017:: output_var ;
var 1..2: venue_00015_00018:: output_var ;
var 1..2: venue_00015_00019:: output_var ;
var 1..2: venue_00016_00001:: output_var ;
var 1..2: venue_00016_00002:: output_var ;
var 1..2: venue_00016_00003:: output_var ;
var 1..2: venue_00016_00004:: output_var ;
var 1..2: venue_00016_00005:: output_var ;
var 1..2: venue_00016_00006:: output_var ;
var 1..2: venue_00016_00007:: output_var ;
var 1..2: venue_00016_00008:: output_var ;
var 1..2: venue_00016_00009:: output_var ;
var 1..2: venue_00016_00010:: output_var ;
var 1..2: venue_00016_00011:: output_var ;
var 1..2: venue_00016_00012:: output_var ;
var 1..2: venue_00016_00013:: output_var ;
var 1..2: venue_00016_00014:: output_var ;
var 1..2: venue_00016_00015:: output_var ;
var 1..2: venue_00016_00016:: output_var ;
var 1..2: venue_00016_00017:: output_var ;
var 1..2: venue_00016_00018:: output_var ;
var 1..2: venue_00016_00019:: output_var ;
var 1..2: venue_00017_00001:: output_var ;
var 1..2: venue_00017_00002:: output_var ;
var 1..2: venue_00017_00003:: output_var ;
var 1..2: venue_00017_00004:: output_var ;
var 1..2: venue_00017_00005:: output_var ;
var 1..2: venue_00017_00006:: output_var ;
var 1..2: venue_00017_00007:: output_var ;
var 1..2: venue_00017_00008:: output_var ;
var 1..2: venue_00017_00009:: output_var ;
var 1..2: venue_00017_00010:: output_var ;
var 1..2: venue_00017_00011:: output_var ;
var 1..2: venue_00017_00012:: output_var ;
var 1..2: venue_00017_00013:: output_var ;
var 1..2: venue_00017_00014:: output_var ;
var 1..2: venue_00017_00015:: output_var ;
var 1..2: venue_00017_00016:: output_var ;
var 1..2: venue_00017_00017:: output_var ;
var 1..2: venue_00017_00018:: output_var ;
var 1..2: venue_00017_00019:: output_var ;
var 1..2: venue_00018_00001:: output_var ;
var 1..2: venue_00018_00002:: output_var ;
var 1..2: venue_00018_00003:: output_var ;
var 1..2: venue_00018_00004:: output_var ;
var 1..2: venue_00018_00005:: output_var ;
var 1..2: venue_00018_00006:: output_var ;
var 1..2: venue_00018_00007:: output_var ;
var 1..2: venue_00018_00008:: output_var ;
var 1..2: venue_00018_00009:: output_var ;
var 1..2: venue_00018_00010:: output_var ;
var 1..2: venue_00018_00011:: output_var ;
var 1..2: venue_00018_00012:: output_var ;
var 1..2: venue_00018_00013:: output_var ;
var 1..2: venue_00018_00014:: output_var ;
var 1..2: venue_00018_00015:: output_var ;
var 1..2: venue_00018_00016:: output_var ;
var 1..2: venue_00018_00017:: output_var ;
var 1..2: venue_00018_00018:: output_var ;
var 1..2: venue_00018_00019:: output_var ;
var 1..2: venue_00019_00001:: output_var ;
var 1..2: venue_00019_00002:: output_var ;
var 1..2: venue_00019_00003:: output_var ;
var 1..2: venue_00019_00004:: output_var ;
var 1..2: venue_00019_00005:: output_var ;
var 1..2: venue_00019_00006:: output_var ;
var 1..2: venue_00019_00007:: output_var ;
var 1..2: venue_00019_00008:: output_var ;
var 1..2: venue_00019_00009:: output_var ;
var 1..2: venue_00019_00010:: output_var ;
var 1..2: venue_00019_00011:: output_var ;
var 1..2: venue_00019_00012:: output_var ;
var 1..2: venue_00019_00013:: output_var ;
var 1..2: venue_00019_00014:: output_var ;
var 1..2: venue_00019_00015:: output_var ;
var 1..2: venue_00019_00016:: output_var ;
var 1..2: venue_00019_00017:: output_var ;
var 1..2: venue_00019_00018:: output_var ;
var 1..2: venue_00019_00019:: output_var ;
var 1..2: venue_00020_00001:: output_var ;
var 1..2: venue_00020_00002:: output_var ;
var 1..2: venue_00020_00003:: output_var ;
var 1..2: venue_00020_00004:: output_var ;
var 1..2: venue_00020_00005:: output_var ;
var 1..2: venue_00020_00006:: output_var ;
var 1..2: venue_00020_00007:: output_var ;
var 1..2: venue_00020_00008:: output_var ;
var 1..2: venue_00020_00009:: output_var ;
var 1..2: venue_00020_00010:: output_var ;
var 1..2: venue_00020_00011:: output_var ;
var 1..2: venue_00020_00012:: output_var ;
var 1..2: venue_00020_00013:: output_var ;
var 1..2: venue_00020_00014:: output_var ;
var 1..2: venue_00020_00015:: output_var ;
var 1..2: venue_00020_00016:: output_var ;
var 1..2: venue_00020_00017:: output_var ;
var 1..2: venue_00020_00018:: output_var ;
var 1..2: venue_00020_00019:: output_var ;
var 0..10: travel_00001_00001:: output_var ;
var 0..10: travel_00001_00002:: output_var ;
var 0..10: travel_00001_00003:: output_var ;
var 0..10: travel_00001_00004:: output_var ;
var 0..10: travel_00001_00005:: output_var ;
var 0..10: travel_00001_00006:: output_var ;
var 0..10: travel_00001_00007:: output_var ;
var 0..10: travel_00001_00008:: output_var ;
var 0..10: travel_00001_00009:: output_var ;
var 0..10: travel_00001_00010:: output_var ;
var 0..10: travel_00001_00011:: output_var ;
var 0..10: travel_00001_00012:: output_var ;
var 0..10: travel_00001_00013:: output_var ;
var 0..10: travel_00001_00014:: output_var ;
var 0..10: travel_00001_00015:: output_var ;
var 0..10: travel_00001_00016:: output_var ;
var 0..10: travel_00001_00017:: output_var ;
var 0..10: travel_00001_00018:: output_var ;
var 0..10: travel_00001_00019:: output_var ;
var 0..10: travel_00001_00020:: output_var ;
var 0..9: travel_00002_00001:: output_var ;
var 0..10: travel_00002_00002:: output_var ;
var 0..10: travel_00002_00003:: output_var ;
var 0..10: travel_00002_00004:: output_var ;
var 0..10: travel_00002_00005:: output_var ;
var 0..10: travel_00002_00006:: output_var ;
var 0..10: travel_00002_00007:: output_var ;
var 0..10: travel_00002_00008:: output_var ;
var 0..10: travel_00002_00009:: output_var ;
var 0..10: travel_00002_00010:: output_var ;
var 0..10: travel_00002_00011:: output_var ;
var 0..10: travel_00002_00012:: output_var ;
var 0..10: travel_00002_00013:: output_var ;
var 0..10: travel_00002_00014:: output_var ;
var 0..10: travel_00002_00015:: output_var ;
var 0..10: travel_00002_00016:: output_var ;
var 0..10: travel_00002_00017:: output_var ;
var 0..10: travel_00002_00018:: output_var ;
var 0..10: travel_00002_00019:: output_var ;
var 0..9: travel_00002_00020:: output_var ;
var 0..10: travel_00003_00001:: output_var ;
var 0..10: travel_00003_00002:: output_var ;
var 0..10: travel_00003_00003:: output_var ;
var 0..10: travel_00003_00004:: output_var ;
var 0..10: travel_00003_00005:: output_var ;
var 0..10: travel_00003_00006:: output_var ;
var 0..10: travel_00003_00007:: output_var ;
var 0..10: travel_00003_00008:: output_var ;
var 0..10: travel_00003_00009:: output_var ;
var 0..10: travel_00003_00010:: output_var ;
var 0..10: travel_00003_00011:: output_var ;
var 0..10: travel_00003_00012:: output_var ;
var 0..10: travel_00003_00013:: output_var ;
var 0..10: travel_00003_00014:: output_var ;
var 0..10: travel_00003_00015:: output_var ;
var 0..10: travel_00003_00016:: output_var ;
var 0..10: travel_00003_00017:: output_var ;
var 0..10: travel_00003_00018:: output_var ;
var 0..10: travel_00003_00019:: output_var ;
var 0..10: travel_00003_00020:: output_var ;
var 0..8: travel_00004_00001:: output_var ;
var 0..10: travel_00004_00002:: output_var ;
var 0..10: travel_00004_00003:: output_var ;
var 0..10: travel_00004_00004:: output_var ;
var 0..10: travel_00004_00005:: output_var ;
var 0..10: travel_00004_00006:: output_var ;
var 0..10: travel_00004_00007:: output_var ;
var 0..10: travel_00004_00008:: output_var ;
var 0..10: travel_00004_00009:: output_var ;
var 0..10: travel_00004_00010:: output_var ;
var 0..10: travel_00004_00011:: output_var ;
var 0..10: travel_00004_00012:: output_var ;
var 0..10: travel_00004_00013:: output_var ;
var 0..10: travel_00004_00014:: output_var ;
var 0..10: travel_00004_00015:: output_var ;
var 0..10: travel_00004_00016:: output_var ;
var 0..10: travel_00004_00017:: output_var ;
var 0..10: travel_00004_00018:: output_var ;
var 0..10: travel_00004_00019:: output_var ;
var 0..8: travel_00004_00020:: output_var ;
var 0..9: travel_00005_00001:: output_var ;
var 0..10: travel_00005_00002:: output_var ;
var 0..10: travel_00005_00003:: output_var ;
var 0..10: travel_00005_00004:: output_var ;
var 0..10: travel_00005_00005:: output_var ;
var 0..10: travel_00005_00006:: output_var ;
var 0..10: travel_00005_00007:: output_var ;
var 0..10: travel_00005_00008:: output_var ;
var 0..10: travel_00005_00009:: output_var ;
var 0..10: travel_00005_00010:: output_var ;
var 0..10: travel_00005_00011:: output_var ;
var 0..10: travel_00005_00012:: output_var ;
var 0..10: travel_00005_00013:: output_var ;
var 0..10: travel_00005_00014:: output_var ;
var 0..10: travel_00005_00015:: output_var ;
var 0..10: travel_00005_00016:: output_var ;
var 0..10: travel_00005_00017:: output_var ;
var 0..10: travel_00005_00018:: output_var ;
var 0..10: travel_00005_00019:: output_var ;
var 0..9: travel_00005_00020:: output_var ;
var 0..10: travel_00006_00001:: output_var ;
var 0..10: travel_00006_00002:: output_var ;
var 0..10: travel_00006_00003:: output_var ;
var 0..10: travel_00006_00004:: output_var ;
var 0..10: travel_00006_00005:: output_var ;
var 0..10: travel_00006_00006:: output_var ;
var 0..10: travel_00006_00007:: output_var ;
var 0..10: travel_00006_00008:: output_var ;
var 0..10: travel_00006_00009:: output_var ;
var 0..10: travel_00006_00010:: output_var ;
var 0..10: travel_00006_00011:: output_var ;
var 0..10: travel_00006_00012:: output_var ;
var 0..10: travel_00006_00013:: output_var ;
var 0..10: travel_00006_00014:: output_var ;
var 0..10: travel_00006_00015:: output_var ;
var 0..10: travel_00006_00016:: output_var ;
var 0..10: travel_00006_00017:: output_var ;
var 0..10: travel_00006_00018:: output_var ;
var 0..10: travel_00006_00019:: output_var ;
var 0..10: travel_00006_00020:: output_var ;
var 0..10: travel_00007_00001:: output_var ;
var 0..10: travel_00007_00002:: output_var ;
var 0..10: travel_00007_00003:: output_var ;
var 0..10: travel_00007_00004:: output_var ;
var 0..10: travel_00007_00005:: output_var ;
var 0..10: travel_00007_00006:: output_var ;
var 0..10: travel_00007_00007:: output_var ;
var 0..10: travel_00007_00008:: output_var ;
var 0..10: travel_00007_00009:: output_var ;
var 0..10: travel_00007_00010:: output_var ;
var 0..10: travel_00007_00011:: output_var ;
var 0..10: travel_00007_00012:: output_var ;
var 0..10: travel_00007_00013:: output_var ;
var 0..10: travel_00007_00014:: output_var ;
var 0..10: travel_00007_00015:: output_var ;
var 0..10: travel_00007_00016:: output_var ;
var 0..10: travel_00007_00017:: output_var ;
var 0..10: travel_00007_00018:: output_var ;
var 0..10: travel_00007_00019:: output_var ;
var 0..10: travel_00007_00020:: output_var ;
var 0..6: travel_00008_00001:: output_var ;
var 0..10: travel_00008_00002:: output_var ;
var 0..10: travel_00008_00003:: output_var ;
var 0..10: travel_00008_00004:: output_var ;
var 0..10: travel_00008_00005:: output_var ;
var 0..10: travel_00008_00006:: output_var ;
var 0..10: travel_00008_00007:: output_var ;
var 0..10: travel_00008_00008:: output_var ;
var 0..10: travel_00008_00009:: output_var ;
var 0..10: travel_00008_00010:: output_var ;
var 0..10: travel_00008_00011:: output_var ;
var 0..10: travel_00008_00012:: output_var ;
var 0..10: travel_00008_00013:: output_var ;
var 0..10: travel_00008_00014:: output_var ;
var 0..10: travel_00008_00015:: output_var ;
var 0..10: travel_00008_00016:: output_var ;
var 0..10: travel_00008_00017:: output_var ;
var 0..10: travel_00008_00018:: output_var ;
var 0..10: travel_00008_00019:: output_var ;
var 0..6: travel_00008_00020:: output_var ;
var 0..10: travel_00009_00001:: output_var ;
var 0..10: travel_00009_00002:: output_var ;
var 0..10: travel_00009_00003:: output_var ;
var 0..10: travel_00009_00004:: output_var ;
var 0..10: travel_00009_00005:: output_var ;
var 0..10: travel_00009_00006:: output_var ;
var 0..10: travel_00009_00007:: output_var ;
var 0..10: travel_00009_00008:: output_var ;
var 0..10: travel_00009_00009:: output_var ;
var 0..10: travel_00009_00010:: output_var ;
var 0..10: travel_00009_00011:: output_var ;
var 0..10: travel_00009_00012:: output_var ;
var 0..10: travel_00009_00013:: output_var ;
var 0..10: travel_00009_00014:: output_var ;
var 0..10: travel_00009_00015:: output_var ;
var 0..10: travel_00009_00016:: output_var ;
var 0..10: travel_00009_00017:: output_var ;
var 0..10: travel_00009_00018:: output_var ;
var 0..10: travel_00009_00019:: output_var ;
var 0..10: travel_00009_00020:: output_var ;
var 0..8: travel_00010_00001:: output_var ;
var 0..10: travel_00010_00002:: output_var ;
var 0..10: travel_00010_00003:: output_var ;
var 0..10: travel_00010_00004:: output_var ;
var 0..10: travel_00010_00005:: output_var ;
var 0..10: travel_00010_00006:: output_var ;
var 0..10: travel_00010_00007:: output_var ;
var 0..10: travel_00010_00008:: output_var ;
var 0..10: travel_00010_00009:: output_var ;
var 0..10: travel_00010_00010:: output_var ;
var 0..10: travel_00010_00011:: output_var ;
var 0..10: travel_00010_00012:: output_var ;
var 0..10: travel_00010_00013:: output_var ;
var 0..10: travel_00010_00014:: output_var ;
var 0..10: travel_00010_00015:: output_var ;
var 0..10: travel_00010_00016:: output_var ;
var 0..10: travel_00010_00017:: output_var ;
var 0..10: travel_00010_00018:: output_var ;
var 0..10: travel_00010_00019:: output_var ;
var 0..8: travel_00010_00020:: output_var ;
var 0..9: travel_00011_00001:: output_var ;
var 0..10: travel_00011_00002:: output_var ;
var 0..10: travel_00011_00003:: output_var ;
var 0..10: travel_00011_00004:: output_var ;
var 0..10: travel_00011_00005:: output_var ;
var 0..10: travel_00011_00006:: output_var ;
var 0..10: travel_00011_00007:: output_var ;
var 0..10: travel_00011_00008:: output_var ;
var 0..10: travel_00011_00009:: output_var ;
var 0..10: travel_00011_00010:: output_var ;
var 0..10: travel_00011_00011:: output_var ;
var 0..10: travel_00011_00012:: output_var ;
var 0..10: travel_00011_00013:: output_var ;
var 0..10: travel_00011_00014:: output_var ;
var 0..10: travel_00011_00015:: output_var ;
var 0..10: travel_00011_00016:: output_var ;
var 0..10: travel_00011_00017:: output_var ;
var 0..10: travel_00011_00018:: output_var ;
var 0..10: travel_00011_00019:: output_var ;
var 0..9: travel_00011_00020:: output_var ;
var 0..10: travel_00012_00001:: output_var ;
var 0..10: travel_00012_00002:: output_var ;
var 0..10: travel_00012_00003:: output_var ;
var 0..10: travel_00012_00004:: output_var ;
var 0..10: travel_00012_00005:: output_var ;
var 0..10: travel_00012_00006:: output_var ;
var 0..10: travel_00012_00007:: output_var ;
var 0..10: travel_00012_00008:: output_var ;
var 0..10: travel_00012_00009:: output_var ;
var 0..10: travel_00012_00010:: output_var ;
var 0..10: travel_00012_00011:: output_var ;
var 0..10: travel_00012_00012:: output_var ;
var 0..10: travel_00012_00013:: output_var ;
var 0..10: travel_00012_00014:: output_var ;
var 0..10: travel_00012_00015:: output_var ;
var 0..10: travel_00012_00016:: output_var ;
var 0..10: travel_00012_00017:: output_var ;
var 0..10: travel_00012_00018:: output_var ;
var 0..10: travel_00012_00019:: output_var ;
var 0..10: travel_00012_00020:: output_var ;
var 0..9: travel_00013_00001:: output_var ;
var 0..10: travel_00013_00002:: output_var ;
var 0..10: travel_00013_00003:: output_var ;
var 0..10: travel_00013_00004:: output_var ;
var 0..10: travel_00013_00005:: output_var ;
var 0..10: travel_00013_00006:: output_var ;
var 0..10: travel_00013_00007:: output_var ;
var 0..10: travel_00013_00008:: output_var ;
var 0..10: travel_00013_00009:: output_var ;
var 0..10: travel_00013_00010:: output_var ;
var 0..10: travel_00013_00011:: output_var ;
var 0..10: travel_00013_00012:: output_var ;
var 0..10: travel_00013_00013:: output_var ;
var 0..10: travel_00013_00014:: output_var ;
var 0..10: travel_00013_00015:: output_var ;
var 0..10: travel_00013_00016:: output_var ;
var 0..10: travel_00013_00017:: output_var ;
var 0..10: travel_00013_00018:: output_var ;
var 0..10: travel_00013_00019:: output_var ;
var 0..9: travel_00013_00020:: output_var ;
var 0..10: travel_00014_00001:: output_var ;
var 0..10: travel_00014_00002:: output_var ;
var 0..10: travel_00014_00003:: output_var ;
var 0..10: travel_00014_00004:: output_var ;
var 0..10: travel_00014_00005:: output_var ;
var 0..10: travel_00014_00006:: output_var ;
var 0..10: travel_00014_00007:: output_var ;
var 0..10: travel_00014_00008:: output_var ;
var 0..10: travel_00014_00009:: output_var ;
var 0..10: travel_00014_00010:: output_var ;
var 0..10: travel_00014_00011:: output_var ;
var 0..10: travel_00014_00012:: output_var ;
var 0..10: travel_00014_00013:: output_var ;
var 0..10: travel_00014_00014:: output_var ;
var 0..10: travel_00014_00015:: output_var ;
var 0..10: travel_00014_00016:: output_var ;
var 0..10: travel_00014_00017:: output_var ;
var 0..10: travel_00014_00018:: output_var ;
var 0..10: travel_00014_00019:: output_var ;
var 0..10: travel_00014_00020:: output_var ;
var 0..10: travel_00015_00001:: output_var ;
var 0..10: travel_00015_00002:: output_var ;
var 0..10: travel_00015_00003:: output_var ;
var 0..10: travel_00015_00004:: output_var ;
var 0..10: travel_00015_00005:: output_var ;
var 0..10: travel_00015_00006:: output_var ;
var 0..10: travel_00015_00007:: output_var ;
var 0..10: travel_00015_00008:: output_var ;
var 0..10: travel_00015_00009:: output_var ;
var 0..10: travel_00015_00010:: output_var ;
var 0..10: travel_00015_00011:: output_var ;
var 0..10: travel_00015_00012:: output_var ;
var 0..10: travel_00015_00013:: output_var ;
var 0..10: travel_00015_00014:: output_var ;
var 0..10: travel_00015_00015:: output_var ;
var 0..10: travel_00015_00016:: output_var ;
var 0..10: travel_00015_00017:: output_var ;
var 0..10: travel_00015_00018:: output_var ;
var 0..10: travel_00015_00019:: output_var ;
var 0..10: travel_00015_00020:: output_var ;
var 0..9: travel_00016_00001:: output_var ;
var 0..10: travel_00016_00002:: output_var ;
var 0..10: travel_00016_00003:: output_var ;
var 0..10: travel_00016_00004:: output_var ;
var 0..10: travel_00016_00005:: output_var ;
var 0..10: travel_00016_00006:: output_var ;
var 0..10: travel_00016_00007:: output_var ;
var 0..10: travel_00016_00008:: output_var ;
var 0..10: travel_00016_00009:: output_var ;
var 0..10: travel_00016_00010:: output_var ;
var 0..10: travel_00016_00011:: output_var ;
var 0..10: travel_00016_00012:: output_var ;
var 0..10: travel_00016_00013:: output_var ;
var 0..10: travel_00016_00014:: output_var ;
var 0..10: travel_00016_00015:: output_var ;
var 0..10: travel_00016_00016:: output_var ;
var 0..10: travel_00016_00017:: output_var ;
var 0..10: travel_00016_00018:: output_var ;
var 0..10: travel_00016_00019:: output_var ;
var 0..9: travel_00016_00020:: output_var ;
var 0..9: travel_00017_00001:: output_var ;
var 0..10: travel_00017_00002:: output_var ;
var 0..10: travel_00017_00003:: output_var ;
var 0..10: travel_00017_00004:: output_var ;
var 0..10: travel_00017_00005:: output_var ;
var 0..10: travel_00017_00006:: output_var ;
var 0..10: travel_00017_00007:: output_var ;
var 0..10: travel_00017_00008:: output_var ;
var 0..10: travel_00017_00009:: output_var ;
var 0..10: travel_00017_00010:: output_var ;
var 0..10: travel_00017_00011:: output_var ;
var 0..10: travel_00017_00012:: output_var ;
var 0..10: travel_00017_00013:: output_var ;
var 0..10: travel_00017_00014:: output_var ;
var 0..10: travel_00017_00015:: output_var ;
var 0..10: travel_00017_00016:: output_var ;
var 0..10: travel_00017_00017:: output_var ;
var 0..10: travel_00017_00018:: output_var ;
var 0..10: travel_00017_00019:: output_var ;
var 0..9: travel_00017_00020:: output_var ;
var 0..10: travel_00018_00001:: output_var ;
var 0..10: travel_00018_00002:: output_var ;
var 0..10: travel_00018_00003:: output_var ;
var 0..10: travel_00018_00004:: output_var ;
var 0..10: travel_00018_00005:: output_var ;
var 0..10: travel_00018_00006:: output_var ;
var 0..10: travel_00018_00007:: output_var ;
var 0..10: travel_00018_00008:: output_var ;
var 0..10: travel_00018_00009:: output_var ;
var 0..10: travel_00018_00010:: output_var ;
var 0..10: travel_00018_00011:: output_var ;
var 0..10: travel_00018_00012:: output_var ;
var 0..10: travel_00018_00013:: output_var ;
var 0..10: travel_00018_00014:: output_var ;
var 0..10: travel_00018_00015:: output_var ;
var 0..10: travel_00018_00016:: output_var ;
var 0..10: travel_00018_00017:: output_var ;
var 0..10: travel_00018_00018:: output_var ;
var 0..10: travel_00018_00019:: output_var ;
var 0..10: travel_00018_00020:: output_var ;
var 0..9: travel_00019_00001:: output_var ;
var 0..10: travel_00019_00002:: output_var ;
var 0..10: travel_00019_00003:: output_var ;
var 0..10: travel_00019_00004:: output_var ;
var 0..10: travel_00019_00005:: output_var ;
var 0..10: travel_00019_00006:: output_var ;
var 0..10: travel_00019_00007:: output_var ;
var 0..10: travel_00019_00008:: output_var ;
var 0..10: travel_00019_00009:: output_var ;
var 0..10: travel_00019_00010:: output_var ;
var 0..10: travel_00019_00011:: output_var ;
var 0..10: travel_00019_00012:: output_var ;
var 0..10: travel_00019_00013:: output_var ;
var 0..10: travel_00019_00014:: output_var ;
var 0..10: travel_00019_00015:: output_var ;
var 0..10: travel_00019_00016:: output_var ;
var 0..10: travel_00019_00017:: output_var ;
var 0..10: travel_00019_00018:: output_var ;
var 0..10: travel_00019_00019:: output_var ;
var 0..9: travel_00019_00020:: output_var ;
var 0..10: travel_00020_00001:: output_var ;
var 0..10: travel_00020_00002:: output_var ;
var 0..10: travel_00020_00003:: output_var ;
var 0..10: travel_00020_00004:: output_var ;
var 0..10: travel_00020_00005:: output_var ;
var 0..10: travel_00020_00006:: output_var ;
var 0..10: travel_00020_00007:: output_var ;
var 0..10: travel_00020_00008:: output_var ;
var 0..10: travel_00020_00009:: output_var ;
var 0..10: travel_00020_00010:: output_var ;
var 0..10: travel_00020_00011:: output_var ;
var 0..10: travel_00020_00012:: output_var ;
var 0..10: travel_00020_00013:: output_var ;
var 0..10: travel_00020_00014:: output_var ;
var 0..10: travel_00020_00015:: output_var ;
var 0..10: travel_00020_00016:: output_var ;
var 0..10: travel_00020_00017:: output_var ;
var 0..10: travel_00020_00018:: output_var ;
var 0..10: travel_00020_00019:: output_var ;
var 0..10: travel_00020_00020:: output_var ;
var 1..3961: objective:: output_var ;
var 1..10: aux1:: var_is_introduced ;
var 1..10: aux2:: var_is_introduced ;
var 1..10: aux3:: var_is_introduced ;
var 1..10: aux4:: var_is_introduced ;
var 1..10: aux5:: var_is_introduced ;
var 1..10: aux6:: var_is_introduced ;
var 1..10: aux7:: var_is_introduced ;
var 1..10: aux8:: var_is_introduced ;
var 1..10: aux9:: var_is_introduced ;
var 1..10: aux10:: var_is_introduced ;
var 1..10: aux11:: var_is_introduced ;
var 1..10: aux12:: var_is_introduced ;
var 1..10: aux13:: var_is_introduced ;
var 1..10: aux14:: var_is_introduced ;
var 1..10: aux15:: var_is_introduced ;
var 1..10: aux16:: var_is_introduced ;
var 1..10: aux17:: var_is_introduced ;
var 1..10: aux18:: var_is_introduced ;
var 1..10: aux19:: var_is_introduced ;
var 1..10: aux20:: var_is_introduced ;
var 1..10: aux21:: var_is_introduced ;
var 1..10: aux22:: var_is_introduced ;
var 1..10: aux23:: var_is_introduced ;
var 1..10: aux24:: var_is_introduced ;
var 1..10: aux25:: var_is_introduced ;
var 1..10: aux26:: var_is_introduced ;
var 1..10: aux27:: var_is_introduced ;
var 1..10: aux28:: var_is_introduced ;
var 1..10: aux29:: var_is_introduced ;
var 1..10: aux30:: var_is_introduced ;
var 1..10: aux31:: var_is_introduced ;
var 1..10: aux32:: var_is_introduced ;
var 1..10: aux33:: var_is_introduced ;
var 1..10: aux34:: var_is_introduced ;
var 1..10: aux35:: var_is_introduced ;
var 1..10: aux36:: var_is_introduced ;
var 1..10: aux37:: var_is_introduced ;
var 1..10: aux38:: var_is_introduced ;
var 1..10: aux39:: var_is_introduced ;
var 1..10: aux40:: var_is_introduced ;
var 1..10: aux41:: var_is_introduced ;
var 1..10: aux42:: var_is_introduced ;
var 1..10: aux43:: var_is_introduced ;
var 1..10: aux44:: var_is_introduced ;
var 1..10: aux45:: var_is_introduced ;
var 1..10: aux46:: var_is_introduced ;
var 1..10: aux47:: var_is_introduced ;
var 1..10: aux48:: var_is_introduced ;
var 1..10: aux49:: var_is_introduced ;
var 1..10: aux50:: var_is_introduced ;
var 1..10: aux51:: var_is_introduced ;
var 1..10: aux52:: var_is_introduced ;
var 1..10: aux53:: var_is_introduced ;
var 1..10: aux54:: var_is_introduced ;
var 1..10: aux55:: var_is_introduced ;
var 1..10: aux56:: var_is_introduced ;
var 1..10: aux57:: var_is_introduced ;
var 1..10: aux58:: var_is_introduced ;
var 1..10: aux59:: var_is_introduced ;
var 1..10: aux60:: var_is_introduced ;
var 1..10: aux61:: var_is_introduced ;
var 1..10: aux62:: var_is_introduced ;
var 1..10: aux63:: var_is_introduced ;
var 1..10: aux64:: var_is_introduced ;
var 1..10: aux65:: var_is_introduced ;
var 1..10: aux66:: var_is_introduced ;
var 1..10: aux67:: var_is_introduced ;
var 1..10: aux68:: var_is_introduced ;
var 1..10: aux69:: var_is_introduced ;
var 1..10: aux70:: var_is_introduced ;
var 1..10: aux71:: var_is_introduced ;
var 1..10: aux72:: var_is_introduced ;
var 1..10: aux73:: var_is_introduced ;
var 1..10: aux74:: var_is_introduced ;
var 1..10: aux75:: var_is_introduced ;
var 1..10: aux76:: var_is_introduced ;
var 1..10: aux77:: var_is_introduced ;
var 1..10: aux78:: var_is_introduced ;
var 1..10: aux79:: var_is_introduced ;
var 1..10: aux80:: var_is_introduced ;
var 1..10: aux81:: var_is_introduced ;
var 1..10: aux82:: var_is_introduced ;
var 1..10: aux83:: var_is_introduced ;
var 1..10: aux84:: var_is_introduced ;
var 1..10: aux85:: var_is_introduced ;
var 1..10: aux86:: var_is_introduced ;
var 1..10: aux87:: var_is_introduced ;
var 1..10: aux88:: var_is_introduced ;
var 1..10: aux89:: var_is_introduced ;
var 1..10: aux90:: var_is_introduced ;
var 1..10: aux91:: var_is_introduced ;
var 1..10: aux92:: var_is_introduced ;
var 1..10: aux93:: var_is_introduced ;
var 1..10: aux94:: var_is_introduced ;
var 1..10: aux95:: var_is_introduced ;
var 1..10: aux96:: var_is_introduced ;
var 1..10: aux97:: var_is_introduced ;
var 1..10: aux98:: var_is_introduced ;
var 1..10: aux99:: var_is_introduced ;
var 1..10: aux100:: var_is_introduced ;
var 1..10: aux101:: var_is_introduced ;
var 1..10: aux102:: var_is_introduced ;
var 1..10: aux103:: var_is_introduced ;
var 1..10: aux104:: var_is_introduced ;
var 1..10: aux105:: var_is_introduced ;
var 1..10: aux106:: var_is_introduced ;
var 1..10: aux107:: var_is_introduced ;
var 1..10: aux108:: var_is_introduced ;
var 1..10: aux109:: var_is_introduced ;
var 1..10: aux110:: var_is_introduced ;
var 1..10: aux111:: var_is_introduced ;
var 1..10: aux112:: var_is_introduced ;
var 1..10: aux113:: var_is_introduced ;
var 1..10: aux114:: var_is_introduced ;
var 1..10: aux115:: var_is_introduced ;
var 1..10: aux116:: var_is_introduced ;
var 1..10: aux117:: var_is_introduced ;
var 1..10: aux118:: var_is_introduced ;
var 1..10: aux119:: var_is_introduced ;
var 1..10: aux120:: var_is_introduced ;
var 1..10: aux121:: var_is_introduced ;
var 1..10: aux122:: var_is_introduced ;
var 1..10: aux123:: var_is_introduced ;
var 1..10: aux124:: var_is_introduced ;
var 1..10: aux125:: var_is_introduced ;
var 1..10: aux126:: var_is_introduced ;
var 1..10: aux127:: var_is_introduced ;
var 1..10: aux128:: var_is_introduced ;
var 1..10: aux129:: var_is_introduced ;
var 1..10: aux130:: var_is_introduced ;
var 1..10: aux131:: var_is_introduced ;
var 1..10: aux132:: var_is_introduced ;
var 1..10: aux133:: var_is_introduced ;
var 1..10: aux134:: var_is_introduced ;
var 1..10: aux135:: var_is_introduced ;
var 1..10: aux136:: var_is_introduced ;
var 1..10: aux137:: var_is_introduced ;
var 1..10: aux138:: var_is_introduced ;
var 1..10: aux139:: var_is_introduced ;
var 1..10: aux140:: var_is_introduced ;
var 1..10: aux141:: var_is_introduced ;
var 1..10: aux142:: var_is_introduced ;
var 1..10: aux143:: var_is_introduced ;
var 1..10: aux144:: var_is_introduced ;
var 1..10: aux145:: var_is_introduced ;
var 1..10: aux146:: var_is_introduced ;
var 1..10: aux147:: var_is_introduced ;
var 1..10: aux148:: var_is_introduced ;
var 1..10: aux149:: var_is_introduced ;
var 1..10: aux150:: var_is_introduced ;
var 1..10: aux151:: var_is_introduced ;
var 1..10: aux152:: var_is_introduced ;
var 1..10: aux153:: var_is_introduced ;
var 1..10: aux154:: var_is_introduced ;
var 1..10: aux155:: var_is_introduced ;
var 1..10: aux156:: var_is_introduced ;
var 1..10: aux157:: var_is_introduced ;
var 1..10: aux158:: var_is_introduced ;
var 1..10: aux159:: var_is_introduced ;
var 1..10: aux160:: var_is_introduced ;
var 1..10: aux161:: var_is_introduced ;
var 1..10: aux162:: var_is_introduced ;
var 1..10: aux163:: var_is_introduced ;
var 1..10: aux164:: var_is_introduced ;
var 1..10: aux165:: var_is_introduced ;
var 1..10: aux166:: var_is_introduced ;
var 1..10: aux167:: var_is_introduced ;
var 1..10: aux168:: var_is_introduced ;
var 1..10: aux169:: var_is_introduced ;
var 1..10: aux170:: var_is_introduced ;
var 1..10: aux171:: var_is_introduced ;
var 1..10: aux172:: var_is_introduced ;
var 1..10: aux173:: var_is_introduced ;
var 1..10: aux174:: var_is_introduced ;
var 1..10: aux175:: var_is_introduced ;
var 1..10: aux176:: var_is_introduced ;
var 1..10: aux177:: var_is_introduced ;
var 1..10: aux178:: var_is_introduced ;
var 1..10: aux179:: var_is_introduced ;
var 1..10: aux180:: var_is_introduced ;
var 1..10: aux181:: var_is_introduced ;
var 1..10: aux182:: var_is_introduced ;
var 1..10: aux183:: var_is_introduced ;
var 1..10: aux184:: var_is_introduced ;
var 1..10: aux185:: var_is_introduced ;
var 1..10: aux186:: var_is_introduced ;
var 1..10: aux187:: var_is_introduced ;
var 1..10: aux188:: var_is_introduced ;
var 1..10: aux189:: var_is_introduced ;
var 1..10: aux190:: var_is_introduced ;
var 1..10: aux191:: var_is_introduced ;
var 1..10: aux192:: var_is_introduced ;
var 1..10: aux193:: var_is_introduced ;
var 1..10: aux194:: var_is_introduced ;
var 1..10: aux195:: var_is_introduced ;
var 1..10: aux196:: var_is_introduced ;
var 1..10: aux197:: var_is_introduced ;
var 1..10: aux198:: var_is_introduced ;
var 1..10: aux199:: var_is_introduced ;
var 1..10: aux200:: var_is_introduced ;
var 1..10: aux201:: var_is_introduced ;
var 1..10: aux202:: var_is_introduced ;
var 1..10: aux203:: var_is_introduced ;
var 1..10: aux204:: var_is_introduced ;
var 1..10: aux205:: var_is_introduced ;
var 1..10: aux206:: var_is_introduced ;
var 1..10: aux207:: var_is_introduced ;
var 1..10: aux208:: var_is_introduced ;
var 1..10: aux209:: var_is_introduced ;
var 1..10: aux210:: var_is_introduced ;
var 1..10: aux211:: var_is_introduced ;
var 1..10: aux212:: var_is_introduced ;
var 1..10: aux213:: var_is_introduced ;
var 1..10: aux214:: var_is_introduced ;
var 1..10: aux215:: var_is_introduced ;
var 1..10: aux216:: var_is_introduced ;
var 1..10: aux217:: var_is_introduced ;
var 1..10: aux218:: var_is_introduced ;
var 1..10: aux219:: var_is_introduced ;
var 1..10: aux220:: var_is_introduced ;
var 1..10: aux221:: var_is_introduced ;
var 1..10: aux222:: var_is_introduced ;
var 1..10: aux223:: var_is_introduced ;
var 1..10: aux224:: var_is_introduced ;
var 1..10: aux225:: var_is_introduced ;
var 1..10: aux226:: var_is_introduced ;
var 1..10: aux227:: var_is_introduced ;
var 1..10: aux228:: var_is_introduced ;
var 1..10: aux229:: var_is_introduced ;
var 1..10: aux230:: var_is_introduced ;
var 1..10: aux231:: var_is_introduced ;
var 1..10: aux232:: var_is_introduced ;
var 1..10: aux233:: var_is_introduced ;
var 1..10: aux234:: var_is_introduced ;
var 1..10: aux235:: var_is_introduced ;
var 1..10: aux236:: var_is_introduced ;
var 1..10: aux237:: var_is_introduced ;
var 1..10: aux238:: var_is_introduced ;
var 1..10: aux239:: var_is_introduced ;
var 1..10: aux240:: var_is_introduced ;
var 1..10: aux241:: var_is_introduced ;
var 1..10: aux242:: var_is_introduced ;
var 1..10: aux243:: var_is_introduced ;
var 1..10: aux244:: var_is_introduced ;
var 1..10: aux245:: var_is_introduced ;
var 1..10: aux246:: var_is_introduced ;
var 1..10: aux247:: var_is_introduced ;
var 1..10: aux248:: var_is_introduced ;
var 1..10: aux249:: var_is_introduced ;
var 1..10: aux250:: var_is_introduced ;
var 1..10: aux251:: var_is_introduced ;
var 1..10: aux252:: var_is_introduced ;
var 1..10: aux253:: var_is_introduced ;
var 1..10: aux254:: var_is_introduced ;
var 1..10: aux255:: var_is_introduced ;
var 1..10: aux256:: var_is_introduced ;
var 1..10: aux257:: var_is_introduced ;
var 1..10: aux258:: var_is_introduced ;
var 1..10: aux259:: var_is_introduced ;
var 1..10: aux260:: var_is_introduced ;
var 1..10: aux261:: var_is_introduced ;
var 1..10: aux262:: var_is_introduced ;
var 1..10: aux263:: var_is_introduced ;
var 1..10: aux264:: var_is_introduced ;
var 1..10: aux265:: var_is_introduced ;
var 1..10: aux266:: var_is_introduced ;
var 1..10: aux267:: var_is_introduced ;
var 1..10: aux268:: var_is_introduced ;
var 1..10: aux269:: var_is_introduced ;
var 1..10: aux270:: var_is_introduced ;
var 1..10: aux271:: var_is_introduced ;
var 1..10: aux272:: var_is_introduced ;
var 1..10: aux273:: var_is_introduced ;
var 1..10: aux274:: var_is_introduced ;
var 1..10: aux275:: var_is_introduced ;
var 1..10: aux276:: var_is_introduced ;
var 1..10: aux277:: var_is_introduced ;
var 1..10: aux278:: var_is_introduced ;
var 1..10: aux279:: var_is_introduced ;
var 1..10: aux280:: var_is_introduced ;
var 1..10: aux281:: var_is_introduced ;
var 1..10: aux282:: var_is_introduced ;
var 1..10: aux283:: var_is_introduced ;
var 1..10: aux284:: var_is_introduced ;
var 1..10: aux285:: var_is_introduced ;
var 1..10: aux286:: var_is_introduced ;
var 1..10: aux287:: var_is_introduced ;
var 1..10: aux288:: var_is_introduced ;
var 1..10: aux289:: var_is_introduced ;
var 1..10: aux290:: var_is_introduced ;
var 1..10: aux291:: var_is_introduced ;
var 1..10: aux292:: var_is_introduced ;
var 1..10: aux293:: var_is_introduced ;
var 1..10: aux294:: var_is_introduced ;
var 1..10: aux295:: var_is_introduced ;
var 1..10: aux296:: var_is_introduced ;
var 1..10: aux297:: var_is_introduced ;
var 1..10: aux298:: var_is_introduced ;
var 1..10: aux299:: var_is_introduced ;
var 1..10: aux300:: var_is_introduced ;
var 1..10: aux301:: var_is_introduced ;
var 1..10: aux302:: var_is_introduced ;
var 1..10: aux303:: var_is_introduced ;
var 1..10: aux304:: var_is_introduced ;
var 1..10: aux305:: var_is_introduced ;
var 1..10: aux306:: var_is_introduced ;
var 1..10: aux307:: var_is_introduced ;
var 1..10: aux308:: var_is_introduced ;
var 1..10: aux309:: var_is_introduced ;
var 1..10: aux310:: var_is_introduced ;
var 1..10: aux311:: var_is_introduced ;
var 1..10: aux312:: var_is_introduced ;
var 1..10: aux313:: var_is_introduced ;
var 1..10: aux314:: var_is_introduced ;
var 1..10: aux315:: var_is_introduced ;
var 1..10: aux316:: var_is_introduced ;
var 1..10: aux317:: var_is_introduced ;
var 1..10: aux318:: var_is_introduced ;
var 1..10: aux319:: var_is_introduced ;
var 1..10: aux320:: var_is_introduced ;
var 1..10: aux321:: var_is_introduced ;
var 1..10: aux322:: var_is_introduced ;
var 1..10: aux323:: var_is_introduced ;
var 1..10: aux324:: var_is_introduced ;
var 1..10: aux325:: var_is_introduced ;
var 1..10: aux326:: var_is_introduced ;
var 1..10: aux327:: var_is_introduced ;
var 1..10: aux328:: var_is_introduced ;
var 1..10: aux329:: var_is_introduced ;
var 1..10: aux330:: var_is_introduced ;
var 1..10: aux331:: var_is_introduced ;
var 1..10: aux332:: var_is_introduced ;
var 1..10: aux333:: var_is_introduced ;
var 1..10: aux334:: var_is_introduced ;
var 1..10: aux335:: var_is_introduced ;
var 1..10: aux336:: var_is_introduced ;
var 1..10: aux337:: var_is_introduced ;
var 1..10: aux338:: var_is_introduced ;
var 1..10: aux339:: var_is_introduced ;
var 1..10: aux340:: var_is_introduced ;
var 1..10: aux341:: var_is_introduced ;
var 1..10: aux342:: var_is_introduced ;
var 1..10: aux343:: var_is_introduced ;
var 1..10: aux344:: var_is_introduced ;
var 1..10: aux345:: var_is_introduced ;
var 1..10: aux346:: var_is_introduced ;
var 1..10: aux347:: var_is_introduced ;
var 1..10: aux348:: var_is_introduced ;
var 1..10: aux349:: var_is_introduced ;
var 1..10: aux350:: var_is_introduced ;
var 1..10: aux351:: var_is_introduced ;
var 1..10: aux352:: var_is_introduced ;
var 1..10: aux353:: var_is_introduced ;
var 1..10: aux354:: var_is_introduced ;
var 1..10: aux355:: var_is_introduced ;
var 1..10: aux356:: var_is_introduced ;
var 1..10: aux357:: var_is_introduced ;
var 1..10: aux358:: var_is_introduced ;
var 1..10: aux359:: var_is_introduced ;
var 1..10: aux360:: var_is_introduced ;
var 1..10: aux361:: var_is_introduced ;
var 1..10: aux362:: var_is_introduced ;
var 1..10: aux363:: var_is_introduced ;
var 1..10: aux364:: var_is_introduced ;
var 1..10: aux365:: var_is_introduced ;
var 1..10: aux366:: var_is_introduced ;
var 1..10: aux367:: var_is_introduced ;
var 1..10: aux368:: var_is_introduced ;
var 1..10: aux369:: var_is_introduced ;
var 1..10: aux370:: var_is_introduced ;
var 1..10: aux371:: var_is_introduced ;
var 1..10: aux372:: var_is_introduced ;
var 1..10: aux373:: var_is_introduced ;
var 1..10: aux374:: var_is_introduced ;
var 1..10: aux375:: var_is_introduced ;
var 1..10: aux376:: var_is_introduced ;
var 1..10: aux377:: var_is_introduced ;
var 1..10: aux378:: var_is_introduced ;
var 1..10: aux379:: var_is_introduced ;
var 1..10: aux380:: var_is_introduced ;
var bool: aux381_BOOL:: var_is_introduced ;
var bool: aux382_BOOL:: var_is_introduced ;
var bool: aux383_BOOL:: var_is_introduced ;
var bool: aux384_BOOL:: var_is_introduced ;
var bool: aux385_BOOL:: var_is_introduced ;
var bool: aux386_BOOL:: var_is_introduced ;
var bool: aux387_BOOL:: var_is_introduced ;
var bool: aux388_BOOL:: var_is_introduced ;
var bool: aux389_BOOL:: var_is_introduced ;
var bool: aux390_BOOL:: var_is_introduced ;
var bool: aux391_BOOL:: var_is_introduced ;
var bool: aux392_BOOL:: var_is_introduced ;
var bool: aux393_BOOL:: var_is_introduced ;
var bool: aux394_BOOL:: var_is_introduced ;
var bool: aux395_BOOL:: var_is_introduced ;
var bool: aux396_BOOL:: var_is_introduced ;
var bool: aux397_BOOL:: var_is_introduced ;
var bool: aux398_BOOL:: var_is_introduced ;
var bool: aux399_BOOL:: var_is_introduced ;
var bool: aux400_BOOL:: var_is_introduced ;
var bool: aux401_BOOL:: var_is_introduced ;
var bool: aux402_BOOL:: var_is_introduced ;
var bool: aux403_BOOL:: var_is_introduced ;
var bool: aux404_BOOL:: var_is_introduced ;
var bool: aux405_BOOL:: var_is_introduced ;
var bool: aux406_BOOL:: var_is_introduced ;
var bool: aux407_BOOL:: var_is_introduced ;
var bool: aux408_BOOL:: var_is_introduced ;
var bool: aux409_BOOL:: var_is_introduced ;
var bool: aux410_BOOL:: var_is_introduced ;
var bool: aux411_BOOL:: var_is_introduced ;
var bool: aux412_BOOL:: var_is_introduced ;
var bool: aux413_BOOL:: var_is_introduced ;
var bool: aux414_BOOL:: var_is_introduced ;
var bool: aux415_BOOL:: var_is_introduced ;
var bool: aux416_BOOL:: var_is_introduced ;
var bool: aux417_BOOL:: var_is_introduced ;
var bool: aux418_BOOL:: var_is_introduced ;
var bool: aux419_BOOL:: var_is_introduced ;
var bool: aux420_BOOL:: var_is_introduced ;
var bool: aux421_BOOL:: var_is_introduced ;
var bool: aux422_BOOL:: var_is_introduced ;
var bool: aux423_BOOL:: var_is_introduced ;
var bool: aux424_BOOL:: var_is_introduced ;
var bool: aux425_BOOL:: var_is_introduced ;
var bool: aux426_BOOL:: var_is_introduced ;
var bool: aux427_BOOL:: var_is_introduced ;
var bool: aux428_BOOL:: var_is_introduced ;
var bool: aux429_BOOL:: var_is_introduced ;
var bool: aux430_BOOL:: var_is_introduced ;
var bool: aux431_BOOL:: var_is_introduced ;
var bool: aux432_BOOL:: var_is_introduced ;
var bool: aux433_BOOL:: var_is_introduced ;
var bool: aux434_BOOL:: var_is_introduced ;
var bool: aux435_BOOL:: var_is_introduced ;
var bool: aux436_BOOL:: var_is_introduced ;
var bool: aux437_BOOL:: var_is_introduced ;
var bool: aux438_BOOL:: var_is_introduced ;
var bool: aux439_BOOL:: var_is_introduced ;
var bool: aux440_BOOL:: var_is_introduced ;
var bool: aux441_BOOL:: var_is_introduced ;
var bool: aux442_BOOL:: var_is_introduced ;
var bool: aux443_BOOL:: var_is_introduced ;
var bool: aux444_BOOL:: var_is_introduced ;
var bool: aux445_BOOL:: var_is_introduced ;
var bool: aux446_BOOL:: var_is_introduced ;
var bool: aux447_BOOL:: var_is_introduced ;
var bool: aux448_BOOL:: var_is_introduced ;
var bool: aux449_BOOL:: var_is_introduced ;
var bool: aux450_BOOL:: var_is_introduced ;
var bool: aux451_BOOL:: var_is_introduced ;
var bool: aux452_BOOL:: var_is_introduced ;
var bool: aux453_BOOL:: var_is_introduced ;
var bool: aux454_BOOL:: var_is_introduced ;
var bool: aux455_BOOL:: var_is_introduced ;
var bool: aux456_BOOL:: var_is_introduced ;
var bool: aux457_BOOL:: var_is_introduced ;
var bool: aux458_BOOL:: var_is_introduced ;
var bool: aux459_BOOL:: var_is_introduced ;
var bool: aux460_BOOL:: var_is_introduced ;
var bool: aux461_BOOL:: var_is_introduced ;
var bool: aux462_BOOL:: var_is_introduced ;
var bool: aux463_BOOL:: var_is_introduced ;
var bool: aux464_BOOL:: var_is_introduced ;
var bool: aux465_BOOL:: var_is_introduced ;
var bool: aux466_BOOL:: var_is_introduced ;
var bool: aux467_BOOL:: var_is_introduced ;
var bool: aux468_BOOL:: var_is_introduced ;
var bool: aux469_BOOL:: var_is_introduced ;
var bool: aux470_BOOL:: var_is_introduced ;
var bool: aux471_BOOL:: var_is_introduced ;
var bool: aux472_BOOL:: var_is_introduced ;
var bool: aux473_BOOL:: var_is_introduced ;
var bool: aux474_BOOL:: var_is_introduced ;
var bool: aux475_BOOL:: var_is_introduced ;
var bool: aux476_BOOL:: var_is_introduced ;
var bool: aux477_BOOL:: var_is_introduced ;
var bool: aux478_BOOL:: var_is_introduced ;
var bool: aux479_BOOL:: var_is_introduced ;
var bool: aux480_BOOL:: var_is_introduced ;
var bool: aux481_BOOL:: var_is_introduced ;
var bool: aux482_BOOL:: var_is_introduced ;
var bool: aux483_BOOL:: var_is_introduced ;
var bool: aux484_BOOL:: var_is_introduced ;
var bool: aux485_BOOL:: var_is_introduced ;
var bool: aux486_BOOL:: var_is_introduced ;
var bool: aux487_BOOL:: var_is_introduced ;
var bool: aux488_BOOL:: var_is_introduced ;
var bool: aux489_BOOL:: var_is_introduced ;
var bool: aux490_BOOL:: var_is_introduced ;
var bool: aux491_BOOL:: var_is_introduced ;
var bool: aux492_BOOL:: var_is_introduced ;
var bool: aux493_BOOL:: var_is_introduced ;
var bool: aux494_BOOL:: var_is_introduced ;
var bool: aux495_BOOL:: var_is_introduced ;
var bool: aux496_BOOL:: var_is_introduced ;
var bool: aux497_BOOL:: var_is_introduced ;
var bool: aux498_BOOL:: var_is_introduced ;
var bool: aux499_BOOL:: var_is_introduced ;
var bool: aux500_BOOL:: var_is_introduced ;
var bool: aux501_BOOL:: var_is_introduced ;
var bool: aux502_BOOL:: var_is_introduced ;
var bool: aux503_BOOL:: var_is_introduced ;
var bool: aux504_BOOL:: var_is_introduced ;
var bool: aux505_BOOL:: var_is_introduced ;
var bool: aux506_BOOL:: var_is_introduced ;
var bool: aux507_BOOL:: var_is_introduced ;
var bool: aux508_BOOL:: var_is_introduced ;
var bool: aux509_BOOL:: var_is_introduced ;
var bool: aux510_BOOL:: var_is_introduced ;
var bool: aux511_BOOL:: var_is_introduced ;
var bool: aux512_BOOL:: var_is_introduced ;
var bool: aux513_BOOL:: var_is_introduced ;
var bool: aux514_BOOL:: var_is_introduced ;
var bool: aux515_BOOL:: var_is_introduced ;
var bool: aux516_BOOL:: var_is_introduced ;
var bool: aux517_BOOL:: var_is_introduced ;
var bool: aux518_BOOL:: var_is_introduced ;
var bool: aux519_BOOL:: var_is_introduced ;
var bool: aux520_BOOL:: var_is_introduced ;
var bool: aux521_BOOL:: var_is_introduced ;
var bool: aux522_BOOL:: var_is_introduced ;
var bool: aux523_BOOL:: var_is_introduced ;
var bool: aux524_BOOL:: var_is_introduced ;
var bool: aux525_BOOL:: var_is_introduced ;
var bool: aux526_BOOL:: var_is_introduced ;
var bool: aux527_BOOL:: var_is_introduced ;
var bool: aux528_BOOL:: var_is_introduced ;
var bool: aux529_BOOL:: var_is_introduced ;
var bool: aux530_BOOL:: var_is_introduced ;
var bool: aux531_BOOL:: var_is_introduced ;
var bool: aux532_BOOL:: var_is_introduced ;
var bool: aux533_BOOL:: var_is_introduced ;
var bool: aux534_BOOL:: var_is_introduced ;
var bool: aux535_BOOL:: var_is_introduced ;
var bool: aux536_BOOL:: var_is_introduced ;
var bool: aux537_BOOL:: var_is_introduced ;
var bool: aux538_BOOL:: var_is_introduced ;
var bool: aux539_BOOL:: var_is_introduced ;
var bool: aux540_BOOL:: var_is_introduced ;
var bool: aux541_BOOL:: var_is_introduced ;
var bool: aux542_BOOL:: var_is_introduced ;
var bool: aux543_BOOL:: var_is_introduced ;
var bool: aux544_BOOL:: var_is_introduced ;
var bool: aux545_BOOL:: var_is_introduced ;
var bool: aux546_BOOL:: var_is_introduced ;
var bool: aux547_BOOL:: var_is_introduced ;
var bool: aux548_BOOL:: var_is_introduced ;
var bool: aux549_BOOL:: var_is_introduced ;
var bool: aux550_BOOL:: var_is_introduced ;
var bool: aux551_BOOL:: var_is_introduced ;
var bool: aux552_BOOL:: var_is_introduced ;
var bool: aux553_BOOL:: var_is_introduced ;
var bool: aux554_BOOL:: var_is_introduced ;
var bool: aux555_BOOL:: var_is_introduced ;
var bool: aux556_BOOL:: var_is_introduced ;
var bool: aux557_BOOL:: var_is_introduced ;
var bool: aux558_BOOL:: var_is_introduced ;
var bool: aux559_BOOL:: var_is_introduced ;
var bool: aux560_BOOL:: var_is_introduced ;
var bool: aux561_BOOL:: var_is_introduced ;
var bool: aux562_BOOL:: var_is_introduced ;
var bool: aux563_BOOL:: var_is_introduced ;
var bool: aux564_BOOL:: var_is_introduced ;
var bool: aux565_BOOL:: var_is_introduced ;
var bool: aux566_BOOL:: var_is_introduced ;
var bool: aux567_BOOL:: var_is_introduced ;
var bool: aux568_BOOL:: var_is_introduced ;
var bool: aux569_BOOL:: var_is_introduced ;
var bool: aux570_BOOL:: var_is_introduced ;
var bool: aux571_BOOL:: var_is_introduced ;
var bool: aux572_BOOL:: var_is_introduced ;
var bool: aux573_BOOL:: var_is_introduced ;
var bool: aux574_BOOL:: var_is_introduced ;
var bool: aux575_BOOL:: var_is_introduced ;
var bool: aux576_BOOL:: var_is_introduced ;
var bool: aux577_BOOL:: var_is_introduced ;
var bool: aux578_BOOL:: var_is_introduced ;
var bool: aux579_BOOL:: var_is_introduced ;
var bool: aux580_BOOL:: var_is_introduced ;
var bool: aux581_BOOL:: var_is_introduced ;
var bool: aux582_BOOL:: var_is_introduced ;
var bool: aux583_BOOL:: var_is_introduced ;
var bool: aux584_BOOL:: var_is_introduced ;
var bool: aux585_BOOL:: var_is_introduced ;
var bool: aux586_BOOL:: var_is_introduced ;
var bool: aux587_BOOL:: var_is_introduced ;
var bool: aux588_BOOL:: var_is_introduced ;
var bool: aux589_BOOL:: var_is_introduced ;
var bool: aux590_BOOL:: var_is_introduced ;
var bool: aux591_BOOL:: var_is_introduced ;
var bool: aux592_BOOL:: var_is_introduced ;
var bool: aux593_BOOL:: var_is_introduced ;
var bool: aux594_BOOL:: var_is_introduced ;
var bool: aux595_BOOL:: var_is_introduced ;
var bool: aux596_BOOL:: var_is_introduced ;
var bool: aux597_BOOL:: var_is_introduced ;
var bool: aux598_BOOL:: var_is_introduced ;
var bool: aux599_BOOL:: var_is_introduced ;
var bool: aux600_BOOL:: var_is_introduced ;
var bool: aux601_BOOL:: var_is_introduced ;
var bool: aux602_BOOL:: var_is_introduced ;
var bool: aux603_BOOL:: var_is_introduced ;
var bool: aux604_BOOL:: var_is_introduced ;
var bool: aux605_BOOL:: var_is_introduced ;
var bool: aux606_BOOL:: var_is_introduced ;
var bool: aux607_BOOL:: var_is_introduced ;
var bool: aux608_BOOL:: var_is_introduced ;
var bool: aux609_BOOL:: var_is_introduced ;
var bool: aux610_BOOL:: var_is_introduced ;
var bool: aux611_BOOL:: var_is_introduced ;
var bool: aux612_BOOL:: var_is_introduced ;
var bool: aux613_BOOL:: var_is_introduced ;
var bool: aux614_BOOL:: var_is_introduced ;
var bool: aux615_BOOL:: var_is_introduced ;
var bool: aux616_BOOL:: var_is_introduced ;
var bool: aux617_BOOL:: var_is_introduced ;
var bool: aux618_BOOL:: var_is_introduced ;
var bool: aux619_BOOL:: var_is_introduced ;
var bool: aux620_BOOL:: var_is_introduced ;
var bool: aux621_BOOL:: var_is_introduced ;
var bool: aux622_BOOL:: var_is_introduced ;
var bool: aux623_BOOL:: var_is_introduced ;
var bool: aux624_BOOL:: var_is_introduced ;
var bool: aux625_BOOL:: var_is_introduced ;
var bool: aux626_BOOL:: var_is_introduced ;
var bool: aux627_BOOL:: var_is_introduced ;
var bool: aux628_BOOL:: var_is_introduced ;
var bool: aux629_BOOL:: var_is_introduced ;
var bool: aux630_BOOL:: var_is_introduced ;
var bool: aux631_BOOL:: var_is_introduced ;
var bool: aux632_BOOL:: var_is_introduced ;
var bool: aux633_BOOL:: var_is_introduced ;
var bool: aux634_BOOL:: var_is_introduced ;
var bool: aux635_BOOL:: var_is_introduced ;
var bool: aux636_BOOL:: var_is_introduced ;
var bool: aux637_BOOL:: var_is_introduced ;
var bool: aux638_BOOL:: var_is_introduced ;
var bool: aux639_BOOL:: var_is_introduced ;
var bool: aux640_BOOL:: var_is_introduced ;
var bool: aux641_BOOL:: var_is_introduced ;
var bool: aux642_BOOL:: var_is_introduced ;
var bool: aux643_BOOL:: var_is_introduced ;
var bool: aux644_BOOL:: var_is_introduced ;
var bool: aux645_BOOL:: var_is_introduced ;
var bool: aux646_BOOL:: var_is_introduced ;
var bool: aux647_BOOL:: var_is_introduced ;
var bool: aux648_BOOL:: var_is_introduced ;
var bool: aux649_BOOL:: var_is_introduced ;
var bool: aux650_BOOL:: var_is_introduced ;
var bool: aux651_BOOL:: var_is_introduced ;
var bool: aux652_BOOL:: var_is_introduced ;
var bool: aux653_BOOL:: var_is_introduced ;
var bool: aux654_BOOL:: var_is_introduced ;
var bool: aux655_BOOL:: var_is_introduced ;
var bool: aux656_BOOL:: var_is_introduced ;
var bool: aux657_BOOL:: var_is_introduced ;
var bool: aux658_BOOL:: var_is_introduced ;
var bool: aux659_BOOL:: var_is_introduced ;
var bool: aux660_BOOL:: var_is_introduced ;
var bool: aux661_BOOL:: var_is_introduced ;
var bool: aux662_BOOL:: var_is_introduced ;
var bool: aux663_BOOL:: var_is_introduced ;
var bool: aux664_BOOL:: var_is_introduced ;
var bool: aux665_BOOL:: var_is_introduced ;
var bool: aux666_BOOL:: var_is_introduced ;
var bool: aux667_BOOL:: var_is_introduced ;
var bool: aux668_BOOL:: var_is_introduced ;
var bool: aux669_BOOL:: var_is_introduced ;
var bool: aux670_BOOL:: var_is_introduced ;
var bool: aux671_BOOL:: var_is_introduced ;
var bool: aux672_BOOL:: var_is_introduced ;
var bool: aux673_BOOL:: var_is_introduced ;
var bool: aux674_BOOL:: var_is_introduced ;
var bool: aux675_BOOL:: var_is_introduced ;
var bool: aux676_BOOL:: var_is_introduced ;
var bool: aux677_BOOL:: var_is_introduced ;
var bool: aux678_BOOL:: var_is_introduced ;
var bool: aux679_BOOL:: var_is_introduced ;
var bool: aux680_BOOL:: var_is_introduced ;
var bool: aux681_BOOL:: var_is_introduced ;
var bool: aux682_BOOL:: var_is_introduced ;
var bool: aux683_BOOL:: var_is_introduced ;
var bool: aux684_BOOL:: var_is_introduced ;
var bool: aux685_BOOL:: var_is_introduced ;
var bool: aux686_BOOL:: var_is_introduced ;
var bool: aux687_BOOL:: var_is_introduced ;
var bool: aux688_BOOL:: var_is_introduced ;
var bool: aux689_BOOL:: var_is_introduced ;
var bool: aux690_BOOL:: var_is_introduced ;
var bool: aux691_BOOL:: var_is_introduced ;
var bool: aux692_BOOL:: var_is_introduced ;
var bool: aux693_BOOL:: var_is_introduced ;
var bool: aux694_BOOL:: var_is_introduced ;
var bool: aux695_BOOL:: var_is_introduced ;
var bool: aux696_BOOL:: var_is_introduced ;
var bool: aux697_BOOL:: var_is_introduced ;
var bool: aux698_BOOL:: var_is_introduced ;
var bool: aux699_BOOL:: var_is_introduced ;
var bool: aux700_BOOL:: var_is_introduced ;
var bool: aux701_BOOL:: var_is_introduced ;
var bool: aux702_BOOL:: var_is_introduced ;
var bool: aux703_BOOL:: var_is_introduced ;
var bool: aux704_BOOL:: var_is_introduced ;
var bool: aux705_BOOL:: var_is_introduced ;
var bool: aux706_BOOL:: var_is_introduced ;
var bool: aux707_BOOL:: var_is_introduced ;
var bool: aux708_BOOL:: var_is_introduced ;
var bool: aux709_BOOL:: var_is_introduced ;
var bool: aux710_BOOL:: var_is_introduced ;
var bool: aux711_BOOL:: var_is_introduced ;
var bool: aux712_BOOL:: var_is_introduced ;
var bool: aux713_BOOL:: var_is_introduced ;
var bool: aux714_BOOL:: var_is_introduced ;
var bool: aux715_BOOL:: var_is_introduced ;
var bool: aux716_BOOL:: var_is_introduced ;
var bool: aux717_BOOL:: var_is_introduced ;
var bool: aux718_BOOL:: var_is_introduced ;
var bool: aux719_BOOL:: var_is_introduced ;
var bool: aux720_BOOL:: var_is_introduced ;
var bool: aux721_BOOL:: var_is_introduced ;
var bool: aux722_BOOL:: var_is_introduced ;
var bool: aux723_BOOL:: var_is_introduced ;
var bool: aux724_BOOL:: var_is_introduced ;
var bool: aux725_BOOL:: var_is_introduced ;
var bool: aux726_BOOL:: var_is_introduced ;
var bool: aux727_BOOL:: var_is_introduced ;
var bool: aux728_BOOL:: var_is_introduced ;
var bool: aux729_BOOL:: var_is_introduced ;
var bool: aux730_BOOL:: var_is_introduced ;
var bool: aux731_BOOL:: var_is_introduced ;
var bool: aux732_BOOL:: var_is_introduced ;
var bool: aux733_BOOL:: var_is_introduced ;
var bool: aux734_BOOL:: var_is_introduced ;
var bool: aux735_BOOL:: var_is_introduced ;
var bool: aux736_BOOL:: var_is_introduced ;
var bool: aux737_BOOL:: var_is_introduced ;
var bool: aux738_BOOL:: var_is_introduced ;
var bool: aux739_BOOL:: var_is_introduced ;
var bool: aux740_BOOL:: var_is_introduced ;
var bool: aux741_BOOL:: var_is_introduced ;
var bool: aux742_BOOL:: var_is_introduced ;
var bool: aux743_BOOL:: var_is_introduced ;
var bool: aux744_BOOL:: var_is_introduced ;
var bool: aux745_BOOL:: var_is_introduced ;
var bool: aux746_BOOL:: var_is_introduced ;
var bool: aux747_BOOL:: var_is_introduced ;
var bool: aux748_BOOL:: var_is_introduced ;
var bool: aux749_BOOL:: var_is_introduced ;
var bool: aux750_BOOL:: var_is_introduced ;
var bool: aux751_BOOL:: var_is_introduced ;
var bool: aux752_BOOL:: var_is_introduced ;
var bool: aux753_BOOL:: var_is_introduced ;
var bool: aux754_BOOL:: var_is_introduced ;
var bool: aux755_BOOL:: var_is_introduced ;
var bool: aux756_BOOL:: var_is_introduced ;
var bool: aux757_BOOL:: var_is_introduced ;
var bool: aux758_BOOL:: var_is_introduced ;
var bool: aux759_BOOL:: var_is_introduced ;
var bool: aux760_BOOL:: var_is_introduced ;
var bool: aux761_BOOL:: var_is_introduced ;
var bool: aux762_BOOL:: var_is_introduced ;
var bool: aux763_BOOL:: var_is_introduced ;
var bool: aux764_BOOL:: var_is_introduced ;
var bool: aux765_BOOL:: var_is_introduced ;
var bool: aux766_BOOL:: var_is_introduced ;
var bool: aux767_BOOL:: var_is_introduced ;
var bool: aux768_BOOL:: var_is_introduced ;
var bool: aux769_BOOL:: var_is_introduced ;
var bool: aux770_BOOL:: var_is_introduced ;
var bool: aux771_BOOL:: var_is_introduced ;
var bool: aux772_BOOL:: var_is_introduced ;
var bool: aux773_BOOL:: var_is_introduced ;
var bool: aux774_BOOL:: var_is_introduced ;
var bool: aux775_BOOL:: var_is_introduced ;
var bool: aux776_BOOL:: var_is_introduced ;
var bool: aux777_BOOL:: var_is_introduced ;
var bool: aux778_BOOL:: var_is_introduced ;
var bool: aux779_BOOL:: var_is_introduced ;
var bool: aux780_BOOL:: var_is_introduced ;
var bool: aux781_BOOL:: var_is_introduced ;
var bool: aux782_BOOL:: var_is_introduced ;
var bool: aux783_BOOL:: var_is_introduced ;
var bool: aux784_BOOL:: var_is_introduced ;
var bool: aux785_BOOL:: var_is_introduced ;
var bool: aux786_BOOL:: var_is_introduced ;
var bool: aux787_BOOL:: var_is_introduced ;
var bool: aux788_BOOL:: var_is_introduced ;
var bool: aux789_BOOL:: var_is_introduced ;
var bool: aux790_BOOL:: var_is_introduced ;
var bool: aux791_BOOL:: var_is_introduced ;
var bool: aux792_BOOL:: var_is_introduced ;
var bool: aux793_BOOL:: var_is_introduced ;
var bool: aux794_BOOL:: var_is_introduced ;
var bool: aux795_BOOL:: var_is_introduced ;
var bool: aux796_BOOL:: var_is_introduced ;
var bool: aux797_BOOL:: var_is_introduced ;
var bool: aux798_BOOL:: var_is_introduced ;
var bool: aux799_BOOL:: var_is_introduced ;
var bool: aux800_BOOL:: var_is_introduced ;
var bool: aux801_BOOL:: var_is_introduced ;
var bool: aux802_BOOL:: var_is_introduced ;
var bool: aux803_BOOL:: var_is_introduced ;
var bool: aux804_BOOL:: var_is_introduced ;
var bool: aux805_BOOL:: var_is_introduced ;
var bool: aux806_BOOL:: var_is_introduced ;
var bool: aux807_BOOL:: var_is_introduced ;
var bool: aux808_BOOL:: var_is_introduced ;
var bool: aux809_BOOL:: var_is_introduced ;
var bool: aux810_BOOL:: var_is_introduced ;
var bool: aux811_BOOL:: var_is_introduced ;
var bool: aux812_BOOL:: var_is_introduced ;
var bool: aux813_BOOL:: var_is_introduced ;
var bool: aux814_BOOL:: var_is_introduced ;
var bool: aux815_BOOL:: var_is_introduced ;
var bool: aux816_BOOL:: var_is_introduced ;
var bool: aux817_BOOL:: var_is_introduced ;
var bool: aux818_BOOL:: var_is_introduced ;
var bool: aux819_BOOL:: var_is_introduced ;
var bool: aux820_BOOL:: var_is_introduced ;
var bool: aux821_BOOL:: var_is_introduced ;
var bool: aux822_BOOL:: var_is_introduced ;
var bool: aux823_BOOL:: var_is_introduced ;
var bool: aux824_BOOL:: var_is_introduced ;
var bool: aux825_BOOL:: var_is_introduced ;
var bool: aux826_BOOL:: var_is_introduced ;
var bool: aux827_BOOL:: var_is_introduced ;
var bool: aux828_BOOL:: var_is_introduced ;
var bool: aux829_BOOL:: var_is_introduced ;
var bool: aux830_BOOL:: var_is_introduced ;
var bool: aux831_BOOL:: var_is_introduced ;
var bool: aux832_BOOL:: var_is_introduced ;
var bool: aux833_BOOL:: var_is_introduced ;
var bool: aux834_BOOL:: var_is_introduced ;
var bool: aux835_BOOL:: var_is_introduced ;
var bool: aux836_BOOL:: var_is_introduced ;
var bool: aux837_BOOL:: var_is_introduced ;
var bool: aux838_BOOL:: var_is_introduced ;
var bool: aux839_BOOL:: var_is_introduced ;
var bool: aux840_BOOL:: var_is_introduced ;
var bool: aux841_BOOL:: var_is_introduced ;
var bool: aux842_BOOL:: var_is_introduced ;
var bool: aux843_BOOL:: var_is_introduced ;
var bool: aux844_BOOL:: var_is_introduced ;
var bool: aux845_BOOL:: var_is_introduced ;
var bool: aux846_BOOL:: var_is_introduced ;
var bool: aux847_BOOL:: var_is_introduced ;
var bool: aux848_BOOL:: var_is_introduced ;
var bool: aux849_BOOL:: var_is_introduced ;
var bool: aux850_BOOL:: var_is_introduced ;
var bool: aux851_BOOL:: var_is_introduced ;
var bool: aux852_BOOL:: var_is_introduced ;
var bool: aux853_BOOL:: var_is_introduced ;
var bool: aux854_BOOL:: var_is_introduced ;
var bool: aux855_BOOL:: var_is_introduced ;
var bool: aux856_BOOL:: var_is_introduced ;
var bool: aux857_BOOL:: var_is_introduced ;
var bool: aux858_BOOL:: var_is_introduced ;
var bool: aux859_BOOL:: var_is_introduced ;
var bool: aux860_BOOL:: var_is_introduced ;
var bool: aux861_BOOL:: var_is_introduced ;
var bool: aux862_BOOL:: var_is_introduced ;
var bool: aux863_BOOL:: var_is_introduced ;
var bool: aux864_BOOL:: var_is_introduced ;
var bool: aux865_BOOL:: var_is_introduced ;
var bool: aux866_BOOL:: var_is_introduced ;
var bool: aux867_BOOL:: var_is_introduced ;
var bool: aux868_BOOL:: var_is_introduced ;
var bool: aux869_BOOL:: var_is_introduced ;
var bool: aux870_BOOL:: var_is_introduced ;
var bool: aux871_BOOL:: var_is_introduced ;
var bool: aux872_BOOL:: var_is_introduced ;
var bool: aux873_BOOL:: var_is_introduced ;
var bool: aux874_BOOL:: var_is_introduced ;
var bool: aux875_BOOL:: var_is_introduced ;
var bool: aux876_BOOL:: var_is_introduced ;
var bool: aux877_BOOL:: var_is_introduced ;
var bool: aux878_BOOL:: var_is_introduced ;
var bool: aux879_BOOL:: var_is_introduced ;
var bool: aux880_BOOL:: var_is_introduced ;
var bool: aux881_BOOL:: var_is_introduced ;
var bool: aux882_BOOL:: var_is_introduced ;
var bool: aux883_BOOL:: var_is_introduced ;
var bool: aux884_BOOL:: var_is_introduced ;
var bool: aux885_BOOL:: var_is_introduced ;
var bool: aux886_BOOL:: var_is_introduced ;
var bool: aux887_BOOL:: var_is_introduced ;
var bool: aux888_BOOL:: var_is_introduced ;
var bool: aux889_BOOL:: var_is_introduced ;
var bool: aux890_BOOL:: var_is_introduced ;
var bool: aux891_BOOL:: var_is_introduced ;
var bool: aux892_BOOL:: var_is_introduced ;
var bool: aux893_BOOL:: var_is_introduced ;
var bool: aux894_BOOL:: var_is_introduced ;
var bool: aux895_BOOL:: var_is_introduced ;
var bool: aux896_BOOL:: var_is_introduced ;
var bool: aux897_BOOL:: var_is_introduced ;
var bool: aux898_BOOL:: var_is_introduced ;
var bool: aux899_BOOL:: var_is_introduced ;
var bool: aux900_BOOL:: var_is_introduced ;
var bool: aux901_BOOL:: var_is_introduced ;
var bool: aux902_BOOL:: var_is_introduced ;
var bool: aux903_BOOL:: var_is_introduced ;
var bool: aux904_BOOL:: var_is_introduced ;
var bool: aux905_BOOL:: var_is_introduced ;
var bool: aux906_BOOL:: var_is_introduced ;
var bool: aux907_BOOL:: var_is_introduced ;
var bool: aux908_BOOL:: var_is_introduced ;
var bool: aux909_BOOL:: var_is_introduced ;
var bool: aux910_BOOL:: var_is_introduced ;
var bool: aux911_BOOL:: var_is_introduced ;
var bool: aux912_BOOL:: var_is_introduced ;
var bool: aux913_BOOL:: var_is_introduced ;
var bool: aux914_BOOL:: var_is_introduced ;
var bool: aux915_BOOL:: var_is_introduced ;
var bool: aux916_BOOL:: var_is_introduced ;
var bool: aux917_BOOL:: var_is_introduced ;
var bool: aux918_BOOL:: var_is_introduced ;
var bool: aux919_BOOL:: var_is_introduced ;
var bool: aux920_BOOL:: var_is_introduced ;
var bool: aux921_BOOL:: var_is_introduced ;
var bool: aux922_BOOL:: var_is_introduced ;
var bool: aux923_BOOL:: var_is_introduced ;
var bool: aux924_BOOL:: var_is_introduced ;
var bool: aux925_BOOL:: var_is_introduced ;
var bool: aux926_BOOL:: var_is_introduced ;
var bool: aux927_BOOL:: var_is_introduced ;
var bool: aux928_BOOL:: var_is_introduced ;
var bool: aux929_BOOL:: var_is_introduced ;
var bool: aux930_BOOL:: var_is_introduced ;
var bool: aux931_BOOL:: var_is_introduced ;
var bool: aux932_BOOL:: var_is_introduced ;
var bool: aux933_BOOL:: var_is_introduced ;
var bool: aux934_BOOL:: var_is_introduced ;
var bool: aux935_BOOL:: var_is_introduced ;
var bool: aux936_BOOL:: var_is_introduced ;
var bool: aux937_BOOL:: var_is_introduced ;
var bool: aux938_BOOL:: var_is_introduced ;
var bool: aux939_BOOL:: var_is_introduced ;
var bool: aux940_BOOL:: var_is_introduced ;
var bool: aux941_BOOL:: var_is_introduced ;
var bool: aux942_BOOL:: var_is_introduced ;
var bool: aux943_BOOL:: var_is_introduced ;
var bool: aux944_BOOL:: var_is_introduced ;
var bool: aux945_BOOL:: var_is_introduced ;
var bool: aux946_BOOL:: var_is_introduced ;
var bool: aux947_BOOL:: var_is_introduced ;
var bool: aux948_BOOL:: var_is_introduced ;
var bool: aux949_BOOL:: var_is_introduced ;
var bool: aux950_BOOL:: var_is_introduced ;
var bool: aux951_BOOL:: var_is_introduced ;
var bool: aux952_BOOL:: var_is_introduced ;
var bool: aux953_BOOL:: var_is_introduced ;
var bool: aux954_BOOL:: var_is_introduced ;
var bool: aux955_BOOL:: var_is_introduced ;
var bool: aux956_BOOL:: var_is_introduced ;
var bool: aux957_BOOL:: var_is_introduced ;
var bool: aux958_BOOL:: var_is_introduced ;
var bool: aux959_BOOL:: var_is_introduced ;
var bool: aux960_BOOL:: var_is_introduced ;
var bool: aux961_BOOL:: var_is_introduced ;
var bool: aux962_BOOL:: var_is_introduced ;
var bool: aux963_BOOL:: var_is_introduced ;
var bool: aux964_BOOL:: var_is_introduced ;
var bool: aux965_BOOL:: var_is_introduced ;
var bool: aux966_BOOL:: var_is_introduced ;
var bool: aux967_BOOL:: var_is_introduced ;
var bool: aux968_BOOL:: var_is_introduced ;
var bool: aux969_BOOL:: var_is_introduced ;
var bool: aux970_BOOL:: var_is_introduced ;
var bool: aux971_BOOL:: var_is_introduced ;
var bool: aux972_BOOL:: var_is_introduced ;
var bool: aux973_BOOL:: var_is_introduced ;
var bool: aux974_BOOL:: var_is_introduced ;
var bool: aux975_BOOL:: var_is_introduced ;
var bool: aux976_BOOL:: var_is_introduced ;
var bool: aux977_BOOL:: var_is_introduced ;
var bool: aux978_BOOL:: var_is_introduced ;
var bool: aux979_BOOL:: var_is_introduced ;
var bool: aux980_BOOL:: var_is_introduced ;
var bool: aux981_BOOL:: var_is_introduced ;
var bool: aux982_BOOL:: var_is_introduced ;
var bool: aux983_BOOL:: var_is_introduced ;
var bool: aux984_BOOL:: var_is_introduced ;
var bool: aux985_BOOL:: var_is_introduced ;
var bool: aux986_BOOL:: var_is_introduced ;
var bool: aux987_BOOL:: var_is_introduced ;
var bool: aux988_BOOL:: var_is_introduced ;
var bool: aux989_BOOL:: var_is_introduced ;
var bool: aux990_BOOL:: var_is_introduced ;
var bool: aux991_BOOL:: var_is_introduced ;
var bool: aux992_BOOL:: var_is_introduced ;
var bool: aux993_BOOL:: var_is_introduced ;
var bool: aux994_BOOL:: var_is_introduced ;
var bool: aux995_BOOL:: var_is_introduced ;
var bool: aux996_BOOL:: var_is_introduced ;
var bool: aux997_BOOL:: var_is_introduced ;
var bool: aux998_BOOL:: var_is_introduced ;
var bool: aux999_BOOL:: var_is_introduced ;
var bool: aux1000_BOOL:: var_is_introduced ;
var bool: aux1001_BOOL:: var_is_introduced ;
var bool: aux1002_BOOL:: var_is_introduced ;
var bool: aux1003_BOOL:: var_is_introduced ;
var bool: aux1004_BOOL:: var_is_introduced ;
var bool: aux1005_BOOL:: var_is_introduced ;
var bool: aux1006_BOOL:: var_is_introduced ;
var bool: aux1007_BOOL:: var_is_introduced ;
var bool: aux1008_BOOL:: var_is_introduced ;
var bool: aux1009_BOOL:: var_is_introduced ;
var bool: aux1010_BOOL:: var_is_introduced ;
var bool: aux1011_BOOL:: var_is_introduced ;
var bool: aux1012_BOOL:: var_is_introduced ;
var bool: aux1013_BOOL:: var_is_introduced ;
var bool: aux1014_BOOL:: var_is_introduced ;
var bool: aux1015_BOOL:: var_is_introduced ;
var bool: aux1016_BOOL:: var_is_introduced ;
var bool: aux1017_BOOL:: var_is_introduced ;
var bool: aux1018_BOOL:: var_is_introduced ;
var bool: aux1019_BOOL:: var_is_introduced ;
var bool: aux1020_BOOL:: var_is_introduced ;
var bool: aux1021_BOOL:: var_is_introduced ;
var bool: aux1022_BOOL:: var_is_introduced ;
var bool: aux1023_BOOL:: var_is_introduced ;
var bool: aux1024_BOOL:: var_is_introduced ;
var bool: aux1025_BOOL:: var_is_introduced ;
var bool: aux1026_BOOL:: var_is_introduced ;
var bool: aux1027_BOOL:: var_is_introduced ;
var bool: aux1028_BOOL:: var_is_introduced ;
var bool: aux1029_BOOL:: var_is_introduced ;
var bool: aux1030_BOOL:: var_is_introduced ;
var bool: aux1031_BOOL:: var_is_introduced ;
var bool: aux1032_BOOL:: var_is_introduced ;
var bool: aux1033_BOOL:: var_is_introduced ;
var bool: aux1034_BOOL:: var_is_introduced ;
var bool: aux1035_BOOL:: var_is_introduced ;
var bool: aux1036_BOOL:: var_is_introduced ;
var bool: aux1037_BOOL:: var_is_introduced ;
var bool: aux1038_BOOL:: var_is_introduced ;
var bool: aux1039_BOOL:: var_is_introduced ;
var bool: aux1040_BOOL:: var_is_introduced ;
var bool: aux1041_BOOL:: var_is_introduced ;
var bool: aux1042_BOOL:: var_is_introduced ;
var bool: aux1043_BOOL:: var_is_introduced ;
var bool: aux1044_BOOL:: var_is_introduced ;
var bool: aux1045_BOOL:: var_is_introduced ;
var bool: aux1046_BOOL:: var_is_introduced ;
var bool: aux1047_BOOL:: var_is_introduced ;
var bool: aux1048_BOOL:: var_is_introduced ;
var bool: aux1049_BOOL:: var_is_introduced ;
var bool: aux1050_BOOL:: var_is_introduced ;
var bool: aux1051_BOOL:: var_is_introduced ;
var bool: aux1052_BOOL:: var_is_introduced ;
var bool: aux1053_BOOL:: var_is_introduced ;
var bool: aux1054_BOOL:: var_is_introduced ;
var bool: aux1055_BOOL:: var_is_introduced ;
var bool: aux1056_BOOL:: var_is_introduced ;
var bool: aux1057_BOOL:: var_is_introduced ;
var bool: aux1058_BOOL:: var_is_introduced ;
var bool: aux1059_BOOL:: var_is_introduced ;
var bool: aux1060_BOOL:: var_is_introduced ;
var bool: aux1061_BOOL:: var_is_introduced ;
var bool: aux1062_BOOL:: var_is_introduced ;
var bool: aux1063_BOOL:: var_is_introduced ;
var bool: aux1064_BOOL:: var_is_introduced ;
var bool: aux1065_BOOL:: var_is_introduced ;
var bool: aux1066_BOOL:: var_is_introduced ;
var bool: aux1067_BOOL:: var_is_introduced ;
var bool: aux1068_BOOL:: var_is_introduced ;
var bool: aux1069_BOOL:: var_is_introduced ;
var bool: aux1070_BOOL:: var_is_introduced ;
var bool: aux1071_BOOL:: var_is_introduced ;
var bool: aux1072_BOOL:: var_is_introduced ;
var bool: aux1073_BOOL:: var_is_introduced ;
var bool: aux1074_BOOL:: var_is_introduced ;
var bool: aux1075_BOOL:: var_is_introduced ;
var bool: aux1076_BOOL:: var_is_introduced ;
var bool: aux1077_BOOL:: var_is_introduced ;
var bool: aux1078_BOOL:: var_is_introduced ;
var bool: aux1079_BOOL:: var_is_introduced ;
var bool: aux1080_BOOL:: var_is_introduced ;
var bool: aux1081_BOOL:: var_is_introduced ;
var bool: aux1082_BOOL:: var_is_introduced ;
var bool: aux1083_BOOL:: var_is_introduced ;
var bool: aux1084_BOOL:: var_is_introduced ;
var bool: aux1085_BOOL:: var_is_introduced ;
var bool: aux1086_BOOL:: var_is_introduced ;
var bool: aux1087_BOOL:: var_is_introduced ;
var bool: aux1088_BOOL:: var_is_introduced ;
var bool: aux1089_BOOL:: var_is_introduced ;
var bool: aux1090_BOOL:: var_is_introduced ;
var bool: aux1091_BOOL:: var_is_introduced ;
var bool: aux1092_BOOL:: var_is_introduced ;
var bool: aux1093_BOOL:: var_is_introduced ;
var bool: aux1094_BOOL:: var_is_introduced ;
var bool: aux1095_BOOL:: var_is_introduced ;
var bool: aux1096_BOOL:: var_is_introduced ;
var bool: aux1097_BOOL:: var_is_introduced ;
var bool: aux1098_BOOL:: var_is_introduced ;
var bool: aux1099_BOOL:: var_is_introduced ;
var bool: aux1100_BOOL:: var_is_introduced ;
var bool: aux1101_BOOL:: var_is_introduced ;
var bool: aux1102_BOOL:: var_is_introduced ;
var bool: aux1103_BOOL:: var_is_introduced ;
var bool: aux1104_BOOL:: var_is_introduced ;
var bool: aux1105_BOOL:: var_is_introduced ;
var bool: aux1106_BOOL:: var_is_introduced ;
var bool: aux1107_BOOL:: var_is_introduced ;
var bool: aux1108_BOOL:: var_is_introduced ;
var bool: aux1109_BOOL:: var_is_introduced ;
var bool: aux1110_BOOL:: var_is_introduced ;
var bool: aux1111_BOOL:: var_is_introduced ;
var bool: aux1112_BOOL:: var_is_introduced ;
var bool: aux1113_BOOL:: var_is_introduced ;
var bool: aux1114_BOOL:: var_is_introduced ;
var bool: aux1115_BOOL:: var_is_introduced ;
var bool: aux1116_BOOL:: var_is_introduced ;
var bool: aux1117_BOOL:: var_is_introduced ;
var bool: aux1118_BOOL:: var_is_introduced ;
var bool: aux1119_BOOL:: var_is_introduced ;
var bool: aux1120_BOOL:: var_is_introduced ;
var bool: aux1121_BOOL:: var_is_introduced ;
var bool: aux1122_BOOL:: var_is_introduced ;
var bool: aux1123_BOOL:: var_is_introduced ;
var bool: aux1124_BOOL:: var_is_introduced ;
var bool: aux1125_BOOL:: var_is_introduced ;
var bool: aux1126_BOOL:: var_is_introduced ;
var bool: aux1127_BOOL:: var_is_introduced ;
var bool: aux1128_BOOL:: var_is_introduced ;
var bool: aux1129_BOOL:: var_is_introduced ;
var bool: aux1130_BOOL:: var_is_introduced ;
var bool: aux1131_BOOL:: var_is_introduced ;
var bool: aux1132_BOOL:: var_is_introduced ;
var bool: aux1133_BOOL:: var_is_introduced ;
var bool: aux1134_BOOL:: var_is_introduced ;
var bool: aux1135_BOOL:: var_is_introduced ;
var bool: aux1136_BOOL:: var_is_introduced ;
var bool: aux1137_BOOL:: var_is_introduced ;
var bool: aux1138_BOOL:: var_is_introduced ;
var bool: aux1139_BOOL:: var_is_introduced ;
var bool: aux1140_BOOL:: var_is_introduced ;
var 1..18: aux1141:: var_is_introduced ;
var 1..18: aux1142:: var_is_introduced ;
var 1..19: aux1143:: var_is_introduced ;
var 1..19: aux1144:: var_is_introduced ;
var 1..19: aux1145:: var_is_introduced ;
var 1..19: aux1146:: var_is_introduced ;
var 1..19: aux1147:: var_is_introduced ;
var 1..19: aux1148:: var_is_introduced ;
var 1..19: aux1149:: var_is_introduced ;
var 1..19: aux1150:: var_is_introduced ;
var 1..18: aux1151:: var_is_introduced ;
var 1..19: aux1152:: var_is_introduced ;
var 1..19: aux1153:: var_is_introduced ;
var 1..18: aux1154:: var_is_introduced ;
var 1..19: aux1155:: var_is_introduced ;
var 1..19: aux1156:: var_is_introduced ;
var 1..19: aux1157:: var_is_introduced ;
var 1..19: aux1158:: var_is_introduced ;
var 1..19: aux1159:: var_is_introduced ;
var 1..19: aux1160:: var_is_introduced ;
var 1..19: aux1161:: var_is_introduced ;
var bool: aux1162_BOOL:: var_is_introduced ;
var bool: aux1163_BOOL:: var_is_introduced ;
var bool: aux1164_BOOL:: var_is_introduced ;
var bool: aux1165_BOOL:: var_is_introduced ;
var bool: aux1166_BOOL:: var_is_introduced ;
var bool: aux1167_BOOL:: var_is_introduced ;
var bool: aux1168_BOOL:: var_is_introduced ;
var bool: aux1169_BOOL:: var_is_introduced ;
var bool: aux1170_BOOL:: var_is_introduced ;
var bool: aux1171_BOOL:: var_is_introduced ;
var bool: aux1172_BOOL:: var_is_introduced ;
var bool: aux1173_BOOL:: var_is_introduced ;
var bool: aux1174_BOOL:: var_is_introduced ;
var bool: aux1175_BOOL:: var_is_introduced ;
var bool: aux1176_BOOL:: var_is_introduced ;
var bool: aux1177_BOOL:: var_is_introduced ;
var bool: aux1178_BOOL:: var_is_introduced ;
var bool: aux1179_BOOL:: var_is_introduced ;
var bool: aux1180_BOOL:: var_is_introduced ;
var bool: aux1181_BOOL:: var_is_introduced ;
var bool: aux1182_BOOL:: var_is_introduced ;
var bool: aux1183_BOOL:: var_is_introduced ;
var bool: aux1184_BOOL:: var_is_introduced ;
var bool: aux1185_BOOL:: var_is_introduced ;
var bool: aux1186_BOOL:: var_is_introduced ;
var bool: aux1187_BOOL:: var_is_introduced ;
var bool: aux1188_BOOL:: var_is_introduced ;
var bool: aux1189_BOOL:: var_is_introduced ;
var bool: aux1190_BOOL:: var_is_introduced ;
var bool: aux1191_BOOL:: var_is_introduced ;
var bool: aux1192_BOOL:: var_is_introduced ;
var bool: aux1193_BOOL:: var_is_introduced ;
var bool: aux1194_BOOL:: var_is_introduced ;
var bool: aux1195_BOOL:: var_is_introduced ;
var bool: aux1196_BOOL:: var_is_introduced ;
var bool: aux1197_BOOL:: var_is_introduced ;
var bool: aux1198_BOOL:: var_is_introduced ;
var bool: aux1199_BOOL:: var_is_introduced ;
var bool: aux1200_BOOL:: var_is_introduced ;
var bool: aux1201_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357}: aux1202:: var_is_introduced ;
var bool: aux1203_BOOL:: var_is_introduced ;
var bool: aux1204_BOOL:: var_is_introduced ;
var bool: aux1205_BOOL:: var_is_introduced ;
var bool: aux1206_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux1207:: var_is_introduced ;
var bool: aux1208_BOOL:: var_is_introduced ;
var bool: aux1209_BOOL:: var_is_introduced ;
var bool: aux1210_BOOL:: var_is_introduced ;
var bool: aux1211_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux1212:: var_is_introduced ;
var bool: aux1213_BOOL:: var_is_introduced ;
var bool: aux1214_BOOL:: var_is_introduced ;
var bool: aux1215_BOOL:: var_is_introduced ;
var bool: aux1216_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux1217:: var_is_introduced ;
var bool: aux1218_BOOL:: var_is_introduced ;
var bool: aux1219_BOOL:: var_is_introduced ;
var bool: aux1220_BOOL:: var_is_introduced ;
var bool: aux1221_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux1222:: var_is_introduced ;
var bool: aux1223_BOOL:: var_is_introduced ;
var bool: aux1224_BOOL:: var_is_introduced ;
var bool: aux1225_BOOL:: var_is_introduced ;
var bool: aux1226_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux1227:: var_is_introduced ;
var bool: aux1228_BOOL:: var_is_introduced ;
var bool: aux1229_BOOL:: var_is_introduced ;
var bool: aux1230_BOOL:: var_is_introduced ;
var bool: aux1231_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux1232:: var_is_introduced ;
var bool: aux1233_BOOL:: var_is_introduced ;
var bool: aux1234_BOOL:: var_is_introduced ;
var bool: aux1235_BOOL:: var_is_introduced ;
var bool: aux1236_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux1237:: var_is_introduced ;
var bool: aux1238_BOOL:: var_is_introduced ;
var bool: aux1239_BOOL:: var_is_introduced ;
var bool: aux1240_BOOL:: var_is_introduced ;
var bool: aux1241_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux1242:: var_is_introduced ;
var bool: aux1243_BOOL:: var_is_introduced ;
var bool: aux1244_BOOL:: var_is_introduced ;
var bool: aux1245_BOOL:: var_is_introduced ;
var bool: aux1246_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux1247:: var_is_introduced ;
var bool: aux1248_BOOL:: var_is_introduced ;
var bool: aux1249_BOOL:: var_is_introduced ;
var bool: aux1250_BOOL:: var_is_introduced ;
var bool: aux1251_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux1252:: var_is_introduced ;
var bool: aux1253_BOOL:: var_is_introduced ;
var bool: aux1254_BOOL:: var_is_introduced ;
var bool: aux1255_BOOL:: var_is_introduced ;
var bool: aux1256_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux1257:: var_is_introduced ;
var bool: aux1258_BOOL:: var_is_introduced ;
var bool: aux1259_BOOL:: var_is_introduced ;
var bool: aux1260_BOOL:: var_is_introduced ;
var bool: aux1261_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux1262:: var_is_introduced ;
var bool: aux1263_BOOL:: var_is_introduced ;
var bool: aux1264_BOOL:: var_is_introduced ;
var bool: aux1265_BOOL:: var_is_introduced ;
var bool: aux1266_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux1267:: var_is_introduced ;
var bool: aux1268_BOOL:: var_is_introduced ;
var bool: aux1269_BOOL:: var_is_introduced ;
var bool: aux1270_BOOL:: var_is_introduced ;
var bool: aux1271_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux1272:: var_is_introduced ;
var bool: aux1273_BOOL:: var_is_introduced ;
var bool: aux1274_BOOL:: var_is_introduced ;
var bool: aux1275_BOOL:: var_is_introduced ;
var bool: aux1276_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux1277:: var_is_introduced ;
var bool: aux1278_BOOL:: var_is_introduced ;
var bool: aux1279_BOOL:: var_is_introduced ;
var bool: aux1280_BOOL:: var_is_introduced ;
var bool: aux1281_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux1282:: var_is_introduced ;
var bool: aux1283_BOOL:: var_is_introduced ;
var bool: aux1284_BOOL:: var_is_introduced ;
var bool: aux1285_BOOL:: var_is_introduced ;
var bool: aux1286_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377}: aux1287:: var_is_introduced ;
var bool: aux1288_BOOL:: var_is_introduced ;
var bool: aux1289_BOOL:: var_is_introduced ;
var bool: aux1290_BOOL:: var_is_introduced ;
var bool: aux1291_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1292:: var_is_introduced ;
var bool: aux1293_BOOL:: var_is_introduced ;
var bool: aux1294_BOOL:: var_is_introduced ;
var bool: aux1295_BOOL:: var_is_introduced ;
var bool: aux1296_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1297:: var_is_introduced ;
var bool: aux1298_BOOL:: var_is_introduced ;
var bool: aux1299_BOOL:: var_is_introduced ;
var bool: aux1300_BOOL:: var_is_introduced ;
var bool: aux1301_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1302:: var_is_introduced ;
var bool: aux1303_BOOL:: var_is_introduced ;
var bool: aux1304_BOOL:: var_is_introduced ;
var bool: aux1305_BOOL:: var_is_introduced ;
var bool: aux1306_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1307:: var_is_introduced ;
var bool: aux1308_BOOL:: var_is_introduced ;
var bool: aux1309_BOOL:: var_is_introduced ;
var bool: aux1310_BOOL:: var_is_introduced ;
var bool: aux1311_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1312:: var_is_introduced ;
var bool: aux1313_BOOL:: var_is_introduced ;
var bool: aux1314_BOOL:: var_is_introduced ;
var bool: aux1315_BOOL:: var_is_introduced ;
var bool: aux1316_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1317:: var_is_introduced ;
var bool: aux1318_BOOL:: var_is_introduced ;
var bool: aux1319_BOOL:: var_is_introduced ;
var bool: aux1320_BOOL:: var_is_introduced ;
var bool: aux1321_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1322:: var_is_introduced ;
var bool: aux1323_BOOL:: var_is_introduced ;
var bool: aux1324_BOOL:: var_is_introduced ;
var bool: aux1325_BOOL:: var_is_introduced ;
var bool: aux1326_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1327:: var_is_introduced ;
var bool: aux1328_BOOL:: var_is_introduced ;
var bool: aux1329_BOOL:: var_is_introduced ;
var bool: aux1330_BOOL:: var_is_introduced ;
var bool: aux1331_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1332:: var_is_introduced ;
var bool: aux1333_BOOL:: var_is_introduced ;
var bool: aux1334_BOOL:: var_is_introduced ;
var bool: aux1335_BOOL:: var_is_introduced ;
var bool: aux1336_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1337:: var_is_introduced ;
var bool: aux1338_BOOL:: var_is_introduced ;
var bool: aux1339_BOOL:: var_is_introduced ;
var bool: aux1340_BOOL:: var_is_introduced ;
var bool: aux1341_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1342:: var_is_introduced ;
var bool: aux1343_BOOL:: var_is_introduced ;
var bool: aux1344_BOOL:: var_is_introduced ;
var bool: aux1345_BOOL:: var_is_introduced ;
var bool: aux1346_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1347:: var_is_introduced ;
var bool: aux1348_BOOL:: var_is_introduced ;
var bool: aux1349_BOOL:: var_is_introduced ;
var bool: aux1350_BOOL:: var_is_introduced ;
var bool: aux1351_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1352:: var_is_introduced ;
var bool: aux1353_BOOL:: var_is_introduced ;
var bool: aux1354_BOOL:: var_is_introduced ;
var bool: aux1355_BOOL:: var_is_introduced ;
var bool: aux1356_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1357:: var_is_introduced ;
var bool: aux1358_BOOL:: var_is_introduced ;
var bool: aux1359_BOOL:: var_is_introduced ;
var bool: aux1360_BOOL:: var_is_introduced ;
var bool: aux1361_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1362:: var_is_introduced ;
var bool: aux1363_BOOL:: var_is_introduced ;
var bool: aux1364_BOOL:: var_is_introduced ;
var bool: aux1365_BOOL:: var_is_introduced ;
var bool: aux1366_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1367:: var_is_introduced ;
var bool: aux1368_BOOL:: var_is_introduced ;
var bool: aux1369_BOOL:: var_is_introduced ;
var bool: aux1370_BOOL:: var_is_introduced ;
var bool: aux1371_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1372:: var_is_introduced ;
var bool: aux1373_BOOL:: var_is_introduced ;
var bool: aux1374_BOOL:: var_is_introduced ;
var bool: aux1375_BOOL:: var_is_introduced ;
var bool: aux1376_BOOL:: var_is_introduced ;
var {}: aux1377:: var_is_introduced ;
var bool: aux1378_BOOL:: var_is_introduced ;
var bool: aux1379_BOOL:: var_is_introduced ;
var bool: aux1380_BOOL:: var_is_introduced ;
var bool: aux1381_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1382:: var_is_introduced ;
var bool: aux1383_BOOL:: var_is_introduced ;
var bool: aux1384_BOOL:: var_is_introduced ;
var bool: aux1385_BOOL:: var_is_introduced ;
var bool: aux1386_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1387:: var_is_introduced ;
var bool: aux1388_BOOL:: var_is_introduced ;
var bool: aux1389_BOOL:: var_is_introduced ;
var bool: aux1390_BOOL:: var_is_introduced ;
var bool: aux1391_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1392:: var_is_introduced ;
var bool: aux1393_BOOL:: var_is_introduced ;
var bool: aux1394_BOOL:: var_is_introduced ;
var bool: aux1395_BOOL:: var_is_introduced ;
var bool: aux1396_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1397:: var_is_introduced ;
var bool: aux1398_BOOL:: var_is_introduced ;
var bool: aux1399_BOOL:: var_is_introduced ;
var bool: aux1400_BOOL:: var_is_introduced ;
var bool: aux1401_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1402:: var_is_introduced ;
var bool: aux1403_BOOL:: var_is_introduced ;
var bool: aux1404_BOOL:: var_is_introduced ;
var bool: aux1405_BOOL:: var_is_introduced ;
var bool: aux1406_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1407:: var_is_introduced ;
var bool: aux1408_BOOL:: var_is_introduced ;
var bool: aux1409_BOOL:: var_is_introduced ;
var bool: aux1410_BOOL:: var_is_introduced ;
var bool: aux1411_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1412:: var_is_introduced ;
var bool: aux1413_BOOL:: var_is_introduced ;
var bool: aux1414_BOOL:: var_is_introduced ;
var bool: aux1415_BOOL:: var_is_introduced ;
var bool: aux1416_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1417:: var_is_introduced ;
var bool: aux1418_BOOL:: var_is_introduced ;
var bool: aux1419_BOOL:: var_is_introduced ;
var bool: aux1420_BOOL:: var_is_introduced ;
var bool: aux1421_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1422:: var_is_introduced ;
var bool: aux1423_BOOL:: var_is_introduced ;
var bool: aux1424_BOOL:: var_is_introduced ;
var bool: aux1425_BOOL:: var_is_introduced ;
var bool: aux1426_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1427:: var_is_introduced ;
var bool: aux1428_BOOL:: var_is_introduced ;
var bool: aux1429_BOOL:: var_is_introduced ;
var bool: aux1430_BOOL:: var_is_introduced ;
var bool: aux1431_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1432:: var_is_introduced ;
var bool: aux1433_BOOL:: var_is_introduced ;
var bool: aux1434_BOOL:: var_is_introduced ;
var bool: aux1435_BOOL:: var_is_introduced ;
var bool: aux1436_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1437:: var_is_introduced ;
var bool: aux1438_BOOL:: var_is_introduced ;
var bool: aux1439_BOOL:: var_is_introduced ;
var bool: aux1440_BOOL:: var_is_introduced ;
var bool: aux1441_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1442:: var_is_introduced ;
var bool: aux1443_BOOL:: var_is_introduced ;
var bool: aux1444_BOOL:: var_is_introduced ;
var bool: aux1445_BOOL:: var_is_introduced ;
var bool: aux1446_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1447:: var_is_introduced ;
var bool: aux1448_BOOL:: var_is_introduced ;
var bool: aux1449_BOOL:: var_is_introduced ;
var bool: aux1450_BOOL:: var_is_introduced ;
var bool: aux1451_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1452:: var_is_introduced ;
var bool: aux1453_BOOL:: var_is_introduced ;
var bool: aux1454_BOOL:: var_is_introduced ;
var bool: aux1455_BOOL:: var_is_introduced ;
var bool: aux1456_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1457:: var_is_introduced ;
var bool: aux1458_BOOL:: var_is_introduced ;
var bool: aux1459_BOOL:: var_is_introduced ;
var bool: aux1460_BOOL:: var_is_introduced ;
var bool: aux1461_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1462:: var_is_introduced ;
var bool: aux1463_BOOL:: var_is_introduced ;
var bool: aux1464_BOOL:: var_is_introduced ;
var bool: aux1465_BOOL:: var_is_introduced ;
var bool: aux1466_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1467:: var_is_introduced ;
var bool: aux1468_BOOL:: var_is_introduced ;
var bool: aux1469_BOOL:: var_is_introduced ;
var bool: aux1470_BOOL:: var_is_introduced ;
var bool: aux1471_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1472:: var_is_introduced ;
var bool: aux1473_BOOL:: var_is_introduced ;
var bool: aux1474_BOOL:: var_is_introduced ;
var bool: aux1475_BOOL:: var_is_introduced ;
var bool: aux1476_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1477:: var_is_introduced ;
var bool: aux1478_BOOL:: var_is_introduced ;
var bool: aux1479_BOOL:: var_is_introduced ;
var bool: aux1480_BOOL:: var_is_introduced ;
var bool: aux1481_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1482:: var_is_introduced ;
var bool: aux1483_BOOL:: var_is_introduced ;
var bool: aux1484_BOOL:: var_is_introduced ;
var bool: aux1485_BOOL:: var_is_introduced ;
var bool: aux1486_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1487:: var_is_introduced ;
var bool: aux1488_BOOL:: var_is_introduced ;
var bool: aux1489_BOOL:: var_is_introduced ;
var bool: aux1490_BOOL:: var_is_introduced ;
var bool: aux1491_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1492:: var_is_introduced ;
var bool: aux1493_BOOL:: var_is_introduced ;
var bool: aux1494_BOOL:: var_is_introduced ;
var bool: aux1495_BOOL:: var_is_introduced ;
var bool: aux1496_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1497:: var_is_introduced ;
var bool: aux1498_BOOL:: var_is_introduced ;
var bool: aux1499_BOOL:: var_is_introduced ;
var bool: aux1500_BOOL:: var_is_introduced ;
var bool: aux1501_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1502:: var_is_introduced ;
var bool: aux1503_BOOL:: var_is_introduced ;
var bool: aux1504_BOOL:: var_is_introduced ;
var bool: aux1505_BOOL:: var_is_introduced ;
var bool: aux1506_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1507:: var_is_introduced ;
var bool: aux1508_BOOL:: var_is_introduced ;
var bool: aux1509_BOOL:: var_is_introduced ;
var bool: aux1510_BOOL:: var_is_introduced ;
var bool: aux1511_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1512:: var_is_introduced ;
var bool: aux1513_BOOL:: var_is_introduced ;
var bool: aux1514_BOOL:: var_is_introduced ;
var bool: aux1515_BOOL:: var_is_introduced ;
var bool: aux1516_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1517:: var_is_introduced ;
var bool: aux1518_BOOL:: var_is_introduced ;
var bool: aux1519_BOOL:: var_is_introduced ;
var bool: aux1520_BOOL:: var_is_introduced ;
var bool: aux1521_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1522:: var_is_introduced ;
var bool: aux1523_BOOL:: var_is_introduced ;
var bool: aux1524_BOOL:: var_is_introduced ;
var bool: aux1525_BOOL:: var_is_introduced ;
var bool: aux1526_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1527:: var_is_introduced ;
var bool: aux1528_BOOL:: var_is_introduced ;
var bool: aux1529_BOOL:: var_is_introduced ;
var bool: aux1530_BOOL:: var_is_introduced ;
var bool: aux1531_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1532:: var_is_introduced ;
var bool: aux1533_BOOL:: var_is_introduced ;
var bool: aux1534_BOOL:: var_is_introduced ;
var bool: aux1535_BOOL:: var_is_introduced ;
var bool: aux1536_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1537:: var_is_introduced ;
var bool: aux1538_BOOL:: var_is_introduced ;
var bool: aux1539_BOOL:: var_is_introduced ;
var bool: aux1540_BOOL:: var_is_introduced ;
var bool: aux1541_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1542:: var_is_introduced ;
var bool: aux1543_BOOL:: var_is_introduced ;
var bool: aux1544_BOOL:: var_is_introduced ;
var bool: aux1545_BOOL:: var_is_introduced ;
var bool: aux1546_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1547:: var_is_introduced ;
var bool: aux1548_BOOL:: var_is_introduced ;
var bool: aux1549_BOOL:: var_is_introduced ;
var bool: aux1550_BOOL:: var_is_introduced ;
var bool: aux1551_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1552:: var_is_introduced ;
var bool: aux1553_BOOL:: var_is_introduced ;
var bool: aux1554_BOOL:: var_is_introduced ;
var bool: aux1555_BOOL:: var_is_introduced ;
var bool: aux1556_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1557:: var_is_introduced ;
var bool: aux1558_BOOL:: var_is_introduced ;
var bool: aux1559_BOOL:: var_is_introduced ;
var bool: aux1560_BOOL:: var_is_introduced ;
var bool: aux1561_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1562:: var_is_introduced ;
var bool: aux1563_BOOL:: var_is_introduced ;
var bool: aux1564_BOOL:: var_is_introduced ;
var bool: aux1565_BOOL:: var_is_introduced ;
var bool: aux1566_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1567:: var_is_introduced ;
var bool: aux1568_BOOL:: var_is_introduced ;
var bool: aux1569_BOOL:: var_is_introduced ;
var bool: aux1570_BOOL:: var_is_introduced ;
var bool: aux1571_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1572:: var_is_introduced ;
var bool: aux1573_BOOL:: var_is_introduced ;
var bool: aux1574_BOOL:: var_is_introduced ;
var bool: aux1575_BOOL:: var_is_introduced ;
var bool: aux1576_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1577:: var_is_introduced ;
var bool: aux1578_BOOL:: var_is_introduced ;
var bool: aux1579_BOOL:: var_is_introduced ;
var bool: aux1580_BOOL:: var_is_introduced ;
var bool: aux1581_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1582:: var_is_introduced ;
var bool: aux1583_BOOL:: var_is_introduced ;
var bool: aux1584_BOOL:: var_is_introduced ;
var bool: aux1585_BOOL:: var_is_introduced ;
var bool: aux1586_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1587:: var_is_introduced ;
var bool: aux1588_BOOL:: var_is_introduced ;
var bool: aux1589_BOOL:: var_is_introduced ;
var bool: aux1590_BOOL:: var_is_introduced ;
var bool: aux1591_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1592:: var_is_introduced ;
var bool: aux1593_BOOL:: var_is_introduced ;
var bool: aux1594_BOOL:: var_is_introduced ;
var bool: aux1595_BOOL:: var_is_introduced ;
var bool: aux1596_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1597:: var_is_introduced ;
var bool: aux1598_BOOL:: var_is_introduced ;
var bool: aux1599_BOOL:: var_is_introduced ;
var bool: aux1600_BOOL:: var_is_introduced ;
var bool: aux1601_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1602:: var_is_introduced ;
var bool: aux1603_BOOL:: var_is_introduced ;
var bool: aux1604_BOOL:: var_is_introduced ;
var bool: aux1605_BOOL:: var_is_introduced ;
var bool: aux1606_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1607:: var_is_introduced ;
var bool: aux1608_BOOL:: var_is_introduced ;
var bool: aux1609_BOOL:: var_is_introduced ;
var bool: aux1610_BOOL:: var_is_introduced ;
var bool: aux1611_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1612:: var_is_introduced ;
var bool: aux1613_BOOL:: var_is_introduced ;
var bool: aux1614_BOOL:: var_is_introduced ;
var bool: aux1615_BOOL:: var_is_introduced ;
var bool: aux1616_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1617:: var_is_introduced ;
var bool: aux1618_BOOL:: var_is_introduced ;
var bool: aux1619_BOOL:: var_is_introduced ;
var bool: aux1620_BOOL:: var_is_introduced ;
var bool: aux1621_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1622:: var_is_introduced ;
var bool: aux1623_BOOL:: var_is_introduced ;
var bool: aux1624_BOOL:: var_is_introduced ;
var bool: aux1625_BOOL:: var_is_introduced ;
var bool: aux1626_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1627:: var_is_introduced ;
var bool: aux1628_BOOL:: var_is_introduced ;
var bool: aux1629_BOOL:: var_is_introduced ;
var bool: aux1630_BOOL:: var_is_introduced ;
var bool: aux1631_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1632:: var_is_introduced ;
var bool: aux1633_BOOL:: var_is_introduced ;
var bool: aux1634_BOOL:: var_is_introduced ;
var bool: aux1635_BOOL:: var_is_introduced ;
var bool: aux1636_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1637:: var_is_introduced ;
var bool: aux1638_BOOL:: var_is_introduced ;
var bool: aux1639_BOOL:: var_is_introduced ;
var bool: aux1640_BOOL:: var_is_introduced ;
var bool: aux1641_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1642:: var_is_introduced ;
var bool: aux1643_BOOL:: var_is_introduced ;
var bool: aux1644_BOOL:: var_is_introduced ;
var bool: aux1645_BOOL:: var_is_introduced ;
var bool: aux1646_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,386,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1647:: var_is_introduced ;
var bool: aux1648_BOOL:: var_is_introduced ;
var bool: aux1649_BOOL:: var_is_introduced ;
var bool: aux1650_BOOL:: var_is_introduced ;
var bool: aux1651_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1652:: var_is_introduced ;
var bool: aux1653_BOOL:: var_is_introduced ;
var bool: aux1654_BOOL:: var_is_introduced ;
var bool: aux1655_BOOL:: var_is_introduced ;
var bool: aux1656_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1657:: var_is_introduced ;
var bool: aux1658_BOOL:: var_is_introduced ;
var bool: aux1659_BOOL:: var_is_introduced ;
var bool: aux1660_BOOL:: var_is_introduced ;
var bool: aux1661_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1662:: var_is_introduced ;
var bool: aux1663_BOOL:: var_is_introduced ;
var bool: aux1664_BOOL:: var_is_introduced ;
var bool: aux1665_BOOL:: var_is_introduced ;
var bool: aux1666_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1667:: var_is_introduced ;
var bool: aux1668_BOOL:: var_is_introduced ;
var bool: aux1669_BOOL:: var_is_introduced ;
var bool: aux1670_BOOL:: var_is_introduced ;
var bool: aux1671_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1672:: var_is_introduced ;
var bool: aux1673_BOOL:: var_is_introduced ;
var bool: aux1674_BOOL:: var_is_introduced ;
var bool: aux1675_BOOL:: var_is_introduced ;
var bool: aux1676_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1677:: var_is_introduced ;
var bool: aux1678_BOOL:: var_is_introduced ;
var bool: aux1679_BOOL:: var_is_introduced ;
var bool: aux1680_BOOL:: var_is_introduced ;
var bool: aux1681_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1682:: var_is_introduced ;
var bool: aux1683_BOOL:: var_is_introduced ;
var bool: aux1684_BOOL:: var_is_introduced ;
var bool: aux1685_BOOL:: var_is_introduced ;
var bool: aux1686_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1687:: var_is_introduced ;
var bool: aux1688_BOOL:: var_is_introduced ;
var bool: aux1689_BOOL:: var_is_introduced ;
var bool: aux1690_BOOL:: var_is_introduced ;
var bool: aux1691_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1692:: var_is_introduced ;
var bool: aux1693_BOOL:: var_is_introduced ;
var bool: aux1694_BOOL:: var_is_introduced ;
var bool: aux1695_BOOL:: var_is_introduced ;
var bool: aux1696_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1697:: var_is_introduced ;
var bool: aux1698_BOOL:: var_is_introduced ;
var bool: aux1699_BOOL:: var_is_introduced ;
var bool: aux1700_BOOL:: var_is_introduced ;
var bool: aux1701_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1702:: var_is_introduced ;
var bool: aux1703_BOOL:: var_is_introduced ;
var bool: aux1704_BOOL:: var_is_introduced ;
var bool: aux1705_BOOL:: var_is_introduced ;
var bool: aux1706_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1707:: var_is_introduced ;
var bool: aux1708_BOOL:: var_is_introduced ;
var bool: aux1709_BOOL:: var_is_introduced ;
var bool: aux1710_BOOL:: var_is_introduced ;
var bool: aux1711_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1712:: var_is_introduced ;
var bool: aux1713_BOOL:: var_is_introduced ;
var bool: aux1714_BOOL:: var_is_introduced ;
var bool: aux1715_BOOL:: var_is_introduced ;
var bool: aux1716_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1717:: var_is_introduced ;
var bool: aux1718_BOOL:: var_is_introduced ;
var bool: aux1719_BOOL:: var_is_introduced ;
var bool: aux1720_BOOL:: var_is_introduced ;
var bool: aux1721_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1722:: var_is_introduced ;
var bool: aux1723_BOOL:: var_is_introduced ;
var bool: aux1724_BOOL:: var_is_introduced ;
var bool: aux1725_BOOL:: var_is_introduced ;
var bool: aux1726_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1727:: var_is_introduced ;
var bool: aux1728_BOOL:: var_is_introduced ;
var bool: aux1729_BOOL:: var_is_introduced ;
var bool: aux1730_BOOL:: var_is_introduced ;
var bool: aux1731_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1732:: var_is_introduced ;
var bool: aux1733_BOOL:: var_is_introduced ;
var bool: aux1734_BOOL:: var_is_introduced ;
var bool: aux1735_BOOL:: var_is_introduced ;
var bool: aux1736_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,387,388,389,390,391,392,393,394,395,396,397,398,399}: aux1737:: var_is_introduced ;
var bool: aux1738_BOOL:: var_is_introduced ;
var bool: aux1739_BOOL:: var_is_introduced ;
var bool: aux1740_BOOL:: var_is_introduced ;
var bool: aux1741_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399}: aux1742:: var_is_introduced ;
var bool: aux1743_BOOL:: var_is_introduced ;
var bool: aux1744_BOOL:: var_is_introduced ;
var bool: aux1745_BOOL:: var_is_introduced ;
var bool: aux1746_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399}: aux1747:: var_is_introduced ;
var bool: aux1748_BOOL:: var_is_introduced ;
var bool: aux1749_BOOL:: var_is_introduced ;
var bool: aux1750_BOOL:: var_is_introduced ;
var bool: aux1751_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399}: aux1752:: var_is_introduced ;
var bool: aux1753_BOOL:: var_is_introduced ;
var bool: aux1754_BOOL:: var_is_introduced ;
var bool: aux1755_BOOL:: var_is_introduced ;
var bool: aux1756_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399}: aux1757:: var_is_introduced ;
var bool: aux1758_BOOL:: var_is_introduced ;
var bool: aux1759_BOOL:: var_is_introduced ;
var bool: aux1760_BOOL:: var_is_introduced ;
var bool: aux1761_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399}: aux1762:: var_is_introduced ;
var bool: aux1763_BOOL:: var_is_introduced ;
var bool: aux1764_BOOL:: var_is_introduced ;
var bool: aux1765_BOOL:: var_is_introduced ;
var bool: aux1766_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399}: aux1767:: var_is_introduced ;
var bool: aux1768_BOOL:: var_is_introduced ;
var bool: aux1769_BOOL:: var_is_introduced ;
var bool: aux1770_BOOL:: var_is_introduced ;
var bool: aux1771_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399}: aux1772:: var_is_introduced ;
var bool: aux1773_BOOL:: var_is_introduced ;
var bool: aux1774_BOOL:: var_is_introduced ;
var bool: aux1775_BOOL:: var_is_introduced ;
var bool: aux1776_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399}: aux1777:: var_is_introduced ;
var bool: aux1778_BOOL:: var_is_introduced ;
var bool: aux1779_BOOL:: var_is_introduced ;
var bool: aux1780_BOOL:: var_is_introduced ;
var bool: aux1781_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399}: aux1782:: var_is_introduced ;
var bool: aux1783_BOOL:: var_is_introduced ;
var bool: aux1784_BOOL:: var_is_introduced ;
var bool: aux1785_BOOL:: var_is_introduced ;
var bool: aux1786_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399}: aux1787:: var_is_introduced ;
var bool: aux1788_BOOL:: var_is_introduced ;
var bool: aux1789_BOOL:: var_is_introduced ;
var bool: aux1790_BOOL:: var_is_introduced ;
var bool: aux1791_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399}: aux1792:: var_is_introduced ;
var bool: aux1793_BOOL:: var_is_introduced ;
var bool: aux1794_BOOL:: var_is_introduced ;
var bool: aux1795_BOOL:: var_is_introduced ;
var bool: aux1796_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399}: aux1797:: var_is_introduced ;
var bool: aux1798_BOOL:: var_is_introduced ;
var bool: aux1799_BOOL:: var_is_introduced ;
var bool: aux1800_BOOL:: var_is_introduced ;
var bool: aux1801_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399}: aux1802:: var_is_introduced ;
var bool: aux1803_BOOL:: var_is_introduced ;
var bool: aux1804_BOOL:: var_is_introduced ;
var bool: aux1805_BOOL:: var_is_introduced ;
var bool: aux1806_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399}: aux1807:: var_is_introduced ;
var bool: aux1808_BOOL:: var_is_introduced ;
var bool: aux1809_BOOL:: var_is_introduced ;
var bool: aux1810_BOOL:: var_is_introduced ;
var bool: aux1811_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399}: aux1812:: var_is_introduced ;
var bool: aux1813_BOOL:: var_is_introduced ;
var bool: aux1814_BOOL:: var_is_introduced ;
var bool: aux1815_BOOL:: var_is_introduced ;
var bool: aux1816_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399}: aux1817:: var_is_introduced ;
var bool: aux1818_BOOL:: var_is_introduced ;
var bool: aux1819_BOOL:: var_is_introduced ;
var bool: aux1820_BOOL:: var_is_introduced ;
var bool: aux1821_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399}: aux1822:: var_is_introduced ;
var bool: aux1823_BOOL:: var_is_introduced ;
var bool: aux1824_BOOL:: var_is_introduced ;
var bool: aux1825_BOOL:: var_is_introduced ;
var bool: aux1826_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,388,389,390,391,392,393,394,395,396,397,398,399}: aux1827:: var_is_introduced ;
var bool: aux1828_BOOL:: var_is_introduced ;
var bool: aux1829_BOOL:: var_is_introduced ;
var bool: aux1830_BOOL:: var_is_introduced ;
var bool: aux1831_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399}: aux1832:: var_is_introduced ;
var bool: aux1833_BOOL:: var_is_introduced ;
var bool: aux1834_BOOL:: var_is_introduced ;
var bool: aux1835_BOOL:: var_is_introduced ;
var bool: aux1836_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399}: aux1837:: var_is_introduced ;
var bool: aux1838_BOOL:: var_is_introduced ;
var bool: aux1839_BOOL:: var_is_introduced ;
var bool: aux1840_BOOL:: var_is_introduced ;
var bool: aux1841_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399}: aux1842:: var_is_introduced ;
var bool: aux1843_BOOL:: var_is_introduced ;
var bool: aux1844_BOOL:: var_is_introduced ;
var bool: aux1845_BOOL:: var_is_introduced ;
var bool: aux1846_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399}: aux1847:: var_is_introduced ;
var bool: aux1848_BOOL:: var_is_introduced ;
var bool: aux1849_BOOL:: var_is_introduced ;
var bool: aux1850_BOOL:: var_is_introduced ;
var bool: aux1851_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399}: aux1852:: var_is_introduced ;
var bool: aux1853_BOOL:: var_is_introduced ;
var bool: aux1854_BOOL:: var_is_introduced ;
var bool: aux1855_BOOL:: var_is_introduced ;
var bool: aux1856_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399}: aux1857:: var_is_introduced ;
var bool: aux1858_BOOL:: var_is_introduced ;
var bool: aux1859_BOOL:: var_is_introduced ;
var bool: aux1860_BOOL:: var_is_introduced ;
var bool: aux1861_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399}: aux1862:: var_is_introduced ;
var bool: aux1863_BOOL:: var_is_introduced ;
var bool: aux1864_BOOL:: var_is_introduced ;
var bool: aux1865_BOOL:: var_is_introduced ;
var bool: aux1866_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399}: aux1867:: var_is_introduced ;
var bool: aux1868_BOOL:: var_is_introduced ;
var bool: aux1869_BOOL:: var_is_introduced ;
var bool: aux1870_BOOL:: var_is_introduced ;
var bool: aux1871_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399}: aux1872:: var_is_introduced ;
var bool: aux1873_BOOL:: var_is_introduced ;
var bool: aux1874_BOOL:: var_is_introduced ;
var bool: aux1875_BOOL:: var_is_introduced ;
var bool: aux1876_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399}: aux1877:: var_is_introduced ;
var bool: aux1878_BOOL:: var_is_introduced ;
var bool: aux1879_BOOL:: var_is_introduced ;
var bool: aux1880_BOOL:: var_is_introduced ;
var bool: aux1881_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399}: aux1882:: var_is_introduced ;
var bool: aux1883_BOOL:: var_is_introduced ;
var bool: aux1884_BOOL:: var_is_introduced ;
var bool: aux1885_BOOL:: var_is_introduced ;
var bool: aux1886_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399}: aux1887:: var_is_introduced ;
var bool: aux1888_BOOL:: var_is_introduced ;
var bool: aux1889_BOOL:: var_is_introduced ;
var bool: aux1890_BOOL:: var_is_introduced ;
var bool: aux1891_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399}: aux1892:: var_is_introduced ;
var bool: aux1893_BOOL:: var_is_introduced ;
var bool: aux1894_BOOL:: var_is_introduced ;
var bool: aux1895_BOOL:: var_is_introduced ;
var bool: aux1896_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399}: aux1897:: var_is_introduced ;
var bool: aux1898_BOOL:: var_is_introduced ;
var bool: aux1899_BOOL:: var_is_introduced ;
var bool: aux1900_BOOL:: var_is_introduced ;
var bool: aux1901_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399}: aux1902:: var_is_introduced ;
var bool: aux1903_BOOL:: var_is_introduced ;
var bool: aux1904_BOOL:: var_is_introduced ;
var bool: aux1905_BOOL:: var_is_introduced ;
var bool: aux1906_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399}: aux1907:: var_is_introduced ;
var bool: aux1908_BOOL:: var_is_introduced ;
var bool: aux1909_BOOL:: var_is_introduced ;
var bool: aux1910_BOOL:: var_is_introduced ;
var bool: aux1911_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399}: aux1912:: var_is_introduced ;
var bool: aux1913_BOOL:: var_is_introduced ;
var bool: aux1914_BOOL:: var_is_introduced ;
var bool: aux1915_BOOL:: var_is_introduced ;
var bool: aux1916_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,390,391,392,393,394,395,396,397,398,399}: aux1917:: var_is_introduced ;
var bool: aux1918_BOOL:: var_is_introduced ;
var bool: aux1919_BOOL:: var_is_introduced ;
var bool: aux1920_BOOL:: var_is_introduced ;
var bool: aux1921_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399}: aux1922:: var_is_introduced ;
var bool: aux1923_BOOL:: var_is_introduced ;
var bool: aux1924_BOOL:: var_is_introduced ;
var bool: aux1925_BOOL:: var_is_introduced ;
var bool: aux1926_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399}: aux1927:: var_is_introduced ;
var bool: aux1928_BOOL:: var_is_introduced ;
var bool: aux1929_BOOL:: var_is_introduced ;
var bool: aux1930_BOOL:: var_is_introduced ;
var bool: aux1931_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399}: aux1932:: var_is_introduced ;
var bool: aux1933_BOOL:: var_is_introduced ;
var bool: aux1934_BOOL:: var_is_introduced ;
var bool: aux1935_BOOL:: var_is_introduced ;
var bool: aux1936_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399}: aux1937:: var_is_introduced ;
var bool: aux1938_BOOL:: var_is_introduced ;
var bool: aux1939_BOOL:: var_is_introduced ;
var bool: aux1940_BOOL:: var_is_introduced ;
var bool: aux1941_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399}: aux1942:: var_is_introduced ;
var bool: aux1943_BOOL:: var_is_introduced ;
var bool: aux1944_BOOL:: var_is_introduced ;
var bool: aux1945_BOOL:: var_is_introduced ;
var bool: aux1946_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399}: aux1947:: var_is_introduced ;
var bool: aux1948_BOOL:: var_is_introduced ;
var bool: aux1949_BOOL:: var_is_introduced ;
var bool: aux1950_BOOL:: var_is_introduced ;
var bool: aux1951_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399}: aux1952:: var_is_introduced ;
var bool: aux1953_BOOL:: var_is_introduced ;
var bool: aux1954_BOOL:: var_is_introduced ;
var bool: aux1955_BOOL:: var_is_introduced ;
var bool: aux1956_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399}: aux1957:: var_is_introduced ;
var bool: aux1958_BOOL:: var_is_introduced ;
var bool: aux1959_BOOL:: var_is_introduced ;
var bool: aux1960_BOOL:: var_is_introduced ;
var bool: aux1961_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399}: aux1962:: var_is_introduced ;
var bool: aux1963_BOOL:: var_is_introduced ;
var bool: aux1964_BOOL:: var_is_introduced ;
var bool: aux1965_BOOL:: var_is_introduced ;
var bool: aux1966_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399}: aux1967:: var_is_introduced ;
var bool: aux1968_BOOL:: var_is_introduced ;
var bool: aux1969_BOOL:: var_is_introduced ;
var bool: aux1970_BOOL:: var_is_introduced ;
var bool: aux1971_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399}: aux1972:: var_is_introduced ;
var bool: aux1973_BOOL:: var_is_introduced ;
var bool: aux1974_BOOL:: var_is_introduced ;
var bool: aux1975_BOOL:: var_is_introduced ;
var bool: aux1976_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399}: aux1977:: var_is_introduced ;
var bool: aux1978_BOOL:: var_is_introduced ;
var bool: aux1979_BOOL:: var_is_introduced ;
var bool: aux1980_BOOL:: var_is_introduced ;
var bool: aux1981_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399}: aux1982:: var_is_introduced ;
var bool: aux1983_BOOL:: var_is_introduced ;
var bool: aux1984_BOOL:: var_is_introduced ;
var bool: aux1985_BOOL:: var_is_introduced ;
var bool: aux1986_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399}: aux1987:: var_is_introduced ;
var bool: aux1988_BOOL:: var_is_introduced ;
var bool: aux1989_BOOL:: var_is_introduced ;
var bool: aux1990_BOOL:: var_is_introduced ;
var bool: aux1991_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399}: aux1992:: var_is_introduced ;
var bool: aux1993_BOOL:: var_is_introduced ;
var bool: aux1994_BOOL:: var_is_introduced ;
var bool: aux1995_BOOL:: var_is_introduced ;
var bool: aux1996_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399}: aux1997:: var_is_introduced ;
var bool: aux1998_BOOL:: var_is_introduced ;
var bool: aux1999_BOOL:: var_is_introduced ;
var bool: aux2000_BOOL:: var_is_introduced ;
var bool: aux2001_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399}: aux2002:: var_is_introduced ;
var bool: aux2003_BOOL:: var_is_introduced ;
var bool: aux2004_BOOL:: var_is_introduced ;
var bool: aux2005_BOOL:: var_is_introduced ;
var bool: aux2006_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,181,182,183,184,185,186,187,188,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,396,397,398,399}: aux2007:: var_is_introduced ;
var bool: aux2008_BOOL:: var_is_introduced ;
var bool: aux2009_BOOL:: var_is_introduced ;
var bool: aux2010_BOOL:: var_is_introduced ;
var bool: aux2011_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399}: aux2012:: var_is_introduced ;
var bool: aux2013_BOOL:: var_is_introduced ;
var bool: aux2014_BOOL:: var_is_introduced ;
var bool: aux2015_BOOL:: var_is_introduced ;
var bool: aux2016_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399}: aux2017:: var_is_introduced ;
var bool: aux2018_BOOL:: var_is_introduced ;
var bool: aux2019_BOOL:: var_is_introduced ;
var bool: aux2020_BOOL:: var_is_introduced ;
var bool: aux2021_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399}: aux2022:: var_is_introduced ;
var bool: aux2023_BOOL:: var_is_introduced ;
var bool: aux2024_BOOL:: var_is_introduced ;
var bool: aux2025_BOOL:: var_is_introduced ;
var bool: aux2026_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399}: aux2027:: var_is_introduced ;
var bool: aux2028_BOOL:: var_is_introduced ;
var bool: aux2029_BOOL:: var_is_introduced ;
var bool: aux2030_BOOL:: var_is_introduced ;
var bool: aux2031_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399}: aux2032:: var_is_introduced ;
var bool: aux2033_BOOL:: var_is_introduced ;
var bool: aux2034_BOOL:: var_is_introduced ;
var bool: aux2035_BOOL:: var_is_introduced ;
var bool: aux2036_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399}: aux2037:: var_is_introduced ;
var bool: aux2038_BOOL:: var_is_introduced ;
var bool: aux2039_BOOL:: var_is_introduced ;
var bool: aux2040_BOOL:: var_is_introduced ;
var bool: aux2041_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399}: aux2042:: var_is_introduced ;
var bool: aux2043_BOOL:: var_is_introduced ;
var bool: aux2044_BOOL:: var_is_introduced ;
var bool: aux2045_BOOL:: var_is_introduced ;
var bool: aux2046_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399}: aux2047:: var_is_introduced ;
var bool: aux2048_BOOL:: var_is_introduced ;
var bool: aux2049_BOOL:: var_is_introduced ;
var bool: aux2050_BOOL:: var_is_introduced ;
var bool: aux2051_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399}: aux2052:: var_is_introduced ;
var bool: aux2053_BOOL:: var_is_introduced ;
var bool: aux2054_BOOL:: var_is_introduced ;
var bool: aux2055_BOOL:: var_is_introduced ;
var bool: aux2056_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399}: aux2057:: var_is_introduced ;
var bool: aux2058_BOOL:: var_is_introduced ;
var bool: aux2059_BOOL:: var_is_introduced ;
var bool: aux2060_BOOL:: var_is_introduced ;
var bool: aux2061_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399}: aux2062:: var_is_introduced ;
var bool: aux2063_BOOL:: var_is_introduced ;
var bool: aux2064_BOOL:: var_is_introduced ;
var bool: aux2065_BOOL:: var_is_introduced ;
var bool: aux2066_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399}: aux2067:: var_is_introduced ;
var bool: aux2068_BOOL:: var_is_introduced ;
var bool: aux2069_BOOL:: var_is_introduced ;
var bool: aux2070_BOOL:: var_is_introduced ;
var bool: aux2071_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399}: aux2072:: var_is_introduced ;
var bool: aux2073_BOOL:: var_is_introduced ;
var bool: aux2074_BOOL:: var_is_introduced ;
var bool: aux2075_BOOL:: var_is_introduced ;
var bool: aux2076_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399}: aux2077:: var_is_introduced ;
var bool: aux2078_BOOL:: var_is_introduced ;
var bool: aux2079_BOOL:: var_is_introduced ;
var bool: aux2080_BOOL:: var_is_introduced ;
var bool: aux2081_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399}: aux2082:: var_is_introduced ;
var bool: aux2083_BOOL:: var_is_introduced ;
var bool: aux2084_BOOL:: var_is_introduced ;
var bool: aux2085_BOOL:: var_is_introduced ;
var bool: aux2086_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399}: aux2087:: var_is_introduced ;
var bool: aux2088_BOOL:: var_is_introduced ;
var bool: aux2089_BOOL:: var_is_introduced ;
var bool: aux2090_BOOL:: var_is_introduced ;
var bool: aux2091_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399}: aux2092:: var_is_introduced ;
var bool: aux2093_BOOL:: var_is_introduced ;
var bool: aux2094_BOOL:: var_is_introduced ;
var bool: aux2095_BOOL:: var_is_introduced ;
var bool: aux2096_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,201,202,203,204,205,206,207,208,209,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,391,392,393,394,395,396,397,398,399}: aux2097:: var_is_introduced ;
var bool: aux2098_BOOL:: var_is_introduced ;
var bool: aux2099_BOOL:: var_is_introduced ;
var bool: aux2100_BOOL:: var_is_introduced ;
var bool: aux2101_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399}: aux2102:: var_is_introduced ;
var bool: aux2103_BOOL:: var_is_introduced ;
var bool: aux2104_BOOL:: var_is_introduced ;
var bool: aux2105_BOOL:: var_is_introduced ;
var bool: aux2106_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399}: aux2107:: var_is_introduced ;
var bool: aux2108_BOOL:: var_is_introduced ;
var bool: aux2109_BOOL:: var_is_introduced ;
var bool: aux2110_BOOL:: var_is_introduced ;
var bool: aux2111_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399}: aux2112:: var_is_introduced ;
var bool: aux2113_BOOL:: var_is_introduced ;
var bool: aux2114_BOOL:: var_is_introduced ;
var bool: aux2115_BOOL:: var_is_introduced ;
var bool: aux2116_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399}: aux2117:: var_is_introduced ;
var bool: aux2118_BOOL:: var_is_introduced ;
var bool: aux2119_BOOL:: var_is_introduced ;
var bool: aux2120_BOOL:: var_is_introduced ;
var bool: aux2121_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399}: aux2122:: var_is_introduced ;
var bool: aux2123_BOOL:: var_is_introduced ;
var bool: aux2124_BOOL:: var_is_introduced ;
var bool: aux2125_BOOL:: var_is_introduced ;
var bool: aux2126_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399}: aux2127:: var_is_introduced ;
var bool: aux2128_BOOL:: var_is_introduced ;
var bool: aux2129_BOOL:: var_is_introduced ;
var bool: aux2130_BOOL:: var_is_introduced ;
var bool: aux2131_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399}: aux2132:: var_is_introduced ;
var bool: aux2133_BOOL:: var_is_introduced ;
var bool: aux2134_BOOL:: var_is_introduced ;
var bool: aux2135_BOOL:: var_is_introduced ;
var bool: aux2136_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399}: aux2137:: var_is_introduced ;
var bool: aux2138_BOOL:: var_is_introduced ;
var bool: aux2139_BOOL:: var_is_introduced ;
var bool: aux2140_BOOL:: var_is_introduced ;
var bool: aux2141_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399}: aux2142:: var_is_introduced ;
var bool: aux2143_BOOL:: var_is_introduced ;
var bool: aux2144_BOOL:: var_is_introduced ;
var bool: aux2145_BOOL:: var_is_introduced ;
var bool: aux2146_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399}: aux2147:: var_is_introduced ;
var bool: aux2148_BOOL:: var_is_introduced ;
var bool: aux2149_BOOL:: var_is_introduced ;
var bool: aux2150_BOOL:: var_is_introduced ;
var bool: aux2151_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399}: aux2152:: var_is_introduced ;
var bool: aux2153_BOOL:: var_is_introduced ;
var bool: aux2154_BOOL:: var_is_introduced ;
var bool: aux2155_BOOL:: var_is_introduced ;
var bool: aux2156_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399}: aux2157:: var_is_introduced ;
var bool: aux2158_BOOL:: var_is_introduced ;
var bool: aux2159_BOOL:: var_is_introduced ;
var bool: aux2160_BOOL:: var_is_introduced ;
var bool: aux2161_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399}: aux2162:: var_is_introduced ;
var bool: aux2163_BOOL:: var_is_introduced ;
var bool: aux2164_BOOL:: var_is_introduced ;
var bool: aux2165_BOOL:: var_is_introduced ;
var bool: aux2166_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399}: aux2167:: var_is_introduced ;
var bool: aux2168_BOOL:: var_is_introduced ;
var bool: aux2169_BOOL:: var_is_introduced ;
var bool: aux2170_BOOL:: var_is_introduced ;
var bool: aux2171_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399}: aux2172:: var_is_introduced ;
var bool: aux2173_BOOL:: var_is_introduced ;
var bool: aux2174_BOOL:: var_is_introduced ;
var bool: aux2175_BOOL:: var_is_introduced ;
var bool: aux2176_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399}: aux2177:: var_is_introduced ;
var bool: aux2178_BOOL:: var_is_introduced ;
var bool: aux2179_BOOL:: var_is_introduced ;
var bool: aux2180_BOOL:: var_is_introduced ;
var bool: aux2181_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399}: aux2182:: var_is_introduced ;
var bool: aux2183_BOOL:: var_is_introduced ;
var bool: aux2184_BOOL:: var_is_introduced ;
var bool: aux2185_BOOL:: var_is_introduced ;
var bool: aux2186_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195,196,197,198,199,200,221,222,223,224,225,226,227,228,229,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,392,393,394,395,396,397,398,399}: aux2187:: var_is_introduced ;
var bool: aux2188_BOOL:: var_is_introduced ;
var bool: aux2189_BOOL:: var_is_introduced ;
var bool: aux2190_BOOL:: var_is_introduced ;
var bool: aux2191_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,220,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399}: aux2192:: var_is_introduced ;
var bool: aux2193_BOOL:: var_is_introduced ;
var bool: aux2194_BOOL:: var_is_introduced ;
var bool: aux2195_BOOL:: var_is_introduced ;
var bool: aux2196_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,220,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399}: aux2197:: var_is_introduced ;
var bool: aux2198_BOOL:: var_is_introduced ;
var bool: aux2199_BOOL:: var_is_introduced ;
var bool: aux2200_BOOL:: var_is_introduced ;
var bool: aux2201_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,220,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399}: aux2202:: var_is_introduced ;
var bool: aux2203_BOOL:: var_is_introduced ;
var bool: aux2204_BOOL:: var_is_introduced ;
var bool: aux2205_BOOL:: var_is_introduced ;
var bool: aux2206_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,220,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399}: aux2207:: var_is_introduced ;
var bool: aux2208_BOOL:: var_is_introduced ;
var bool: aux2209_BOOL:: var_is_introduced ;
var bool: aux2210_BOOL:: var_is_introduced ;
var bool: aux2211_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,220,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399}: aux2212:: var_is_introduced ;
var bool: aux2213_BOOL:: var_is_introduced ;
var bool: aux2214_BOOL:: var_is_introduced ;
var bool: aux2215_BOOL:: var_is_introduced ;
var bool: aux2216_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,220,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399}: aux2217:: var_is_introduced ;
var bool: aux2218_BOOL:: var_is_introduced ;
var bool: aux2219_BOOL:: var_is_introduced ;
var bool: aux2220_BOOL:: var_is_introduced ;
var bool: aux2221_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,220,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399}: aux2222:: var_is_introduced ;
var bool: aux2223_BOOL:: var_is_introduced ;
var bool: aux2224_BOOL:: var_is_introduced ;
var bool: aux2225_BOOL:: var_is_introduced ;
var bool: aux2226_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,220,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399}: aux2227:: var_is_introduced ;
var bool: aux2228_BOOL:: var_is_introduced ;
var bool: aux2229_BOOL:: var_is_introduced ;
var bool: aux2230_BOOL:: var_is_introduced ;
var bool: aux2231_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,220,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399}: aux2232:: var_is_introduced ;
var bool: aux2233_BOOL:: var_is_introduced ;
var bool: aux2234_BOOL:: var_is_introduced ;
var bool: aux2235_BOOL:: var_is_introduced ;
var bool: aux2236_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,220,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399}: aux2237:: var_is_introduced ;
var bool: aux2238_BOOL:: var_is_introduced ;
var bool: aux2239_BOOL:: var_is_introduced ;
var bool: aux2240_BOOL:: var_is_introduced ;
var bool: aux2241_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,220,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399}: aux2242:: var_is_introduced ;
var bool: aux2243_BOOL:: var_is_introduced ;
var bool: aux2244_BOOL:: var_is_introduced ;
var bool: aux2245_BOOL:: var_is_introduced ;
var bool: aux2246_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,220,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399}: aux2247:: var_is_introduced ;
var bool: aux2248_BOOL:: var_is_introduced ;
var bool: aux2249_BOOL:: var_is_introduced ;
var bool: aux2250_BOOL:: var_is_introduced ;
var bool: aux2251_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,220,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399}: aux2252:: var_is_introduced ;
var bool: aux2253_BOOL:: var_is_introduced ;
var bool: aux2254_BOOL:: var_is_introduced ;
var bool: aux2255_BOOL:: var_is_introduced ;
var bool: aux2256_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,220,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399}: aux2257:: var_is_introduced ;
var bool: aux2258_BOOL:: var_is_introduced ;
var bool: aux2259_BOOL:: var_is_introduced ;
var bool: aux2260_BOOL:: var_is_introduced ;
var bool: aux2261_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,220,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399}: aux2262:: var_is_introduced ;
var bool: aux2263_BOOL:: var_is_introduced ;
var bool: aux2264_BOOL:: var_is_introduced ;
var bool: aux2265_BOOL:: var_is_introduced ;
var bool: aux2266_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,220,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399}: aux2267:: var_is_introduced ;
var bool: aux2268_BOOL:: var_is_introduced ;
var bool: aux2269_BOOL:: var_is_introduced ;
var bool: aux2270_BOOL:: var_is_introduced ;
var bool: aux2271_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,220,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399}: aux2272:: var_is_introduced ;
var bool: aux2273_BOOL:: var_is_introduced ;
var bool: aux2274_BOOL:: var_is_introduced ;
var bool: aux2275_BOOL:: var_is_introduced ;
var bool: aux2276_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,213,214,215,216,217,218,219,220,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,393,394,395,396,397,398,399}: aux2277:: var_is_introduced ;
var bool: aux2278_BOOL:: var_is_introduced ;
var bool: aux2279_BOOL:: var_is_introduced ;
var bool: aux2280_BOOL:: var_is_introduced ;
var bool: aux2281_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399}: aux2282:: var_is_introduced ;
var bool: aux2283_BOOL:: var_is_introduced ;
var bool: aux2284_BOOL:: var_is_introduced ;
var bool: aux2285_BOOL:: var_is_introduced ;
var bool: aux2286_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399}: aux2287:: var_is_introduced ;
var bool: aux2288_BOOL:: var_is_introduced ;
var bool: aux2289_BOOL:: var_is_introduced ;
var bool: aux2290_BOOL:: var_is_introduced ;
var bool: aux2291_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399}: aux2292:: var_is_introduced ;
var bool: aux2293_BOOL:: var_is_introduced ;
var bool: aux2294_BOOL:: var_is_introduced ;
var bool: aux2295_BOOL:: var_is_introduced ;
var bool: aux2296_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399}: aux2297:: var_is_introduced ;
var bool: aux2298_BOOL:: var_is_introduced ;
var bool: aux2299_BOOL:: var_is_introduced ;
var bool: aux2300_BOOL:: var_is_introduced ;
var bool: aux2301_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399}: aux2302:: var_is_introduced ;
var bool: aux2303_BOOL:: var_is_introduced ;
var bool: aux2304_BOOL:: var_is_introduced ;
var bool: aux2305_BOOL:: var_is_introduced ;
var bool: aux2306_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399}: aux2307:: var_is_introduced ;
var bool: aux2308_BOOL:: var_is_introduced ;
var bool: aux2309_BOOL:: var_is_introduced ;
var bool: aux2310_BOOL:: var_is_introduced ;
var bool: aux2311_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399}: aux2312:: var_is_introduced ;
var bool: aux2313_BOOL:: var_is_introduced ;
var bool: aux2314_BOOL:: var_is_introduced ;
var bool: aux2315_BOOL:: var_is_introduced ;
var bool: aux2316_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399}: aux2317:: var_is_introduced ;
var bool: aux2318_BOOL:: var_is_introduced ;
var bool: aux2319_BOOL:: var_is_introduced ;
var bool: aux2320_BOOL:: var_is_introduced ;
var bool: aux2321_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399}: aux2322:: var_is_introduced ;
var bool: aux2323_BOOL:: var_is_introduced ;
var bool: aux2324_BOOL:: var_is_introduced ;
var bool: aux2325_BOOL:: var_is_introduced ;
var bool: aux2326_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399}: aux2327:: var_is_introduced ;
var bool: aux2328_BOOL:: var_is_introduced ;
var bool: aux2329_BOOL:: var_is_introduced ;
var bool: aux2330_BOOL:: var_is_introduced ;
var bool: aux2331_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399}: aux2332:: var_is_introduced ;
var bool: aux2333_BOOL:: var_is_introduced ;
var bool: aux2334_BOOL:: var_is_introduced ;
var bool: aux2335_BOOL:: var_is_introduced ;
var bool: aux2336_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399}: aux2337:: var_is_introduced ;
var bool: aux2338_BOOL:: var_is_introduced ;
var bool: aux2339_BOOL:: var_is_introduced ;
var bool: aux2340_BOOL:: var_is_introduced ;
var bool: aux2341_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399}: aux2342:: var_is_introduced ;
var bool: aux2343_BOOL:: var_is_introduced ;
var bool: aux2344_BOOL:: var_is_introduced ;
var bool: aux2345_BOOL:: var_is_introduced ;
var bool: aux2346_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399}: aux2347:: var_is_introduced ;
var bool: aux2348_BOOL:: var_is_introduced ;
var bool: aux2349_BOOL:: var_is_introduced ;
var bool: aux2350_BOOL:: var_is_introduced ;
var bool: aux2351_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399}: aux2352:: var_is_introduced ;
var bool: aux2353_BOOL:: var_is_introduced ;
var bool: aux2354_BOOL:: var_is_introduced ;
var bool: aux2355_BOOL:: var_is_introduced ;
var bool: aux2356_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399}: aux2357:: var_is_introduced ;
var bool: aux2358_BOOL:: var_is_introduced ;
var bool: aux2359_BOOL:: var_is_introduced ;
var bool: aux2360_BOOL:: var_is_introduced ;
var bool: aux2361_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399}: aux2362:: var_is_introduced ;
var bool: aux2363_BOOL:: var_is_introduced ;
var bool: aux2364_BOOL:: var_is_introduced ;
var bool: aux2365_BOOL:: var_is_introduced ;
var bool: aux2366_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,234,235,236,237,238,239,240,261,262,263,264,265,266,267,268,269,270,271,272,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,394,395,396,397,398,399}: aux2367:: var_is_introduced ;
var bool: aux2368_BOOL:: var_is_introduced ;
var bool: aux2369_BOOL:: var_is_introduced ;
var bool: aux2370_BOOL:: var_is_introduced ;
var bool: aux2371_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399}: aux2372:: var_is_introduced ;
var bool: aux2373_BOOL:: var_is_introduced ;
var bool: aux2374_BOOL:: var_is_introduced ;
var bool: aux2375_BOOL:: var_is_introduced ;
var bool: aux2376_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399}: aux2377:: var_is_introduced ;
var bool: aux2378_BOOL:: var_is_introduced ;
var bool: aux2379_BOOL:: var_is_introduced ;
var bool: aux2380_BOOL:: var_is_introduced ;
var bool: aux2381_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399}: aux2382:: var_is_introduced ;
var bool: aux2383_BOOL:: var_is_introduced ;
var bool: aux2384_BOOL:: var_is_introduced ;
var bool: aux2385_BOOL:: var_is_introduced ;
var bool: aux2386_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399}: aux2387:: var_is_introduced ;
var bool: aux2388_BOOL:: var_is_introduced ;
var bool: aux2389_BOOL:: var_is_introduced ;
var bool: aux2390_BOOL:: var_is_introduced ;
var bool: aux2391_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399}: aux2392:: var_is_introduced ;
var bool: aux2393_BOOL:: var_is_introduced ;
var bool: aux2394_BOOL:: var_is_introduced ;
var bool: aux2395_BOOL:: var_is_introduced ;
var bool: aux2396_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399}: aux2397:: var_is_introduced ;
var bool: aux2398_BOOL:: var_is_introduced ;
var bool: aux2399_BOOL:: var_is_introduced ;
var bool: aux2400_BOOL:: var_is_introduced ;
var bool: aux2401_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399}: aux2402:: var_is_introduced ;
var bool: aux2403_BOOL:: var_is_introduced ;
var bool: aux2404_BOOL:: var_is_introduced ;
var bool: aux2405_BOOL:: var_is_introduced ;
var bool: aux2406_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399}: aux2407:: var_is_introduced ;
var bool: aux2408_BOOL:: var_is_introduced ;
var bool: aux2409_BOOL:: var_is_introduced ;
var bool: aux2410_BOOL:: var_is_introduced ;
var bool: aux2411_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399}: aux2412:: var_is_introduced ;
var bool: aux2413_BOOL:: var_is_introduced ;
var bool: aux2414_BOOL:: var_is_introduced ;
var bool: aux2415_BOOL:: var_is_introduced ;
var bool: aux2416_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399}: aux2417:: var_is_introduced ;
var bool: aux2418_BOOL:: var_is_introduced ;
var bool: aux2419_BOOL:: var_is_introduced ;
var bool: aux2420_BOOL:: var_is_introduced ;
var bool: aux2421_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399}: aux2422:: var_is_introduced ;
var bool: aux2423_BOOL:: var_is_introduced ;
var bool: aux2424_BOOL:: var_is_introduced ;
var bool: aux2425_BOOL:: var_is_introduced ;
var bool: aux2426_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399}: aux2427:: var_is_introduced ;
var bool: aux2428_BOOL:: var_is_introduced ;
var bool: aux2429_BOOL:: var_is_introduced ;
var bool: aux2430_BOOL:: var_is_introduced ;
var bool: aux2431_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399}: aux2432:: var_is_introduced ;
var bool: aux2433_BOOL:: var_is_introduced ;
var bool: aux2434_BOOL:: var_is_introduced ;
var bool: aux2435_BOOL:: var_is_introduced ;
var bool: aux2436_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399}: aux2437:: var_is_introduced ;
var bool: aux2438_BOOL:: var_is_introduced ;
var bool: aux2439_BOOL:: var_is_introduced ;
var bool: aux2440_BOOL:: var_is_introduced ;
var bool: aux2441_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399}: aux2442:: var_is_introduced ;
var bool: aux2443_BOOL:: var_is_introduced ;
var bool: aux2444_BOOL:: var_is_introduced ;
var bool: aux2445_BOOL:: var_is_introduced ;
var bool: aux2446_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399}: aux2447:: var_is_introduced ;
var bool: aux2448_BOOL:: var_is_introduced ;
var bool: aux2449_BOOL:: var_is_introduced ;
var bool: aux2450_BOOL:: var_is_introduced ;
var bool: aux2451_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399}: aux2452:: var_is_introduced ;
var bool: aux2453_BOOL:: var_is_introduced ;
var bool: aux2454_BOOL:: var_is_introduced ;
var bool: aux2455_BOOL:: var_is_introduced ;
var bool: aux2456_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,255,256,257,258,259,260,281,282,283,284,285,286,287,288,289,290,291,292,293,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,399}: aux2457:: var_is_introduced ;
var bool: aux2458_BOOL:: var_is_introduced ;
var bool: aux2459_BOOL:: var_is_introduced ;
var bool: aux2460_BOOL:: var_is_introduced ;
var bool: aux2461_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399}: aux2462:: var_is_introduced ;
var bool: aux2463_BOOL:: var_is_introduced ;
var bool: aux2464_BOOL:: var_is_introduced ;
var bool: aux2465_BOOL:: var_is_introduced ;
var bool: aux2466_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399}: aux2467:: var_is_introduced ;
var bool: aux2468_BOOL:: var_is_introduced ;
var bool: aux2469_BOOL:: var_is_introduced ;
var bool: aux2470_BOOL:: var_is_introduced ;
var bool: aux2471_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399}: aux2472:: var_is_introduced ;
var bool: aux2473_BOOL:: var_is_introduced ;
var bool: aux2474_BOOL:: var_is_introduced ;
var bool: aux2475_BOOL:: var_is_introduced ;
var bool: aux2476_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399}: aux2477:: var_is_introduced ;
var bool: aux2478_BOOL:: var_is_introduced ;
var bool: aux2479_BOOL:: var_is_introduced ;
var bool: aux2480_BOOL:: var_is_introduced ;
var bool: aux2481_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399}: aux2482:: var_is_introduced ;
var bool: aux2483_BOOL:: var_is_introduced ;
var bool: aux2484_BOOL:: var_is_introduced ;
var bool: aux2485_BOOL:: var_is_introduced ;
var bool: aux2486_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399}: aux2487:: var_is_introduced ;
var bool: aux2488_BOOL:: var_is_introduced ;
var bool: aux2489_BOOL:: var_is_introduced ;
var bool: aux2490_BOOL:: var_is_introduced ;
var bool: aux2491_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399}: aux2492:: var_is_introduced ;
var bool: aux2493_BOOL:: var_is_introduced ;
var bool: aux2494_BOOL:: var_is_introduced ;
var bool: aux2495_BOOL:: var_is_introduced ;
var bool: aux2496_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399}: aux2497:: var_is_introduced ;
var bool: aux2498_BOOL:: var_is_introduced ;
var bool: aux2499_BOOL:: var_is_introduced ;
var bool: aux2500_BOOL:: var_is_introduced ;
var bool: aux2501_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399}: aux2502:: var_is_introduced ;
var bool: aux2503_BOOL:: var_is_introduced ;
var bool: aux2504_BOOL:: var_is_introduced ;
var bool: aux2505_BOOL:: var_is_introduced ;
var bool: aux2506_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399}: aux2507:: var_is_introduced ;
var bool: aux2508_BOOL:: var_is_introduced ;
var bool: aux2509_BOOL:: var_is_introduced ;
var bool: aux2510_BOOL:: var_is_introduced ;
var bool: aux2511_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399}: aux2512:: var_is_introduced ;
var bool: aux2513_BOOL:: var_is_introduced ;
var bool: aux2514_BOOL:: var_is_introduced ;
var bool: aux2515_BOOL:: var_is_introduced ;
var bool: aux2516_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399}: aux2517:: var_is_introduced ;
var bool: aux2518_BOOL:: var_is_introduced ;
var bool: aux2519_BOOL:: var_is_introduced ;
var bool: aux2520_BOOL:: var_is_introduced ;
var bool: aux2521_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399}: aux2522:: var_is_introduced ;
var bool: aux2523_BOOL:: var_is_introduced ;
var bool: aux2524_BOOL:: var_is_introduced ;
var bool: aux2525_BOOL:: var_is_introduced ;
var bool: aux2526_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399}: aux2527:: var_is_introduced ;
var bool: aux2528_BOOL:: var_is_introduced ;
var bool: aux2529_BOOL:: var_is_introduced ;
var bool: aux2530_BOOL:: var_is_introduced ;
var bool: aux2531_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399}: aux2532:: var_is_introduced ;
var bool: aux2533_BOOL:: var_is_introduced ;
var bool: aux2534_BOOL:: var_is_introduced ;
var bool: aux2535_BOOL:: var_is_introduced ;
var bool: aux2536_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399}: aux2537:: var_is_introduced ;
var bool: aux2538_BOOL:: var_is_introduced ;
var bool: aux2539_BOOL:: var_is_introduced ;
var bool: aux2540_BOOL:: var_is_introduced ;
var bool: aux2541_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399}: aux2542:: var_is_introduced ;
var bool: aux2543_BOOL:: var_is_introduced ;
var bool: aux2544_BOOL:: var_is_introduced ;
var bool: aux2545_BOOL:: var_is_introduced ;
var bool: aux2546_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,301,302,303,304,305,306,307,308,309,310,311,312,313,314,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,396,397,398,399}: aux2547:: var_is_introduced ;
var bool: aux2548_BOOL:: var_is_introduced ;
var bool: aux2549_BOOL:: var_is_introduced ;
var bool: aux2550_BOOL:: var_is_introduced ;
var bool: aux2551_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399}: aux2552:: var_is_introduced ;
var bool: aux2553_BOOL:: var_is_introduced ;
var bool: aux2554_BOOL:: var_is_introduced ;
var bool: aux2555_BOOL:: var_is_introduced ;
var bool: aux2556_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399}: aux2557:: var_is_introduced ;
var bool: aux2558_BOOL:: var_is_introduced ;
var bool: aux2559_BOOL:: var_is_introduced ;
var bool: aux2560_BOOL:: var_is_introduced ;
var bool: aux2561_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399}: aux2562:: var_is_introduced ;
var bool: aux2563_BOOL:: var_is_introduced ;
var bool: aux2564_BOOL:: var_is_introduced ;
var bool: aux2565_BOOL:: var_is_introduced ;
var bool: aux2566_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399}: aux2567:: var_is_introduced ;
var bool: aux2568_BOOL:: var_is_introduced ;
var bool: aux2569_BOOL:: var_is_introduced ;
var bool: aux2570_BOOL:: var_is_introduced ;
var bool: aux2571_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399}: aux2572:: var_is_introduced ;
var bool: aux2573_BOOL:: var_is_introduced ;
var bool: aux2574_BOOL:: var_is_introduced ;
var bool: aux2575_BOOL:: var_is_introduced ;
var bool: aux2576_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399}: aux2577:: var_is_introduced ;
var bool: aux2578_BOOL:: var_is_introduced ;
var bool: aux2579_BOOL:: var_is_introduced ;
var bool: aux2580_BOOL:: var_is_introduced ;
var bool: aux2581_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399}: aux2582:: var_is_introduced ;
var bool: aux2583_BOOL:: var_is_introduced ;
var bool: aux2584_BOOL:: var_is_introduced ;
var bool: aux2585_BOOL:: var_is_introduced ;
var bool: aux2586_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399}: aux2587:: var_is_introduced ;
var bool: aux2588_BOOL:: var_is_introduced ;
var bool: aux2589_BOOL:: var_is_introduced ;
var bool: aux2590_BOOL:: var_is_introduced ;
var bool: aux2591_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399}: aux2592:: var_is_introduced ;
var bool: aux2593_BOOL:: var_is_introduced ;
var bool: aux2594_BOOL:: var_is_introduced ;
var bool: aux2595_BOOL:: var_is_introduced ;
var bool: aux2596_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399}: aux2597:: var_is_introduced ;
var bool: aux2598_BOOL:: var_is_introduced ;
var bool: aux2599_BOOL:: var_is_introduced ;
var bool: aux2600_BOOL:: var_is_introduced ;
var bool: aux2601_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399}: aux2602:: var_is_introduced ;
var bool: aux2603_BOOL:: var_is_introduced ;
var bool: aux2604_BOOL:: var_is_introduced ;
var bool: aux2605_BOOL:: var_is_introduced ;
var bool: aux2606_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399}: aux2607:: var_is_introduced ;
var bool: aux2608_BOOL:: var_is_introduced ;
var bool: aux2609_BOOL:: var_is_introduced ;
var bool: aux2610_BOOL:: var_is_introduced ;
var bool: aux2611_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399}: aux2612:: var_is_introduced ;
var bool: aux2613_BOOL:: var_is_introduced ;
var bool: aux2614_BOOL:: var_is_introduced ;
var bool: aux2615_BOOL:: var_is_introduced ;
var bool: aux2616_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399}: aux2617:: var_is_introduced ;
var bool: aux2618_BOOL:: var_is_introduced ;
var bool: aux2619_BOOL:: var_is_introduced ;
var bool: aux2620_BOOL:: var_is_introduced ;
var bool: aux2621_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399}: aux2622:: var_is_introduced ;
var bool: aux2623_BOOL:: var_is_introduced ;
var bool: aux2624_BOOL:: var_is_introduced ;
var bool: aux2625_BOOL:: var_is_introduced ;
var bool: aux2626_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399}: aux2627:: var_is_introduced ;
var bool: aux2628_BOOL:: var_is_introduced ;
var bool: aux2629_BOOL:: var_is_introduced ;
var bool: aux2630_BOOL:: var_is_introduced ;
var bool: aux2631_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399}: aux2632:: var_is_introduced ;
var bool: aux2633_BOOL:: var_is_introduced ;
var bool: aux2634_BOOL:: var_is_introduced ;
var bool: aux2635_BOOL:: var_is_introduced ;
var bool: aux2636_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,297,298,299,300,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,397,398,399}: aux2637:: var_is_introduced ;
var bool: aux2638_BOOL:: var_is_introduced ;
var bool: aux2639_BOOL:: var_is_introduced ;
var bool: aux2640_BOOL:: var_is_introduced ;
var bool: aux2641_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399}: aux2642:: var_is_introduced ;
var bool: aux2643_BOOL:: var_is_introduced ;
var bool: aux2644_BOOL:: var_is_introduced ;
var bool: aux2645_BOOL:: var_is_introduced ;
var bool: aux2646_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399}: aux2647:: var_is_introduced ;
var bool: aux2648_BOOL:: var_is_introduced ;
var bool: aux2649_BOOL:: var_is_introduced ;
var bool: aux2650_BOOL:: var_is_introduced ;
var bool: aux2651_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399}: aux2652:: var_is_introduced ;
var bool: aux2653_BOOL:: var_is_introduced ;
var bool: aux2654_BOOL:: var_is_introduced ;
var bool: aux2655_BOOL:: var_is_introduced ;
var bool: aux2656_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399}: aux2657:: var_is_introduced ;
var bool: aux2658_BOOL:: var_is_introduced ;
var bool: aux2659_BOOL:: var_is_introduced ;
var bool: aux2660_BOOL:: var_is_introduced ;
var bool: aux2661_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399}: aux2662:: var_is_introduced ;
var bool: aux2663_BOOL:: var_is_introduced ;
var bool: aux2664_BOOL:: var_is_introduced ;
var bool: aux2665_BOOL:: var_is_introduced ;
var bool: aux2666_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399}: aux2667:: var_is_introduced ;
var bool: aux2668_BOOL:: var_is_introduced ;
var bool: aux2669_BOOL:: var_is_introduced ;
var bool: aux2670_BOOL:: var_is_introduced ;
var bool: aux2671_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399}: aux2672:: var_is_introduced ;
var bool: aux2673_BOOL:: var_is_introduced ;
var bool: aux2674_BOOL:: var_is_introduced ;
var bool: aux2675_BOOL:: var_is_introduced ;
var bool: aux2676_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399}: aux2677:: var_is_introduced ;
var bool: aux2678_BOOL:: var_is_introduced ;
var bool: aux2679_BOOL:: var_is_introduced ;
var bool: aux2680_BOOL:: var_is_introduced ;
var bool: aux2681_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399}: aux2682:: var_is_introduced ;
var bool: aux2683_BOOL:: var_is_introduced ;
var bool: aux2684_BOOL:: var_is_introduced ;
var bool: aux2685_BOOL:: var_is_introduced ;
var bool: aux2686_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399}: aux2687:: var_is_introduced ;
var bool: aux2688_BOOL:: var_is_introduced ;
var bool: aux2689_BOOL:: var_is_introduced ;
var bool: aux2690_BOOL:: var_is_introduced ;
var bool: aux2691_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399}: aux2692:: var_is_introduced ;
var bool: aux2693_BOOL:: var_is_introduced ;
var bool: aux2694_BOOL:: var_is_introduced ;
var bool: aux2695_BOOL:: var_is_introduced ;
var bool: aux2696_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399}: aux2697:: var_is_introduced ;
var bool: aux2698_BOOL:: var_is_introduced ;
var bool: aux2699_BOOL:: var_is_introduced ;
var bool: aux2700_BOOL:: var_is_introduced ;
var bool: aux2701_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399}: aux2702:: var_is_introduced ;
var bool: aux2703_BOOL:: var_is_introduced ;
var bool: aux2704_BOOL:: var_is_introduced ;
var bool: aux2705_BOOL:: var_is_introduced ;
var bool: aux2706_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399}: aux2707:: var_is_introduced ;
var bool: aux2708_BOOL:: var_is_introduced ;
var bool: aux2709_BOOL:: var_is_introduced ;
var bool: aux2710_BOOL:: var_is_introduced ;
var bool: aux2711_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399}: aux2712:: var_is_introduced ;
var bool: aux2713_BOOL:: var_is_introduced ;
var bool: aux2714_BOOL:: var_is_introduced ;
var bool: aux2715_BOOL:: var_is_introduced ;
var bool: aux2716_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399}: aux2717:: var_is_introduced ;
var bool: aux2718_BOOL:: var_is_introduced ;
var bool: aux2719_BOOL:: var_is_introduced ;
var bool: aux2720_BOOL:: var_is_introduced ;
var bool: aux2721_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399}: aux2722:: var_is_introduced ;
var bool: aux2723_BOOL:: var_is_introduced ;
var bool: aux2724_BOOL:: var_is_introduced ;
var bool: aux2725_BOOL:: var_is_introduced ;
var bool: aux2726_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,318,319,320,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399}: aux2727:: var_is_introduced ;
var bool: aux2728_BOOL:: var_is_introduced ;
var bool: aux2729_BOOL:: var_is_introduced ;
var bool: aux2730_BOOL:: var_is_introduced ;
var bool: aux2731_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399}: aux2732:: var_is_introduced ;
var bool: aux2733_BOOL:: var_is_introduced ;
var bool: aux2734_BOOL:: var_is_introduced ;
var bool: aux2735_BOOL:: var_is_introduced ;
var bool: aux2736_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399}: aux2737:: var_is_introduced ;
var bool: aux2738_BOOL:: var_is_introduced ;
var bool: aux2739_BOOL:: var_is_introduced ;
var bool: aux2740_BOOL:: var_is_introduced ;
var bool: aux2741_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399}: aux2742:: var_is_introduced ;
var bool: aux2743_BOOL:: var_is_introduced ;
var bool: aux2744_BOOL:: var_is_introduced ;
var bool: aux2745_BOOL:: var_is_introduced ;
var bool: aux2746_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399}: aux2747:: var_is_introduced ;
var bool: aux2748_BOOL:: var_is_introduced ;
var bool: aux2749_BOOL:: var_is_introduced ;
var bool: aux2750_BOOL:: var_is_introduced ;
var bool: aux2751_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399}: aux2752:: var_is_introduced ;
var bool: aux2753_BOOL:: var_is_introduced ;
var bool: aux2754_BOOL:: var_is_introduced ;
var bool: aux2755_BOOL:: var_is_introduced ;
var bool: aux2756_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399}: aux2757:: var_is_introduced ;
var bool: aux2758_BOOL:: var_is_introduced ;
var bool: aux2759_BOOL:: var_is_introduced ;
var bool: aux2760_BOOL:: var_is_introduced ;
var bool: aux2761_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399}: aux2762:: var_is_introduced ;
var bool: aux2763_BOOL:: var_is_introduced ;
var bool: aux2764_BOOL:: var_is_introduced ;
var bool: aux2765_BOOL:: var_is_introduced ;
var bool: aux2766_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399}: aux2767:: var_is_introduced ;
var bool: aux2768_BOOL:: var_is_introduced ;
var bool: aux2769_BOOL:: var_is_introduced ;
var bool: aux2770_BOOL:: var_is_introduced ;
var bool: aux2771_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399}: aux2772:: var_is_introduced ;
var bool: aux2773_BOOL:: var_is_introduced ;
var bool: aux2774_BOOL:: var_is_introduced ;
var bool: aux2775_BOOL:: var_is_introduced ;
var bool: aux2776_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399}: aux2777:: var_is_introduced ;
var bool: aux2778_BOOL:: var_is_introduced ;
var bool: aux2779_BOOL:: var_is_introduced ;
var bool: aux2780_BOOL:: var_is_introduced ;
var bool: aux2781_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399}: aux2782:: var_is_introduced ;
var bool: aux2783_BOOL:: var_is_introduced ;
var bool: aux2784_BOOL:: var_is_introduced ;
var bool: aux2785_BOOL:: var_is_introduced ;
var bool: aux2786_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399}: aux2787:: var_is_introduced ;
var bool: aux2788_BOOL:: var_is_introduced ;
var bool: aux2789_BOOL:: var_is_introduced ;
var bool: aux2790_BOOL:: var_is_introduced ;
var bool: aux2791_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399}: aux2792:: var_is_introduced ;
var bool: aux2793_BOOL:: var_is_introduced ;
var bool: aux2794_BOOL:: var_is_introduced ;
var bool: aux2795_BOOL:: var_is_introduced ;
var bool: aux2796_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399}: aux2797:: var_is_introduced ;
var bool: aux2798_BOOL:: var_is_introduced ;
var bool: aux2799_BOOL:: var_is_introduced ;
var bool: aux2800_BOOL:: var_is_introduced ;
var bool: aux2801_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399}: aux2802:: var_is_introduced ;
var bool: aux2803_BOOL:: var_is_introduced ;
var bool: aux2804_BOOL:: var_is_introduced ;
var bool: aux2805_BOOL:: var_is_introduced ;
var bool: aux2806_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399}: aux2807:: var_is_introduced ;
var bool: aux2808_BOOL:: var_is_introduced ;
var bool: aux2809_BOOL:: var_is_introduced ;
var bool: aux2810_BOOL:: var_is_introduced ;
var bool: aux2811_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399}: aux2812:: var_is_introduced ;
var bool: aux2813_BOOL:: var_is_introduced ;
var bool: aux2814_BOOL:: var_is_introduced ;
var bool: aux2815_BOOL:: var_is_introduced ;
var bool: aux2816_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399}: aux2817:: var_is_introduced ;
var bool: aux2818_BOOL:: var_is_introduced ;
var bool: aux2819_BOOL:: var_is_introduced ;
var bool: aux2820_BOOL:: var_is_introduced ;
var bool: aux2821_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398}: aux2822:: var_is_introduced ;
var bool: aux2823_BOOL:: var_is_introduced ;
var bool: aux2824_BOOL:: var_is_introduced ;
var bool: aux2825_BOOL:: var_is_introduced ;
var bool: aux2826_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398}: aux2827:: var_is_introduced ;
var bool: aux2828_BOOL:: var_is_introduced ;
var bool: aux2829_BOOL:: var_is_introduced ;
var bool: aux2830_BOOL:: var_is_introduced ;
var bool: aux2831_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398}: aux2832:: var_is_introduced ;
var bool: aux2833_BOOL:: var_is_introduced ;
var bool: aux2834_BOOL:: var_is_introduced ;
var bool: aux2835_BOOL:: var_is_introduced ;
var bool: aux2836_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398}: aux2837:: var_is_introduced ;
var bool: aux2838_BOOL:: var_is_introduced ;
var bool: aux2839_BOOL:: var_is_introduced ;
var bool: aux2840_BOOL:: var_is_introduced ;
var bool: aux2841_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398}: aux2842:: var_is_introduced ;
var bool: aux2843_BOOL:: var_is_introduced ;
var bool: aux2844_BOOL:: var_is_introduced ;
var bool: aux2845_BOOL:: var_is_introduced ;
var bool: aux2846_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398}: aux2847:: var_is_introduced ;
var bool: aux2848_BOOL:: var_is_introduced ;
var bool: aux2849_BOOL:: var_is_introduced ;
var bool: aux2850_BOOL:: var_is_introduced ;
var bool: aux2851_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398}: aux2852:: var_is_introduced ;
var bool: aux2853_BOOL:: var_is_introduced ;
var bool: aux2854_BOOL:: var_is_introduced ;
var bool: aux2855_BOOL:: var_is_introduced ;
var bool: aux2856_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398}: aux2857:: var_is_introduced ;
var bool: aux2858_BOOL:: var_is_introduced ;
var bool: aux2859_BOOL:: var_is_introduced ;
var bool: aux2860_BOOL:: var_is_introduced ;
var bool: aux2861_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398}: aux2862:: var_is_introduced ;
var bool: aux2863_BOOL:: var_is_introduced ;
var bool: aux2864_BOOL:: var_is_introduced ;
var bool: aux2865_BOOL:: var_is_introduced ;
var bool: aux2866_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398}: aux2867:: var_is_introduced ;
var bool: aux2868_BOOL:: var_is_introduced ;
var bool: aux2869_BOOL:: var_is_introduced ;
var bool: aux2870_BOOL:: var_is_introduced ;
var bool: aux2871_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398}: aux2872:: var_is_introduced ;
var bool: aux2873_BOOL:: var_is_introduced ;
var bool: aux2874_BOOL:: var_is_introduced ;
var bool: aux2875_BOOL:: var_is_introduced ;
var bool: aux2876_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398}: aux2877:: var_is_introduced ;
var bool: aux2878_BOOL:: var_is_introduced ;
var bool: aux2879_BOOL:: var_is_introduced ;
var bool: aux2880_BOOL:: var_is_introduced ;
var bool: aux2881_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398}: aux2882:: var_is_introduced ;
var bool: aux2883_BOOL:: var_is_introduced ;
var bool: aux2884_BOOL:: var_is_introduced ;
var bool: aux2885_BOOL:: var_is_introduced ;
var bool: aux2886_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398}: aux2887:: var_is_introduced ;
var bool: aux2888_BOOL:: var_is_introduced ;
var bool: aux2889_BOOL:: var_is_introduced ;
var bool: aux2890_BOOL:: var_is_introduced ;
var bool: aux2891_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398}: aux2892:: var_is_introduced ;
var bool: aux2893_BOOL:: var_is_introduced ;
var bool: aux2894_BOOL:: var_is_introduced ;
var bool: aux2895_BOOL:: var_is_introduced ;
var bool: aux2896_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398}: aux2897:: var_is_introduced ;
var bool: aux2898_BOOL:: var_is_introduced ;
var bool: aux2899_BOOL:: var_is_introduced ;
var bool: aux2900_BOOL:: var_is_introduced ;
var bool: aux2901_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398}: aux2902:: var_is_introduced ;
var bool: aux2903_BOOL:: var_is_introduced ;
var bool: aux2904_BOOL:: var_is_introduced ;
var bool: aux2905_BOOL:: var_is_introduced ;
var bool: aux2906_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398}: aux2907:: var_is_introduced ;
var bool: aux2908_BOOL:: var_is_introduced ;
var bool: aux2909_BOOL:: var_is_introduced ;
var bool: aux2910_BOOL:: var_is_introduced ;
var bool: aux2911_BOOL:: var_is_introduced ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359}: aux2912:: var_is_introduced ;
var bool: aux2913_BOOL:: var_is_introduced ;
var bool: aux2914_BOOL:: var_is_introduced ;
var bool: aux2915_BOOL:: var_is_introduced ;
var bool: aux2916_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux2917:: var_is_introduced ;
var bool: aux2918_BOOL:: var_is_introduced ;
var bool: aux2919_BOOL:: var_is_introduced ;
var bool: aux2920_BOOL:: var_is_introduced ;
var bool: aux2921_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux2922:: var_is_introduced ;
var bool: aux2923_BOOL:: var_is_introduced ;
var bool: aux2924_BOOL:: var_is_introduced ;
var bool: aux2925_BOOL:: var_is_introduced ;
var bool: aux2926_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux2927:: var_is_introduced ;
var bool: aux2928_BOOL:: var_is_introduced ;
var bool: aux2929_BOOL:: var_is_introduced ;
var bool: aux2930_BOOL:: var_is_introduced ;
var bool: aux2931_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux2932:: var_is_introduced ;
var bool: aux2933_BOOL:: var_is_introduced ;
var bool: aux2934_BOOL:: var_is_introduced ;
var bool: aux2935_BOOL:: var_is_introduced ;
var bool: aux2936_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux2937:: var_is_introduced ;
var bool: aux2938_BOOL:: var_is_introduced ;
var bool: aux2939_BOOL:: var_is_introduced ;
var bool: aux2940_BOOL:: var_is_introduced ;
var bool: aux2941_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux2942:: var_is_introduced ;
var bool: aux2943_BOOL:: var_is_introduced ;
var bool: aux2944_BOOL:: var_is_introduced ;
var bool: aux2945_BOOL:: var_is_introduced ;
var bool: aux2946_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux2947:: var_is_introduced ;
var bool: aux2948_BOOL:: var_is_introduced ;
var bool: aux2949_BOOL:: var_is_introduced ;
var bool: aux2950_BOOL:: var_is_introduced ;
var bool: aux2951_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux2952:: var_is_introduced ;
var bool: aux2953_BOOL:: var_is_introduced ;
var bool: aux2954_BOOL:: var_is_introduced ;
var bool: aux2955_BOOL:: var_is_introduced ;
var bool: aux2956_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux2957:: var_is_introduced ;
var bool: aux2958_BOOL:: var_is_introduced ;
var bool: aux2959_BOOL:: var_is_introduced ;
var bool: aux2960_BOOL:: var_is_introduced ;
var bool: aux2961_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux2962:: var_is_introduced ;
var bool: aux2963_BOOL:: var_is_introduced ;
var bool: aux2964_BOOL:: var_is_introduced ;
var bool: aux2965_BOOL:: var_is_introduced ;
var bool: aux2966_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux2967:: var_is_introduced ;
var bool: aux2968_BOOL:: var_is_introduced ;
var bool: aux2969_BOOL:: var_is_introduced ;
var bool: aux2970_BOOL:: var_is_introduced ;
var bool: aux2971_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux2972:: var_is_introduced ;
var bool: aux2973_BOOL:: var_is_introduced ;
var bool: aux2974_BOOL:: var_is_introduced ;
var bool: aux2975_BOOL:: var_is_introduced ;
var bool: aux2976_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux2977:: var_is_introduced ;
var bool: aux2978_BOOL:: var_is_introduced ;
var bool: aux2979_BOOL:: var_is_introduced ;
var bool: aux2980_BOOL:: var_is_introduced ;
var bool: aux2981_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux2982:: var_is_introduced ;
var bool: aux2983_BOOL:: var_is_introduced ;
var bool: aux2984_BOOL:: var_is_introduced ;
var bool: aux2985_BOOL:: var_is_introduced ;
var bool: aux2986_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux2987:: var_is_introduced ;
var bool: aux2988_BOOL:: var_is_introduced ;
var bool: aux2989_BOOL:: var_is_introduced ;
var bool: aux2990_BOOL:: var_is_introduced ;
var bool: aux2991_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux2992:: var_is_introduced ;
var bool: aux2993_BOOL:: var_is_introduced ;
var bool: aux2994_BOOL:: var_is_introduced ;
var bool: aux2995_BOOL:: var_is_introduced ;
var bool: aux2996_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378}: aux2997:: var_is_introduced ;
var bool: aux2998_BOOL:: var_is_introduced ;
var bool: aux2999_BOOL:: var_is_introduced ;
var bool: aux3000_BOOL:: var_is_introduced ;
var bool: aux3001_BOOL:: var_is_introduced ;
var bool: aux3002_BOOL:: var_is_introduced ;
var bool: aux3003_BOOL:: var_is_introduced ;
var bool: aux3004_BOOL:: var_is_introduced ;
var bool: aux3005_BOOL:: var_is_introduced ;
var bool: aux3006_BOOL:: var_is_introduced ;
var bool: aux3007_BOOL:: var_is_introduced ;
var bool: aux3008_BOOL:: var_is_introduced ;
var bool: aux3009_BOOL:: var_is_introduced ;
var bool: aux3010_BOOL:: var_is_introduced ;
var bool: aux3011_BOOL:: var_is_introduced ;
var bool: aux3012_BOOL:: var_is_introduced ;
var bool: aux3013_BOOL:: var_is_introduced ;
var bool: aux3014_BOOL:: var_is_introduced ;
var bool: aux3015_BOOL:: var_is_introduced ;
var bool: aux3016_BOOL:: var_is_introduced ;
var bool: aux3017_BOOL:: var_is_introduced ;
var bool: aux3018_BOOL:: var_is_introduced ;
var bool: aux3019_BOOL:: var_is_introduced ;
var bool: aux3020_BOOL:: var_is_introduced ;
var bool: aux3021_BOOL:: var_is_introduced ;
var bool: aux3022_BOOL:: var_is_introduced ;
var bool: aux3023_BOOL:: var_is_introduced ;
var bool: aux3024_BOOL:: var_is_introduced ;
var bool: aux3025_BOOL:: var_is_introduced ;
var bool: aux3026_BOOL:: var_is_introduced ;
var bool: aux3027_BOOL:: var_is_introduced ;
var bool: aux3028_BOOL:: var_is_introduced ;
var bool: aux3029_BOOL:: var_is_introduced ;
var bool: aux3030_BOOL:: var_is_introduced ;
var bool: aux3031_BOOL:: var_is_introduced ;
var bool: aux3032_BOOL:: var_is_introduced ;
var bool: aux3033_BOOL:: var_is_introduced ;
var bool: aux3034_BOOL:: var_is_introduced ;
var bool: aux3035_BOOL:: var_is_introduced ;
var bool: aux3036_BOOL:: var_is_introduced ;
var bool: aux3037_BOOL:: var_is_introduced ;
var bool: aux3038_BOOL:: var_is_introduced ;
var bool: aux3039_BOOL:: var_is_introduced ;
var bool: aux3040_BOOL:: var_is_introduced ;
var bool: aux3041_BOOL:: var_is_introduced ;
var 0..10: aux3042:: var_is_introduced ;
var 0..10: aux3043:: var_is_introduced ;
var 0..10: aux3044:: var_is_introduced ;
var 0..10: aux3045:: var_is_introduced ;
var 0..10: aux3046:: var_is_introduced ;
var 0..10: aux3047:: var_is_introduced ;
var 0..10: aux3048:: var_is_introduced ;
var 0..10: aux3049:: var_is_introduced ;
var 0..10: aux3050:: var_is_introduced ;
var 0..10: aux3051:: var_is_introduced ;
var 0..10: aux3052:: var_is_introduced ;
var 0..10: aux3053:: var_is_introduced ;
var 0..10: aux3054:: var_is_introduced ;
var 0..10: aux3055:: var_is_introduced ;
var 0..10: aux3056:: var_is_introduced ;
var 0..10: aux3057:: var_is_introduced ;
var 0..10: aux3058:: var_is_introduced ;
var 0..10: aux3059:: var_is_introduced ;
var 0..10: aux3060:: var_is_introduced ;
var 0..10: aux3061:: var_is_introduced ;
var 0..10: aux3062:: var_is_introduced ;
var 0..10: aux3063:: var_is_introduced ;
var 0..10: aux3064:: var_is_introduced ;
var 0..10: aux3065:: var_is_introduced ;
var 0..10: aux3066:: var_is_introduced ;
var 0..10: aux3067:: var_is_introduced ;
var 0..10: aux3068:: var_is_introduced ;
var 0..10: aux3069:: var_is_introduced ;
var 0..10: aux3070:: var_is_introduced ;
var 0..10: aux3071:: var_is_introduced ;
var 0..10: aux3072:: var_is_introduced ;
var 0..10: aux3073:: var_is_introduced ;
var 0..10: aux3074:: var_is_introduced ;
var 0..10: aux3075:: var_is_introduced ;
var 0..10: aux3076:: var_is_introduced ;
var 0..10: aux3077:: var_is_introduced ;
var 0..10: aux3078:: var_is_introduced ;
var 0..10: aux3079:: var_is_introduced ;
var 0..10: aux3080:: var_is_introduced ;
var 0..10: aux3081:: var_is_introduced ;
var 0..10: aux3082:: var_is_introduced ;
var 0..10: aux3083:: var_is_introduced ;
var 0..10: aux3084:: var_is_introduced ;
var 0..10: aux3085:: var_is_introduced ;
var 0..10: aux3086:: var_is_introduced ;
var 0..10: aux3087:: var_is_introduced ;
var 0..10: aux3088:: var_is_introduced ;
var 0..10: aux3089:: var_is_introduced ;
var 0..10: aux3090:: var_is_introduced ;
var 0..10: aux3091:: var_is_introduced ;
var 0..10: aux3092:: var_is_introduced ;
var 0..10: aux3093:: var_is_introduced ;
var 0..10: aux3094:: var_is_introduced ;
var 0..10: aux3095:: var_is_introduced ;
var 0..10: aux3096:: var_is_introduced ;
var 0..10: aux3097:: var_is_introduced ;
var 0..10: aux3098:: var_is_introduced ;
var 0..10: aux3099:: var_is_introduced ;
var 0..10: aux3100:: var_is_introduced ;
var 0..10: aux3101:: var_is_introduced ;
var 0..10: aux3102:: var_is_introduced ;
var 0..10: aux3103:: var_is_introduced ;
var 0..10: aux3104:: var_is_introduced ;
var 0..10: aux3105:: var_is_introduced ;
var 0..10: aux3106:: var_is_introduced ;
var 0..10: aux3107:: var_is_introduced ;
var 0..10: aux3108:: var_is_introduced ;
var 0..10: aux3109:: var_is_introduced ;
var 0..10: aux3110:: var_is_introduced ;
var 0..10: aux3111:: var_is_introduced ;
var 0..10: aux3112:: var_is_introduced ;
var 0..10: aux3113:: var_is_introduced ;
var 0..10: aux3114:: var_is_introduced ;
var 0..10: aux3115:: var_is_introduced ;
var 0..10: aux3116:: var_is_introduced ;
var 0..10: aux3117:: var_is_introduced ;
var 0..10: aux3118:: var_is_introduced ;
var 0..10: aux3119:: var_is_introduced ;
var 0..10: aux3120:: var_is_introduced ;
var 0..10: aux3121:: var_is_introduced ;
var 0..10: aux3122:: var_is_introduced ;
var 0..10: aux3123:: var_is_introduced ;
var 0..10: aux3124:: var_is_introduced ;
var 0..10: aux3125:: var_is_introduced ;
var 0..10: aux3126:: var_is_introduced ;
var 0..10: aux3127:: var_is_introduced ;
var 0..10: aux3128:: var_is_introduced ;
var 0..10: aux3129:: var_is_introduced ;
var 0..10: aux3130:: var_is_introduced ;
var 0..10: aux3131:: var_is_introduced ;
var 0..10: aux3132:: var_is_introduced ;
var 0..10: aux3133:: var_is_introduced ;
var 0..10: aux3134:: var_is_introduced ;
var 0..10: aux3135:: var_is_introduced ;
var 0..10: aux3136:: var_is_introduced ;
var 0..10: aux3137:: var_is_introduced ;
var 0..10: aux3138:: var_is_introduced ;
var 0..10: aux3139:: var_is_introduced ;
var 0..10: aux3140:: var_is_introduced ;
var 0..10: aux3141:: var_is_introduced ;
var 0..10: aux3142:: var_is_introduced ;
var 0..10: aux3143:: var_is_introduced ;
var 0..10: aux3144:: var_is_introduced ;
var 0..10: aux3145:: var_is_introduced ;
var 0..10: aux3146:: var_is_introduced ;
var 0..10: aux3147:: var_is_introduced ;
var 0..10: aux3148:: var_is_introduced ;
var 0..10: aux3149:: var_is_introduced ;
var 0..10: aux3150:: var_is_introduced ;
var 0..10: aux3151:: var_is_introduced ;
var 0..10: aux3152:: var_is_introduced ;
var 0..10: aux3153:: var_is_introduced ;
var 0..10: aux3154:: var_is_introduced ;
var 0..10: aux3155:: var_is_introduced ;
var 0..10: aux3156:: var_is_introduced ;
var 0..10: aux3157:: var_is_introduced ;
var 0..10: aux3158:: var_is_introduced ;
var 0..10: aux3159:: var_is_introduced ;
var 0..10: aux3160:: var_is_introduced ;
var 0..10: aux3161:: var_is_introduced ;
var 0..10: aux3162:: var_is_introduced ;
var 0..10: aux3163:: var_is_introduced ;
var 0..10: aux3164:: var_is_introduced ;
var 0..10: aux3165:: var_is_introduced ;
var 0..10: aux3166:: var_is_introduced ;
var 0..10: aux3167:: var_is_introduced ;
var 0..10: aux3168:: var_is_introduced ;
var 0..10: aux3169:: var_is_introduced ;
var 0..10: aux3170:: var_is_introduced ;
var 0..10: aux3171:: var_is_introduced ;
var 0..10: aux3172:: var_is_introduced ;
var 0..10: aux3173:: var_is_introduced ;
var 0..10: aux3174:: var_is_introduced ;
var 0..10: aux3175:: var_is_introduced ;
var 0..10: aux3176:: var_is_introduced ;
var 0..10: aux3177:: var_is_introduced ;
var 0..10: aux3178:: var_is_introduced ;
var 0..10: aux3179:: var_is_introduced ;
var 0..10: aux3180:: var_is_introduced ;
var 0..10: aux3181:: var_is_introduced ;
var 0..10: aux3182:: var_is_introduced ;
var 0..10: aux3183:: var_is_introduced ;
var 0..10: aux3184:: var_is_introduced ;
var 0..10: aux3185:: var_is_introduced ;
var 0..10: aux3186:: var_is_introduced ;
var 0..10: aux3187:: var_is_introduced ;
var 0..10: aux3188:: var_is_introduced ;
var 0..10: aux3189:: var_is_introduced ;
var 0..10: aux3190:: var_is_introduced ;
var 0..10: aux3191:: var_is_introduced ;
var 0..10: aux3192:: var_is_introduced ;
var 0..10: aux3193:: var_is_introduced ;
var 0..10: aux3194:: var_is_introduced ;
var 0..10: aux3195:: var_is_introduced ;
var 0..10: aux3196:: var_is_introduced ;
var 0..10: aux3197:: var_is_introduced ;
var 0..10: aux3198:: var_is_introduced ;
var 0..10: aux3199:: var_is_introduced ;
var 0..10: aux3200:: var_is_introduced ;
var 0..10: aux3201:: var_is_introduced ;
var 0..10: aux3202:: var_is_introduced ;
var 0..10: aux3203:: var_is_introduced ;
var 0..10: aux3204:: var_is_introduced ;
var 0..10: aux3205:: var_is_introduced ;
var 0..10: aux3206:: var_is_introduced ;
var 0..10: aux3207:: var_is_introduced ;
var 0..10: aux3208:: var_is_introduced ;
var 0..10: aux3209:: var_is_introduced ;
var 0..10: aux3210:: var_is_introduced ;
var 0..10: aux3211:: var_is_introduced ;
var 0..10: aux3212:: var_is_introduced ;
var 0..10: aux3213:: var_is_introduced ;
var 0..10: aux3214:: var_is_introduced ;
var 0..10: aux3215:: var_is_introduced ;
var 0..10: aux3216:: var_is_introduced ;
var 0..10: aux3217:: var_is_introduced ;
var 0..10: aux3218:: var_is_introduced ;
var 0..10: aux3219:: var_is_introduced ;
var 0..10: aux3220:: var_is_introduced ;
var 0..10: aux3221:: var_is_introduced ;
var 0..10: aux3222:: var_is_introduced ;
var 0..10: aux3223:: var_is_introduced ;
var 0..10: aux3224:: var_is_introduced ;
var 0..10: aux3225:: var_is_introduced ;
var 0..10: aux3226:: var_is_introduced ;
var 0..10: aux3227:: var_is_introduced ;
var 0..10: aux3228:: var_is_introduced ;
var 0..10: aux3229:: var_is_introduced ;
var 0..10: aux3230:: var_is_introduced ;
var 0..10: aux3231:: var_is_introduced ;
var 0..10: aux3232:: var_is_introduced ;
var 0..10: aux3233:: var_is_introduced ;
var 0..10: aux3234:: var_is_introduced ;
var 0..10: aux3235:: var_is_introduced ;
var 0..10: aux3236:: var_is_introduced ;
var 0..10: aux3237:: var_is_introduced ;
var 0..10: aux3238:: var_is_introduced ;
var 0..10: aux3239:: var_is_introduced ;
var 0..10: aux3240:: var_is_introduced ;
var 0..10: aux3241:: var_is_introduced ;
var 0..10: aux3242:: var_is_introduced ;
var 0..10: aux3243:: var_is_introduced ;
var 0..10: aux3244:: var_is_introduced ;
var 0..10: aux3245:: var_is_introduced ;
var 0..10: aux3246:: var_is_introduced ;
var 0..10: aux3247:: var_is_introduced ;
var 0..10: aux3248:: var_is_introduced ;
var 0..10: aux3249:: var_is_introduced ;
var 0..10: aux3250:: var_is_introduced ;
var 0..10: aux3251:: var_is_introduced ;
var 0..10: aux3252:: var_is_introduced ;
var 0..10: aux3253:: var_is_introduced ;
var 0..10: aux3254:: var_is_introduced ;
var 0..10: aux3255:: var_is_introduced ;
var 0..10: aux3256:: var_is_introduced ;
var 0..10: aux3257:: var_is_introduced ;
var 0..10: aux3258:: var_is_introduced ;
var 0..10: aux3259:: var_is_introduced ;
var 0..10: aux3260:: var_is_introduced ;
var 0..10: aux3261:: var_is_introduced ;
var 0..10: aux3262:: var_is_introduced ;
var 0..10: aux3263:: var_is_introduced ;
var 0..10: aux3264:: var_is_introduced ;
var 0..10: aux3265:: var_is_introduced ;
var 0..10: aux3266:: var_is_introduced ;
var 0..10: aux3267:: var_is_introduced ;
var 0..10: aux3268:: var_is_introduced ;
var 0..10: aux3269:: var_is_introduced ;
var 0..10: aux3270:: var_is_introduced ;
var 0..10: aux3271:: var_is_introduced ;
var 0..10: aux3272:: var_is_introduced ;
var 0..10: aux3273:: var_is_introduced ;
var 0..10: aux3274:: var_is_introduced ;
var 0..10: aux3275:: var_is_introduced ;
var 0..10: aux3276:: var_is_introduced ;
var 0..10: aux3277:: var_is_introduced ;
var 0..10: aux3278:: var_is_introduced ;
var 0..10: aux3279:: var_is_introduced ;
var 0..10: aux3280:: var_is_introduced ;
var 0..10: aux3281:: var_is_introduced ;
var 0..10: aux3282:: var_is_introduced ;
var 0..10: aux3283:: var_is_introduced ;
var 0..10: aux3284:: var_is_introduced ;
var 0..10: aux3285:: var_is_introduced ;
var 0..10: aux3286:: var_is_introduced ;
var 0..10: aux3287:: var_is_introduced ;
var 0..10: aux3288:: var_is_introduced ;
var 0..10: aux3289:: var_is_introduced ;
var 0..10: aux3290:: var_is_introduced ;
var 0..10: aux3291:: var_is_introduced ;
var 0..10: aux3292:: var_is_introduced ;
var 0..10: aux3293:: var_is_introduced ;
var 0..10: aux3294:: var_is_introduced ;
var 0..10: aux3295:: var_is_introduced ;
var 0..10: aux3296:: var_is_introduced ;
var 0..10: aux3297:: var_is_introduced ;
var 0..10: aux3298:: var_is_introduced ;
var 0..10: aux3299:: var_is_introduced ;
var 0..10: aux3300:: var_is_introduced ;
var 0..10: aux3301:: var_is_introduced ;
var 0..10: aux3302:: var_is_introduced ;
var 0..10: aux3303:: var_is_introduced ;
var 0..10: aux3304:: var_is_introduced ;
var 0..10: aux3305:: var_is_introduced ;
var 0..10: aux3306:: var_is_introduced ;
var 0..10: aux3307:: var_is_introduced ;
var 0..10: aux3308:: var_is_introduced ;
var 0..10: aux3309:: var_is_introduced ;
var 0..10: aux3310:: var_is_introduced ;
var 0..10: aux3311:: var_is_introduced ;
var 0..10: aux3312:: var_is_introduced ;
var 0..10: aux3313:: var_is_introduced ;
var 0..10: aux3314:: var_is_introduced ;
var 0..10: aux3315:: var_is_introduced ;
var 0..10: aux3316:: var_is_introduced ;
var 0..10: aux3317:: var_is_introduced ;
var 0..10: aux3318:: var_is_introduced ;
var 0..10: aux3319:: var_is_introduced ;
var 0..10: aux3320:: var_is_introduced ;
var 0..10: aux3321:: var_is_introduced ;
var 0..10: aux3322:: var_is_introduced ;
var 0..10: aux3323:: var_is_introduced ;
var 0..10: aux3324:: var_is_introduced ;
var 0..10: aux3325:: var_is_introduced ;
var 0..10: aux3326:: var_is_introduced ;
var 0..10: aux3327:: var_is_introduced ;
var 0..10: aux3328:: var_is_introduced ;
var 0..10: aux3329:: var_is_introduced ;
var 0..10: aux3330:: var_is_introduced ;
var 0..10: aux3331:: var_is_introduced ;
var 0..10: aux3332:: var_is_introduced ;
var 0..10: aux3333:: var_is_introduced ;
var 0..10: aux3334:: var_is_introduced ;
var 0..10: aux3335:: var_is_introduced ;
var 0..10: aux3336:: var_is_introduced ;
var 0..10: aux3337:: var_is_introduced ;
var 0..10: aux3338:: var_is_introduced ;
var 0..10: aux3339:: var_is_introduced ;
var 0..10: aux3340:: var_is_introduced ;
var 0..10: aux3341:: var_is_introduced ;
var 0..10: aux3342:: var_is_introduced ;
var 0..10: aux3343:: var_is_introduced ;
var 0..10: aux3344:: var_is_introduced ;
var 0..10: aux3345:: var_is_introduced ;
var 0..10: aux3346:: var_is_introduced ;
var 0..10: aux3347:: var_is_introduced ;
var 0..10: aux3348:: var_is_introduced ;
var 0..10: aux3349:: var_is_introduced ;
var 0..10: aux3350:: var_is_introduced ;
var 0..10: aux3351:: var_is_introduced ;
var 0..10: aux3352:: var_is_introduced ;
var 0..10: aux3353:: var_is_introduced ;
var 0..10: aux3354:: var_is_introduced ;
var 0..10: aux3355:: var_is_introduced ;
var 0..10: aux3356:: var_is_introduced ;
var 0..10: aux3357:: var_is_introduced ;
var 0..10: aux3358:: var_is_introduced ;
var 0..10: aux3359:: var_is_introduced ;
var 0..10: aux3360:: var_is_introduced ;
var 0..10: aux3361:: var_is_introduced ;
var 0..10: aux3362:: var_is_introduced ;
var 0..10: aux3363:: var_is_introduced ;
var 0..10: aux3364:: var_is_introduced ;
var 0..10: aux3365:: var_is_introduced ;
var 0..10: aux3366:: var_is_introduced ;
var 0..10: aux3367:: var_is_introduced ;
var 0..10: aux3368:: var_is_introduced ;
var 0..10: aux3369:: var_is_introduced ;
var 0..10: aux3370:: var_is_introduced ;
var 0..10: aux3371:: var_is_introduced ;
var 0..10: aux3372:: var_is_introduced ;
var 0..10: aux3373:: var_is_introduced ;
var 0..10: aux3374:: var_is_introduced ;
var 0..10: aux3375:: var_is_introduced ;
var 0..10: aux3376:: var_is_introduced ;
var 0..10: aux3377:: var_is_introduced ;
var 0..10: aux3378:: var_is_introduced ;
var 0..10: aux3379:: var_is_introduced ;
var 0..10: aux3380:: var_is_introduced ;
var 0..10: aux3381:: var_is_introduced ;
var 0..10: aux3382:: var_is_introduced ;
var 0..10: aux3383:: var_is_introduced ;
var 0..10: aux3384:: var_is_introduced ;
var 0..10: aux3385:: var_is_introduced ;
var 0..10: aux3386:: var_is_introduced ;
var 0..10: aux3387:: var_is_introduced ;
var 0..10: aux3388:: var_is_introduced ;
var 0..10: aux3389:: var_is_introduced ;
var 0..10: aux3390:: var_is_introduced ;
var 0..10: aux3391:: var_is_introduced ;
var 0..10: aux3392:: var_is_introduced ;
var 0..10: aux3393:: var_is_introduced ;
var 0..10: aux3394:: var_is_introduced ;
var 0..10: aux3395:: var_is_introduced ;
var 0..10: aux3396:: var_is_introduced ;
var 0..10: aux3397:: var_is_introduced ;
var 0..10: aux3398:: var_is_introduced ;
var 0..10: aux3399:: var_is_introduced ;
var 0..10: aux3400:: var_is_introduced ;
var 0..10: aux3401:: var_is_introduced ;
constraint array_var_int_element(aux1202, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3042);
constraint array_var_int_element(aux1207, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3043);
constraint array_var_int_element(aux1212, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3044);
constraint array_var_int_element(aux1217, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3045);
constraint array_var_int_element(aux1222, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3046);
constraint array_var_int_element(aux1227, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3047);
constraint array_var_int_element(aux1232, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3048);
constraint array_var_int_element(aux1237, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3049);
constraint array_var_int_element(aux1242, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3050);
constraint array_var_int_element(aux1247, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3051);
constraint array_var_int_element(aux1252, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3052);
constraint array_var_int_element(aux1257, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3053);
constraint array_var_int_element(aux1262, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3054);
constraint array_var_int_element(aux1267, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3055);
constraint array_var_int_element(aux1272, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3056);
constraint array_var_int_element(aux1277, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3057);
constraint array_var_int_element(aux1282, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3058);
constraint array_var_int_element(aux1287, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3059);
constraint array_var_int_element(aux1292, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3060);
constraint array_var_int_element(aux1297, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3061);
constraint array_var_int_element(aux1302, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3062);
constraint array_var_int_element(aux1307, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3063);
constraint array_var_int_element(aux1312, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3064);
constraint array_var_int_element(aux1317, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3065);
constraint array_var_int_element(aux1322, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3066);
constraint array_var_int_element(aux1327, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3067);
constraint array_var_int_element(aux1332, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3068);
constraint array_var_int_element(aux1337, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3069);
constraint array_var_int_element(aux1342, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3070);
constraint array_var_int_element(aux1347, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3071);
constraint array_var_int_element(aux1352, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3072);
constraint array_var_int_element(aux1357, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3073);
constraint array_var_int_element(aux1362, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3074);
constraint array_var_int_element(aux1367, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3075);
constraint array_var_int_element(aux1372, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3076);
constraint array_var_int_element(aux1377, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], aux3077);
constraint array_var_int_element(aux1382, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3078);
constraint array_var_int_element(aux1387, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3079);
constraint array_var_int_element(aux1392, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3080);
constraint array_var_int_element(aux1397, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3081);
constraint array_var_int_element(aux1402, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3082);
constraint array_var_int_element(aux1407, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3083);
constraint array_var_int_element(aux1412, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3084);
constraint array_var_int_element(aux1417, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3085);
constraint array_var_int_element(aux1422, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3086);
constraint array_var_int_element(aux1427, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3087);
constraint array_var_int_element(aux1432, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3088);
constraint array_var_int_element(aux1437, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3089);
constraint array_var_int_element(aux1442, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3090);
constraint array_var_int_element(aux1447, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3091);
constraint array_var_int_element(aux1452, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3092);
constraint array_var_int_element(aux1457, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3093);
constraint array_var_int_element(aux1462, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3094);
constraint array_var_int_element(aux1467, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3095);
constraint array_var_int_element(aux1472, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3096);
constraint array_var_int_element(aux1477, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3097);
constraint array_var_int_element(aux1482, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3098);
constraint array_var_int_element(aux1487, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3099);
constraint array_var_int_element(aux1492, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3100);
constraint array_var_int_element(aux1497, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3101);
constraint array_var_int_element(aux1502, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3102);
constraint array_var_int_element(aux1507, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3103);
constraint array_var_int_element(aux1512, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3104);
constraint array_var_int_element(aux1517, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3105);
constraint array_var_int_element(aux1522, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3106);
constraint array_var_int_element(aux1527, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3107);
constraint array_var_int_element(aux1532, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3108);
constraint array_var_int_element(aux1537, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3109);
constraint array_var_int_element(aux1542, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3110);
constraint array_var_int_element(aux1547, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3111);
constraint array_var_int_element(aux1552, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3112);
constraint array_var_int_element(aux1557, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3113);
constraint array_var_int_element(aux1562, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3114);
constraint array_var_int_element(aux1567, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3115);
constraint array_var_int_element(aux1572, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3116);
constraint array_var_int_element(aux1577, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3117);
constraint array_var_int_element(aux1582, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3118);
constraint array_var_int_element(aux1587, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3119);
constraint array_var_int_element(aux1592, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3120);
constraint array_var_int_element(aux1597, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3121);
constraint array_var_int_element(aux1602, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3122);
constraint array_var_int_element(aux1607, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3123);
constraint array_var_int_element(aux1612, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3124);
constraint array_var_int_element(aux1617, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3125);
constraint array_var_int_element(aux1622, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3126);
constraint array_var_int_element(aux1627, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3127);
constraint array_var_int_element(aux1632, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3128);
constraint array_var_int_element(aux1637, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3129);
constraint array_var_int_element(aux1642, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3130);
constraint array_var_int_element(aux1647, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3131);
constraint array_var_int_element(aux1652, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3132);
constraint array_var_int_element(aux1657, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3133);
constraint array_var_int_element(aux1662, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3134);
constraint array_var_int_element(aux1667, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3135);
constraint array_var_int_element(aux1672, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3136);
constraint array_var_int_element(aux1677, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3137);
constraint array_var_int_element(aux1682, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3138);
constraint array_var_int_element(aux1687, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3139);
constraint array_var_int_element(aux1692, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3140);
constraint array_var_int_element(aux1697, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3141);
constraint array_var_int_element(aux1702, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3142);
constraint array_var_int_element(aux1707, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3143);
constraint array_var_int_element(aux1712, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3144);
constraint array_var_int_element(aux1717, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3145);
constraint array_var_int_element(aux1722, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3146);
constraint array_var_int_element(aux1727, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3147);
constraint array_var_int_element(aux1732, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3148);
constraint array_var_int_element(aux1737, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3149);
constraint array_var_int_element(aux1742, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3150);
constraint array_var_int_element(aux1747, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3151);
constraint array_var_int_element(aux1752, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3152);
constraint array_var_int_element(aux1757, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3153);
constraint array_var_int_element(aux1762, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3154);
constraint array_var_int_element(aux1767, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3155);
constraint array_var_int_element(aux1772, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3156);
constraint array_var_int_element(aux1777, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3157);
constraint array_var_int_element(aux1782, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3158);
constraint array_var_int_element(aux1787, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3159);
constraint array_var_int_element(aux1792, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3160);
constraint array_var_int_element(aux1797, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3161);
constraint array_var_int_element(aux1802, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3162);
constraint array_var_int_element(aux1807, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3163);
constraint array_var_int_element(aux1812, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3164);
constraint array_var_int_element(aux1817, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3165);
constraint array_var_int_element(aux1822, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3166);
constraint array_var_int_element(aux1827, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3167);
constraint array_var_int_element(aux1832, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3168);
constraint array_var_int_element(aux1837, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3169);
constraint array_var_int_element(aux1842, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3170);
constraint array_var_int_element(aux1847, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3171);
constraint array_var_int_element(aux1852, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3172);
constraint array_var_int_element(aux1857, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3173);
constraint array_var_int_element(aux1862, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3174);
constraint array_var_int_element(aux1867, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3175);
constraint array_var_int_element(aux1872, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3176);
constraint array_var_int_element(aux1877, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3177);
constraint array_var_int_element(aux1882, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3178);
constraint array_var_int_element(aux1887, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3179);
constraint array_var_int_element(aux1892, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3180);
constraint array_var_int_element(aux1897, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3181);
constraint array_var_int_element(aux1902, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3182);
constraint array_var_int_element(aux1907, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3183);
constraint array_var_int_element(aux1912, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3184);
constraint array_var_int_element(aux1917, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3185);
constraint array_var_int_element(aux1922, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3186);
constraint array_var_int_element(aux1927, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3187);
constraint array_var_int_element(aux1932, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3188);
constraint array_var_int_element(aux1937, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3189);
constraint array_var_int_element(aux1942, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3190);
constraint array_var_int_element(aux1947, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3191);
constraint array_var_int_element(aux1952, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3192);
constraint array_var_int_element(aux1957, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3193);
constraint array_var_int_element(aux1962, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3194);
constraint array_var_int_element(aux1967, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3195);
constraint array_var_int_element(aux1972, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3196);
constraint array_var_int_element(aux1977, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3197);
constraint array_var_int_element(aux1982, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3198);
constraint array_var_int_element(aux1987, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3199);
constraint array_var_int_element(aux1992, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3200);
constraint array_var_int_element(aux1997, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3201);
constraint array_var_int_element(aux2002, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3202);
constraint array_var_int_element(aux2007, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3203);
constraint array_var_int_element(aux2012, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3204);
constraint array_var_int_element(aux2017, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3205);
constraint array_var_int_element(aux2022, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3206);
constraint array_var_int_element(aux2027, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3207);
constraint array_var_int_element(aux2032, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3208);
constraint array_var_int_element(aux2037, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3209);
constraint array_var_int_element(aux2042, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3210);
constraint array_var_int_element(aux2047, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3211);
constraint array_var_int_element(aux2052, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3212);
constraint array_var_int_element(aux2057, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3213);
constraint array_var_int_element(aux2062, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3214);
constraint array_var_int_element(aux2067, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3215);
constraint array_var_int_element(aux2072, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3216);
constraint array_var_int_element(aux2077, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3217);
constraint array_var_int_element(aux2082, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3218);
constraint array_var_int_element(aux2087, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3219);
constraint array_var_int_element(aux2092, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3220);
constraint array_var_int_element(aux2097, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3221);
constraint array_var_int_element(aux2102, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3222);
constraint array_var_int_element(aux2107, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3223);
constraint array_var_int_element(aux2112, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3224);
constraint array_var_int_element(aux2117, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3225);
constraint array_var_int_element(aux2122, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3226);
constraint array_var_int_element(aux2127, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3227);
constraint array_var_int_element(aux2132, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3228);
constraint array_var_int_element(aux2137, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3229);
constraint array_var_int_element(aux2142, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3230);
constraint array_var_int_element(aux2147, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3231);
constraint array_var_int_element(aux2152, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3232);
constraint array_var_int_element(aux2157, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3233);
constraint array_var_int_element(aux2162, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3234);
constraint array_var_int_element(aux2167, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3235);
constraint array_var_int_element(aux2172, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3236);
constraint array_var_int_element(aux2177, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3237);
constraint array_var_int_element(aux2182, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3238);
constraint array_var_int_element(aux2187, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3239);
constraint array_var_int_element(aux2192, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3240);
constraint array_var_int_element(aux2197, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3241);
constraint array_var_int_element(aux2202, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3242);
constraint array_var_int_element(aux2207, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3243);
constraint array_var_int_element(aux2212, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3244);
constraint array_var_int_element(aux2217, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3245);
constraint array_var_int_element(aux2222, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3246);
constraint array_var_int_element(aux2227, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3247);
constraint array_var_int_element(aux2232, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3248);
constraint array_var_int_element(aux2237, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3249);
constraint array_var_int_element(aux2242, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3250);
constraint array_var_int_element(aux2247, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3251);
constraint array_var_int_element(aux2252, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3252);
constraint array_var_int_element(aux2257, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3253);
constraint array_var_int_element(aux2262, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3254);
constraint array_var_int_element(aux2267, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3255);
constraint array_var_int_element(aux2272, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3256);
constraint array_var_int_element(aux2277, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3257);
constraint array_var_int_element(aux2282, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3258);
constraint array_var_int_element(aux2287, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3259);
constraint array_var_int_element(aux2292, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3260);
constraint array_var_int_element(aux2297, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3261);
constraint array_var_int_element(aux2302, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3262);
constraint array_var_int_element(aux2307, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3263);
constraint array_var_int_element(aux2312, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3264);
constraint array_var_int_element(aux2317, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3265);
constraint array_var_int_element(aux2322, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3266);
constraint array_var_int_element(aux2327, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3267);
constraint array_var_int_element(aux2332, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3268);
constraint array_var_int_element(aux2337, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3269);
constraint array_var_int_element(aux2342, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3270);
constraint array_var_int_element(aux2347, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3271);
constraint array_var_int_element(aux2352, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3272);
constraint array_var_int_element(aux2357, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3273);
constraint array_var_int_element(aux2362, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3274);
constraint array_var_int_element(aux2367, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3275);
constraint array_var_int_element(aux2372, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3276);
constraint array_var_int_element(aux2377, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3277);
constraint array_var_int_element(aux2382, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3278);
constraint array_var_int_element(aux2387, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3279);
constraint array_var_int_element(aux2392, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3280);
constraint array_var_int_element(aux2397, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3281);
constraint array_var_int_element(aux2402, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3282);
constraint array_var_int_element(aux2407, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3283);
constraint array_var_int_element(aux2412, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3284);
constraint array_var_int_element(aux2417, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3285);
constraint array_var_int_element(aux2422, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3286);
constraint array_var_int_element(aux2427, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3287);
constraint array_var_int_element(aux2432, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3288);
constraint array_var_int_element(aux2437, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3289);
constraint array_var_int_element(aux2442, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3290);
constraint array_var_int_element(aux2447, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3291);
constraint array_var_int_element(aux2452, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3292);
constraint array_var_int_element(aux2457, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3293);
constraint array_var_int_element(aux2462, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3294);
constraint array_var_int_element(aux2467, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3295);
constraint array_var_int_element(aux2472, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3296);
constraint array_var_int_element(aux2477, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3297);
constraint array_var_int_element(aux2482, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3298);
constraint array_var_int_element(aux2487, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3299);
constraint array_var_int_element(aux2492, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3300);
constraint array_var_int_element(aux2497, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3301);
constraint array_var_int_element(aux2502, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3302);
constraint array_var_int_element(aux2507, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3303);
constraint array_var_int_element(aux2512, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3304);
constraint array_var_int_element(aux2517, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3305);
constraint array_var_int_element(aux2522, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3306);
constraint array_var_int_element(aux2527, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3307);
constraint array_var_int_element(aux2532, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3308);
constraint array_var_int_element(aux2537, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3309);
constraint array_var_int_element(aux2542, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3310);
constraint array_var_int_element(aux2547, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3311);
constraint array_var_int_element(aux2552, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3312);
constraint array_var_int_element(aux2557, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3313);
constraint array_var_int_element(aux2562, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3314);
constraint array_var_int_element(aux2567, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3315);
constraint array_var_int_element(aux2572, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3316);
constraint array_var_int_element(aux2577, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3317);
constraint array_var_int_element(aux2582, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3318);
constraint array_var_int_element(aux2587, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3319);
constraint array_var_int_element(aux2592, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3320);
constraint array_var_int_element(aux2597, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3321);
constraint array_var_int_element(aux2602, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3322);
constraint array_var_int_element(aux2607, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3323);
constraint array_var_int_element(aux2612, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3324);
constraint array_var_int_element(aux2617, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3325);
constraint array_var_int_element(aux2622, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3326);
constraint array_var_int_element(aux2627, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3327);
constraint array_var_int_element(aux2632, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3328);
constraint array_var_int_element(aux2637, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3329);
constraint array_var_int_element(aux2642, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3330);
constraint array_var_int_element(aux2647, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3331);
constraint array_var_int_element(aux2652, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3332);
constraint array_var_int_element(aux2657, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3333);
constraint array_var_int_element(aux2662, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3334);
constraint array_var_int_element(aux2667, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3335);
constraint array_var_int_element(aux2672, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3336);
constraint array_var_int_element(aux2677, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3337);
constraint array_var_int_element(aux2682, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3338);
constraint array_var_int_element(aux2687, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3339);
constraint array_var_int_element(aux2692, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3340);
constraint array_var_int_element(aux2697, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3341);
constraint array_var_int_element(aux2702, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3342);
constraint array_var_int_element(aux2707, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3343);
constraint array_var_int_element(aux2712, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3344);
constraint array_var_int_element(aux2717, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3345);
constraint array_var_int_element(aux2722, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3346);
constraint array_var_int_element(aux2727, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3347);
constraint array_var_int_element(aux2732, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3348);
constraint array_var_int_element(aux2737, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3349);
constraint array_var_int_element(aux2742, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3350);
constraint array_var_int_element(aux2747, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3351);
constraint array_var_int_element(aux2752, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3352);
constraint array_var_int_element(aux2757, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3353);
constraint array_var_int_element(aux2762, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3354);
constraint array_var_int_element(aux2767, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3355);
constraint array_var_int_element(aux2772, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3356);
constraint array_var_int_element(aux2777, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3357);
constraint array_var_int_element(aux2782, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3358);
constraint array_var_int_element(aux2787, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3359);
constraint array_var_int_element(aux2792, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3360);
constraint array_var_int_element(aux2797, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3361);
constraint array_var_int_element(aux2802, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3362);
constraint array_var_int_element(aux2807, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3363);
constraint array_var_int_element(aux2812, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3364);
constraint array_var_int_element(aux2817, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3365);
constraint array_var_int_element(aux2822, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux3366);
constraint array_var_int_element(aux2827, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux3367);
constraint array_var_int_element(aux2832, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux3368);
constraint array_var_int_element(aux2837, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux3369);
constraint array_var_int_element(aux2842, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux3370);
constraint array_var_int_element(aux2847, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux3371);
constraint array_var_int_element(aux2852, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux3372);
constraint array_var_int_element(aux2857, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux3373);
constraint array_var_int_element(aux2862, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux3374);
constraint array_var_int_element(aux2867, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux3375);
constraint array_var_int_element(aux2872, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux3376);
constraint array_var_int_element(aux2877, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux3377);
constraint array_var_int_element(aux2882, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux3378);
constraint array_var_int_element(aux2887, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux3379);
constraint array_var_int_element(aux2892, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux3380);
constraint array_var_int_element(aux2897, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux3381);
constraint array_var_int_element(aux2902, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux3382);
constraint array_var_int_element(aux2907, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux3383);
constraint array_var_int_element(aux2912, [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0], aux3384);
constraint array_var_int_element(aux2917, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3385);
constraint array_var_int_element(aux2922, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3386);
constraint array_var_int_element(aux2927, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3387);
constraint array_var_int_element(aux2932, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3388);
constraint array_var_int_element(aux2937, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3389);
constraint array_var_int_element(aux2942, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3390);
constraint array_var_int_element(aux2947, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3391);
constraint array_var_int_element(aux2952, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3392);
constraint array_var_int_element(aux2957, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3393);
constraint array_var_int_element(aux2962, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3394);
constraint array_var_int_element(aux2967, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3395);
constraint array_var_int_element(aux2972, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3396);
constraint array_var_int_element(aux2977, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3397);
constraint array_var_int_element(aux2982, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3398);
constraint array_var_int_element(aux2987, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3399);
constraint array_var_int_element(aux2992, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3400);
constraint array_var_int_element(aux2997, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3401);
constraint int_eq_reif(0,travel_00001_00001,aux1162_BOOL);
constraint int_eq_reif(travel_00001_00001,aux57,aux1163_BOOL);
constraint int_eq_reif(0,travel_00002_00001,aux1164_BOOL);
constraint int_eq_reif(aux256,travel_00002_00001,aux1165_BOOL);
constraint int_eq_reif(travel_00003_00001,0,aux1166_BOOL);
constraint int_eq_reif(aux19,travel_00003_00001,aux1167_BOOL);
constraint int_eq_reif(travel_00004_00001,0,aux1168_BOOL);
constraint int_eq_reif(travel_00004_00001,aux100,aux1169_BOOL);
constraint int_eq_reif(0,travel_00005_00001,aux1170_BOOL);
constraint int_eq_reif(aux83,travel_00005_00001,aux1171_BOOL);
constraint int_eq_reif(0,travel_00006_00001,aux1172_BOOL);
constraint int_eq_reif(aux247,travel_00006_00001,aux1173_BOOL);
constraint int_eq_reif(0,travel_00007_00001,aux1174_BOOL);
constraint int_eq_reif(aux291,travel_00007_00001,aux1175_BOOL);
constraint int_eq_reif(travel_00008_00001,0,aux1176_BOOL);
constraint int_eq_reif(travel_00008_00001,aux53,aux1177_BOOL);
constraint int_eq_reif(travel_00009_00001,0,aux1178_BOOL);
constraint int_eq_reif(travel_00009_00001,aux117,aux1179_BOOL);
constraint int_eq_reif(0,travel_00010_00001,aux1180_BOOL);
constraint int_eq_reif(aux66,travel_00010_00001,aux1181_BOOL);
constraint int_eq_reif(travel_00011_00001,0,aux1182_BOOL);
constraint int_eq_reif(travel_00011_00001,aux322,aux1183_BOOL);
constraint int_eq_reif(travel_00012_00001,0,aux1184_BOOL);
constraint int_eq_reif(travel_00012_00001,aux356,aux1185_BOOL);
constraint int_eq_reif(0,travel_00013_00001,aux1186_BOOL);
constraint int_eq_reif(travel_00013_00001,aux154,aux1187_BOOL);
constraint int_eq_reif(0,travel_00014_00001,aux1188_BOOL);
constraint int_eq_reif(aux286,travel_00014_00001,aux1189_BOOL);
constraint int_eq_reif(0,travel_00015_00001,aux1190_BOOL);
constraint int_eq_reif(aux135,travel_00015_00001,aux1191_BOOL);
constraint int_eq_reif(travel_00016_00001,0,aux1192_BOOL);
constraint int_eq_reif(travel_00016_00001,aux189,aux1193_BOOL);
constraint int_eq_reif(travel_00017_00001,0,aux1194_BOOL);
constraint int_eq_reif(travel_00017_00001,aux214,aux1195_BOOL);
constraint int_eq_reif(0,travel_00018_00001,aux1196_BOOL);
constraint int_eq_reif(travel_00018_00001,aux196,aux1197_BOOL);
constraint int_eq_reif(0,travel_00019_00001,aux1198_BOOL);
constraint int_eq_reif(aux328,travel_00019_00001,aux1199_BOOL);
constraint int_eq_reif(travel_00020_00001,0,aux1200_BOOL);
constraint int_eq_reif(aux210,travel_00020_00001,aux1201_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00001_00001,opponent_00001_00002,aux1202,-41],0);
constraint int_eq_reif(aux3042,travel_00001_00002,aux1203_BOOL);
constraint int_eq_reif(aux10,travel_00001_00002,aux1204_BOOL);
constraint int_eq_reif(0,travel_00001_00002,aux1205_BOOL);
constraint int_eq_reif(travel_00001_00002,aux57,aux1206_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00001_00002,opponent_00001_00003,aux1207,-41],0);
constraint int_eq_reif(aux3043,travel_00001_00003,aux1208_BOOL);
constraint int_eq_reif(aux13,travel_00001_00003,aux1209_BOOL);
constraint int_eq_reif(0,travel_00001_00003,aux1210_BOOL);
constraint int_eq_reif(aux10,travel_00001_00003,aux1211_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00001_00003,opponent_00001_00004,aux1212,-41],0);
constraint int_eq_reif(aux3044,travel_00001_00004,aux1213_BOOL);
constraint int_eq_reif(aux14,travel_00001_00004,aux1214_BOOL);
constraint int_eq_reif(0,travel_00001_00004,aux1215_BOOL);
constraint int_eq_reif(aux13,travel_00001_00004,aux1216_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00001_00004,opponent_00001_00005,aux1217,-41],0);
constraint int_eq_reif(aux3045,travel_00001_00005,aux1218_BOOL);
constraint int_eq_reif(aux11,travel_00001_00005,aux1219_BOOL);
constraint int_eq_reif(0,travel_00001_00005,aux1220_BOOL);
constraint int_eq_reif(aux14,travel_00001_00005,aux1221_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00001_00005,opponent_00001_00006,aux1222,-41],0);
constraint int_eq_reif(aux3046,travel_00001_00006,aux1223_BOOL);
constraint int_eq_reif(aux12,travel_00001_00006,aux1224_BOOL);
constraint int_eq_reif(0,travel_00001_00006,aux1225_BOOL);
constraint int_eq_reif(aux11,travel_00001_00006,aux1226_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00001_00006,opponent_00001_00007,aux1227,-41],0);
constraint int_eq_reif(aux3047,travel_00001_00007,aux1228_BOOL);
constraint int_eq_reif(aux15,travel_00001_00007,aux1229_BOOL);
constraint int_eq_reif(0,travel_00001_00007,aux1230_BOOL);
constraint int_eq_reif(aux12,travel_00001_00007,aux1231_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00001_00007,opponent_00001_00008,aux1232,-41],0);
constraint int_eq_reif(aux3048,travel_00001_00008,aux1233_BOOL);
constraint int_eq_reif(aux17,travel_00001_00008,aux1234_BOOL);
constraint int_eq_reif(0,travel_00001_00008,aux1235_BOOL);
constraint int_eq_reif(aux15,travel_00001_00008,aux1236_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00001_00008,opponent_00001_00009,aux1237,-41],0);
constraint int_eq_reif(aux3049,travel_00001_00009,aux1238_BOOL);
constraint int_eq_reif(aux16,travel_00001_00009,aux1239_BOOL);
constraint int_eq_reif(0,travel_00001_00009,aux1240_BOOL);
constraint int_eq_reif(aux17,travel_00001_00009,aux1241_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00001_00009,opponent_00001_00010,aux1242,-41],0);
constraint int_eq_reif(aux3050,travel_00001_00010,aux1243_BOOL);
constraint int_eq_reif(aux9,travel_00001_00010,aux1244_BOOL);
constraint int_eq_reif(0,travel_00001_00010,aux1245_BOOL);
constraint int_eq_reif(aux16,travel_00001_00010,aux1246_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00001_00010,opponent_00001_00011,aux1247,-41],0);
constraint int_eq_reif(aux3051,travel_00001_00011,aux1248_BOOL);
constraint int_eq_reif(aux4,travel_00001_00011,aux1249_BOOL);
constraint int_eq_reif(0,travel_00001_00011,aux1250_BOOL);
constraint int_eq_reif(aux9,travel_00001_00011,aux1251_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00001_00011,opponent_00001_00012,aux1252,-41],0);
constraint int_eq_reif(aux3052,travel_00001_00012,aux1253_BOOL);
constraint int_eq_reif(aux3,travel_00001_00012,aux1254_BOOL);
constraint int_eq_reif(0,travel_00001_00012,aux1255_BOOL);
constraint int_eq_reif(aux4,travel_00001_00012,aux1256_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00001_00012,opponent_00001_00013,aux1257,-41],0);
constraint int_eq_reif(aux3053,travel_00001_00013,aux1258_BOOL);
constraint int_eq_reif(aux2,travel_00001_00013,aux1259_BOOL);
constraint int_eq_reif(0,travel_00001_00013,aux1260_BOOL);
constraint int_eq_reif(aux3,travel_00001_00013,aux1261_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00001_00013,opponent_00001_00014,aux1262,-41],0);
constraint int_eq_reif(aux3054,travel_00001_00014,aux1263_BOOL);
constraint int_eq_reif(aux1,travel_00001_00014,aux1264_BOOL);
constraint int_eq_reif(0,travel_00001_00014,aux1265_BOOL);
constraint int_eq_reif(aux2,travel_00001_00014,aux1266_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00001_00014,opponent_00001_00015,aux1267,-41],0);
constraint int_eq_reif(aux3055,travel_00001_00015,aux1268_BOOL);
constraint int_eq_reif(aux8,travel_00001_00015,aux1269_BOOL);
constraint int_eq_reif(0,travel_00001_00015,aux1270_BOOL);
constraint int_eq_reif(aux1,travel_00001_00015,aux1271_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00001_00015,opponent_00001_00016,aux1272,-41],0);
constraint int_eq_reif(aux3056,travel_00001_00016,aux1273_BOOL);
constraint int_eq_reif(aux7,travel_00001_00016,aux1274_BOOL);
constraint int_eq_reif(0,travel_00001_00016,aux1275_BOOL);
constraint int_eq_reif(aux8,travel_00001_00016,aux1276_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00001_00016,opponent_00001_00017,aux1277,-41],0);
constraint int_eq_reif(aux3057,travel_00001_00017,aux1278_BOOL);
constraint int_eq_reif(aux6,travel_00001_00017,aux1279_BOOL);
constraint int_eq_reif(0,travel_00001_00017,aux1280_BOOL);
constraint int_eq_reif(aux7,travel_00001_00017,aux1281_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00001_00017,opponent_00001_00018,aux1282,-41],0);
constraint int_eq_reif(aux3058,travel_00001_00018,aux1283_BOOL);
constraint int_eq_reif(aux5,travel_00001_00018,aux1284_BOOL);
constraint int_eq_reif(0,travel_00001_00018,aux1285_BOOL);
constraint int_eq_reif(aux6,travel_00001_00018,aux1286_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00001_00018,opponent_00001_00019,aux1287,-42],0);
constraint int_eq_reif(aux3059,travel_00001_00019,aux1288_BOOL);
constraint int_eq_reif(aux18,travel_00001_00019,aux1289_BOOL);
constraint int_eq_reif(0,travel_00001_00019,aux1290_BOOL);
constraint int_eq_reif(aux5,travel_00001_00019,aux1291_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00002_00001,opponent_00002_00002,aux1292,-20],0);
constraint int_eq_reif(aux3060,travel_00002_00002,aux1293_BOOL);
constraint int_eq_reif(aux257,travel_00002_00002,aux1294_BOOL);
constraint int_eq_reif(0,travel_00002_00002,aux1295_BOOL);
constraint int_eq_reif(aux256,travel_00002_00002,aux1296_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00002_00002,opponent_00002_00003,aux1297,-20],0);
constraint int_eq_reif(aux3061,travel_00002_00003,aux1298_BOOL);
constraint int_eq_reif(aux252,travel_00002_00003,aux1299_BOOL);
constraint int_eq_reif(0,travel_00002_00003,aux1300_BOOL);
constraint int_eq_reif(aux257,travel_00002_00003,aux1301_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00002_00003,opponent_00002_00004,aux1302,-20],0);
constraint int_eq_reif(aux3062,travel_00002_00004,aux1303_BOOL);
constraint int_eq_reif(aux253,travel_00002_00004,aux1304_BOOL);
constraint int_eq_reif(0,travel_00002_00004,aux1305_BOOL);
constraint int_eq_reif(aux252,travel_00002_00004,aux1306_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00002_00004,opponent_00002_00005,aux1307,-20],0);
constraint int_eq_reif(aux3063,travel_00002_00005,aux1308_BOOL);
constraint int_eq_reif(aux254,travel_00002_00005,aux1309_BOOL);
constraint int_eq_reif(0,travel_00002_00005,aux1310_BOOL);
constraint int_eq_reif(aux253,travel_00002_00005,aux1311_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00002_00005,opponent_00002_00006,aux1312,-20],0);
constraint int_eq_reif(aux3064,travel_00002_00006,aux1313_BOOL);
constraint int_eq_reif(aux255,travel_00002_00006,aux1314_BOOL);
constraint int_eq_reif(0,travel_00002_00006,aux1315_BOOL);
constraint int_eq_reif(aux254,travel_00002_00006,aux1316_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00002_00006,opponent_00002_00007,aux1317,-20],0);
constraint int_eq_reif(aux3065,travel_00002_00007,aux1318_BOOL);
constraint int_eq_reif(aux249,travel_00002_00007,aux1319_BOOL);
constraint int_eq_reif(0,travel_00002_00007,aux1320_BOOL);
constraint int_eq_reif(aux255,travel_00002_00007,aux1321_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00002_00007,opponent_00002_00008,aux1322,-20],0);
constraint int_eq_reif(aux3066,travel_00002_00008,aux1323_BOOL);
constraint int_eq_reif(aux250,travel_00002_00008,aux1324_BOOL);
constraint int_eq_reif(0,travel_00002_00008,aux1325_BOOL);
constraint int_eq_reif(aux249,travel_00002_00008,aux1326_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00002_00008,opponent_00002_00009,aux1327,-20],0);
constraint int_eq_reif(aux3067,travel_00002_00009,aux1328_BOOL);
constraint int_eq_reif(aux251,travel_00002_00009,aux1329_BOOL);
constraint int_eq_reif(0,travel_00002_00009,aux1330_BOOL);
constraint int_eq_reif(aux250,travel_00002_00009,aux1331_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00002_00009,opponent_00002_00010,aux1332,-20],0);
constraint int_eq_reif(aux3068,travel_00002_00010,aux1333_BOOL);
constraint int_eq_reif(aux264,travel_00002_00010,aux1334_BOOL);
constraint int_eq_reif(0,travel_00002_00010,aux1335_BOOL);
constraint int_eq_reif(aux251,travel_00002_00010,aux1336_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00002_00010,opponent_00002_00011,aux1337,-20],0);
constraint int_eq_reif(aux3069,travel_00002_00011,aux1338_BOOL);
constraint int_eq_reif(aux263,travel_00002_00011,aux1339_BOOL);
constraint int_eq_reif(0,travel_00002_00011,aux1340_BOOL);
constraint int_eq_reif(aux264,travel_00002_00011,aux1341_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00002_00011,opponent_00002_00012,aux1342,-20],0);
constraint int_eq_reif(aux3070,travel_00002_00012,aux1343_BOOL);
constraint int_eq_reif(aux266,travel_00002_00012,aux1344_BOOL);
constraint int_eq_reif(0,travel_00002_00012,aux1345_BOOL);
constraint int_eq_reif(aux263,travel_00002_00012,aux1346_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00002_00012,opponent_00002_00013,aux1347,-20],0);
constraint int_eq_reif(aux3071,travel_00002_00013,aux1348_BOOL);
constraint int_eq_reif(aux265,travel_00002_00013,aux1349_BOOL);
constraint int_eq_reif(0,travel_00002_00013,aux1350_BOOL);
constraint int_eq_reif(aux266,travel_00002_00013,aux1351_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00002_00013,opponent_00002_00014,aux1352,-20],0);
constraint int_eq_reif(aux3072,travel_00002_00014,aux1353_BOOL);
constraint int_eq_reif(aux260,travel_00002_00014,aux1354_BOOL);
constraint int_eq_reif(0,travel_00002_00014,aux1355_BOOL);
constraint int_eq_reif(aux265,travel_00002_00014,aux1356_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00002_00014,opponent_00002_00015,aux1357,-20],0);
constraint int_eq_reif(aux3073,travel_00002_00015,aux1358_BOOL);
constraint int_eq_reif(aux259,travel_00002_00015,aux1359_BOOL);
constraint int_eq_reif(0,travel_00002_00015,aux1360_BOOL);
constraint int_eq_reif(aux260,travel_00002_00015,aux1361_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00002_00015,opponent_00002_00016,aux1362,-20],0);
constraint int_eq_reif(aux3074,travel_00002_00016,aux1363_BOOL);
constraint int_eq_reif(aux262,travel_00002_00016,aux1364_BOOL);
constraint int_eq_reif(0,travel_00002_00016,aux1365_BOOL);
constraint int_eq_reif(aux259,travel_00002_00016,aux1366_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00002_00016,opponent_00002_00017,aux1367,-20],0);
constraint int_eq_reif(aux3075,travel_00002_00017,aux1368_BOOL);
constraint int_eq_reif(aux261,travel_00002_00017,aux1369_BOOL);
constraint int_eq_reif(0,travel_00002_00017,aux1370_BOOL);
constraint int_eq_reif(aux262,travel_00002_00017,aux1371_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00002_00017,opponent_00002_00018,aux1372,-20],0);
constraint int_eq_reif(aux3076,travel_00002_00018,aux1373_BOOL);
constraint int_eq_reif(aux258,travel_00002_00018,aux1374_BOOL);
constraint int_eq_reif(0,travel_00002_00018,aux1375_BOOL);
constraint int_eq_reif(aux261,travel_00002_00018,aux1376_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00002_00018,opponent_00002_00019,aux1377,-22],0);
constraint int_eq_reif(aux3077,travel_00002_00019,aux1378_BOOL);
constraint int_eq_reif(aux267,travel_00002_00019,aux1379_BOOL);
constraint int_eq_reif(0,travel_00002_00019,aux1380_BOOL);
constraint int_eq_reif(aux258,travel_00002_00019,aux1381_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1382,opponent_00003_00001,opponent_00003_00002,-20],0);
constraint int_eq_reif(aux3078,travel_00003_00002,aux1383_BOOL);
constraint int_eq_reif(aux26,travel_00003_00002,aux1384_BOOL);
constraint int_eq_reif(travel_00003_00002,0,aux1385_BOOL);
constraint int_eq_reif(aux19,travel_00003_00002,aux1386_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1387,opponent_00003_00002,opponent_00003_00003,-20],0);
constraint int_eq_reif(aux3079,travel_00003_00003,aux1388_BOOL);
constraint int_eq_reif(aux27,travel_00003_00003,aux1389_BOOL);
constraint int_eq_reif(travel_00003_00003,0,aux1390_BOOL);
constraint int_eq_reif(aux26,travel_00003_00003,aux1391_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1392,opponent_00003_00003,opponent_00003_00004,-20],0);
constraint int_eq_reif(aux3080,travel_00003_00004,aux1393_BOOL);
constraint int_eq_reif(aux24,travel_00003_00004,aux1394_BOOL);
constraint int_eq_reif(travel_00003_00004,0,aux1395_BOOL);
constraint int_eq_reif(aux27,travel_00003_00004,aux1396_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1397,opponent_00003_00004,opponent_00003_00005,-20],0);
constraint int_eq_reif(aux3081,travel_00003_00005,aux1398_BOOL);
constraint int_eq_reif(aux25,travel_00003_00005,aux1399_BOOL);
constraint int_eq_reif(travel_00003_00005,0,aux1400_BOOL);
constraint int_eq_reif(aux24,travel_00003_00005,aux1401_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1402,opponent_00003_00005,opponent_00003_00006,-20],0);
constraint int_eq_reif(aux3082,travel_00003_00006,aux1403_BOOL);
constraint int_eq_reif(aux22,travel_00003_00006,aux1404_BOOL);
constraint int_eq_reif(travel_00003_00006,0,aux1405_BOOL);
constraint int_eq_reif(aux25,travel_00003_00006,aux1406_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1407,opponent_00003_00006,opponent_00003_00007,-20],0);
constraint int_eq_reif(aux3083,travel_00003_00007,aux1408_BOOL);
constraint int_eq_reif(aux23,travel_00003_00007,aux1409_BOOL);
constraint int_eq_reif(travel_00003_00007,0,aux1410_BOOL);
constraint int_eq_reif(aux22,travel_00003_00007,aux1411_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1412,opponent_00003_00007,opponent_00003_00008,-20],0);
constraint int_eq_reif(aux3084,travel_00003_00008,aux1413_BOOL);
constraint int_eq_reif(aux21,travel_00003_00008,aux1414_BOOL);
constraint int_eq_reif(travel_00003_00008,0,aux1415_BOOL);
constraint int_eq_reif(aux23,travel_00003_00008,aux1416_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1417,opponent_00003_00008,opponent_00003_00009,-20],0);
constraint int_eq_reif(aux3085,travel_00003_00009,aux1418_BOOL);
constraint int_eq_reif(aux20,travel_00003_00009,aux1419_BOOL);
constraint int_eq_reif(travel_00003_00009,0,aux1420_BOOL);
constraint int_eq_reif(aux21,travel_00003_00009,aux1421_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1422,opponent_00003_00009,opponent_00003_00010,-20],0);
constraint int_eq_reif(aux3086,travel_00003_00010,aux1423_BOOL);
constraint int_eq_reif(aux30,travel_00003_00010,aux1424_BOOL);
constraint int_eq_reif(travel_00003_00010,0,aux1425_BOOL);
constraint int_eq_reif(aux20,travel_00003_00010,aux1426_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1427,opponent_00003_00010,opponent_00003_00011,-20],0);
constraint int_eq_reif(aux3087,travel_00003_00011,aux1428_BOOL);
constraint int_eq_reif(aux29,travel_00003_00011,aux1429_BOOL);
constraint int_eq_reif(travel_00003_00011,0,aux1430_BOOL);
constraint int_eq_reif(aux30,travel_00003_00011,aux1431_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1432,opponent_00003_00011,opponent_00003_00012,-20],0);
constraint int_eq_reif(aux3088,travel_00003_00012,aux1433_BOOL);
constraint int_eq_reif(aux28,travel_00003_00012,aux1434_BOOL);
constraint int_eq_reif(travel_00003_00012,0,aux1435_BOOL);
constraint int_eq_reif(aux29,travel_00003_00012,aux1436_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1437,opponent_00003_00012,opponent_00003_00013,-20],0);
constraint int_eq_reif(aux3089,travel_00003_00013,aux1438_BOOL);
constraint int_eq_reif(aux37,travel_00003_00013,aux1439_BOOL);
constraint int_eq_reif(travel_00003_00013,0,aux1440_BOOL);
constraint int_eq_reif(aux28,travel_00003_00013,aux1441_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1442,opponent_00003_00013,opponent_00003_00014,-20],0);
constraint int_eq_reif(aux3090,travel_00003_00014,aux1443_BOOL);
constraint int_eq_reif(aux36,travel_00003_00014,aux1444_BOOL);
constraint int_eq_reif(travel_00003_00014,0,aux1445_BOOL);
constraint int_eq_reif(aux37,travel_00003_00014,aux1446_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1447,opponent_00003_00014,opponent_00003_00015,-20],0);
constraint int_eq_reif(aux3091,travel_00003_00015,aux1448_BOOL);
constraint int_eq_reif(aux35,travel_00003_00015,aux1449_BOOL);
constraint int_eq_reif(travel_00003_00015,0,aux1450_BOOL);
constraint int_eq_reif(aux36,travel_00003_00015,aux1451_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1452,opponent_00003_00015,opponent_00003_00016,-20],0);
constraint int_eq_reif(aux3092,travel_00003_00016,aux1453_BOOL);
constraint int_eq_reif(aux34,travel_00003_00016,aux1454_BOOL);
constraint int_eq_reif(travel_00003_00016,0,aux1455_BOOL);
constraint int_eq_reif(aux35,travel_00003_00016,aux1456_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1457,opponent_00003_00016,opponent_00003_00017,-20],0);
constraint int_eq_reif(aux3093,travel_00003_00017,aux1458_BOOL);
constraint int_eq_reif(aux33,travel_00003_00017,aux1459_BOOL);
constraint int_eq_reif(travel_00003_00017,0,aux1460_BOOL);
constraint int_eq_reif(aux34,travel_00003_00017,aux1461_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1462,opponent_00003_00017,opponent_00003_00018,-20],0);
constraint int_eq_reif(aux3094,travel_00003_00018,aux1463_BOOL);
constraint int_eq_reif(aux32,travel_00003_00018,aux1464_BOOL);
constraint int_eq_reif(travel_00003_00018,0,aux1465_BOOL);
constraint int_eq_reif(aux33,travel_00003_00018,aux1466_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1467,opponent_00003_00018,opponent_00003_00019,-20],0);
constraint int_eq_reif(aux3095,travel_00003_00019,aux1468_BOOL);
constraint int_eq_reif(aux31,travel_00003_00019,aux1469_BOOL);
constraint int_eq_reif(travel_00003_00019,0,aux1470_BOOL);
constraint int_eq_reif(aux32,travel_00003_00019,aux1471_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1472,-20,opponent_00004_00001,opponent_00004_00002],0);
constraint int_eq_reif(aux3096,travel_00004_00002,aux1473_BOOL);
constraint int_eq_reif(travel_00004_00002,aux101,aux1474_BOOL);
constraint int_eq_reif(travel_00004_00002,0,aux1475_BOOL);
constraint int_eq_reif(travel_00004_00002,aux100,aux1476_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1477,-20,opponent_00004_00002,opponent_00004_00003],0);
constraint int_eq_reif(aux3097,travel_00004_00003,aux1478_BOOL);
constraint int_eq_reif(travel_00004_00003,aux102,aux1479_BOOL);
constraint int_eq_reif(travel_00004_00003,0,aux1480_BOOL);
constraint int_eq_reif(travel_00004_00003,aux101,aux1481_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1482,-20,opponent_00004_00003,opponent_00004_00004],0);
constraint int_eq_reif(aux3098,travel_00004_00004,aux1483_BOOL);
constraint int_eq_reif(travel_00004_00004,aux103,aux1484_BOOL);
constraint int_eq_reif(travel_00004_00004,0,aux1485_BOOL);
constraint int_eq_reif(travel_00004_00004,aux102,aux1486_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1487,-20,opponent_00004_00004,opponent_00004_00005],0);
constraint int_eq_reif(aux3099,travel_00004_00005,aux1488_BOOL);
constraint int_eq_reif(travel_00004_00005,aux96,aux1489_BOOL);
constraint int_eq_reif(travel_00004_00005,0,aux1490_BOOL);
constraint int_eq_reif(travel_00004_00005,aux103,aux1491_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1492,-20,opponent_00004_00005,opponent_00004_00006],0);
constraint int_eq_reif(aux3100,travel_00004_00006,aux1493_BOOL);
constraint int_eq_reif(travel_00004_00006,aux97,aux1494_BOOL);
constraint int_eq_reif(travel_00004_00006,0,aux1495_BOOL);
constraint int_eq_reif(travel_00004_00006,aux96,aux1496_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1497,-20,opponent_00004_00006,opponent_00004_00007],0);
constraint int_eq_reif(aux3101,travel_00004_00007,aux1498_BOOL);
constraint int_eq_reif(travel_00004_00007,aux99,aux1499_BOOL);
constraint int_eq_reif(travel_00004_00007,0,aux1500_BOOL);
constraint int_eq_reif(travel_00004_00007,aux97,aux1501_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1502,-20,opponent_00004_00007,opponent_00004_00008],0);
constraint int_eq_reif(aux3102,travel_00004_00008,aux1503_BOOL);
constraint int_eq_reif(travel_00004_00008,aux98,aux1504_BOOL);
constraint int_eq_reif(travel_00004_00008,0,aux1505_BOOL);
constraint int_eq_reif(travel_00004_00008,aux99,aux1506_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1507,-20,opponent_00004_00008,opponent_00004_00009],0);
constraint int_eq_reif(aux3103,travel_00004_00009,aux1508_BOOL);
constraint int_eq_reif(travel_00004_00009,aux114,aux1509_BOOL);
constraint int_eq_reif(travel_00004_00009,0,aux1510_BOOL);
constraint int_eq_reif(travel_00004_00009,aux98,aux1511_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1512,-20,opponent_00004_00009,opponent_00004_00010],0);
constraint int_eq_reif(aux3104,travel_00004_00010,aux1513_BOOL);
constraint int_eq_reif(travel_00004_00010,aux113,aux1514_BOOL);
constraint int_eq_reif(travel_00004_00010,0,aux1515_BOOL);
constraint int_eq_reif(travel_00004_00010,aux114,aux1516_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1517,-20,opponent_00004_00010,opponent_00004_00011],0);
constraint int_eq_reif(aux3105,travel_00004_00011,aux1518_BOOL);
constraint int_eq_reif(travel_00004_00011,aux112,aux1519_BOOL);
constraint int_eq_reif(travel_00004_00011,0,aux1520_BOOL);
constraint int_eq_reif(travel_00004_00011,aux113,aux1521_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1522,-20,opponent_00004_00011,opponent_00004_00012],0);
constraint int_eq_reif(aux3106,travel_00004_00012,aux1523_BOOL);
constraint int_eq_reif(travel_00004_00012,aux109,aux1524_BOOL);
constraint int_eq_reif(travel_00004_00012,0,aux1525_BOOL);
constraint int_eq_reif(travel_00004_00012,aux112,aux1526_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1527,-20,opponent_00004_00012,opponent_00004_00013],0);
constraint int_eq_reif(aux3107,travel_00004_00013,aux1528_BOOL);
constraint int_eq_reif(travel_00004_00013,aux108,aux1529_BOOL);
constraint int_eq_reif(travel_00004_00013,0,aux1530_BOOL);
constraint int_eq_reif(travel_00004_00013,aux109,aux1531_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1532,-20,opponent_00004_00013,opponent_00004_00014],0);
constraint int_eq_reif(aux3108,travel_00004_00014,aux1533_BOOL);
constraint int_eq_reif(travel_00004_00014,aux111,aux1534_BOOL);
constraint int_eq_reif(travel_00004_00014,0,aux1535_BOOL);
constraint int_eq_reif(travel_00004_00014,aux108,aux1536_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1537,-20,opponent_00004_00014,opponent_00004_00015],0);
constraint int_eq_reif(aux3109,travel_00004_00015,aux1538_BOOL);
constraint int_eq_reif(travel_00004_00015,aux110,aux1539_BOOL);
constraint int_eq_reif(travel_00004_00015,0,aux1540_BOOL);
constraint int_eq_reif(travel_00004_00015,aux111,aux1541_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1542,-20,opponent_00004_00015,opponent_00004_00016],0);
constraint int_eq_reif(aux3110,travel_00004_00016,aux1543_BOOL);
constraint int_eq_reif(travel_00004_00016,aux107,aux1544_BOOL);
constraint int_eq_reif(travel_00004_00016,0,aux1545_BOOL);
constraint int_eq_reif(travel_00004_00016,aux110,aux1546_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1547,-20,opponent_00004_00016,opponent_00004_00017],0);
constraint int_eq_reif(aux3111,travel_00004_00017,aux1548_BOOL);
constraint int_eq_reif(travel_00004_00017,aux105,aux1549_BOOL);
constraint int_eq_reif(travel_00004_00017,0,aux1550_BOOL);
constraint int_eq_reif(travel_00004_00017,aux107,aux1551_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1552,-20,opponent_00004_00017,opponent_00004_00018],0);
constraint int_eq_reif(aux3112,travel_00004_00018,aux1553_BOOL);
constraint int_eq_reif(travel_00004_00018,aux104,aux1554_BOOL);
constraint int_eq_reif(travel_00004_00018,0,aux1555_BOOL);
constraint int_eq_reif(travel_00004_00018,aux105,aux1556_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1557,-20,opponent_00004_00018,opponent_00004_00019],0);
constraint int_eq_reif(aux3113,travel_00004_00019,aux1558_BOOL);
constraint int_eq_reif(travel_00004_00019,aux106,aux1559_BOOL);
constraint int_eq_reif(travel_00004_00019,0,aux1560_BOOL);
constraint int_eq_reif(travel_00004_00019,aux104,aux1561_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1562,-20,opponent_00005_00001,opponent_00005_00002],0);
constraint int_eq_reif(aux3114,travel_00005_00002,aux1563_BOOL);
constraint int_eq_reif(aux81,travel_00005_00002,aux1564_BOOL);
constraint int_eq_reif(0,travel_00005_00002,aux1565_BOOL);
constraint int_eq_reif(aux83,travel_00005_00002,aux1566_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1567,-20,opponent_00005_00002,opponent_00005_00003],0);
constraint int_eq_reif(aux3115,travel_00005_00003,aux1568_BOOL);
constraint int_eq_reif(aux82,travel_00005_00003,aux1569_BOOL);
constraint int_eq_reif(0,travel_00005_00003,aux1570_BOOL);
constraint int_eq_reif(aux81,travel_00005_00003,aux1571_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1572,-20,opponent_00005_00003,opponent_00005_00004],0);
constraint int_eq_reif(aux3116,travel_00005_00004,aux1573_BOOL);
constraint int_eq_reif(aux79,travel_00005_00004,aux1574_BOOL);
constraint int_eq_reif(0,travel_00005_00004,aux1575_BOOL);
constraint int_eq_reif(aux82,travel_00005_00004,aux1576_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1577,-20,opponent_00005_00004,opponent_00005_00005],0);
constraint int_eq_reif(aux3117,travel_00005_00005,aux1578_BOOL);
constraint int_eq_reif(aux80,travel_00005_00005,aux1579_BOOL);
constraint int_eq_reif(0,travel_00005_00005,aux1580_BOOL);
constraint int_eq_reif(aux79,travel_00005_00005,aux1581_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1582,-20,opponent_00005_00005,opponent_00005_00006],0);
constraint int_eq_reif(aux3118,travel_00005_00006,aux1583_BOOL);
constraint int_eq_reif(aux78,travel_00005_00006,aux1584_BOOL);
constraint int_eq_reif(0,travel_00005_00006,aux1585_BOOL);
constraint int_eq_reif(aux80,travel_00005_00006,aux1586_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1587,-20,opponent_00005_00006,opponent_00005_00007],0);
constraint int_eq_reif(aux3119,travel_00005_00007,aux1588_BOOL);
constraint int_eq_reif(aux77,travel_00005_00007,aux1589_BOOL);
constraint int_eq_reif(0,travel_00005_00007,aux1590_BOOL);
constraint int_eq_reif(aux78,travel_00005_00007,aux1591_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1592,-20,opponent_00005_00007,opponent_00005_00008],0);
constraint int_eq_reif(aux3120,travel_00005_00008,aux1593_BOOL);
constraint int_eq_reif(aux95,travel_00005_00008,aux1594_BOOL);
constraint int_eq_reif(0,travel_00005_00008,aux1595_BOOL);
constraint int_eq_reif(aux77,travel_00005_00008,aux1596_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1597,-20,opponent_00005_00008,opponent_00005_00009],0);
constraint int_eq_reif(aux3121,travel_00005_00009,aux1598_BOOL);
constraint int_eq_reif(aux94,travel_00005_00009,aux1599_BOOL);
constraint int_eq_reif(0,travel_00005_00009,aux1600_BOOL);
constraint int_eq_reif(aux95,travel_00005_00009,aux1601_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1602,-20,opponent_00005_00009,opponent_00005_00010],0);
constraint int_eq_reif(aux3122,travel_00005_00010,aux1603_BOOL);
constraint int_eq_reif(aux85,travel_00005_00010,aux1604_BOOL);
constraint int_eq_reif(0,travel_00005_00010,aux1605_BOOL);
constraint int_eq_reif(aux94,travel_00005_00010,aux1606_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1607,-20,opponent_00005_00010,opponent_00005_00011],0);
constraint int_eq_reif(aux3123,travel_00005_00011,aux1608_BOOL);
constraint int_eq_reif(aux93,travel_00005_00011,aux1609_BOOL);
constraint int_eq_reif(0,travel_00005_00011,aux1610_BOOL);
constraint int_eq_reif(aux85,travel_00005_00011,aux1611_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1612,-20,opponent_00005_00011,opponent_00005_00012],0);
constraint int_eq_reif(aux3124,travel_00005_00012,aux1613_BOOL);
constraint int_eq_reif(aux92,travel_00005_00012,aux1614_BOOL);
constraint int_eq_reif(0,travel_00005_00012,aux1615_BOOL);
constraint int_eq_reif(aux93,travel_00005_00012,aux1616_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1617,-20,opponent_00005_00012,opponent_00005_00013],0);
constraint int_eq_reif(aux3125,travel_00005_00013,aux1618_BOOL);
constraint int_eq_reif(aux91,travel_00005_00013,aux1619_BOOL);
constraint int_eq_reif(0,travel_00005_00013,aux1620_BOOL);
constraint int_eq_reif(aux92,travel_00005_00013,aux1621_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1622,-20,opponent_00005_00013,opponent_00005_00014],0);
constraint int_eq_reif(aux3126,travel_00005_00014,aux1623_BOOL);
constraint int_eq_reif(aux90,travel_00005_00014,aux1624_BOOL);
constraint int_eq_reif(0,travel_00005_00014,aux1625_BOOL);
constraint int_eq_reif(aux91,travel_00005_00014,aux1626_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1627,-20,opponent_00005_00014,opponent_00005_00015],0);
constraint int_eq_reif(aux3127,travel_00005_00015,aux1628_BOOL);
constraint int_eq_reif(aux89,travel_00005_00015,aux1629_BOOL);
constraint int_eq_reif(0,travel_00005_00015,aux1630_BOOL);
constraint int_eq_reif(aux90,travel_00005_00015,aux1631_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1632,-20,opponent_00005_00015,opponent_00005_00016],0);
constraint int_eq_reif(aux3128,travel_00005_00016,aux1633_BOOL);
constraint int_eq_reif(aux88,travel_00005_00016,aux1634_BOOL);
constraint int_eq_reif(0,travel_00005_00016,aux1635_BOOL);
constraint int_eq_reif(aux89,travel_00005_00016,aux1636_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1637,-20,opponent_00005_00016,opponent_00005_00017],0);
constraint int_eq_reif(aux3129,travel_00005_00017,aux1638_BOOL);
constraint int_eq_reif(aux86,travel_00005_00017,aux1639_BOOL);
constraint int_eq_reif(0,travel_00005_00017,aux1640_BOOL);
constraint int_eq_reif(aux88,travel_00005_00017,aux1641_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1642,-20,opponent_00005_00017,opponent_00005_00018],0);
constraint int_eq_reif(aux3130,travel_00005_00018,aux1643_BOOL);
constraint int_eq_reif(aux87,travel_00005_00018,aux1644_BOOL);
constraint int_eq_reif(0,travel_00005_00018,aux1645_BOOL);
constraint int_eq_reif(aux86,travel_00005_00018,aux1646_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1647,-20,opponent_00005_00018,opponent_00005_00019],0);
constraint int_eq_reif(aux3131,travel_00005_00019,aux1648_BOOL);
constraint int_eq_reif(aux84,travel_00005_00019,aux1649_BOOL);
constraint int_eq_reif(0,travel_00005_00019,aux1650_BOOL);
constraint int_eq_reif(aux87,travel_00005_00019,aux1651_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00006_00001,opponent_00006_00002,aux1652,-20],0);
constraint int_eq_reif(aux3132,travel_00006_00002,aux1653_BOOL);
constraint int_eq_reif(aux248,travel_00006_00002,aux1654_BOOL);
constraint int_eq_reif(0,travel_00006_00002,aux1655_BOOL);
constraint int_eq_reif(aux247,travel_00006_00002,aux1656_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00006_00002,opponent_00006_00003,aux1657,-20],0);
constraint int_eq_reif(aux3133,travel_00006_00003,aux1658_BOOL);
constraint int_eq_reif(aux243,travel_00006_00003,aux1659_BOOL);
constraint int_eq_reif(0,travel_00006_00003,aux1660_BOOL);
constraint int_eq_reif(aux248,travel_00006_00003,aux1661_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00006_00003,opponent_00006_00004,aux1662,-20],0);
constraint int_eq_reif(aux3134,travel_00006_00004,aux1663_BOOL);
constraint int_eq_reif(aux244,travel_00006_00004,aux1664_BOOL);
constraint int_eq_reif(0,travel_00006_00004,aux1665_BOOL);
constraint int_eq_reif(aux243,travel_00006_00004,aux1666_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00006_00004,opponent_00006_00005,aux1667,-20],0);
constraint int_eq_reif(aux3135,travel_00006_00005,aux1668_BOOL);
constraint int_eq_reif(aux246,travel_00006_00005,aux1669_BOOL);
constraint int_eq_reif(0,travel_00006_00005,aux1670_BOOL);
constraint int_eq_reif(aux244,travel_00006_00005,aux1671_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00006_00005,opponent_00006_00006,aux1672,-20],0);
constraint int_eq_reif(aux3136,travel_00006_00006,aux1673_BOOL);
constraint int_eq_reif(aux245,travel_00006_00006,aux1674_BOOL);
constraint int_eq_reif(0,travel_00006_00006,aux1675_BOOL);
constraint int_eq_reif(aux246,travel_00006_00006,aux1676_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00006_00006,opponent_00006_00007,aux1677,-20],0);
constraint int_eq_reif(aux3137,travel_00006_00007,aux1678_BOOL);
constraint int_eq_reif(aux241,travel_00006_00007,aux1679_BOOL);
constraint int_eq_reif(0,travel_00006_00007,aux1680_BOOL);
constraint int_eq_reif(aux245,travel_00006_00007,aux1681_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00006_00007,opponent_00006_00008,aux1682,-20],0);
constraint int_eq_reif(aux3138,travel_00006_00008,aux1683_BOOL);
constraint int_eq_reif(aux240,travel_00006_00008,aux1684_BOOL);
constraint int_eq_reif(0,travel_00006_00008,aux1685_BOOL);
constraint int_eq_reif(aux241,travel_00006_00008,aux1686_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00006_00008,opponent_00006_00009,aux1687,-20],0);
constraint int_eq_reif(aux3139,travel_00006_00009,aux1688_BOOL);
constraint int_eq_reif(aux242,travel_00006_00009,aux1689_BOOL);
constraint int_eq_reif(0,travel_00006_00009,aux1690_BOOL);
constraint int_eq_reif(aux240,travel_00006_00009,aux1691_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00006_00009,opponent_00006_00010,aux1692,-20],0);
constraint int_eq_reif(aux3140,travel_00006_00010,aux1693_BOOL);
constraint int_eq_reif(aux237,travel_00006_00010,aux1694_BOOL);
constraint int_eq_reif(0,travel_00006_00010,aux1695_BOOL);
constraint int_eq_reif(aux242,travel_00006_00010,aux1696_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00006_00010,opponent_00006_00011,aux1697,-20],0);
constraint int_eq_reif(aux3141,travel_00006_00011,aux1698_BOOL);
constraint int_eq_reif(aux236,travel_00006_00011,aux1699_BOOL);
constraint int_eq_reif(0,travel_00006_00011,aux1700_BOOL);
constraint int_eq_reif(aux237,travel_00006_00011,aux1701_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00006_00011,opponent_00006_00012,aux1702,-20],0);
constraint int_eq_reif(aux3142,travel_00006_00012,aux1703_BOOL);
constraint int_eq_reif(aux239,travel_00006_00012,aux1704_BOOL);
constraint int_eq_reif(0,travel_00006_00012,aux1705_BOOL);
constraint int_eq_reif(aux236,travel_00006_00012,aux1706_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00006_00012,opponent_00006_00013,aux1707,-20],0);
constraint int_eq_reif(aux3143,travel_00006_00013,aux1708_BOOL);
constraint int_eq_reif(aux238,travel_00006_00013,aux1709_BOOL);
constraint int_eq_reif(0,travel_00006_00013,aux1710_BOOL);
constraint int_eq_reif(aux239,travel_00006_00013,aux1711_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00006_00013,opponent_00006_00014,aux1712,-20],0);
constraint int_eq_reif(aux3144,travel_00006_00014,aux1713_BOOL);
constraint int_eq_reif(aux235,travel_00006_00014,aux1714_BOOL);
constraint int_eq_reif(0,travel_00006_00014,aux1715_BOOL);
constraint int_eq_reif(aux238,travel_00006_00014,aux1716_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00006_00014,opponent_00006_00015,aux1717,-20],0);
constraint int_eq_reif(aux3145,travel_00006_00015,aux1718_BOOL);
constraint int_eq_reif(aux233,travel_00006_00015,aux1719_BOOL);
constraint int_eq_reif(0,travel_00006_00015,aux1720_BOOL);
constraint int_eq_reif(aux235,travel_00006_00015,aux1721_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00006_00015,opponent_00006_00016,aux1722,-20],0);
constraint int_eq_reif(aux3146,travel_00006_00016,aux1723_BOOL);
constraint int_eq_reif(aux232,travel_00006_00016,aux1724_BOOL);
constraint int_eq_reif(0,travel_00006_00016,aux1725_BOOL);
constraint int_eq_reif(aux233,travel_00006_00016,aux1726_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00006_00016,opponent_00006_00017,aux1727,-20],0);
constraint int_eq_reif(aux3147,travel_00006_00017,aux1728_BOOL);
constraint int_eq_reif(aux234,travel_00006_00017,aux1729_BOOL);
constraint int_eq_reif(0,travel_00006_00017,aux1730_BOOL);
constraint int_eq_reif(aux232,travel_00006_00017,aux1731_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00006_00017,opponent_00006_00018,aux1732,-20],0);
constraint int_eq_reif(aux3148,travel_00006_00018,aux1733_BOOL);
constraint int_eq_reif(aux230,travel_00006_00018,aux1734_BOOL);
constraint int_eq_reif(0,travel_00006_00018,aux1735_BOOL);
constraint int_eq_reif(aux234,travel_00006_00018,aux1736_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00006_00018,opponent_00006_00019,aux1737,-20],0);
constraint int_eq_reif(aux3149,travel_00006_00019,aux1738_BOOL);
constraint int_eq_reif(aux231,travel_00006_00019,aux1739_BOOL);
constraint int_eq_reif(0,travel_00006_00019,aux1740_BOOL);
constraint int_eq_reif(aux230,travel_00006_00019,aux1741_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00007_00001,opponent_00007_00002,aux1742,-20],0);
constraint int_eq_reif(aux3150,travel_00007_00002,aux1743_BOOL);
constraint int_eq_reif(aux289,travel_00007_00002,aux1744_BOOL);
constraint int_eq_reif(0,travel_00007_00002,aux1745_BOOL);
constraint int_eq_reif(aux291,travel_00007_00002,aux1746_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00007_00002,opponent_00007_00003,aux1747,-20],0);
constraint int_eq_reif(aux3151,travel_00007_00003,aux1748_BOOL);
constraint int_eq_reif(aux290,travel_00007_00003,aux1749_BOOL);
constraint int_eq_reif(0,travel_00007_00003,aux1750_BOOL);
constraint int_eq_reif(aux289,travel_00007_00003,aux1751_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00007_00003,opponent_00007_00004,aux1752,-20],0);
constraint int_eq_reif(aux3152,travel_00007_00004,aux1753_BOOL);
constraint int_eq_reif(aux288,travel_00007_00004,aux1754_BOOL);
constraint int_eq_reif(0,travel_00007_00004,aux1755_BOOL);
constraint int_eq_reif(aux290,travel_00007_00004,aux1756_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00007_00004,opponent_00007_00005,aux1757,-20],0);
constraint int_eq_reif(aux3153,travel_00007_00005,aux1758_BOOL);
constraint int_eq_reif(aux287,travel_00007_00005,aux1759_BOOL);
constraint int_eq_reif(0,travel_00007_00005,aux1760_BOOL);
constraint int_eq_reif(aux288,travel_00007_00005,aux1761_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00007_00005,opponent_00007_00006,aux1762,-20],0);
constraint int_eq_reif(aux3154,travel_00007_00006,aux1763_BOOL);
constraint int_eq_reif(aux302,travel_00007_00006,aux1764_BOOL);
constraint int_eq_reif(0,travel_00007_00006,aux1765_BOOL);
constraint int_eq_reif(aux287,travel_00007_00006,aux1766_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00007_00006,opponent_00007_00007,aux1767,-20],0);
constraint int_eq_reif(aux3155,travel_00007_00007,aux1768_BOOL);
constraint int_eq_reif(aux301,travel_00007_00007,aux1769_BOOL);
constraint int_eq_reif(0,travel_00007_00007,aux1770_BOOL);
constraint int_eq_reif(aux302,travel_00007_00007,aux1771_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00007_00007,opponent_00007_00008,aux1772,-20],0);
constraint int_eq_reif(aux3156,travel_00007_00008,aux1773_BOOL);
constraint int_eq_reif(aux300,travel_00007_00008,aux1774_BOOL);
constraint int_eq_reif(0,travel_00007_00008,aux1775_BOOL);
constraint int_eq_reif(aux301,travel_00007_00008,aux1776_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00007_00008,opponent_00007_00009,aux1777,-20],0);
constraint int_eq_reif(aux3157,travel_00007_00009,aux1778_BOOL);
constraint int_eq_reif(aux299,travel_00007_00009,aux1779_BOOL);
constraint int_eq_reif(0,travel_00007_00009,aux1780_BOOL);
constraint int_eq_reif(aux300,travel_00007_00009,aux1781_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00007_00009,opponent_00007_00010,aux1782,-20],0);
constraint int_eq_reif(aux3158,travel_00007_00010,aux1783_BOOL);
constraint int_eq_reif(aux298,travel_00007_00010,aux1784_BOOL);
constraint int_eq_reif(0,travel_00007_00010,aux1785_BOOL);
constraint int_eq_reif(aux299,travel_00007_00010,aux1786_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00007_00010,opponent_00007_00011,aux1787,-20],0);
constraint int_eq_reif(aux3159,travel_00007_00011,aux1788_BOOL);
constraint int_eq_reif(aux297,travel_00007_00011,aux1789_BOOL);
constraint int_eq_reif(0,travel_00007_00011,aux1790_BOOL);
constraint int_eq_reif(aux298,travel_00007_00011,aux1791_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00007_00011,opponent_00007_00012,aux1792,-20],0);
constraint int_eq_reif(aux3160,travel_00007_00012,aux1793_BOOL);
constraint int_eq_reif(aux296,travel_00007_00012,aux1794_BOOL);
constraint int_eq_reif(0,travel_00007_00012,aux1795_BOOL);
constraint int_eq_reif(aux297,travel_00007_00012,aux1796_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00007_00012,opponent_00007_00013,aux1797,-20],0);
constraint int_eq_reif(aux3161,travel_00007_00013,aux1798_BOOL);
constraint int_eq_reif(aux295,travel_00007_00013,aux1799_BOOL);
constraint int_eq_reif(0,travel_00007_00013,aux1800_BOOL);
constraint int_eq_reif(aux296,travel_00007_00013,aux1801_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00007_00013,opponent_00007_00014,aux1802,-20],0);
constraint int_eq_reif(aux3162,travel_00007_00014,aux1803_BOOL);
constraint int_eq_reif(aux294,travel_00007_00014,aux1804_BOOL);
constraint int_eq_reif(0,travel_00007_00014,aux1805_BOOL);
constraint int_eq_reif(aux295,travel_00007_00014,aux1806_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00007_00014,opponent_00007_00015,aux1807,-20],0);
constraint int_eq_reif(aux3163,travel_00007_00015,aux1808_BOOL);
constraint int_eq_reif(aux292,travel_00007_00015,aux1809_BOOL);
constraint int_eq_reif(0,travel_00007_00015,aux1810_BOOL);
constraint int_eq_reif(aux294,travel_00007_00015,aux1811_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00007_00015,opponent_00007_00016,aux1812,-20],0);
constraint int_eq_reif(aux3164,travel_00007_00016,aux1813_BOOL);
constraint int_eq_reif(aux293,travel_00007_00016,aux1814_BOOL);
constraint int_eq_reif(0,travel_00007_00016,aux1815_BOOL);
constraint int_eq_reif(aux292,travel_00007_00016,aux1816_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00007_00016,opponent_00007_00017,aux1817,-20],0);
constraint int_eq_reif(aux3165,travel_00007_00017,aux1818_BOOL);
constraint int_eq_reif(aux303,travel_00007_00017,aux1819_BOOL);
constraint int_eq_reif(0,travel_00007_00017,aux1820_BOOL);
constraint int_eq_reif(aux293,travel_00007_00017,aux1821_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00007_00017,opponent_00007_00018,aux1822,-20],0);
constraint int_eq_reif(aux3166,travel_00007_00018,aux1823_BOOL);
constraint int_eq_reif(aux304,travel_00007_00018,aux1824_BOOL);
constraint int_eq_reif(0,travel_00007_00018,aux1825_BOOL);
constraint int_eq_reif(aux303,travel_00007_00018,aux1826_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00007_00018,opponent_00007_00019,aux1827,-20],0);
constraint int_eq_reif(aux3167,travel_00007_00019,aux1828_BOOL);
constraint int_eq_reif(aux305,travel_00007_00019,aux1829_BOOL);
constraint int_eq_reif(0,travel_00007_00019,aux1830_BOOL);
constraint int_eq_reif(aux304,travel_00007_00019,aux1831_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1832,opponent_00008_00001,opponent_00008_00002,-20],0);
constraint int_eq_reif(aux3168,travel_00008_00002,aux1833_BOOL);
constraint int_eq_reif(travel_00008_00002,aux54,aux1834_BOOL);
constraint int_eq_reif(travel_00008_00002,0,aux1835_BOOL);
constraint int_eq_reif(travel_00008_00002,aux53,aux1836_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1837,opponent_00008_00002,opponent_00008_00003,-20],0);
constraint int_eq_reif(aux3169,travel_00008_00003,aux1838_BOOL);
constraint int_eq_reif(travel_00008_00003,aux56,aux1839_BOOL);
constraint int_eq_reif(travel_00008_00003,0,aux1840_BOOL);
constraint int_eq_reif(travel_00008_00003,aux54,aux1841_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1842,opponent_00008_00003,opponent_00008_00004,-20],0);
constraint int_eq_reif(aux3170,travel_00008_00004,aux1843_BOOL);
constraint int_eq_reif(travel_00008_00004,aux55,aux1844_BOOL);
constraint int_eq_reif(travel_00008_00004,0,aux1845_BOOL);
constraint int_eq_reif(travel_00008_00004,aux56,aux1846_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1847,opponent_00008_00004,opponent_00008_00005,-20],0);
constraint int_eq_reif(aux3171,travel_00008_00005,aux1848_BOOL);
constraint int_eq_reif(travel_00008_00005,aux46,aux1849_BOOL);
constraint int_eq_reif(travel_00008_00005,0,aux1850_BOOL);
constraint int_eq_reif(travel_00008_00005,aux55,aux1851_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1852,opponent_00008_00005,opponent_00008_00006,-20],0);
constraint int_eq_reif(aux3172,travel_00008_00006,aux1853_BOOL);
constraint int_eq_reif(travel_00008_00006,aux45,aux1854_BOOL);
constraint int_eq_reif(travel_00008_00006,0,aux1855_BOOL);
constraint int_eq_reif(travel_00008_00006,aux46,aux1856_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1857,opponent_00008_00006,opponent_00008_00007,-20],0);
constraint int_eq_reif(aux3173,travel_00008_00007,aux1858_BOOL);
constraint int_eq_reif(travel_00008_00007,aux48,aux1859_BOOL);
constraint int_eq_reif(travel_00008_00007,0,aux1860_BOOL);
constraint int_eq_reif(travel_00008_00007,aux45,aux1861_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1862,opponent_00008_00007,opponent_00008_00008,-20],0);
constraint int_eq_reif(aux3174,travel_00008_00008,aux1863_BOOL);
constraint int_eq_reif(travel_00008_00008,aux47,aux1864_BOOL);
constraint int_eq_reif(travel_00008_00008,0,aux1865_BOOL);
constraint int_eq_reif(travel_00008_00008,aux48,aux1866_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1867,opponent_00008_00008,opponent_00008_00009,-20],0);
constraint int_eq_reif(aux3175,travel_00008_00009,aux1868_BOOL);
constraint int_eq_reif(travel_00008_00009,aux44,aux1869_BOOL);
constraint int_eq_reif(travel_00008_00009,0,aux1870_BOOL);
constraint int_eq_reif(travel_00008_00009,aux47,aux1871_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1872,opponent_00008_00009,opponent_00008_00010,-20],0);
constraint int_eq_reif(aux3176,travel_00008_00010,aux1873_BOOL);
constraint int_eq_reif(travel_00008_00010,aux43,aux1874_BOOL);
constraint int_eq_reif(travel_00008_00010,0,aux1875_BOOL);
constraint int_eq_reif(travel_00008_00010,aux44,aux1876_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1877,opponent_00008_00010,opponent_00008_00011,-20],0);
constraint int_eq_reif(aux3177,travel_00008_00011,aux1878_BOOL);
constraint int_eq_reif(travel_00008_00011,aux42,aux1879_BOOL);
constraint int_eq_reif(travel_00008_00011,0,aux1880_BOOL);
constraint int_eq_reif(travel_00008_00011,aux43,aux1881_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1882,opponent_00008_00011,opponent_00008_00012,-20],0);
constraint int_eq_reif(aux3178,travel_00008_00012,aux1883_BOOL);
constraint int_eq_reif(travel_00008_00012,aux41,aux1884_BOOL);
constraint int_eq_reif(travel_00008_00012,0,aux1885_BOOL);
constraint int_eq_reif(travel_00008_00012,aux42,aux1886_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1887,opponent_00008_00012,opponent_00008_00013,-20],0);
constraint int_eq_reif(aux3179,travel_00008_00013,aux1888_BOOL);
constraint int_eq_reif(travel_00008_00013,aux39,aux1889_BOOL);
constraint int_eq_reif(travel_00008_00013,0,aux1890_BOOL);
constraint int_eq_reif(travel_00008_00013,aux41,aux1891_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1892,opponent_00008_00013,opponent_00008_00014,-20],0);
constraint int_eq_reif(aux3180,travel_00008_00014,aux1893_BOOL);
constraint int_eq_reif(travel_00008_00014,aux38,aux1894_BOOL);
constraint int_eq_reif(travel_00008_00014,0,aux1895_BOOL);
constraint int_eq_reif(travel_00008_00014,aux39,aux1896_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1897,opponent_00008_00014,opponent_00008_00015,-20],0);
constraint int_eq_reif(aux3181,travel_00008_00015,aux1898_BOOL);
constraint int_eq_reif(travel_00008_00015,aux40,aux1899_BOOL);
constraint int_eq_reif(travel_00008_00015,0,aux1900_BOOL);
constraint int_eq_reif(travel_00008_00015,aux38,aux1901_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1902,opponent_00008_00015,opponent_00008_00016,-20],0);
constraint int_eq_reif(aux3182,travel_00008_00016,aux1903_BOOL);
constraint int_eq_reif(travel_00008_00016,aux51,aux1904_BOOL);
constraint int_eq_reif(travel_00008_00016,0,aux1905_BOOL);
constraint int_eq_reif(travel_00008_00016,aux40,aux1906_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1907,opponent_00008_00016,opponent_00008_00017,-20],0);
constraint int_eq_reif(aux3183,travel_00008_00017,aux1908_BOOL);
constraint int_eq_reif(travel_00008_00017,aux52,aux1909_BOOL);
constraint int_eq_reif(travel_00008_00017,0,aux1910_BOOL);
constraint int_eq_reif(travel_00008_00017,aux51,aux1911_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1912,opponent_00008_00017,opponent_00008_00018,-20],0);
constraint int_eq_reif(aux3184,travel_00008_00018,aux1913_BOOL);
constraint int_eq_reif(travel_00008_00018,aux49,aux1914_BOOL);
constraint int_eq_reif(travel_00008_00018,0,aux1915_BOOL);
constraint int_eq_reif(travel_00008_00018,aux52,aux1916_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux1917,opponent_00008_00018,opponent_00008_00019,-20],0);
constraint int_eq_reif(aux3185,travel_00008_00019,aux1918_BOOL);
constraint int_eq_reif(travel_00008_00019,aux50,aux1919_BOOL);
constraint int_eq_reif(travel_00008_00019,0,aux1920_BOOL);
constraint int_eq_reif(travel_00008_00019,aux49,aux1921_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1922,-20,opponent_00009_00001,opponent_00009_00002],0);
constraint int_eq_reif(aux3186,travel_00009_00002,aux1923_BOOL);
constraint int_eq_reif(travel_00009_00002,aux116,aux1924_BOOL);
constraint int_eq_reif(travel_00009_00002,0,aux1925_BOOL);
constraint int_eq_reif(travel_00009_00002,aux117,aux1926_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1927,-20,opponent_00009_00002,opponent_00009_00003],0);
constraint int_eq_reif(aux3187,travel_00009_00003,aux1928_BOOL);
constraint int_eq_reif(travel_00009_00003,aux115,aux1929_BOOL);
constraint int_eq_reif(travel_00009_00003,0,aux1930_BOOL);
constraint int_eq_reif(travel_00009_00003,aux116,aux1931_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1932,-20,opponent_00009_00003,opponent_00009_00004],0);
constraint int_eq_reif(aux3188,travel_00009_00004,aux1933_BOOL);
constraint int_eq_reif(travel_00009_00004,aux133,aux1934_BOOL);
constraint int_eq_reif(travel_00009_00004,0,aux1935_BOOL);
constraint int_eq_reif(travel_00009_00004,aux115,aux1936_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1937,-20,opponent_00009_00004,opponent_00009_00005],0);
constraint int_eq_reif(aux3189,travel_00009_00005,aux1938_BOOL);
constraint int_eq_reif(travel_00009_00005,aux132,aux1939_BOOL);
constraint int_eq_reif(travel_00009_00005,0,aux1940_BOOL);
constraint int_eq_reif(travel_00009_00005,aux133,aux1941_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1942,-20,opponent_00009_00005,opponent_00009_00006],0);
constraint int_eq_reif(aux3190,travel_00009_00006,aux1943_BOOL);
constraint int_eq_reif(travel_00009_00006,aux131,aux1944_BOOL);
constraint int_eq_reif(travel_00009_00006,0,aux1945_BOOL);
constraint int_eq_reif(travel_00009_00006,aux132,aux1946_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1947,-20,opponent_00009_00006,opponent_00009_00007],0);
constraint int_eq_reif(aux3191,travel_00009_00007,aux1948_BOOL);
constraint int_eq_reif(travel_00009_00007,aux130,aux1949_BOOL);
constraint int_eq_reif(travel_00009_00007,0,aux1950_BOOL);
constraint int_eq_reif(travel_00009_00007,aux131,aux1951_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1952,-20,opponent_00009_00007,opponent_00009_00008],0);
constraint int_eq_reif(aux3192,travel_00009_00008,aux1953_BOOL);
constraint int_eq_reif(travel_00009_00008,aux129,aux1954_BOOL);
constraint int_eq_reif(travel_00009_00008,0,aux1955_BOOL);
constraint int_eq_reif(travel_00009_00008,aux130,aux1956_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1957,-20,opponent_00009_00008,opponent_00009_00009],0);
constraint int_eq_reif(aux3193,travel_00009_00009,aux1958_BOOL);
constraint int_eq_reif(travel_00009_00009,aux128,aux1959_BOOL);
constraint int_eq_reif(travel_00009_00009,0,aux1960_BOOL);
constraint int_eq_reif(travel_00009_00009,aux129,aux1961_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1962,-20,opponent_00009_00009,opponent_00009_00010],0);
constraint int_eq_reif(aux3194,travel_00009_00010,aux1963_BOOL);
constraint int_eq_reif(travel_00009_00010,aux127,aux1964_BOOL);
constraint int_eq_reif(travel_00009_00010,0,aux1965_BOOL);
constraint int_eq_reif(travel_00009_00010,aux128,aux1966_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1967,-20,opponent_00009_00010,opponent_00009_00011],0);
constraint int_eq_reif(aux3195,travel_00009_00011,aux1968_BOOL);
constraint int_eq_reif(travel_00009_00011,aux126,aux1969_BOOL);
constraint int_eq_reif(travel_00009_00011,0,aux1970_BOOL);
constraint int_eq_reif(travel_00009_00011,aux127,aux1971_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1972,-20,opponent_00009_00011,opponent_00009_00012],0);
constraint int_eq_reif(aux3196,travel_00009_00012,aux1973_BOOL);
constraint int_eq_reif(travel_00009_00012,aux125,aux1974_BOOL);
constraint int_eq_reif(travel_00009_00012,0,aux1975_BOOL);
constraint int_eq_reif(travel_00009_00012,aux126,aux1976_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1977,-20,opponent_00009_00012,opponent_00009_00013],0);
constraint int_eq_reif(aux3197,travel_00009_00013,aux1978_BOOL);
constraint int_eq_reif(travel_00009_00013,aux123,aux1979_BOOL);
constraint int_eq_reif(travel_00009_00013,0,aux1980_BOOL);
constraint int_eq_reif(travel_00009_00013,aux125,aux1981_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1982,-20,opponent_00009_00013,opponent_00009_00014],0);
constraint int_eq_reif(aux3198,travel_00009_00014,aux1983_BOOL);
constraint int_eq_reif(travel_00009_00014,aux124,aux1984_BOOL);
constraint int_eq_reif(travel_00009_00014,0,aux1985_BOOL);
constraint int_eq_reif(travel_00009_00014,aux123,aux1986_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1987,-20,opponent_00009_00014,opponent_00009_00015],0);
constraint int_eq_reif(aux3199,travel_00009_00015,aux1988_BOOL);
constraint int_eq_reif(travel_00009_00015,aux118,aux1989_BOOL);
constraint int_eq_reif(travel_00009_00015,0,aux1990_BOOL);
constraint int_eq_reif(travel_00009_00015,aux124,aux1991_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1992,-20,opponent_00009_00015,opponent_00009_00016],0);
constraint int_eq_reif(aux3200,travel_00009_00016,aux1993_BOOL);
constraint int_eq_reif(travel_00009_00016,aux119,aux1994_BOOL);
constraint int_eq_reif(travel_00009_00016,0,aux1995_BOOL);
constraint int_eq_reif(travel_00009_00016,aux118,aux1996_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux1997,-20,opponent_00009_00016,opponent_00009_00017],0);
constraint int_eq_reif(aux3201,travel_00009_00017,aux1998_BOOL);
constraint int_eq_reif(travel_00009_00017,aux120,aux1999_BOOL);
constraint int_eq_reif(travel_00009_00017,0,aux2000_BOOL);
constraint int_eq_reif(travel_00009_00017,aux119,aux2001_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2002,-20,opponent_00009_00017,opponent_00009_00018],0);
constraint int_eq_reif(aux3202,travel_00009_00018,aux2003_BOOL);
constraint int_eq_reif(travel_00009_00018,aux121,aux2004_BOOL);
constraint int_eq_reif(travel_00009_00018,0,aux2005_BOOL);
constraint int_eq_reif(travel_00009_00018,aux120,aux2006_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2007,-20,opponent_00009_00018,opponent_00009_00019],0);
constraint int_eq_reif(aux3203,travel_00009_00019,aux2008_BOOL);
constraint int_eq_reif(travel_00009_00019,aux122,aux2009_BOOL);
constraint int_eq_reif(travel_00009_00019,0,aux2010_BOOL);
constraint int_eq_reif(travel_00009_00019,aux121,aux2011_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00010_00001,opponent_00010_00002,aux2012,-20],0);
constraint int_eq_reif(aux3204,travel_00010_00002,aux2013_BOOL);
constraint int_eq_reif(aux65,travel_00010_00002,aux2014_BOOL);
constraint int_eq_reif(0,travel_00010_00002,aux2015_BOOL);
constraint int_eq_reif(aux66,travel_00010_00002,aux2016_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00010_00002,opponent_00010_00003,aux2017,-20],0);
constraint int_eq_reif(aux3205,travel_00010_00003,aux2018_BOOL);
constraint int_eq_reif(aux64,travel_00010_00003,aux2019_BOOL);
constraint int_eq_reif(0,travel_00010_00003,aux2020_BOOL);
constraint int_eq_reif(aux65,travel_00010_00003,aux2021_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00010_00003,opponent_00010_00004,aux2022,-20],0);
constraint int_eq_reif(aux3206,travel_00010_00004,aux2023_BOOL);
constraint int_eq_reif(aux63,travel_00010_00004,aux2024_BOOL);
constraint int_eq_reif(0,travel_00010_00004,aux2025_BOOL);
constraint int_eq_reif(aux64,travel_00010_00004,aux2026_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00010_00004,opponent_00010_00005,aux2027,-20],0);
constraint int_eq_reif(aux3207,travel_00010_00005,aux2028_BOOL);
constraint int_eq_reif(aux62,travel_00010_00005,aux2029_BOOL);
constraint int_eq_reif(0,travel_00010_00005,aux2030_BOOL);
constraint int_eq_reif(aux63,travel_00010_00005,aux2031_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00010_00005,opponent_00010_00006,aux2032,-20],0);
constraint int_eq_reif(aux3208,travel_00010_00006,aux2033_BOOL);
constraint int_eq_reif(aux61,travel_00010_00006,aux2034_BOOL);
constraint int_eq_reif(0,travel_00010_00006,aux2035_BOOL);
constraint int_eq_reif(aux62,travel_00010_00006,aux2036_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00010_00006,opponent_00010_00007,aux2037,-20],0);
constraint int_eq_reif(aux3209,travel_00010_00007,aux2038_BOOL);
constraint int_eq_reif(aux60,travel_00010_00007,aux2039_BOOL);
constraint int_eq_reif(0,travel_00010_00007,aux2040_BOOL);
constraint int_eq_reif(aux61,travel_00010_00007,aux2041_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00010_00007,opponent_00010_00008,aux2042,-20],0);
constraint int_eq_reif(aux3210,travel_00010_00008,aux2043_BOOL);
constraint int_eq_reif(aux59,travel_00010_00008,aux2044_BOOL);
constraint int_eq_reif(0,travel_00010_00008,aux2045_BOOL);
constraint int_eq_reif(aux60,travel_00010_00008,aux2046_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00010_00008,opponent_00010_00009,aux2047,-20],0);
constraint int_eq_reif(aux3211,travel_00010_00009,aux2048_BOOL);
constraint int_eq_reif(aux58,travel_00010_00009,aux2049_BOOL);
constraint int_eq_reif(0,travel_00010_00009,aux2050_BOOL);
constraint int_eq_reif(aux59,travel_00010_00009,aux2051_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00010_00009,opponent_00010_00010,aux2052,-20],0);
constraint int_eq_reif(aux3212,travel_00010_00010,aux2053_BOOL);
constraint int_eq_reif(aux67,travel_00010_00010,aux2054_BOOL);
constraint int_eq_reif(0,travel_00010_00010,aux2055_BOOL);
constraint int_eq_reif(aux58,travel_00010_00010,aux2056_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00010_00010,opponent_00010_00011,aux2057,-20],0);
constraint int_eq_reif(aux3213,travel_00010_00011,aux2058_BOOL);
constraint int_eq_reif(aux68,travel_00010_00011,aux2059_BOOL);
constraint int_eq_reif(0,travel_00010_00011,aux2060_BOOL);
constraint int_eq_reif(aux67,travel_00010_00011,aux2061_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00010_00011,opponent_00010_00012,aux2062,-20],0);
constraint int_eq_reif(aux3214,travel_00010_00012,aux2063_BOOL);
constraint int_eq_reif(aux69,travel_00010_00012,aux2064_BOOL);
constraint int_eq_reif(0,travel_00010_00012,aux2065_BOOL);
constraint int_eq_reif(aux68,travel_00010_00012,aux2066_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00010_00012,opponent_00010_00013,aux2067,-20],0);
constraint int_eq_reif(aux3215,travel_00010_00013,aux2068_BOOL);
constraint int_eq_reif(aux70,travel_00010_00013,aux2069_BOOL);
constraint int_eq_reif(0,travel_00010_00013,aux2070_BOOL);
constraint int_eq_reif(aux69,travel_00010_00013,aux2071_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00010_00013,opponent_00010_00014,aux2072,-20],0);
constraint int_eq_reif(aux3216,travel_00010_00014,aux2073_BOOL);
constraint int_eq_reif(aux71,travel_00010_00014,aux2074_BOOL);
constraint int_eq_reif(0,travel_00010_00014,aux2075_BOOL);
constraint int_eq_reif(aux70,travel_00010_00014,aux2076_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00010_00014,opponent_00010_00015,aux2077,-20],0);
constraint int_eq_reif(aux3217,travel_00010_00015,aux2078_BOOL);
constraint int_eq_reif(aux72,travel_00010_00015,aux2079_BOOL);
constraint int_eq_reif(0,travel_00010_00015,aux2080_BOOL);
constraint int_eq_reif(aux71,travel_00010_00015,aux2081_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00010_00015,opponent_00010_00016,aux2082,-20],0);
constraint int_eq_reif(aux3218,travel_00010_00016,aux2083_BOOL);
constraint int_eq_reif(aux73,travel_00010_00016,aux2084_BOOL);
constraint int_eq_reif(0,travel_00010_00016,aux2085_BOOL);
constraint int_eq_reif(aux72,travel_00010_00016,aux2086_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00010_00016,opponent_00010_00017,aux2087,-20],0);
constraint int_eq_reif(aux3219,travel_00010_00017,aux2088_BOOL);
constraint int_eq_reif(aux74,travel_00010_00017,aux2089_BOOL);
constraint int_eq_reif(0,travel_00010_00017,aux2090_BOOL);
constraint int_eq_reif(aux73,travel_00010_00017,aux2091_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00010_00017,opponent_00010_00018,aux2092,-20],0);
constraint int_eq_reif(aux3220,travel_00010_00018,aux2093_BOOL);
constraint int_eq_reif(aux75,travel_00010_00018,aux2094_BOOL);
constraint int_eq_reif(0,travel_00010_00018,aux2095_BOOL);
constraint int_eq_reif(aux74,travel_00010_00018,aux2096_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00010_00018,opponent_00010_00019,aux2097,-20],0);
constraint int_eq_reif(aux3221,travel_00010_00019,aux2098_BOOL);
constraint int_eq_reif(aux76,travel_00010_00019,aux2099_BOOL);
constraint int_eq_reif(0,travel_00010_00019,aux2100_BOOL);
constraint int_eq_reif(aux75,travel_00010_00019,aux2101_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2102,opponent_00011_00001,opponent_00011_00002,-20],0);
constraint int_eq_reif(aux3222,travel_00011_00002,aux2103_BOOL);
constraint int_eq_reif(travel_00011_00002,aux321,aux2104_BOOL);
constraint int_eq_reif(travel_00011_00002,0,aux2105_BOOL);
constraint int_eq_reif(travel_00011_00002,aux322,aux2106_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2107,opponent_00011_00002,opponent_00011_00003,-20],0);
constraint int_eq_reif(aux3223,travel_00011_00003,aux2108_BOOL);
constraint int_eq_reif(travel_00011_00003,aux324,aux2109_BOOL);
constraint int_eq_reif(travel_00011_00003,0,aux2110_BOOL);
constraint int_eq_reif(travel_00011_00003,aux321,aux2111_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2112,opponent_00011_00003,opponent_00011_00004,-20],0);
constraint int_eq_reif(aux3224,travel_00011_00004,aux2113_BOOL);
constraint int_eq_reif(travel_00011_00004,aux323,aux2114_BOOL);
constraint int_eq_reif(travel_00011_00004,0,aux2115_BOOL);
constraint int_eq_reif(travel_00011_00004,aux324,aux2116_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2117,opponent_00011_00004,opponent_00011_00005,-20],0);
constraint int_eq_reif(aux3225,travel_00011_00005,aux2118_BOOL);
constraint int_eq_reif(travel_00011_00005,aux317,aux2119_BOOL);
constraint int_eq_reif(travel_00011_00005,0,aux2120_BOOL);
constraint int_eq_reif(travel_00011_00005,aux323,aux2121_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2122,opponent_00011_00005,opponent_00011_00006,-20],0);
constraint int_eq_reif(aux3226,travel_00011_00006,aux2123_BOOL);
constraint int_eq_reif(travel_00011_00006,aux316,aux2124_BOOL);
constraint int_eq_reif(travel_00011_00006,0,aux2125_BOOL);
constraint int_eq_reif(travel_00011_00006,aux317,aux2126_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2127,opponent_00011_00006,opponent_00011_00007,-20],0);
constraint int_eq_reif(aux3227,travel_00011_00007,aux2128_BOOL);
constraint int_eq_reif(travel_00011_00007,aux319,aux2129_BOOL);
constraint int_eq_reif(travel_00011_00007,0,aux2130_BOOL);
constraint int_eq_reif(travel_00011_00007,aux316,aux2131_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2132,opponent_00011_00007,opponent_00011_00008,-20],0);
constraint int_eq_reif(aux3228,travel_00011_00008,aux2133_BOOL);
constraint int_eq_reif(travel_00011_00008,aux318,aux2134_BOOL);
constraint int_eq_reif(travel_00011_00008,0,aux2135_BOOL);
constraint int_eq_reif(travel_00011_00008,aux319,aux2136_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2137,opponent_00011_00008,opponent_00011_00009,-20],0);
constraint int_eq_reif(aux3229,travel_00011_00009,aux2138_BOOL);
constraint int_eq_reif(travel_00011_00009,aux320,aux2139_BOOL);
constraint int_eq_reif(travel_00011_00009,0,aux2140_BOOL);
constraint int_eq_reif(travel_00011_00009,aux318,aux2141_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2142,opponent_00011_00009,opponent_00011_00010,-20],0);
constraint int_eq_reif(aux3230,travel_00011_00010,aux2143_BOOL);
constraint int_eq_reif(travel_00011_00010,aux310,aux2144_BOOL);
constraint int_eq_reif(travel_00011_00010,0,aux2145_BOOL);
constraint int_eq_reif(travel_00011_00010,aux320,aux2146_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2147,opponent_00011_00010,opponent_00011_00011,-20],0);
constraint int_eq_reif(aux3231,travel_00011_00011,aux2148_BOOL);
constraint int_eq_reif(travel_00011_00011,aux311,aux2149_BOOL);
constraint int_eq_reif(travel_00011_00011,0,aux2150_BOOL);
constraint int_eq_reif(travel_00011_00011,aux310,aux2151_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2152,opponent_00011_00011,opponent_00011_00012,-20],0);
constraint int_eq_reif(aux3232,travel_00011_00012,aux2153_BOOL);
constraint int_eq_reif(travel_00011_00012,aux314,aux2154_BOOL);
constraint int_eq_reif(travel_00011_00012,0,aux2155_BOOL);
constraint int_eq_reif(travel_00011_00012,aux311,aux2156_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2157,opponent_00011_00012,opponent_00011_00013,-20],0);
constraint int_eq_reif(aux3233,travel_00011_00013,aux2158_BOOL);
constraint int_eq_reif(travel_00011_00013,aux315,aux2159_BOOL);
constraint int_eq_reif(travel_00011_00013,0,aux2160_BOOL);
constraint int_eq_reif(travel_00011_00013,aux314,aux2161_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2162,opponent_00011_00013,opponent_00011_00014,-20],0);
constraint int_eq_reif(aux3234,travel_00011_00014,aux2163_BOOL);
constraint int_eq_reif(travel_00011_00014,aux312,aux2164_BOOL);
constraint int_eq_reif(travel_00011_00014,0,aux2165_BOOL);
constraint int_eq_reif(travel_00011_00014,aux315,aux2166_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2167,opponent_00011_00014,opponent_00011_00015,-20],0);
constraint int_eq_reif(aux3235,travel_00011_00015,aux2168_BOOL);
constraint int_eq_reif(travel_00011_00015,aux313,aux2169_BOOL);
constraint int_eq_reif(travel_00011_00015,0,aux2170_BOOL);
constraint int_eq_reif(travel_00011_00015,aux312,aux2171_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2172,opponent_00011_00015,opponent_00011_00016,-20],0);
constraint int_eq_reif(aux3236,travel_00011_00016,aux2173_BOOL);
constraint int_eq_reif(travel_00011_00016,aux308,aux2174_BOOL);
constraint int_eq_reif(travel_00011_00016,0,aux2175_BOOL);
constraint int_eq_reif(travel_00011_00016,aux313,aux2176_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2177,opponent_00011_00016,opponent_00011_00017,-20],0);
constraint int_eq_reif(aux3237,travel_00011_00017,aux2178_BOOL);
constraint int_eq_reif(travel_00011_00017,aux309,aux2179_BOOL);
constraint int_eq_reif(travel_00011_00017,0,aux2180_BOOL);
constraint int_eq_reif(travel_00011_00017,aux308,aux2181_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2182,opponent_00011_00017,opponent_00011_00018,-20],0);
constraint int_eq_reif(aux3238,travel_00011_00018,aux2183_BOOL);
constraint int_eq_reif(travel_00011_00018,aux306,aux2184_BOOL);
constraint int_eq_reif(travel_00011_00018,0,aux2185_BOOL);
constraint int_eq_reif(travel_00011_00018,aux309,aux2186_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2187,opponent_00011_00018,opponent_00011_00019,-20],0);
constraint int_eq_reif(aux3239,travel_00011_00019,aux2188_BOOL);
constraint int_eq_reif(travel_00011_00019,aux307,aux2189_BOOL);
constraint int_eq_reif(travel_00011_00019,0,aux2190_BOOL);
constraint int_eq_reif(travel_00011_00019,aux306,aux2191_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2192,-20,opponent_00012_00001,opponent_00012_00002],0);
constraint int_eq_reif(aux3240,travel_00012_00002,aux2193_BOOL);
constraint int_eq_reif(travel_00012_00002,aux355,aux2194_BOOL);
constraint int_eq_reif(travel_00012_00002,0,aux2195_BOOL);
constraint int_eq_reif(travel_00012_00002,aux356,aux2196_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2197,-20,opponent_00012_00002,opponent_00012_00003],0);
constraint int_eq_reif(aux3241,travel_00012_00003,aux2198_BOOL);
constraint int_eq_reif(travel_00012_00003,aux354,aux2199_BOOL);
constraint int_eq_reif(travel_00012_00003,0,aux2200_BOOL);
constraint int_eq_reif(travel_00012_00003,aux355,aux2201_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2202,-20,opponent_00012_00003,opponent_00012_00004],0);
constraint int_eq_reif(aux3242,travel_00012_00004,aux2203_BOOL);
constraint int_eq_reif(travel_00012_00004,aux362,aux2204_BOOL);
constraint int_eq_reif(travel_00012_00004,0,aux2205_BOOL);
constraint int_eq_reif(travel_00012_00004,aux354,aux2206_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2207,-20,opponent_00012_00004,opponent_00012_00005],0);
constraint int_eq_reif(aux3243,travel_00012_00005,aux2208_BOOL);
constraint int_eq_reif(travel_00012_00005,aux361,aux2209_BOOL);
constraint int_eq_reif(travel_00012_00005,0,aux2210_BOOL);
constraint int_eq_reif(travel_00012_00005,aux362,aux2211_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2212,-20,opponent_00012_00005,opponent_00012_00006],0);
constraint int_eq_reif(aux3244,travel_00012_00006,aux2213_BOOL);
constraint int_eq_reif(travel_00012_00006,aux360,aux2214_BOOL);
constraint int_eq_reif(travel_00012_00006,0,aux2215_BOOL);
constraint int_eq_reif(travel_00012_00006,aux361,aux2216_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2217,-20,opponent_00012_00006,opponent_00012_00007],0);
constraint int_eq_reif(aux3245,travel_00012_00007,aux2218_BOOL);
constraint int_eq_reif(travel_00012_00007,aux359,aux2219_BOOL);
constraint int_eq_reif(travel_00012_00007,0,aux2220_BOOL);
constraint int_eq_reif(travel_00012_00007,aux360,aux2221_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2222,-20,opponent_00012_00007,opponent_00012_00008],0);
constraint int_eq_reif(aux3246,travel_00012_00008,aux2223_BOOL);
constraint int_eq_reif(travel_00012_00008,aux358,aux2224_BOOL);
constraint int_eq_reif(travel_00012_00008,0,aux2225_BOOL);
constraint int_eq_reif(travel_00012_00008,aux359,aux2226_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2227,-20,opponent_00012_00008,opponent_00012_00009],0);
constraint int_eq_reif(aux3247,travel_00012_00009,aux2228_BOOL);
constraint int_eq_reif(travel_00012_00009,aux357,aux2229_BOOL);
constraint int_eq_reif(travel_00012_00009,0,aux2230_BOOL);
constraint int_eq_reif(travel_00012_00009,aux358,aux2231_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2232,-20,opponent_00012_00009,opponent_00012_00010],0);
constraint int_eq_reif(aux3248,travel_00012_00010,aux2233_BOOL);
constraint int_eq_reif(travel_00012_00010,aux349,aux2234_BOOL);
constraint int_eq_reif(travel_00012_00010,0,aux2235_BOOL);
constraint int_eq_reif(travel_00012_00010,aux357,aux2236_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2237,-20,opponent_00012_00010,opponent_00012_00011],0);
constraint int_eq_reif(aux3249,travel_00012_00011,aux2238_BOOL);
constraint int_eq_reif(travel_00012_00011,aux350,aux2239_BOOL);
constraint int_eq_reif(travel_00012_00011,0,aux2240_BOOL);
constraint int_eq_reif(travel_00012_00011,aux349,aux2241_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2242,-20,opponent_00012_00011,opponent_00012_00012],0);
constraint int_eq_reif(aux3250,travel_00012_00012,aux2243_BOOL);
constraint int_eq_reif(travel_00012_00012,aux351,aux2244_BOOL);
constraint int_eq_reif(travel_00012_00012,0,aux2245_BOOL);
constraint int_eq_reif(travel_00012_00012,aux350,aux2246_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2247,-20,opponent_00012_00012,opponent_00012_00013],0);
constraint int_eq_reif(aux3251,travel_00012_00013,aux2248_BOOL);
constraint int_eq_reif(travel_00012_00013,aux352,aux2249_BOOL);
constraint int_eq_reif(travel_00012_00013,0,aux2250_BOOL);
constraint int_eq_reif(travel_00012_00013,aux351,aux2251_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2252,-20,opponent_00012_00013,opponent_00012_00014],0);
constraint int_eq_reif(aux3252,travel_00012_00014,aux2253_BOOL);
constraint int_eq_reif(travel_00012_00014,aux353,aux2254_BOOL);
constraint int_eq_reif(travel_00012_00014,0,aux2255_BOOL);
constraint int_eq_reif(travel_00012_00014,aux352,aux2256_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2257,-20,opponent_00012_00014,opponent_00012_00015],0);
constraint int_eq_reif(aux3253,travel_00012_00015,aux2258_BOOL);
constraint int_eq_reif(travel_00012_00015,aux344,aux2259_BOOL);
constraint int_eq_reif(travel_00012_00015,0,aux2260_BOOL);
constraint int_eq_reif(travel_00012_00015,aux353,aux2261_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2262,-20,opponent_00012_00015,opponent_00012_00016],0);
constraint int_eq_reif(aux3254,travel_00012_00016,aux2263_BOOL);
constraint int_eq_reif(travel_00012_00016,aux345,aux2264_BOOL);
constraint int_eq_reif(travel_00012_00016,0,aux2265_BOOL);
constraint int_eq_reif(travel_00012_00016,aux344,aux2266_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2267,-20,opponent_00012_00016,opponent_00012_00017],0);
constraint int_eq_reif(aux3255,travel_00012_00017,aux2268_BOOL);
constraint int_eq_reif(travel_00012_00017,aux346,aux2269_BOOL);
constraint int_eq_reif(travel_00012_00017,0,aux2270_BOOL);
constraint int_eq_reif(travel_00012_00017,aux345,aux2271_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2272,-20,opponent_00012_00017,opponent_00012_00018],0);
constraint int_eq_reif(aux3256,travel_00012_00018,aux2273_BOOL);
constraint int_eq_reif(travel_00012_00018,aux347,aux2274_BOOL);
constraint int_eq_reif(travel_00012_00018,0,aux2275_BOOL);
constraint int_eq_reif(travel_00012_00018,aux346,aux2276_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2277,-20,opponent_00012_00018,opponent_00012_00019],0);
constraint int_eq_reif(aux3257,travel_00012_00019,aux2278_BOOL);
constraint int_eq_reif(travel_00012_00019,aux348,aux2279_BOOL);
constraint int_eq_reif(travel_00012_00019,0,aux2280_BOOL);
constraint int_eq_reif(travel_00012_00019,aux347,aux2281_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2282,-20,opponent_00013_00001,opponent_00013_00002],0);
constraint int_eq_reif(aux3258,travel_00013_00002,aux2283_BOOL);
constraint int_eq_reif(travel_00013_00002,aux153,aux2284_BOOL);
constraint int_eq_reif(0,travel_00013_00002,aux2285_BOOL);
constraint int_eq_reif(travel_00013_00002,aux154,aux2286_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2287,-20,opponent_00013_00002,opponent_00013_00003],0);
constraint int_eq_reif(aux3259,travel_00013_00003,aux2288_BOOL);
constraint int_eq_reif(travel_00013_00003,aux156,aux2289_BOOL);
constraint int_eq_reif(0,travel_00013_00003,aux2290_BOOL);
constraint int_eq_reif(travel_00013_00003,aux153,aux2291_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2292,-20,opponent_00013_00003,opponent_00013_00004],0);
constraint int_eq_reif(aux3260,travel_00013_00004,aux2293_BOOL);
constraint int_eq_reif(travel_00013_00004,aux155,aux2294_BOOL);
constraint int_eq_reif(0,travel_00013_00004,aux2295_BOOL);
constraint int_eq_reif(travel_00013_00004,aux156,aux2296_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2297,-20,opponent_00013_00004,opponent_00013_00005],0);
constraint int_eq_reif(aux3261,travel_00013_00005,aux2298_BOOL);
constraint int_eq_reif(travel_00013_00005,aux158,aux2299_BOOL);
constraint int_eq_reif(0,travel_00013_00005,aux2300_BOOL);
constraint int_eq_reif(travel_00013_00005,aux155,aux2301_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2302,-20,opponent_00013_00005,opponent_00013_00006],0);
constraint int_eq_reif(aux3262,travel_00013_00006,aux2303_BOOL);
constraint int_eq_reif(travel_00013_00006,aux157,aux2304_BOOL);
constraint int_eq_reif(0,travel_00013_00006,aux2305_BOOL);
constraint int_eq_reif(travel_00013_00006,aux158,aux2306_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2307,-20,opponent_00013_00006,opponent_00013_00007],0);
constraint int_eq_reif(aux3263,travel_00013_00007,aux2308_BOOL);
constraint int_eq_reif(travel_00013_00007,aux161,aux2309_BOOL);
constraint int_eq_reif(0,travel_00013_00007,aux2310_BOOL);
constraint int_eq_reif(travel_00013_00007,aux157,aux2311_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2312,-20,opponent_00013_00007,opponent_00013_00008],0);
constraint int_eq_reif(aux3264,travel_00013_00008,aux2313_BOOL);
constraint int_eq_reif(travel_00013_00008,aux160,aux2314_BOOL);
constraint int_eq_reif(0,travel_00013_00008,aux2315_BOOL);
constraint int_eq_reif(travel_00013_00008,aux161,aux2316_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2317,-20,opponent_00013_00008,opponent_00013_00009],0);
constraint int_eq_reif(aux3265,travel_00013_00009,aux2318_BOOL);
constraint int_eq_reif(travel_00013_00009,aux159,aux2319_BOOL);
constraint int_eq_reif(0,travel_00013_00009,aux2320_BOOL);
constraint int_eq_reif(travel_00013_00009,aux160,aux2321_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2322,-20,opponent_00013_00009,opponent_00013_00010],0);
constraint int_eq_reif(aux3266,travel_00013_00010,aux2323_BOOL);
constraint int_eq_reif(travel_00013_00010,aux164,aux2324_BOOL);
constraint int_eq_reif(0,travel_00013_00010,aux2325_BOOL);
constraint int_eq_reif(travel_00013_00010,aux159,aux2326_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2327,-20,opponent_00013_00010,opponent_00013_00011],0);
constraint int_eq_reif(aux3267,travel_00013_00011,aux2328_BOOL);
constraint int_eq_reif(travel_00013_00011,aux165,aux2329_BOOL);
constraint int_eq_reif(0,travel_00013_00011,aux2330_BOOL);
constraint int_eq_reif(travel_00013_00011,aux164,aux2331_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2332,-20,opponent_00013_00011,opponent_00013_00012],0);
constraint int_eq_reif(aux3268,travel_00013_00012,aux2333_BOOL);
constraint int_eq_reif(travel_00013_00012,aux162,aux2334_BOOL);
constraint int_eq_reif(0,travel_00013_00012,aux2335_BOOL);
constraint int_eq_reif(travel_00013_00012,aux165,aux2336_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2337,-20,opponent_00013_00012,opponent_00013_00013],0);
constraint int_eq_reif(aux3269,travel_00013_00013,aux2338_BOOL);
constraint int_eq_reif(travel_00013_00013,aux163,aux2339_BOOL);
constraint int_eq_reif(0,travel_00013_00013,aux2340_BOOL);
constraint int_eq_reif(travel_00013_00013,aux162,aux2341_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2342,-20,opponent_00013_00013,opponent_00013_00014],0);
constraint int_eq_reif(aux3270,travel_00013_00014,aux2343_BOOL);
constraint int_eq_reif(travel_00013_00014,aux168,aux2344_BOOL);
constraint int_eq_reif(0,travel_00013_00014,aux2345_BOOL);
constraint int_eq_reif(travel_00013_00014,aux163,aux2346_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2347,-20,opponent_00013_00014,opponent_00013_00015],0);
constraint int_eq_reif(aux3271,travel_00013_00015,aux2348_BOOL);
constraint int_eq_reif(travel_00013_00015,aux169,aux2349_BOOL);
constraint int_eq_reif(0,travel_00013_00015,aux2350_BOOL);
constraint int_eq_reif(travel_00013_00015,aux168,aux2351_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2352,-20,opponent_00013_00015,opponent_00013_00016],0);
constraint int_eq_reif(aux3272,travel_00013_00016,aux2353_BOOL);
constraint int_eq_reif(travel_00013_00016,aux166,aux2354_BOOL);
constraint int_eq_reif(0,travel_00013_00016,aux2355_BOOL);
constraint int_eq_reif(travel_00013_00016,aux169,aux2356_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2357,-20,opponent_00013_00016,opponent_00013_00017],0);
constraint int_eq_reif(aux3273,travel_00013_00017,aux2358_BOOL);
constraint int_eq_reif(travel_00013_00017,aux167,aux2359_BOOL);
constraint int_eq_reif(0,travel_00013_00017,aux2360_BOOL);
constraint int_eq_reif(travel_00013_00017,aux166,aux2361_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2362,-20,opponent_00013_00017,opponent_00013_00018],0);
constraint int_eq_reif(aux3274,travel_00013_00018,aux2363_BOOL);
constraint int_eq_reif(travel_00013_00018,aux170,aux2364_BOOL);
constraint int_eq_reif(0,travel_00013_00018,aux2365_BOOL);
constraint int_eq_reif(travel_00013_00018,aux167,aux2366_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2367,-20,opponent_00013_00018,opponent_00013_00019],0);
constraint int_eq_reif(aux3275,travel_00013_00019,aux2368_BOOL);
constraint int_eq_reif(travel_00013_00019,aux171,aux2369_BOOL);
constraint int_eq_reif(0,travel_00013_00019,aux2370_BOOL);
constraint int_eq_reif(travel_00013_00019,aux170,aux2371_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00014_00001,opponent_00014_00002,aux2372,-20],0);
constraint int_eq_reif(aux3276,travel_00014_00002,aux2373_BOOL);
constraint int_eq_reif(aux285,travel_00014_00002,aux2374_BOOL);
constraint int_eq_reif(0,travel_00014_00002,aux2375_BOOL);
constraint int_eq_reif(aux286,travel_00014_00002,aux2376_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00014_00002,opponent_00014_00003,aux2377,-20],0);
constraint int_eq_reif(aux3277,travel_00014_00003,aux2378_BOOL);
constraint int_eq_reif(aux284,travel_00014_00003,aux2379_BOOL);
constraint int_eq_reif(0,travel_00014_00003,aux2380_BOOL);
constraint int_eq_reif(aux285,travel_00014_00003,aux2381_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00014_00003,opponent_00014_00004,aux2382,-20],0);
constraint int_eq_reif(aux3278,travel_00014_00004,aux2383_BOOL);
constraint int_eq_reif(aux283,travel_00014_00004,aux2384_BOOL);
constraint int_eq_reif(0,travel_00014_00004,aux2385_BOOL);
constraint int_eq_reif(aux284,travel_00014_00004,aux2386_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00014_00004,opponent_00014_00005,aux2387,-20],0);
constraint int_eq_reif(aux3279,travel_00014_00005,aux2388_BOOL);
constraint int_eq_reif(aux282,travel_00014_00005,aux2389_BOOL);
constraint int_eq_reif(0,travel_00014_00005,aux2390_BOOL);
constraint int_eq_reif(aux283,travel_00014_00005,aux2391_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00014_00005,opponent_00014_00006,aux2392,-20],0);
constraint int_eq_reif(aux3280,travel_00014_00006,aux2393_BOOL);
constraint int_eq_reif(aux281,travel_00014_00006,aux2394_BOOL);
constraint int_eq_reif(0,travel_00014_00006,aux2395_BOOL);
constraint int_eq_reif(aux282,travel_00014_00006,aux2396_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00014_00006,opponent_00014_00007,aux2397,-20],0);
constraint int_eq_reif(aux3281,travel_00014_00007,aux2398_BOOL);
constraint int_eq_reif(aux280,travel_00014_00007,aux2399_BOOL);
constraint int_eq_reif(0,travel_00014_00007,aux2400_BOOL);
constraint int_eq_reif(aux281,travel_00014_00007,aux2401_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00014_00007,opponent_00014_00008,aux2402,-20],0);
constraint int_eq_reif(aux3282,travel_00014_00008,aux2403_BOOL);
constraint int_eq_reif(aux278,travel_00014_00008,aux2404_BOOL);
constraint int_eq_reif(0,travel_00014_00008,aux2405_BOOL);
constraint int_eq_reif(aux280,travel_00014_00008,aux2406_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00014_00008,opponent_00014_00009,aux2407,-20],0);
constraint int_eq_reif(aux3283,travel_00014_00009,aux2408_BOOL);
constraint int_eq_reif(aux279,travel_00014_00009,aux2409_BOOL);
constraint int_eq_reif(0,travel_00014_00009,aux2410_BOOL);
constraint int_eq_reif(aux278,travel_00014_00009,aux2411_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00014_00009,opponent_00014_00010,aux2412,-20],0);
constraint int_eq_reif(aux3284,travel_00014_00010,aux2413_BOOL);
constraint int_eq_reif(aux268,travel_00014_00010,aux2414_BOOL);
constraint int_eq_reif(0,travel_00014_00010,aux2415_BOOL);
constraint int_eq_reif(aux279,travel_00014_00010,aux2416_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00014_00010,opponent_00014_00011,aux2417,-20],0);
constraint int_eq_reif(aux3285,travel_00014_00011,aux2418_BOOL);
constraint int_eq_reif(aux269,travel_00014_00011,aux2419_BOOL);
constraint int_eq_reif(0,travel_00014_00011,aux2420_BOOL);
constraint int_eq_reif(aux268,travel_00014_00011,aux2421_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00014_00011,opponent_00014_00012,aux2422,-20],0);
constraint int_eq_reif(aux3286,travel_00014_00012,aux2423_BOOL);
constraint int_eq_reif(aux270,travel_00014_00012,aux2424_BOOL);
constraint int_eq_reif(0,travel_00014_00012,aux2425_BOOL);
constraint int_eq_reif(aux269,travel_00014_00012,aux2426_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00014_00012,opponent_00014_00013,aux2427,-20],0);
constraint int_eq_reif(aux3287,travel_00014_00013,aux2428_BOOL);
constraint int_eq_reif(aux271,travel_00014_00013,aux2429_BOOL);
constraint int_eq_reif(0,travel_00014_00013,aux2430_BOOL);
constraint int_eq_reif(aux270,travel_00014_00013,aux2431_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00014_00013,opponent_00014_00014,aux2432,-20],0);
constraint int_eq_reif(aux3288,travel_00014_00014,aux2433_BOOL);
constraint int_eq_reif(aux272,travel_00014_00014,aux2434_BOOL);
constraint int_eq_reif(0,travel_00014_00014,aux2435_BOOL);
constraint int_eq_reif(aux271,travel_00014_00014,aux2436_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00014_00014,opponent_00014_00015,aux2437,-20],0);
constraint int_eq_reif(aux3289,travel_00014_00015,aux2438_BOOL);
constraint int_eq_reif(aux273,travel_00014_00015,aux2439_BOOL);
constraint int_eq_reif(0,travel_00014_00015,aux2440_BOOL);
constraint int_eq_reif(aux272,travel_00014_00015,aux2441_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00014_00015,opponent_00014_00016,aux2442,-20],0);
constraint int_eq_reif(aux3290,travel_00014_00016,aux2443_BOOL);
constraint int_eq_reif(aux274,travel_00014_00016,aux2444_BOOL);
constraint int_eq_reif(0,travel_00014_00016,aux2445_BOOL);
constraint int_eq_reif(aux273,travel_00014_00016,aux2446_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00014_00016,opponent_00014_00017,aux2447,-20],0);
constraint int_eq_reif(aux3291,travel_00014_00017,aux2448_BOOL);
constraint int_eq_reif(aux275,travel_00014_00017,aux2449_BOOL);
constraint int_eq_reif(0,travel_00014_00017,aux2450_BOOL);
constraint int_eq_reif(aux274,travel_00014_00017,aux2451_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00014_00017,opponent_00014_00018,aux2452,-20],0);
constraint int_eq_reif(aux3292,travel_00014_00018,aux2453_BOOL);
constraint int_eq_reif(aux276,travel_00014_00018,aux2454_BOOL);
constraint int_eq_reif(0,travel_00014_00018,aux2455_BOOL);
constraint int_eq_reif(aux275,travel_00014_00018,aux2456_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00014_00018,opponent_00014_00019,aux2457,-20],0);
constraint int_eq_reif(aux3293,travel_00014_00019,aux2458_BOOL);
constraint int_eq_reif(aux277,travel_00014_00019,aux2459_BOOL);
constraint int_eq_reif(0,travel_00014_00019,aux2460_BOOL);
constraint int_eq_reif(aux276,travel_00014_00019,aux2461_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00015_00001,opponent_00015_00002,aux2462,-20],0);
constraint int_eq_reif(aux3294,travel_00015_00002,aux2463_BOOL);
constraint int_eq_reif(aux134,travel_00015_00002,aux2464_BOOL);
constraint int_eq_reif(0,travel_00015_00002,aux2465_BOOL);
constraint int_eq_reif(aux135,travel_00015_00002,aux2466_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00015_00002,opponent_00015_00003,aux2467,-20],0);
constraint int_eq_reif(aux3295,travel_00015_00003,aux2468_BOOL);
constraint int_eq_reif(aux137,travel_00015_00003,aux2469_BOOL);
constraint int_eq_reif(0,travel_00015_00003,aux2470_BOOL);
constraint int_eq_reif(aux134,travel_00015_00003,aux2471_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00015_00003,opponent_00015_00004,aux2472,-20],0);
constraint int_eq_reif(aux3296,travel_00015_00004,aux2473_BOOL);
constraint int_eq_reif(aux136,travel_00015_00004,aux2474_BOOL);
constraint int_eq_reif(0,travel_00015_00004,aux2475_BOOL);
constraint int_eq_reif(aux137,travel_00015_00004,aux2476_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00015_00004,opponent_00015_00005,aux2477,-20],0);
constraint int_eq_reif(aux3297,travel_00015_00005,aux2478_BOOL);
constraint int_eq_reif(aux141,travel_00015_00005,aux2479_BOOL);
constraint int_eq_reif(0,travel_00015_00005,aux2480_BOOL);
constraint int_eq_reif(aux136,travel_00015_00005,aux2481_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00015_00005,opponent_00015_00006,aux2482,-20],0);
constraint int_eq_reif(aux3298,travel_00015_00006,aux2483_BOOL);
constraint int_eq_reif(aux139,travel_00015_00006,aux2484_BOOL);
constraint int_eq_reif(0,travel_00015_00006,aux2485_BOOL);
constraint int_eq_reif(aux141,travel_00015_00006,aux2486_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00015_00006,opponent_00015_00007,aux2487,-20],0);
constraint int_eq_reif(aux3299,travel_00015_00007,aux2488_BOOL);
constraint int_eq_reif(aux138,travel_00015_00007,aux2489_BOOL);
constraint int_eq_reif(0,travel_00015_00007,aux2490_BOOL);
constraint int_eq_reif(aux139,travel_00015_00007,aux2491_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00015_00007,opponent_00015_00008,aux2492,-20],0);
constraint int_eq_reif(aux3300,travel_00015_00008,aux2493_BOOL);
constraint int_eq_reif(aux140,travel_00015_00008,aux2494_BOOL);
constraint int_eq_reif(0,travel_00015_00008,aux2495_BOOL);
constraint int_eq_reif(aux138,travel_00015_00008,aux2496_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00015_00008,opponent_00015_00009,aux2497,-20],0);
constraint int_eq_reif(aux3301,travel_00015_00009,aux2498_BOOL);
constraint int_eq_reif(aux142,travel_00015_00009,aux2499_BOOL);
constraint int_eq_reif(0,travel_00015_00009,aux2500_BOOL);
constraint int_eq_reif(aux140,travel_00015_00009,aux2501_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00015_00009,opponent_00015_00010,aux2502,-20],0);
constraint int_eq_reif(aux3302,travel_00015_00010,aux2503_BOOL);
constraint int_eq_reif(aux151,travel_00015_00010,aux2504_BOOL);
constraint int_eq_reif(0,travel_00015_00010,aux2505_BOOL);
constraint int_eq_reif(aux142,travel_00015_00010,aux2506_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00015_00010,opponent_00015_00011,aux2507,-20],0);
constraint int_eq_reif(aux3303,travel_00015_00011,aux2508_BOOL);
constraint int_eq_reif(aux152,travel_00015_00011,aux2509_BOOL);
constraint int_eq_reif(0,travel_00015_00011,aux2510_BOOL);
constraint int_eq_reif(aux151,travel_00015_00011,aux2511_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00015_00011,opponent_00015_00012,aux2512,-20],0);
constraint int_eq_reif(aux3304,travel_00015_00012,aux2513_BOOL);
constraint int_eq_reif(aux145,travel_00015_00012,aux2514_BOOL);
constraint int_eq_reif(0,travel_00015_00012,aux2515_BOOL);
constraint int_eq_reif(aux152,travel_00015_00012,aux2516_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00015_00012,opponent_00015_00013,aux2517,-20],0);
constraint int_eq_reif(aux3305,travel_00015_00013,aux2518_BOOL);
constraint int_eq_reif(aux146,travel_00015_00013,aux2519_BOOL);
constraint int_eq_reif(0,travel_00015_00013,aux2520_BOOL);
constraint int_eq_reif(aux145,travel_00015_00013,aux2521_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00015_00013,opponent_00015_00014,aux2522,-20],0);
constraint int_eq_reif(aux3306,travel_00015_00014,aux2523_BOOL);
constraint int_eq_reif(aux143,travel_00015_00014,aux2524_BOOL);
constraint int_eq_reif(0,travel_00015_00014,aux2525_BOOL);
constraint int_eq_reif(aux146,travel_00015_00014,aux2526_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00015_00014,opponent_00015_00015,aux2527,-20],0);
constraint int_eq_reif(aux3307,travel_00015_00015,aux2528_BOOL);
constraint int_eq_reif(aux144,travel_00015_00015,aux2529_BOOL);
constraint int_eq_reif(0,travel_00015_00015,aux2530_BOOL);
constraint int_eq_reif(aux143,travel_00015_00015,aux2531_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00015_00015,opponent_00015_00016,aux2532,-20],0);
constraint int_eq_reif(aux3308,travel_00015_00016,aux2533_BOOL);
constraint int_eq_reif(aux149,travel_00015_00016,aux2534_BOOL);
constraint int_eq_reif(0,travel_00015_00016,aux2535_BOOL);
constraint int_eq_reif(aux144,travel_00015_00016,aux2536_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00015_00016,opponent_00015_00017,aux2537,-20],0);
constraint int_eq_reif(aux3309,travel_00015_00017,aux2538_BOOL);
constraint int_eq_reif(aux150,travel_00015_00017,aux2539_BOOL);
constraint int_eq_reif(0,travel_00015_00017,aux2540_BOOL);
constraint int_eq_reif(aux149,travel_00015_00017,aux2541_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00015_00017,opponent_00015_00018,aux2542,-20],0);
constraint int_eq_reif(aux3310,travel_00015_00018,aux2543_BOOL);
constraint int_eq_reif(aux148,travel_00015_00018,aux2544_BOOL);
constraint int_eq_reif(0,travel_00015_00018,aux2545_BOOL);
constraint int_eq_reif(aux150,travel_00015_00018,aux2546_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00015_00018,opponent_00015_00019,aux2547,-20],0);
constraint int_eq_reif(aux3311,travel_00015_00019,aux2548_BOOL);
constraint int_eq_reif(aux147,travel_00015_00019,aux2549_BOOL);
constraint int_eq_reif(0,travel_00015_00019,aux2550_BOOL);
constraint int_eq_reif(aux148,travel_00015_00019,aux2551_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2552,opponent_00016_00001,opponent_00016_00002,-20],0);
constraint int_eq_reif(aux3312,travel_00016_00002,aux2553_BOOL);
constraint int_eq_reif(travel_00016_00002,aux188,aux2554_BOOL);
constraint int_eq_reif(travel_00016_00002,0,aux2555_BOOL);
constraint int_eq_reif(travel_00016_00002,aux189,aux2556_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2557,opponent_00016_00002,opponent_00016_00003,-20],0);
constraint int_eq_reif(aux3313,travel_00016_00003,aux2558_BOOL);
constraint int_eq_reif(travel_00016_00003,aux187,aux2559_BOOL);
constraint int_eq_reif(travel_00016_00003,0,aux2560_BOOL);
constraint int_eq_reif(travel_00016_00003,aux188,aux2561_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2562,opponent_00016_00003,opponent_00016_00004,-20],0);
constraint int_eq_reif(aux3314,travel_00016_00004,aux2563_BOOL);
constraint int_eq_reif(travel_00016_00004,aux186,aux2564_BOOL);
constraint int_eq_reif(travel_00016_00004,0,aux2565_BOOL);
constraint int_eq_reif(travel_00016_00004,aux187,aux2566_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2567,opponent_00016_00004,opponent_00016_00005,-20],0);
constraint int_eq_reif(aux3315,travel_00016_00005,aux2568_BOOL);
constraint int_eq_reif(travel_00016_00005,aux185,aux2569_BOOL);
constraint int_eq_reif(travel_00016_00005,0,aux2570_BOOL);
constraint int_eq_reif(travel_00016_00005,aux186,aux2571_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2572,opponent_00016_00005,opponent_00016_00006,-20],0);
constraint int_eq_reif(aux3316,travel_00016_00006,aux2573_BOOL);
constraint int_eq_reif(travel_00016_00006,aux183,aux2574_BOOL);
constraint int_eq_reif(travel_00016_00006,0,aux2575_BOOL);
constraint int_eq_reif(travel_00016_00006,aux185,aux2576_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2577,opponent_00016_00006,opponent_00016_00007,-20],0);
constraint int_eq_reif(aux3317,travel_00016_00007,aux2578_BOOL);
constraint int_eq_reif(travel_00016_00007,aux184,aux2579_BOOL);
constraint int_eq_reif(travel_00016_00007,0,aux2580_BOOL);
constraint int_eq_reif(travel_00016_00007,aux183,aux2581_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2582,opponent_00016_00007,opponent_00016_00008,-20],0);
constraint int_eq_reif(aux3318,travel_00016_00008,aux2583_BOOL);
constraint int_eq_reif(travel_00016_00008,aux181,aux2584_BOOL);
constraint int_eq_reif(travel_00016_00008,0,aux2585_BOOL);
constraint int_eq_reif(travel_00016_00008,aux184,aux2586_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2587,opponent_00016_00008,opponent_00016_00009,-20],0);
constraint int_eq_reif(aux3319,travel_00016_00009,aux2588_BOOL);
constraint int_eq_reif(travel_00016_00009,aux182,aux2589_BOOL);
constraint int_eq_reif(travel_00016_00009,0,aux2590_BOOL);
constraint int_eq_reif(travel_00016_00009,aux181,aux2591_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2592,opponent_00016_00009,opponent_00016_00010,-20],0);
constraint int_eq_reif(aux3320,travel_00016_00010,aux2593_BOOL);
constraint int_eq_reif(travel_00016_00010,aux180,aux2594_BOOL);
constraint int_eq_reif(travel_00016_00010,0,aux2595_BOOL);
constraint int_eq_reif(travel_00016_00010,aux182,aux2596_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2597,opponent_00016_00010,opponent_00016_00011,-20],0);
constraint int_eq_reif(aux3321,travel_00016_00011,aux2598_BOOL);
constraint int_eq_reif(travel_00016_00011,aux172,aux2599_BOOL);
constraint int_eq_reif(travel_00016_00011,0,aux2600_BOOL);
constraint int_eq_reif(travel_00016_00011,aux180,aux2601_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2602,opponent_00016_00011,opponent_00016_00012,-20],0);
constraint int_eq_reif(aux3322,travel_00016_00012,aux2603_BOOL);
constraint int_eq_reif(travel_00016_00012,aux173,aux2604_BOOL);
constraint int_eq_reif(travel_00016_00012,0,aux2605_BOOL);
constraint int_eq_reif(travel_00016_00012,aux172,aux2606_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2607,opponent_00016_00012,opponent_00016_00013,-20],0);
constraint int_eq_reif(aux3323,travel_00016_00013,aux2608_BOOL);
constraint int_eq_reif(travel_00016_00013,aux174,aux2609_BOOL);
constraint int_eq_reif(travel_00016_00013,0,aux2610_BOOL);
constraint int_eq_reif(travel_00016_00013,aux173,aux2611_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2612,opponent_00016_00013,opponent_00016_00014,-20],0);
constraint int_eq_reif(aux3324,travel_00016_00014,aux2613_BOOL);
constraint int_eq_reif(travel_00016_00014,aux175,aux2614_BOOL);
constraint int_eq_reif(travel_00016_00014,0,aux2615_BOOL);
constraint int_eq_reif(travel_00016_00014,aux174,aux2616_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2617,opponent_00016_00014,opponent_00016_00015,-20],0);
constraint int_eq_reif(aux3325,travel_00016_00015,aux2618_BOOL);
constraint int_eq_reif(travel_00016_00015,aux176,aux2619_BOOL);
constraint int_eq_reif(travel_00016_00015,0,aux2620_BOOL);
constraint int_eq_reif(travel_00016_00015,aux175,aux2621_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2622,opponent_00016_00015,opponent_00016_00016,-20],0);
constraint int_eq_reif(aux3326,travel_00016_00016,aux2623_BOOL);
constraint int_eq_reif(travel_00016_00016,aux177,aux2624_BOOL);
constraint int_eq_reif(travel_00016_00016,0,aux2625_BOOL);
constraint int_eq_reif(travel_00016_00016,aux176,aux2626_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2627,opponent_00016_00016,opponent_00016_00017,-20],0);
constraint int_eq_reif(aux3327,travel_00016_00017,aux2628_BOOL);
constraint int_eq_reif(travel_00016_00017,aux179,aux2629_BOOL);
constraint int_eq_reif(travel_00016_00017,0,aux2630_BOOL);
constraint int_eq_reif(travel_00016_00017,aux177,aux2631_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2632,opponent_00016_00017,opponent_00016_00018,-20],0);
constraint int_eq_reif(aux3328,travel_00016_00018,aux2633_BOOL);
constraint int_eq_reif(travel_00016_00018,aux178,aux2634_BOOL);
constraint int_eq_reif(travel_00016_00018,0,aux2635_BOOL);
constraint int_eq_reif(travel_00016_00018,aux179,aux2636_BOOL);
constraint int_lin_eq([-1,20,1,1],[aux2637,opponent_00016_00018,opponent_00016_00019,-20],0);
constraint int_eq_reif(aux3329,travel_00016_00019,aux2638_BOOL);
constraint int_eq_reif(travel_00016_00019,aux190,aux2639_BOOL);
constraint int_eq_reif(travel_00016_00019,0,aux2640_BOOL);
constraint int_eq_reif(travel_00016_00019,aux178,aux2641_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2642,-20,opponent_00017_00001,opponent_00017_00002],0);
constraint int_eq_reif(aux3330,travel_00017_00002,aux2643_BOOL);
constraint int_eq_reif(travel_00017_00002,aux213,aux2644_BOOL);
constraint int_eq_reif(travel_00017_00002,0,aux2645_BOOL);
constraint int_eq_reif(travel_00017_00002,aux214,aux2646_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2647,-20,opponent_00017_00002,opponent_00017_00003],0);
constraint int_eq_reif(aux3331,travel_00017_00003,aux2648_BOOL);
constraint int_eq_reif(travel_00017_00003,aux218,aux2649_BOOL);
constraint int_eq_reif(travel_00017_00003,0,aux2650_BOOL);
constraint int_eq_reif(travel_00017_00003,aux213,aux2651_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2652,-20,opponent_00017_00003,opponent_00017_00004],0);
constraint int_eq_reif(aux3332,travel_00017_00004,aux2653_BOOL);
constraint int_eq_reif(travel_00017_00004,aux216,aux2654_BOOL);
constraint int_eq_reif(travel_00017_00004,0,aux2655_BOOL);
constraint int_eq_reif(travel_00017_00004,aux218,aux2656_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2657,-20,opponent_00017_00004,opponent_00017_00005],0);
constraint int_eq_reif(aux3333,travel_00017_00005,aux2658_BOOL);
constraint int_eq_reif(travel_00017_00005,aux215,aux2659_BOOL);
constraint int_eq_reif(travel_00017_00005,0,aux2660_BOOL);
constraint int_eq_reif(travel_00017_00005,aux216,aux2661_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2662,-20,opponent_00017_00005,opponent_00017_00006],0);
constraint int_eq_reif(aux3334,travel_00017_00006,aux2663_BOOL);
constraint int_eq_reif(travel_00017_00006,aux217,aux2664_BOOL);
constraint int_eq_reif(travel_00017_00006,0,aux2665_BOOL);
constraint int_eq_reif(travel_00017_00006,aux215,aux2666_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2667,-20,opponent_00017_00006,opponent_00017_00007],0);
constraint int_eq_reif(aux3335,travel_00017_00007,aux2668_BOOL);
constraint int_eq_reif(travel_00017_00007,aux228,aux2669_BOOL);
constraint int_eq_reif(travel_00017_00007,0,aux2670_BOOL);
constraint int_eq_reif(travel_00017_00007,aux217,aux2671_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2672,-20,opponent_00017_00007,opponent_00017_00008],0);
constraint int_eq_reif(aux3336,travel_00017_00008,aux2673_BOOL);
constraint int_eq_reif(travel_00017_00008,aux229,aux2674_BOOL);
constraint int_eq_reif(travel_00017_00008,0,aux2675_BOOL);
constraint int_eq_reif(travel_00017_00008,aux228,aux2676_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2677,-20,opponent_00017_00008,opponent_00017_00009],0);
constraint int_eq_reif(aux3337,travel_00017_00009,aux2678_BOOL);
constraint int_eq_reif(travel_00017_00009,aux227,aux2679_BOOL);
constraint int_eq_reif(travel_00017_00009,0,aux2680_BOOL);
constraint int_eq_reif(travel_00017_00009,aux229,aux2681_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2682,-20,opponent_00017_00009,opponent_00017_00010],0);
constraint int_eq_reif(aux3338,travel_00017_00010,aux2683_BOOL);
constraint int_eq_reif(travel_00017_00010,aux221,aux2684_BOOL);
constraint int_eq_reif(travel_00017_00010,0,aux2685_BOOL);
constraint int_eq_reif(travel_00017_00010,aux227,aux2686_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2687,-20,opponent_00017_00010,opponent_00017_00011],0);
constraint int_eq_reif(aux3339,travel_00017_00011,aux2688_BOOL);
constraint int_eq_reif(travel_00017_00011,aux222,aux2689_BOOL);
constraint int_eq_reif(travel_00017_00011,0,aux2690_BOOL);
constraint int_eq_reif(travel_00017_00011,aux221,aux2691_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2692,-20,opponent_00017_00011,opponent_00017_00012],0);
constraint int_eq_reif(aux3340,travel_00017_00012,aux2693_BOOL);
constraint int_eq_reif(travel_00017_00012,aux219,aux2694_BOOL);
constraint int_eq_reif(travel_00017_00012,0,aux2695_BOOL);
constraint int_eq_reif(travel_00017_00012,aux222,aux2696_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2697,-20,opponent_00017_00012,opponent_00017_00013],0);
constraint int_eq_reif(aux3341,travel_00017_00013,aux2698_BOOL);
constraint int_eq_reif(travel_00017_00013,aux220,aux2699_BOOL);
constraint int_eq_reif(travel_00017_00013,0,aux2700_BOOL);
constraint int_eq_reif(travel_00017_00013,aux219,aux2701_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2702,-20,opponent_00017_00013,opponent_00017_00014],0);
constraint int_eq_reif(aux3342,travel_00017_00014,aux2703_BOOL);
constraint int_eq_reif(travel_00017_00014,aux225,aux2704_BOOL);
constraint int_eq_reif(travel_00017_00014,0,aux2705_BOOL);
constraint int_eq_reif(travel_00017_00014,aux220,aux2706_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2707,-20,opponent_00017_00014,opponent_00017_00015],0);
constraint int_eq_reif(aux3343,travel_00017_00015,aux2708_BOOL);
constraint int_eq_reif(travel_00017_00015,aux226,aux2709_BOOL);
constraint int_eq_reif(travel_00017_00015,0,aux2710_BOOL);
constraint int_eq_reif(travel_00017_00015,aux225,aux2711_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2712,-20,opponent_00017_00015,opponent_00017_00016],0);
constraint int_eq_reif(aux3344,travel_00017_00016,aux2713_BOOL);
constraint int_eq_reif(travel_00017_00016,aux224,aux2714_BOOL);
constraint int_eq_reif(travel_00017_00016,0,aux2715_BOOL);
constraint int_eq_reif(travel_00017_00016,aux226,aux2716_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2717,-20,opponent_00017_00016,opponent_00017_00017],0);
constraint int_eq_reif(aux3345,travel_00017_00017,aux2718_BOOL);
constraint int_eq_reif(travel_00017_00017,aux223,aux2719_BOOL);
constraint int_eq_reif(travel_00017_00017,0,aux2720_BOOL);
constraint int_eq_reif(travel_00017_00017,aux224,aux2721_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2722,-20,opponent_00017_00017,opponent_00017_00018],0);
constraint int_eq_reif(aux3346,travel_00017_00018,aux2723_BOOL);
constraint int_eq_reif(travel_00017_00018,aux212,aux2724_BOOL);
constraint int_eq_reif(travel_00017_00018,0,aux2725_BOOL);
constraint int_eq_reif(travel_00017_00018,aux223,aux2726_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2727,-20,opponent_00017_00018,opponent_00017_00019],0);
constraint int_eq_reif(aux3347,travel_00017_00019,aux2728_BOOL);
constraint int_eq_reif(travel_00017_00019,aux211,aux2729_BOOL);
constraint int_eq_reif(travel_00017_00019,0,aux2730_BOOL);
constraint int_eq_reif(travel_00017_00019,aux212,aux2731_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2732,-20,opponent_00018_00001,opponent_00018_00002],0);
constraint int_eq_reif(aux3348,travel_00018_00002,aux2733_BOOL);
constraint int_eq_reif(travel_00018_00002,aux195,aux2734_BOOL);
constraint int_eq_reif(0,travel_00018_00002,aux2735_BOOL);
constraint int_eq_reif(travel_00018_00002,aux196,aux2736_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2737,-20,opponent_00018_00002,opponent_00018_00003],0);
constraint int_eq_reif(aux3349,travel_00018_00003,aux2738_BOOL);
constraint int_eq_reif(travel_00018_00003,aux194,aux2739_BOOL);
constraint int_eq_reif(0,travel_00018_00003,aux2740_BOOL);
constraint int_eq_reif(travel_00018_00003,aux195,aux2741_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2742,-20,opponent_00018_00003,opponent_00018_00004],0);
constraint int_eq_reif(aux3350,travel_00018_00004,aux2743_BOOL);
constraint int_eq_reif(travel_00018_00004,aux197,aux2744_BOOL);
constraint int_eq_reif(0,travel_00018_00004,aux2745_BOOL);
constraint int_eq_reif(travel_00018_00004,aux194,aux2746_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2747,-20,opponent_00018_00004,opponent_00018_00005],0);
constraint int_eq_reif(aux3351,travel_00018_00005,aux2748_BOOL);
constraint int_eq_reif(travel_00018_00005,aux198,aux2749_BOOL);
constraint int_eq_reif(0,travel_00018_00005,aux2750_BOOL);
constraint int_eq_reif(travel_00018_00005,aux197,aux2751_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2752,-20,opponent_00018_00005,opponent_00018_00006],0);
constraint int_eq_reif(aux3352,travel_00018_00006,aux2753_BOOL);
constraint int_eq_reif(travel_00018_00006,aux199,aux2754_BOOL);
constraint int_eq_reif(0,travel_00018_00006,aux2755_BOOL);
constraint int_eq_reif(travel_00018_00006,aux198,aux2756_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2757,-20,opponent_00018_00006,opponent_00018_00007],0);
constraint int_eq_reif(aux3353,travel_00018_00007,aux2758_BOOL);
constraint int_eq_reif(travel_00018_00007,aux200,aux2759_BOOL);
constraint int_eq_reif(0,travel_00018_00007,aux2760_BOOL);
constraint int_eq_reif(travel_00018_00007,aux199,aux2761_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2762,-20,opponent_00018_00007,opponent_00018_00008],0);
constraint int_eq_reif(aux3354,travel_00018_00008,aux2763_BOOL);
constraint int_eq_reif(travel_00018_00008,aux201,aux2764_BOOL);
constraint int_eq_reif(0,travel_00018_00008,aux2765_BOOL);
constraint int_eq_reif(travel_00018_00008,aux200,aux2766_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2767,-20,opponent_00018_00008,opponent_00018_00009],0);
constraint int_eq_reif(aux3355,travel_00018_00009,aux2768_BOOL);
constraint int_eq_reif(travel_00018_00009,aux202,aux2769_BOOL);
constraint int_eq_reif(0,travel_00018_00009,aux2770_BOOL);
constraint int_eq_reif(travel_00018_00009,aux201,aux2771_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2772,-20,opponent_00018_00009,opponent_00018_00010],0);
constraint int_eq_reif(aux3356,travel_00018_00010,aux2773_BOOL);
constraint int_eq_reif(travel_00018_00010,aux203,aux2774_BOOL);
constraint int_eq_reif(0,travel_00018_00010,aux2775_BOOL);
constraint int_eq_reif(travel_00018_00010,aux202,aux2776_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2777,-20,opponent_00018_00010,opponent_00018_00011],0);
constraint int_eq_reif(aux3357,travel_00018_00011,aux2778_BOOL);
constraint int_eq_reif(travel_00018_00011,aux204,aux2779_BOOL);
constraint int_eq_reif(0,travel_00018_00011,aux2780_BOOL);
constraint int_eq_reif(travel_00018_00011,aux203,aux2781_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2782,-20,opponent_00018_00011,opponent_00018_00012],0);
constraint int_eq_reif(aux3358,travel_00018_00012,aux2783_BOOL);
constraint int_eq_reif(travel_00018_00012,aux205,aux2784_BOOL);
constraint int_eq_reif(0,travel_00018_00012,aux2785_BOOL);
constraint int_eq_reif(travel_00018_00012,aux204,aux2786_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2787,-20,opponent_00018_00012,opponent_00018_00013],0);
constraint int_eq_reif(aux3359,travel_00018_00013,aux2788_BOOL);
constraint int_eq_reif(travel_00018_00013,aux206,aux2789_BOOL);
constraint int_eq_reif(0,travel_00018_00013,aux2790_BOOL);
constraint int_eq_reif(travel_00018_00013,aux205,aux2791_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2792,-20,opponent_00018_00013,opponent_00018_00014],0);
constraint int_eq_reif(aux3360,travel_00018_00014,aux2793_BOOL);
constraint int_eq_reif(travel_00018_00014,aux207,aux2794_BOOL);
constraint int_eq_reif(0,travel_00018_00014,aux2795_BOOL);
constraint int_eq_reif(travel_00018_00014,aux206,aux2796_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2797,-20,opponent_00018_00014,opponent_00018_00015],0);
constraint int_eq_reif(aux3361,travel_00018_00015,aux2798_BOOL);
constraint int_eq_reif(travel_00018_00015,aux209,aux2799_BOOL);
constraint int_eq_reif(0,travel_00018_00015,aux2800_BOOL);
constraint int_eq_reif(travel_00018_00015,aux207,aux2801_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2802,-20,opponent_00018_00015,opponent_00018_00016],0);
constraint int_eq_reif(aux3362,travel_00018_00016,aux2803_BOOL);
constraint int_eq_reif(travel_00018_00016,aux208,aux2804_BOOL);
constraint int_eq_reif(0,travel_00018_00016,aux2805_BOOL);
constraint int_eq_reif(travel_00018_00016,aux209,aux2806_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2807,-20,opponent_00018_00016,opponent_00018_00017],0);
constraint int_eq_reif(aux3363,travel_00018_00017,aux2808_BOOL);
constraint int_eq_reif(travel_00018_00017,aux192,aux2809_BOOL);
constraint int_eq_reif(0,travel_00018_00017,aux2810_BOOL);
constraint int_eq_reif(travel_00018_00017,aux208,aux2811_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2812,-20,opponent_00018_00017,opponent_00018_00018],0);
constraint int_eq_reif(aux3364,travel_00018_00018,aux2813_BOOL);
constraint int_eq_reif(travel_00018_00018,aux191,aux2814_BOOL);
constraint int_eq_reif(0,travel_00018_00018,aux2815_BOOL);
constraint int_eq_reif(travel_00018_00018,aux192,aux2816_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2817,-20,opponent_00018_00018,opponent_00018_00019],0);
constraint int_eq_reif(aux3365,travel_00018_00019,aux2818_BOOL);
constraint int_eq_reif(travel_00018_00019,aux193,aux2819_BOOL);
constraint int_eq_reif(0,travel_00018_00019,aux2820_BOOL);
constraint int_eq_reif(travel_00018_00019,aux191,aux2821_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00019_00001,opponent_00019_00002,aux2822,-20],0);
constraint int_eq_reif(aux3366,travel_00019_00002,aux2823_BOOL);
constraint int_eq_reif(aux326,travel_00019_00002,aux2824_BOOL);
constraint int_eq_reif(0,travel_00019_00002,aux2825_BOOL);
constraint int_eq_reif(aux328,travel_00019_00002,aux2826_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00019_00002,opponent_00019_00003,aux2827,-20],0);
constraint int_eq_reif(aux3367,travel_00019_00003,aux2828_BOOL);
constraint int_eq_reif(aux325,travel_00019_00003,aux2829_BOOL);
constraint int_eq_reif(0,travel_00019_00003,aux2830_BOOL);
constraint int_eq_reif(aux326,travel_00019_00003,aux2831_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00019_00003,opponent_00019_00004,aux2832,-20],0);
constraint int_eq_reif(aux3368,travel_00019_00004,aux2833_BOOL);
constraint int_eq_reif(aux327,travel_00019_00004,aux2834_BOOL);
constraint int_eq_reif(0,travel_00019_00004,aux2835_BOOL);
constraint int_eq_reif(aux325,travel_00019_00004,aux2836_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00019_00004,opponent_00019_00005,aux2837,-20],0);
constraint int_eq_reif(aux3369,travel_00019_00005,aux2838_BOOL);
constraint int_eq_reif(aux337,travel_00019_00005,aux2839_BOOL);
constraint int_eq_reif(0,travel_00019_00005,aux2840_BOOL);
constraint int_eq_reif(aux327,travel_00019_00005,aux2841_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00019_00005,opponent_00019_00006,aux2842,-20],0);
constraint int_eq_reif(aux3370,travel_00019_00006,aux2843_BOOL);
constraint int_eq_reif(aux338,travel_00019_00006,aux2844_BOOL);
constraint int_eq_reif(0,travel_00019_00006,aux2845_BOOL);
constraint int_eq_reif(aux337,travel_00019_00006,aux2846_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00019_00006,opponent_00019_00007,aux2847,-20],0);
constraint int_eq_reif(aux3371,travel_00019_00007,aux2848_BOOL);
constraint int_eq_reif(aux335,travel_00019_00007,aux2849_BOOL);
constraint int_eq_reif(0,travel_00019_00007,aux2850_BOOL);
constraint int_eq_reif(aux338,travel_00019_00007,aux2851_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00019_00007,opponent_00019_00008,aux2852,-20],0);
constraint int_eq_reif(aux3372,travel_00019_00008,aux2853_BOOL);
constraint int_eq_reif(aux336,travel_00019_00008,aux2854_BOOL);
constraint int_eq_reif(0,travel_00019_00008,aux2855_BOOL);
constraint int_eq_reif(aux335,travel_00019_00008,aux2856_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00019_00008,opponent_00019_00009,aux2857,-20],0);
constraint int_eq_reif(aux3373,travel_00019_00009,aux2858_BOOL);
constraint int_eq_reif(aux339,travel_00019_00009,aux2859_BOOL);
constraint int_eq_reif(0,travel_00019_00009,aux2860_BOOL);
constraint int_eq_reif(aux336,travel_00019_00009,aux2861_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00019_00009,opponent_00019_00010,aux2862,-20],0);
constraint int_eq_reif(aux3374,travel_00019_00010,aux2863_BOOL);
constraint int_eq_reif(aux329,travel_00019_00010,aux2864_BOOL);
constraint int_eq_reif(0,travel_00019_00010,aux2865_BOOL);
constraint int_eq_reif(aux339,travel_00019_00010,aux2866_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00019_00010,opponent_00019_00011,aux2867,-20],0);
constraint int_eq_reif(aux3375,travel_00019_00011,aux2868_BOOL);
constraint int_eq_reif(aux330,travel_00019_00011,aux2869_BOOL);
constraint int_eq_reif(0,travel_00019_00011,aux2870_BOOL);
constraint int_eq_reif(aux329,travel_00019_00011,aux2871_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00019_00011,opponent_00019_00012,aux2872,-20],0);
constraint int_eq_reif(aux3376,travel_00019_00012,aux2873_BOOL);
constraint int_eq_reif(aux333,travel_00019_00012,aux2874_BOOL);
constraint int_eq_reif(0,travel_00019_00012,aux2875_BOOL);
constraint int_eq_reif(aux330,travel_00019_00012,aux2876_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00019_00012,opponent_00019_00013,aux2877,-20],0);
constraint int_eq_reif(aux3377,travel_00019_00013,aux2878_BOOL);
constraint int_eq_reif(aux334,travel_00019_00013,aux2879_BOOL);
constraint int_eq_reif(0,travel_00019_00013,aux2880_BOOL);
constraint int_eq_reif(aux333,travel_00019_00013,aux2881_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00019_00013,opponent_00019_00014,aux2882,-20],0);
constraint int_eq_reif(aux3378,travel_00019_00014,aux2883_BOOL);
constraint int_eq_reif(aux332,travel_00019_00014,aux2884_BOOL);
constraint int_eq_reif(0,travel_00019_00014,aux2885_BOOL);
constraint int_eq_reif(aux334,travel_00019_00014,aux2886_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00019_00014,opponent_00019_00015,aux2887,-20],0);
constraint int_eq_reif(aux3379,travel_00019_00015,aux2888_BOOL);
constraint int_eq_reif(aux331,travel_00019_00015,aux2889_BOOL);
constraint int_eq_reif(0,travel_00019_00015,aux2890_BOOL);
constraint int_eq_reif(aux332,travel_00019_00015,aux2891_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00019_00015,opponent_00019_00016,aux2892,-20],0);
constraint int_eq_reif(aux3380,travel_00019_00016,aux2893_BOOL);
constraint int_eq_reif(aux343,travel_00019_00016,aux2894_BOOL);
constraint int_eq_reif(0,travel_00019_00016,aux2895_BOOL);
constraint int_eq_reif(aux331,travel_00019_00016,aux2896_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00019_00016,opponent_00019_00017,aux2897,-20],0);
constraint int_eq_reif(aux3381,travel_00019_00017,aux2898_BOOL);
constraint int_eq_reif(aux342,travel_00019_00017,aux2899_BOOL);
constraint int_eq_reif(0,travel_00019_00017,aux2900_BOOL);
constraint int_eq_reif(aux343,travel_00019_00017,aux2901_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00019_00017,opponent_00019_00018,aux2902,-20],0);
constraint int_eq_reif(aux3382,travel_00019_00018,aux2903_BOOL);
constraint int_eq_reif(aux341,travel_00019_00018,aux2904_BOOL);
constraint int_eq_reif(0,travel_00019_00018,aux2905_BOOL);
constraint int_eq_reif(aux342,travel_00019_00018,aux2906_BOOL);
constraint int_lin_eq([20,1,-1,1],[opponent_00019_00018,opponent_00019_00019,aux2907,-20],0);
constraint int_eq_reif(aux3383,travel_00019_00019,aux2908_BOOL);
constraint int_eq_reif(aux340,travel_00019_00019,aux2909_BOOL);
constraint int_eq_reif(0,travel_00019_00019,aux2910_BOOL);
constraint int_eq_reif(aux341,travel_00019_00019,aux2911_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2912,-40,opponent_00020_00001,opponent_00020_00002],0);
constraint int_eq_reif(aux3384,travel_00020_00002,aux2913_BOOL);
constraint int_eq_reif(travel_00020_00002,aux379,aux2914_BOOL);
constraint int_eq_reif(travel_00020_00002,0,aux2915_BOOL);
constraint int_eq_reif(aux210,travel_00020_00002,aux2916_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2917,-20,opponent_00020_00002,opponent_00020_00003],0);
constraint int_eq_reif(aux3385,travel_00020_00003,aux2918_BOOL);
constraint int_eq_reif(travel_00020_00003,aux380,aux2919_BOOL);
constraint int_eq_reif(travel_00020_00003,0,aux2920_BOOL);
constraint int_eq_reif(travel_00020_00003,aux379,aux2921_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2922,-20,opponent_00020_00003,opponent_00020_00004],0);
constraint int_eq_reif(aux3386,travel_00020_00004,aux2923_BOOL);
constraint int_eq_reif(travel_00020_00004,aux377,aux2924_BOOL);
constraint int_eq_reif(travel_00020_00004,0,aux2925_BOOL);
constraint int_eq_reif(travel_00020_00004,aux380,aux2926_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2927,-20,opponent_00020_00004,opponent_00020_00005],0);
constraint int_eq_reif(aux3387,travel_00020_00005,aux2928_BOOL);
constraint int_eq_reif(travel_00020_00005,aux378,aux2929_BOOL);
constraint int_eq_reif(travel_00020_00005,0,aux2930_BOOL);
constraint int_eq_reif(travel_00020_00005,aux377,aux2931_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2932,-20,opponent_00020_00005,opponent_00020_00006],0);
constraint int_eq_reif(aux3388,travel_00020_00006,aux2933_BOOL);
constraint int_eq_reif(travel_00020_00006,aux376,aux2934_BOOL);
constraint int_eq_reif(travel_00020_00006,0,aux2935_BOOL);
constraint int_eq_reif(travel_00020_00006,aux378,aux2936_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2937,-20,opponent_00020_00006,opponent_00020_00007],0);
constraint int_eq_reif(aux3389,travel_00020_00007,aux2938_BOOL);
constraint int_eq_reif(travel_00020_00007,aux375,aux2939_BOOL);
constraint int_eq_reif(travel_00020_00007,0,aux2940_BOOL);
constraint int_eq_reif(travel_00020_00007,aux376,aux2941_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2942,-20,opponent_00020_00007,opponent_00020_00008],0);
constraint int_eq_reif(aux3390,travel_00020_00008,aux2943_BOOL);
constraint int_eq_reif(travel_00020_00008,aux374,aux2944_BOOL);
constraint int_eq_reif(travel_00020_00008,0,aux2945_BOOL);
constraint int_eq_reif(travel_00020_00008,aux375,aux2946_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2947,-20,opponent_00020_00008,opponent_00020_00009],0);
constraint int_eq_reif(aux3391,travel_00020_00009,aux2948_BOOL);
constraint int_eq_reif(travel_00020_00009,aux373,aux2949_BOOL);
constraint int_eq_reif(travel_00020_00009,0,aux2950_BOOL);
constraint int_eq_reif(travel_00020_00009,aux374,aux2951_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2952,-20,opponent_00020_00009,opponent_00020_00010],0);
constraint int_eq_reif(aux3392,travel_00020_00010,aux2953_BOOL);
constraint int_eq_reif(travel_00020_00010,aux364,aux2954_BOOL);
constraint int_eq_reif(travel_00020_00010,0,aux2955_BOOL);
constraint int_eq_reif(travel_00020_00010,aux373,aux2956_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2957,-20,opponent_00020_00010,opponent_00020_00011],0);
constraint int_eq_reif(aux3393,travel_00020_00011,aux2958_BOOL);
constraint int_eq_reif(travel_00020_00011,aux372,aux2959_BOOL);
constraint int_eq_reif(travel_00020_00011,0,aux2960_BOOL);
constraint int_eq_reif(travel_00020_00011,aux364,aux2961_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2962,-20,opponent_00020_00011,opponent_00020_00012],0);
constraint int_eq_reif(aux3394,travel_00020_00012,aux2963_BOOL);
constraint int_eq_reif(travel_00020_00012,aux371,aux2964_BOOL);
constraint int_eq_reif(travel_00020_00012,0,aux2965_BOOL);
constraint int_eq_reif(travel_00020_00012,aux372,aux2966_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2967,-20,opponent_00020_00012,opponent_00020_00013],0);
constraint int_eq_reif(aux3395,travel_00020_00013,aux2968_BOOL);
constraint int_eq_reif(travel_00020_00013,aux370,aux2969_BOOL);
constraint int_eq_reif(travel_00020_00013,0,aux2970_BOOL);
constraint int_eq_reif(travel_00020_00013,aux371,aux2971_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2972,-20,opponent_00020_00013,opponent_00020_00014],0);
constraint int_eq_reif(aux3396,travel_00020_00014,aux2973_BOOL);
constraint int_eq_reif(travel_00020_00014,aux369,aux2974_BOOL);
constraint int_eq_reif(travel_00020_00014,0,aux2975_BOOL);
constraint int_eq_reif(travel_00020_00014,aux370,aux2976_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2977,-20,opponent_00020_00014,opponent_00020_00015],0);
constraint int_eq_reif(aux3397,travel_00020_00015,aux2978_BOOL);
constraint int_eq_reif(travel_00020_00015,aux368,aux2979_BOOL);
constraint int_eq_reif(travel_00020_00015,0,aux2980_BOOL);
constraint int_eq_reif(travel_00020_00015,aux369,aux2981_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2982,-20,opponent_00020_00015,opponent_00020_00016],0);
constraint int_eq_reif(aux3398,travel_00020_00016,aux2983_BOOL);
constraint int_eq_reif(travel_00020_00016,aux367,aux2984_BOOL);
constraint int_eq_reif(travel_00020_00016,0,aux2985_BOOL);
constraint int_eq_reif(travel_00020_00016,aux368,aux2986_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2987,-20,opponent_00020_00016,opponent_00020_00017],0);
constraint int_eq_reif(aux3399,travel_00020_00017,aux2988_BOOL);
constraint int_eq_reif(travel_00020_00017,aux365,aux2989_BOOL);
constraint int_eq_reif(travel_00020_00017,0,aux2990_BOOL);
constraint int_eq_reif(travel_00020_00017,aux367,aux2991_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2992,-20,opponent_00020_00017,opponent_00020_00018],0);
constraint int_eq_reif(aux3400,travel_00020_00018,aux2993_BOOL);
constraint int_eq_reif(travel_00020_00018,aux366,aux2994_BOOL);
constraint int_eq_reif(travel_00020_00018,0,aux2995_BOOL);
constraint int_eq_reif(travel_00020_00018,aux365,aux2996_BOOL);
constraint int_lin_eq([-1,1,20,1],[aux2997,-20,opponent_00020_00018,opponent_00020_00019],0);
constraint int_eq_reif(aux3401,travel_00020_00019,aux2998_BOOL);
constraint int_eq_reif(travel_00020_00019,aux363,aux2999_BOOL);
constraint int_eq_reif(travel_00020_00019,0,aux3000_BOOL);
constraint int_eq_reif(travel_00020_00019,aux366,aux3001_BOOL);
constraint int_eq_reif(0,travel_00001_00020,aux3002_BOOL);
constraint int_eq_reif(aux18,travel_00001_00020,aux3003_BOOL);
constraint int_eq_reif(0,travel_00002_00020,aux3004_BOOL);
constraint int_eq_reif(aux267,travel_00002_00020,aux3005_BOOL);
constraint int_eq_reif(travel_00003_00020,0,aux3006_BOOL);
constraint int_eq_reif(aux31,travel_00003_00020,aux3007_BOOL);
constraint int_eq_reif(travel_00004_00020,0,aux3008_BOOL);
constraint int_eq_reif(travel_00004_00020,aux106,aux3009_BOOL);
constraint int_eq_reif(0,travel_00005_00020,aux3010_BOOL);
constraint int_eq_reif(aux84,travel_00005_00020,aux3011_BOOL);
constraint int_eq_reif(0,travel_00006_00020,aux3012_BOOL);
constraint int_eq_reif(aux231,travel_00006_00020,aux3013_BOOL);
constraint int_eq_reif(0,travel_00007_00020,aux3014_BOOL);
constraint int_eq_reif(aux305,travel_00007_00020,aux3015_BOOL);
constraint int_eq_reif(travel_00008_00020,0,aux3016_BOOL);
constraint int_eq_reif(travel_00008_00020,aux50,aux3017_BOOL);
constraint int_eq_reif(travel_00009_00020,0,aux3018_BOOL);
constraint int_eq_reif(travel_00009_00020,aux122,aux3019_BOOL);
constraint int_eq_reif(0,travel_00010_00020,aux3020_BOOL);
constraint int_eq_reif(aux76,travel_00010_00020,aux3021_BOOL);
constraint int_eq_reif(travel_00011_00020,0,aux3022_BOOL);
constraint int_eq_reif(travel_00011_00020,aux307,aux3023_BOOL);
constraint int_eq_reif(travel_00012_00020,0,aux3024_BOOL);
constraint int_eq_reif(travel_00012_00020,aux348,aux3025_BOOL);
constraint int_eq_reif(0,travel_00013_00020,aux3026_BOOL);
constraint int_eq_reif(travel_00013_00020,aux171,aux3027_BOOL);
constraint int_eq_reif(0,travel_00014_00020,aux3028_BOOL);
constraint int_eq_reif(aux277,travel_00014_00020,aux3029_BOOL);
constraint int_eq_reif(0,travel_00015_00020,aux3030_BOOL);
constraint int_eq_reif(aux147,travel_00015_00020,aux3031_BOOL);
constraint int_eq_reif(travel_00016_00020,0,aux3032_BOOL);
constraint int_eq_reif(travel_00016_00020,aux190,aux3033_BOOL);
constraint int_eq_reif(travel_00017_00020,0,aux3034_BOOL);
constraint int_eq_reif(travel_00017_00020,aux211,aux3035_BOOL);
constraint int_eq_reif(0,travel_00018_00020,aux3036_BOOL);
constraint int_eq_reif(travel_00018_00020,aux193,aux3037_BOOL);
constraint int_eq_reif(0,travel_00019_00020,aux3038_BOOL);
constraint int_eq_reif(aux340,travel_00019_00020,aux3039_BOOL);
constraint int_eq_reif(travel_00020_00020,0,aux3040_BOOL);
constraint int_eq_reif(travel_00020_00020,aux363,aux3041_BOOL);
constraint array_var_int_element(aux1155, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux1);
constraint array_var_int_element(aux1156, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux2);
constraint array_var_int_element(aux1159, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux3);
constraint array_var_int_element(aux1161, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux4);
constraint array_var_int_element(aux1152, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux5);
constraint array_var_int_element(aux1153, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux6);
constraint array_var_int_element(aux1157, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux7);
constraint array_var_int_element(aux1158, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux8);
constraint array_var_int_element(aux1160, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux9);
constraint array_var_int_element(aux1150, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux10);
constraint array_var_int_element(aux1149, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux11);
constraint array_var_int_element(aux1148, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux12);
constraint array_var_int_element(aux1147, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux13);
constraint array_var_int_element(aux1146, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux14);
constraint array_var_int_element(aux1144, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux15);
constraint array_var_int_element(aux1145, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux16);
constraint array_var_int_element(aux1143, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux17);
constraint array_var_int_element(aux1154, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux18);
constraint array_var_int_element(opponent_00003_00001, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3], aux19);
constraint array_var_int_element(opponent_00003_00009, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3], aux20);
constraint array_var_int_element(opponent_00003_00008, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3], aux21);
constraint array_var_int_element(opponent_00003_00006, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3], aux22);
constraint array_var_int_element(opponent_00003_00007, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3], aux23);
constraint array_var_int_element(opponent_00003_00004, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3], aux24);
constraint array_var_int_element(opponent_00003_00005, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3], aux25);
constraint array_var_int_element(opponent_00003_00002, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3], aux26);
constraint array_var_int_element(opponent_00003_00003, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3], aux27);
constraint array_var_int_element(opponent_00003_00012, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3], aux28);
constraint array_var_int_element(opponent_00003_00011, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3], aux29);
constraint array_var_int_element(opponent_00003_00010, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3], aux30);
constraint array_var_int_element(opponent_00003_00019, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3], aux31);
constraint array_var_int_element(opponent_00003_00018, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3], aux32);
constraint array_var_int_element(opponent_00003_00017, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3], aux33);
constraint array_var_int_element(opponent_00003_00016, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3], aux34);
constraint array_var_int_element(opponent_00003_00015, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3], aux35);
constraint array_var_int_element(opponent_00003_00014, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3], aux36);
constraint array_var_int_element(opponent_00003_00013, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3], aux37);
constraint array_var_int_element(opponent_00008_00014, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8], aux38);
constraint array_var_int_element(opponent_00008_00013, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8], aux39);
constraint array_var_int_element(opponent_00008_00015, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8], aux40);
constraint array_var_int_element(opponent_00008_00012, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8], aux41);
constraint array_var_int_element(opponent_00008_00011, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8], aux42);
constraint array_var_int_element(opponent_00008_00010, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8], aux43);
constraint array_var_int_element(opponent_00008_00009, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8], aux44);
constraint array_var_int_element(opponent_00008_00006, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8], aux45);
constraint array_var_int_element(opponent_00008_00005, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8], aux46);
constraint array_var_int_element(opponent_00008_00008, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8], aux47);
constraint array_var_int_element(opponent_00008_00007, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8], aux48);
constraint array_var_int_element(opponent_00008_00018, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8], aux49);
constraint array_var_int_element(opponent_00008_00019, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8], aux50);
constraint array_var_int_element(opponent_00008_00016, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8], aux51);
constraint array_var_int_element(opponent_00008_00017, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8], aux52);
constraint array_var_int_element(opponent_00008_00001, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8], aux53);
constraint array_var_int_element(opponent_00008_00002, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8], aux54);
constraint array_var_int_element(opponent_00008_00004, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8], aux55);
constraint array_var_int_element(opponent_00008_00003, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8], aux56);
constraint array_var_int_element(aux1151, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux57);
constraint array_var_int_element(opponent_00010_00009, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], aux58);
constraint array_var_int_element(opponent_00010_00008, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], aux59);
constraint array_var_int_element(opponent_00010_00007, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], aux60);
constraint array_var_int_element(opponent_00010_00006, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], aux61);
constraint array_var_int_element(opponent_00010_00005, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], aux62);
constraint array_var_int_element(opponent_00010_00004, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], aux63);
constraint array_var_int_element(opponent_00010_00003, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], aux64);
constraint array_var_int_element(opponent_00010_00002, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], aux65);
constraint array_var_int_element(opponent_00010_00001, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], aux66);
constraint array_var_int_element(opponent_00010_00010, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], aux67);
constraint array_var_int_element(opponent_00010_00011, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], aux68);
constraint array_var_int_element(opponent_00010_00012, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], aux69);
constraint array_var_int_element(opponent_00010_00013, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], aux70);
constraint array_var_int_element(opponent_00010_00014, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], aux71);
constraint array_var_int_element(opponent_00010_00015, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], aux72);
constraint array_var_int_element(opponent_00010_00016, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], aux73);
constraint array_var_int_element(opponent_00010_00017, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], aux74);
constraint array_var_int_element(opponent_00010_00018, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], aux75);
constraint array_var_int_element(opponent_00010_00019, [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], aux76);
constraint array_var_int_element(opponent_00005_00007, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5], aux77);
constraint array_var_int_element(opponent_00005_00006, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5], aux78);
constraint array_var_int_element(opponent_00005_00004, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5], aux79);
constraint array_var_int_element(opponent_00005_00005, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5], aux80);
constraint array_var_int_element(opponent_00005_00002, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5], aux81);
constraint array_var_int_element(opponent_00005_00003, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5], aux82);
constraint array_var_int_element(opponent_00005_00001, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5], aux83);
constraint array_var_int_element(opponent_00005_00019, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5], aux84);
constraint array_var_int_element(opponent_00005_00010, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5], aux85);
constraint array_var_int_element(opponent_00005_00017, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5], aux86);
constraint array_var_int_element(opponent_00005_00018, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5], aux87);
constraint array_var_int_element(opponent_00005_00016, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5], aux88);
constraint array_var_int_element(opponent_00005_00015, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5], aux89);
constraint array_var_int_element(opponent_00005_00014, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5], aux90);
constraint array_var_int_element(opponent_00005_00013, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5], aux91);
constraint array_var_int_element(opponent_00005_00012, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5], aux92);
constraint array_var_int_element(opponent_00005_00011, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5], aux93);
constraint array_var_int_element(opponent_00005_00009, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5], aux94);
constraint array_var_int_element(opponent_00005_00008, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5], aux95);
constraint array_var_int_element(opponent_00004_00005, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], aux96);
constraint array_var_int_element(opponent_00004_00006, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], aux97);
constraint array_var_int_element(opponent_00004_00008, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], aux98);
constraint array_var_int_element(opponent_00004_00007, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], aux99);
constraint array_var_int_element(opponent_00004_00001, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], aux100);
constraint array_var_int_element(opponent_00004_00002, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], aux101);
constraint array_var_int_element(opponent_00004_00003, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], aux102);
constraint array_var_int_element(opponent_00004_00004, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], aux103);
constraint array_var_int_element(opponent_00004_00018, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], aux104);
constraint array_var_int_element(opponent_00004_00017, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], aux105);
constraint array_var_int_element(opponent_00004_00019, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], aux106);
constraint array_var_int_element(opponent_00004_00016, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], aux107);
constraint array_var_int_element(opponent_00004_00013, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], aux108);
constraint array_var_int_element(opponent_00004_00012, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], aux109);
constraint array_var_int_element(opponent_00004_00015, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], aux110);
constraint array_var_int_element(opponent_00004_00014, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], aux111);
constraint array_var_int_element(opponent_00004_00011, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], aux112);
constraint array_var_int_element(opponent_00004_00010, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], aux113);
constraint array_var_int_element(opponent_00004_00009, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4], aux114);
constraint array_var_int_element(opponent_00009_00003, [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9], aux115);
constraint array_var_int_element(opponent_00009_00002, [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9], aux116);
constraint array_var_int_element(opponent_00009_00001, [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9], aux117);
constraint array_var_int_element(opponent_00009_00015, [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9], aux118);
constraint array_var_int_element(opponent_00009_00016, [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9], aux119);
constraint array_var_int_element(opponent_00009_00017, [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9], aux120);
constraint array_var_int_element(opponent_00009_00018, [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9], aux121);
constraint array_var_int_element(opponent_00009_00019, [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9], aux122);
constraint array_var_int_element(opponent_00009_00013, [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9], aux123);
constraint array_var_int_element(opponent_00009_00014, [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9], aux124);
constraint array_var_int_element(opponent_00009_00012, [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9], aux125);
constraint array_var_int_element(opponent_00009_00011, [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9], aux126);
constraint array_var_int_element(opponent_00009_00010, [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9], aux127);
constraint array_var_int_element(opponent_00009_00009, [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9], aux128);
constraint array_var_int_element(opponent_00009_00008, [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9], aux129);
constraint array_var_int_element(opponent_00009_00007, [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9], aux130);
constraint array_var_int_element(opponent_00009_00006, [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9], aux131);
constraint array_var_int_element(opponent_00009_00005, [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9], aux132);
constraint array_var_int_element(opponent_00009_00004, [8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9], aux133);
constraint array_var_int_element(opponent_00015_00002, [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux134);
constraint array_var_int_element(opponent_00015_00001, [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux135);
constraint array_var_int_element(opponent_00015_00004, [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux136);
constraint array_var_int_element(opponent_00015_00003, [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux137);
constraint array_var_int_element(opponent_00015_00007, [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux138);
constraint array_var_int_element(opponent_00015_00006, [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux139);
constraint array_var_int_element(opponent_00015_00008, [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux140);
constraint array_var_int_element(opponent_00015_00005, [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux141);
constraint array_var_int_element(opponent_00015_00009, [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux142);
constraint array_var_int_element(opponent_00015_00014, [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux143);
constraint array_var_int_element(opponent_00015_00015, [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux144);
constraint array_var_int_element(opponent_00015_00012, [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux145);
constraint array_var_int_element(opponent_00015_00013, [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux146);
constraint array_var_int_element(opponent_00015_00019, [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux147);
constraint array_var_int_element(opponent_00015_00018, [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux148);
constraint array_var_int_element(opponent_00015_00016, [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux149);
constraint array_var_int_element(opponent_00015_00017, [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux150);
constraint array_var_int_element(opponent_00015_00010, [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux151);
constraint array_var_int_element(opponent_00015_00011, [6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux152);
constraint array_var_int_element(opponent_00013_00002, [8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux153);
constraint array_var_int_element(opponent_00013_00001, [8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux154);
constraint array_var_int_element(opponent_00013_00004, [8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux155);
constraint array_var_int_element(opponent_00013_00003, [8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux156);
constraint array_var_int_element(opponent_00013_00006, [8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux157);
constraint array_var_int_element(opponent_00013_00005, [8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux158);
constraint array_var_int_element(opponent_00013_00009, [8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux159);
constraint array_var_int_element(opponent_00013_00008, [8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux160);
constraint array_var_int_element(opponent_00013_00007, [8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux161);
constraint array_var_int_element(opponent_00013_00012, [8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux162);
constraint array_var_int_element(opponent_00013_00013, [8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux163);
constraint array_var_int_element(opponent_00013_00010, [8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux164);
constraint array_var_int_element(opponent_00013_00011, [8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux165);
constraint array_var_int_element(opponent_00013_00016, [8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux166);
constraint array_var_int_element(opponent_00013_00017, [8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux167);
constraint array_var_int_element(opponent_00013_00014, [8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux168);
constraint array_var_int_element(opponent_00013_00015, [8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux169);
constraint array_var_int_element(opponent_00013_00018, [8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux170);
constraint array_var_int_element(opponent_00013_00019, [8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux171);
constraint array_var_int_element(opponent_00016_00011, [5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux172);
constraint array_var_int_element(opponent_00016_00012, [5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux173);
constraint array_var_int_element(opponent_00016_00013, [5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux174);
constraint array_var_int_element(opponent_00016_00014, [5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux175);
constraint array_var_int_element(opponent_00016_00015, [5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux176);
constraint array_var_int_element(opponent_00016_00016, [5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux177);
constraint array_var_int_element(opponent_00016_00018, [5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux178);
constraint array_var_int_element(opponent_00016_00017, [5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux179);
constraint array_var_int_element(opponent_00016_00010, [5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux180);
constraint array_var_int_element(opponent_00016_00008, [5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux181);
constraint array_var_int_element(opponent_00016_00009, [5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux182);
constraint array_var_int_element(opponent_00016_00006, [5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux183);
constraint array_var_int_element(opponent_00016_00007, [5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux184);
constraint array_var_int_element(opponent_00016_00005, [5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux185);
constraint array_var_int_element(opponent_00016_00004, [5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux186);
constraint array_var_int_element(opponent_00016_00003, [5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux187);
constraint array_var_int_element(opponent_00016_00002, [5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux188);
constraint array_var_int_element(opponent_00016_00001, [5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux189);
constraint array_var_int_element(opponent_00016_00019, [5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux190);
constraint array_var_int_element(opponent_00018_00018, [3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux191);
constraint array_var_int_element(opponent_00018_00017, [3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux192);
constraint array_var_int_element(opponent_00018_00019, [3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux193);
constraint array_var_int_element(opponent_00018_00003, [3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux194);
constraint array_var_int_element(opponent_00018_00002, [3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux195);
constraint array_var_int_element(opponent_00018_00001, [3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux196);
constraint array_var_int_element(opponent_00018_00004, [3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux197);
constraint array_var_int_element(opponent_00018_00005, [3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux198);
constraint array_var_int_element(opponent_00018_00006, [3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux199);
constraint array_var_int_element(opponent_00018_00007, [3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux200);
constraint array_var_int_element(opponent_00018_00008, [3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux201);
constraint array_var_int_element(opponent_00018_00009, [3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux202);
constraint array_var_int_element(opponent_00018_00010, [3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux203);
constraint array_var_int_element(opponent_00018_00011, [3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux204);
constraint array_var_int_element(opponent_00018_00012, [3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux205);
constraint array_var_int_element(opponent_00018_00013, [3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux206);
constraint array_var_int_element(opponent_00018_00014, [3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux207);
constraint array_var_int_element(opponent_00018_00016, [3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux208);
constraint array_var_int_element(opponent_00018_00015, [3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux209);
constraint array_var_int_element(aux1141, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux210);
constraint array_var_int_element(opponent_00017_00019, [4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux211);
constraint array_var_int_element(opponent_00017_00018, [4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux212);
constraint array_var_int_element(opponent_00017_00002, [4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux213);
constraint array_var_int_element(opponent_00017_00001, [4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux214);
constraint array_var_int_element(opponent_00017_00005, [4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux215);
constraint array_var_int_element(opponent_00017_00004, [4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux216);
constraint array_var_int_element(opponent_00017_00006, [4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux217);
constraint array_var_int_element(opponent_00017_00003, [4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux218);
constraint array_var_int_element(opponent_00017_00012, [4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux219);
constraint array_var_int_element(opponent_00017_00013, [4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux220);
constraint array_var_int_element(opponent_00017_00010, [4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux221);
constraint array_var_int_element(opponent_00017_00011, [4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux222);
constraint array_var_int_element(opponent_00017_00017, [4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux223);
constraint array_var_int_element(opponent_00017_00016, [4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux224);
constraint array_var_int_element(opponent_00017_00014, [4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux225);
constraint array_var_int_element(opponent_00017_00015, [4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux226);
constraint array_var_int_element(opponent_00017_00009, [4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux227);
constraint array_var_int_element(opponent_00017_00007, [4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux228);
constraint array_var_int_element(opponent_00017_00008, [4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux229);
constraint array_var_int_element(opponent_00006_00018, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6], aux230);
constraint array_var_int_element(opponent_00006_00019, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6], aux231);
constraint array_var_int_element(opponent_00006_00016, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6], aux232);
constraint array_var_int_element(opponent_00006_00015, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6], aux233);
constraint array_var_int_element(opponent_00006_00017, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6], aux234);
constraint array_var_int_element(opponent_00006_00014, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6], aux235);
constraint array_var_int_element(opponent_00006_00011, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6], aux236);
constraint array_var_int_element(opponent_00006_00010, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6], aux237);
constraint array_var_int_element(opponent_00006_00013, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6], aux238);
constraint array_var_int_element(opponent_00006_00012, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6], aux239);
constraint array_var_int_element(opponent_00006_00008, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6], aux240);
constraint array_var_int_element(opponent_00006_00007, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6], aux241);
constraint array_var_int_element(opponent_00006_00009, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6], aux242);
constraint array_var_int_element(opponent_00006_00003, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6], aux243);
constraint array_var_int_element(opponent_00006_00004, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6], aux244);
constraint array_var_int_element(opponent_00006_00006, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6], aux245);
constraint array_var_int_element(opponent_00006_00005, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6], aux246);
constraint array_var_int_element(opponent_00006_00001, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6], aux247);
constraint array_var_int_element(opponent_00006_00002, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6], aux248);
constraint array_var_int_element(opponent_00002_00007, [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux249);
constraint array_var_int_element(opponent_00002_00008, [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux250);
constraint array_var_int_element(opponent_00002_00009, [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux251);
constraint array_var_int_element(opponent_00002_00003, [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux252);
constraint array_var_int_element(opponent_00002_00004, [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux253);
constraint array_var_int_element(opponent_00002_00005, [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux254);
constraint array_var_int_element(opponent_00002_00006, [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux255);
constraint array_var_int_element(opponent_00002_00001, [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux256);
constraint array_var_int_element(opponent_00002_00002, [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux257);
constraint array_var_int_element(opponent_00002_00018, [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux258);
constraint array_var_int_element(opponent_00002_00015, [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux259);
constraint array_var_int_element(opponent_00002_00014, [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux260);
constraint array_var_int_element(opponent_00002_00017, [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux261);
constraint array_var_int_element(opponent_00002_00016, [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux262);
constraint array_var_int_element(opponent_00002_00011, [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux263);
constraint array_var_int_element(opponent_00002_00010, [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux264);
constraint array_var_int_element(opponent_00002_00013, [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux265);
constraint array_var_int_element(opponent_00002_00012, [1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux266);
constraint array_var_int_element(aux1142, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2], aux267);
constraint array_var_int_element(opponent_00014_00010, [7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux268);
constraint array_var_int_element(opponent_00014_00011, [7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux269);
constraint array_var_int_element(opponent_00014_00012, [7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux270);
constraint array_var_int_element(opponent_00014_00013, [7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux271);
constraint array_var_int_element(opponent_00014_00014, [7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux272);
constraint array_var_int_element(opponent_00014_00015, [7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux273);
constraint array_var_int_element(opponent_00014_00016, [7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux274);
constraint array_var_int_element(opponent_00014_00017, [7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux275);
constraint array_var_int_element(opponent_00014_00018, [7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux276);
constraint array_var_int_element(opponent_00014_00019, [7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux277);
constraint array_var_int_element(opponent_00014_00008, [7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux278);
constraint array_var_int_element(opponent_00014_00009, [7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux279);
constraint array_var_int_element(opponent_00014_00007, [7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux280);
constraint array_var_int_element(opponent_00014_00006, [7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux281);
constraint array_var_int_element(opponent_00014_00005, [7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux282);
constraint array_var_int_element(opponent_00014_00004, [7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux283);
constraint array_var_int_element(opponent_00014_00003, [7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux284);
constraint array_var_int_element(opponent_00014_00002, [7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux285);
constraint array_var_int_element(opponent_00014_00001, [7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux286);
constraint array_var_int_element(opponent_00007_00005, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7], aux287);
constraint array_var_int_element(opponent_00007_00004, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7], aux288);
constraint array_var_int_element(opponent_00007_00002, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7], aux289);
constraint array_var_int_element(opponent_00007_00003, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7], aux290);
constraint array_var_int_element(opponent_00007_00001, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7], aux291);
constraint array_var_int_element(opponent_00007_00015, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7], aux292);
constraint array_var_int_element(opponent_00007_00016, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7], aux293);
constraint array_var_int_element(opponent_00007_00014, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7], aux294);
constraint array_var_int_element(opponent_00007_00013, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7], aux295);
constraint array_var_int_element(opponent_00007_00012, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7], aux296);
constraint array_var_int_element(opponent_00007_00011, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7], aux297);
constraint array_var_int_element(opponent_00007_00010, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7], aux298);
constraint array_var_int_element(opponent_00007_00009, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7], aux299);
constraint array_var_int_element(opponent_00007_00008, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7], aux300);
constraint array_var_int_element(opponent_00007_00007, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7], aux301);
constraint array_var_int_element(opponent_00007_00006, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7], aux302);
constraint array_var_int_element(opponent_00007_00017, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7], aux303);
constraint array_var_int_element(opponent_00007_00018, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7], aux304);
constraint array_var_int_element(opponent_00007_00019, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7], aux305);
constraint array_var_int_element(opponent_00011_00018, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], aux306);
constraint array_var_int_element(opponent_00011_00019, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], aux307);
constraint array_var_int_element(opponent_00011_00016, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], aux308);
constraint array_var_int_element(opponent_00011_00017, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], aux309);
constraint array_var_int_element(opponent_00011_00010, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], aux310);
constraint array_var_int_element(opponent_00011_00011, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], aux311);
constraint array_var_int_element(opponent_00011_00014, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], aux312);
constraint array_var_int_element(opponent_00011_00015, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], aux313);
constraint array_var_int_element(opponent_00011_00012, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], aux314);
constraint array_var_int_element(opponent_00011_00013, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], aux315);
constraint array_var_int_element(opponent_00011_00006, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], aux316);
constraint array_var_int_element(opponent_00011_00005, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], aux317);
constraint array_var_int_element(opponent_00011_00008, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], aux318);
constraint array_var_int_element(opponent_00011_00007, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], aux319);
constraint array_var_int_element(opponent_00011_00009, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], aux320);
constraint array_var_int_element(opponent_00011_00002, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], aux321);
constraint array_var_int_element(opponent_00011_00001, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], aux322);
constraint array_var_int_element(opponent_00011_00004, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], aux323);
constraint array_var_int_element(opponent_00011_00003, [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], aux324);
constraint array_var_int_element(opponent_00019_00003, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux325);
constraint array_var_int_element(opponent_00019_00002, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux326);
constraint array_var_int_element(opponent_00019_00004, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux327);
constraint array_var_int_element(opponent_00019_00001, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux328);
constraint array_var_int_element(opponent_00019_00010, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux329);
constraint array_var_int_element(opponent_00019_00011, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux330);
constraint array_var_int_element(opponent_00019_00015, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux331);
constraint array_var_int_element(opponent_00019_00014, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux332);
constraint array_var_int_element(opponent_00019_00012, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux333);
constraint array_var_int_element(opponent_00019_00013, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux334);
constraint array_var_int_element(opponent_00019_00007, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux335);
constraint array_var_int_element(opponent_00019_00008, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux336);
constraint array_var_int_element(opponent_00019_00005, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux337);
constraint array_var_int_element(opponent_00019_00006, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux338);
constraint array_var_int_element(opponent_00019_00009, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux339);
constraint array_var_int_element(opponent_00019_00019, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux340);
constraint array_var_int_element(opponent_00019_00018, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux341);
constraint array_var_int_element(opponent_00019_00017, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux342);
constraint array_var_int_element(opponent_00019_00016, [2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux343);
constraint array_var_int_element(opponent_00012_00015, [9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8], aux344);
constraint array_var_int_element(opponent_00012_00016, [9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8], aux345);
constraint array_var_int_element(opponent_00012_00017, [9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8], aux346);
constraint array_var_int_element(opponent_00012_00018, [9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8], aux347);
constraint array_var_int_element(opponent_00012_00019, [9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8], aux348);
constraint array_var_int_element(opponent_00012_00010, [9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8], aux349);
constraint array_var_int_element(opponent_00012_00011, [9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8], aux350);
constraint array_var_int_element(opponent_00012_00012, [9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8], aux351);
constraint array_var_int_element(opponent_00012_00013, [9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8], aux352);
constraint array_var_int_element(opponent_00012_00014, [9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8], aux353);
constraint array_var_int_element(opponent_00012_00003, [9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8], aux354);
constraint array_var_int_element(opponent_00012_00002, [9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8], aux355);
constraint array_var_int_element(opponent_00012_00001, [9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8], aux356);
constraint array_var_int_element(opponent_00012_00009, [9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8], aux357);
constraint array_var_int_element(opponent_00012_00008, [9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8], aux358);
constraint array_var_int_element(opponent_00012_00007, [9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8], aux359);
constraint array_var_int_element(opponent_00012_00006, [9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8], aux360);
constraint array_var_int_element(opponent_00012_00005, [9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8], aux361);
constraint array_var_int_element(opponent_00012_00004, [9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8], aux362);
constraint array_var_int_element(opponent_00020_00019, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux363);
constraint array_var_int_element(opponent_00020_00010, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux364);
constraint array_var_int_element(opponent_00020_00017, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux365);
constraint array_var_int_element(opponent_00020_00018, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux366);
constraint array_var_int_element(opponent_00020_00016, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux367);
constraint array_var_int_element(opponent_00020_00015, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux368);
constraint array_var_int_element(opponent_00020_00014, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux369);
constraint array_var_int_element(opponent_00020_00013, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux370);
constraint array_var_int_element(opponent_00020_00012, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux371);
constraint array_var_int_element(opponent_00020_00011, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux372);
constraint array_var_int_element(opponent_00020_00009, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux373);
constraint array_var_int_element(opponent_00020_00008, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux374);
constraint array_var_int_element(opponent_00020_00007, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux375);
constraint array_var_int_element(opponent_00020_00006, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux376);
constraint array_var_int_element(opponent_00020_00004, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux377);
constraint array_var_int_element(opponent_00020_00005, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux378);
constraint array_var_int_element(opponent_00020_00002, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux379);
constraint array_var_int_element(opponent_00020_00003, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1], aux380);
constraint int_ne_reif(venue_00010_00008,2,aux381_BOOL);
constraint int_ne_reif(1,venue_00009_00017,aux382_BOOL);
constraint int_ne_reif(2,venue_00003_00007,aux383_BOOL);
constraint int_ne_reif(venue_00014_00011,2,aux384_BOOL);
constraint int_ne_reif(1,venue_00011_00002,aux385_BOOL);
constraint int_ne_reif(venue_00006_00016,2,aux386_BOOL);
constraint int_ne_reif(venue_00002_00006,1,aux387_BOOL);
constraint int_ne_reif(1,venue_00017_00017,aux388_BOOL);
constraint int_ne_reif(venue_00014_00016,2,aux389_BOOL);
constraint int_ne_reif(2,venue_00008_00002,aux390_BOOL);
constraint int_ne_reif(2,venue_00020_00011,aux391_BOOL);
constraint int_ne_reif(1,venue_00011_00008,aux392_BOOL);
constraint int_ne_reif(2,venue_00004_00008,aux393_BOOL);
constraint int_ne_reif(1,venue_00016_00018,aux394_BOOL);
constraint int_ne_reif(venue_00019_00004,2,aux395_BOOL);
constraint int_ne_reif(venue_00006_00014,1,aux396_BOOL);
constraint int_ne_reif(1,venue_00012_00009,aux397_BOOL);
constraint int_ne_reif(venue_00018_00013,1,aux398_BOOL);
constraint int_ne_reif(2,venue_00020_00018,aux399_BOOL);
constraint int_ne_reif(1,venue_00008_00006,aux400_BOOL);
constraint int_ne_reif(1,venue_00008_00018,aux401_BOOL);
constraint int_ne_reif(venue_00006_00005,1,aux402_BOOL);
constraint int_ne_reif(venue_00019_00003,1,aux403_BOOL);
constraint int_ne_reif(2,venue_00016_00008,aux404_BOOL);
constraint int_ne_reif(venue_00002_00002,2,aux405_BOOL);
constraint int_ne_reif(venue_00010_00012,2,aux406_BOOL);
constraint int_ne_reif(1,venue_00016_00003,aux407_BOOL);
constraint int_ne_reif(2,venue_00003_00015,aux408_BOOL);
constraint int_ne_reif(venue_00007_00005,2,aux409_BOOL);
constraint int_ne_reif(venue_00002_00002,1,aux410_BOOL);
constraint int_ne_reif(venue_00018_00017,2,aux411_BOOL);
constraint int_ne_reif(venue_00010_00006,1,aux412_BOOL);
constraint int_ne_reif(venue_00001_00002,1,aux413_BOOL);
constraint int_ne_reif(1,venue_00008_00003,aux414_BOOL);
constraint int_ne_reif(venue_00001_00002,2,aux415_BOOL);
constraint int_ne_reif(2,venue_00004_00016,aux416_BOOL);
constraint int_ne_reif(venue_00002_00008,2,aux417_BOOL);
constraint int_ne_reif(1,venue_00009_00007,aux418_BOOL);
constraint int_ne_reif(2,venue_00012_00007,aux419_BOOL);
constraint int_ne_reif(venue_00014_00014,1,aux420_BOOL);
constraint int_ne_reif(venue_00006_00011,2,aux421_BOOL);
constraint int_ne_reif(2,venue_00017_00009,aux422_BOOL);
constraint int_ne_reif(venue_00010_00015,1,aux423_BOOL);
constraint int_ne_reif(venue_00007_00008,1,aux424_BOOL);
constraint int_ne_reif(venue_00002_00018,1,aux425_BOOL);
constraint int_ne_reif(venue_00002_00018,2,aux426_BOOL);
constraint int_ne_reif(venue_00001_00014,2,aux427_BOOL);
constraint int_ne_reif(venue_00013_00008,2,aux428_BOOL);
constraint int_ne_reif(2,venue_00012_00012,aux429_BOOL);
constraint int_ne_reif(1,venue_00009_00015,aux430_BOOL);
constraint int_ne_reif(2,venue_00009_00005,aux431_BOOL);
constraint int_ne_reif(1,venue_00020_00013,aux432_BOOL);
constraint int_ne_reif(venue_00013_00017,1,aux433_BOOL);
constraint int_ne_reif(1,venue_00016_00010,aux434_BOOL);
constraint int_ne_reif(2,venue_00004_00018,aux435_BOOL);
constraint int_ne_reif(1,venue_00017_00014,aux436_BOOL);
constraint int_ne_reif(2,venue_00017_00004,aux437_BOOL);
constraint int_ne_reif(1,venue_00003_00004,aux438_BOOL);
constraint int_ne_reif(venue_00010_00010,1,aux439_BOOL);
constraint int_ne_reif(1,venue_00011_00016,aux440_BOOL);
constraint int_ne_reif(2,venue_00011_00006,aux441_BOOL);
constraint int_ne_reif(venue_00007_00014,2,aux442_BOOL);
constraint int_ne_reif(1,venue_00004_00010,aux443_BOOL);
constraint int_ne_reif(2,venue_00008_00009,aux444_BOOL);
constraint int_ne_reif(venue_00001_00012,1,aux445_BOOL);
constraint int_ne_reif(1,venue_00003_00012,aux446_BOOL);
constraint int_ne_reif(venue_00015_00013,1,aux447_BOOL);
constraint int_ne_reif(venue_00002_00012,2,aux448_BOOL);
constraint int_ne_reif(2,venue_00009_00013,aux449_BOOL);
constraint int_ne_reif(venue_00015_00017,2,aux450_BOOL);
constraint int_ne_reif(venue_00007_00012,1,aux451_BOOL);
constraint int_ne_reif(venue_00002_00010,1,aux452_BOOL);
constraint int_ne_reif(1,venue_00017_00006,aux453_BOOL);
constraint int_ne_reif(2,venue_00011_00014,aux454_BOOL);
constraint int_ne_reif(venue_00015_00015,2,aux455_BOOL);
constraint int_ne_reif(venue_00001_00019,2,aux456_BOOL);
constraint int_ne_reif(venue_00001_00019,1,aux457_BOOL);
constraint int_ne_reif(venue_00001_00001,1,aux458_BOOL);
constraint int_ne_reif(venue_00001_00001,2,aux459_BOOL);
constraint int_ne_reif(venue_00002_00015,1,aux460_BOOL);
constraint int_ne_reif(venue_00014_00017,1,aux461_BOOL);
constraint int_ne_reif(2,venue_00012_00018,aux462_BOOL);
constraint int_ne_reif(venue_00018_00002,2,aux463_BOOL);
constraint int_ne_reif(venue_00005_00015,1,aux464_BOOL);
constraint int_ne_reif(venue_00015_00009,1,aux465_BOOL);
constraint int_ne_reif(1,venue_00012_00006,aux466_BOOL);
constraint int_ne_reif(venue_00013_00010,1,aux467_BOOL);
constraint int_ne_reif(venue_00014_00017,2,aux468_BOOL);
constraint int_ne_reif(1,venue_00008_00009,aux469_BOOL);
constraint int_ne_reif(venue_00018_00002,1,aux470_BOOL);
constraint int_ne_reif(venue_00015_00010,2,aux471_BOOL);
constraint int_ne_reif(1,venue_00004_00003,aux472_BOOL);
constraint int_ne_reif(1,venue_00009_00004,aux473_BOOL);
constraint int_ne_reif(venue_00013_00015,1,aux474_BOOL);
constraint int_ne_reif(2,venue_00016_00011,aux475_BOOL);
constraint int_ne_reif(2,venue_00009_00003,aux476_BOOL);
constraint int_ne_reif(venue_00013_00012,2,aux477_BOOL);
constraint int_ne_reif(2,venue_00017_00014,aux478_BOOL);
constraint int_ne_reif(venue_00006_00017,1,aux479_BOOL);
constraint int_ne_reif(venue_00018_00005,2,aux480_BOOL);
constraint int_ne_reif(venue_00015_00004,1,aux481_BOOL);
constraint int_ne_reif(2,venue_00009_00015,aux482_BOOL);
constraint int_ne_reif(1,venue_00012_00003,aux483_BOOL);
constraint int_ne_reif(1,venue_00011_00005,aux484_BOOL);
constraint int_ne_reif(venue_00001_00005,2,aux485_BOOL);
constraint int_ne_reif(1,venue_00009_00012,aux486_BOOL);
constraint int_ne_reif(2,venue_00004_00013,aux487_BOOL);
constraint int_ne_reif(1,venue_00020_00003,aux488_BOOL);
constraint int_ne_reif(1,venue_00011_00017,aux489_BOOL);
constraint int_ne_reif(1,venue_00012_00014,aux490_BOOL);
constraint int_ne_reif(2,venue_00012_00004,aux491_BOOL);
constraint int_ne_reif(venue_00015_00006,2,aux492_BOOL);
constraint int_ne_reif(1,venue_00017_00016,aux493_BOOL);
constraint int_ne_reif(2,venue_00017_00006,aux494_BOOL);
constraint int_ne_reif(venue_00018_00014,2,aux495_BOOL);
constraint int_ne_reif(2,venue_00020_00016,aux496_BOOL);
constraint int_ne_reif(venue_00019_00017,2,aux497_BOOL);
constraint int_ne_reif(2,venue_00017_00003,aux498_BOOL);
constraint int_ne_reif(venue_00018_00008,1,aux499_BOOL);
constraint int_ne_reif(venue_00019_00016,1,aux500_BOOL);
constraint int_ne_reif(1,venue_00011_00013,aux501_BOOL);
constraint int_ne_reif(venue_00001_00008,1,aux502_BOOL);
constraint int_ne_reif(venue_00013_00006,1,aux503_BOOL);
constraint int_ne_reif(1,venue_00016_00013,aux504_BOOL);
constraint int_ne_reif(1,venue_00003_00017,aux505_BOOL);
constraint int_ne_reif(2,venue_00003_00012,aux506_BOOL);
constraint int_ne_reif(1,venue_00020_00005,aux507_BOOL);
constraint int_ne_reif(venue_00005_00008,2,aux508_BOOL);
constraint int_ne_reif(2,venue_00020_00017,aux509_BOOL);
constraint int_ne_reif(1,venue_00020_00010,aux510_BOOL);
constraint int_ne_reif(venue_00019_00002,1,aux511_BOOL);
constraint int_ne_reif(venue_00002_00003,2,aux512_BOOL);
constraint int_ne_reif(2,venue_00008_00012,aux513_BOOL);
constraint int_ne_reif(2,venue_00011_00011,aux514_BOOL);
constraint int_ne_reif(venue_00002_00007,2,aux515_BOOL);
constraint int_ne_reif(venue_00019_00011,1,aux516_BOOL);
constraint int_ne_reif(venue_00010_00007,2,aux517_BOOL);
constraint int_ne_reif(1,venue_00017_00011,aux518_BOOL);
constraint int_ne_reif(2,venue_00012_00009,aux519_BOOL);
constraint int_ne_reif(venue_00005_00006,1,aux520_BOOL);
constraint int_ne_reif(1,venue_00004_00007,aux521_BOOL);
constraint int_ne_reif(venue_00006_00007,2,aux522_BOOL);
constraint int_ne_reif(venue_00018_00012,1,aux523_BOOL);
constraint int_ne_reif(venue_00002_00005,1,aux524_BOOL);
constraint int_ne_reif(venue_00015_00003,1,aux525_BOOL);
constraint int_ne_reif(venue_00019_00002,2,aux526_BOOL);
constraint int_ne_reif(venue_00019_00013,2,aux527_BOOL);
constraint int_ne_reif(1,venue_00008_00014,aux528_BOOL);
constraint int_ne_reif(2,venue_00008_00004,aux529_BOOL);
constraint int_ne_reif(venue_00019_00007,1,aux530_BOOL);
constraint int_ne_reif(2,venue_00016_00002,aux531_BOOL);
constraint int_ne_reif(venue_00005_00012,2,aux532_BOOL);
constraint int_ne_reif(venue_00018_00018,2,aux533_BOOL);
constraint int_ne_reif(1,venue_00003_00002,aux534_BOOL);
constraint int_ne_reif(1,venue_00016_00005,aux535_BOOL);
constraint int_ne_reif(venue_00014_00005,1,aux536_BOOL);
constraint int_ne_reif(1,venue_00003_00009,aux537_BOOL);
constraint int_ne_reif(venue_00019_00009,2,aux538_BOOL);
constraint int_ne_reif(2,venue_00020_00008,aux539_BOOL);
constraint int_ne_reif(2,venue_00009_00010,aux540_BOOL);
constraint int_ne_reif(1,venue_00004_00015,aux541_BOOL);
constraint int_ne_reif(2,venue_00004_00005,aux542_BOOL);
constraint int_ne_reif(venue_00005_00010,1,aux543_BOOL);
constraint int_ne_reif(venue_00010_00005,1,aux544_BOOL);
constraint int_ne_reif(venue_00007_00004,2,aux545_BOOL);
constraint int_ne_reif(venue_00014_00007,2,aux546_BOOL);
constraint int_ne_reif(2,venue_00016_00016,aux547_BOOL);
constraint int_ne_reif(2,venue_00003_00003,aux548_BOOL);
constraint int_ne_reif(2,venue_00008_00019,aux549_BOOL);
constraint int_ne_reif(1,venue_00008_00001,aux550_BOOL);
constraint int_ne_reif(1,venue_00008_00019,aux551_BOOL);
constraint int_ne_reif(2,venue_00008_00001,aux552_BOOL);
constraint int_ne_reif(1,venue_00004_00016,aux553_BOOL);
constraint int_ne_reif(2,venue_00004_00006,aux554_BOOL);
constraint int_ne_reif(1,venue_00011_00018,aux555_BOOL);
constraint int_ne_reif(1,venue_00008_00008,aux556_BOOL);
constraint int_ne_reif(1,venue_00011_00010,aux557_BOOL);
constraint int_ne_reif(1,venue_00009_00005,aux558_BOOL);
constraint int_ne_reif(2,venue_00008_00018,aux559_BOOL);
constraint int_ne_reif(venue_00014_00008,2,aux560_BOOL);
constraint int_ne_reif(venue_00018_00011,2,aux561_BOOL);
constraint int_ne_reif(venue_00019_00003,2,aux562_BOOL);
constraint int_ne_reif(venue_00010_00014,1,aux563_BOOL);
constraint int_ne_reif(2,venue_00003_00009,aux564_BOOL);
constraint int_ne_reif(1,venue_00012_00007,aux565_BOOL);
constraint int_ne_reif(venue_00018_00005,1,aux566_BOOL);
constraint int_ne_reif(2,venue_00020_00002,aux567_BOOL);
constraint int_ne_reif(2,venue_00017_00015,aux568_BOOL);
constraint int_ne_reif(2,venue_00004_00003,aux569_BOOL);
constraint int_ne_reif(venue_00010_00011,2,aux570_BOOL);
constraint int_ne_reif(venue_00005_00007,2,aux571_BOOL);
constraint int_ne_reif(2,venue_00009_00016,aux572_BOOL);
constraint int_ne_reif(2,venue_00012_00003,aux573_BOOL);
constraint int_ne_reif(2,venue_00016_00010,aux574_BOOL);
constraint int_ne_reif(venue_00010_00016,2,aux575_BOOL);
constraint int_ne_reif(venue_00007_00019,1,aux576_BOOL);
constraint int_ne_reif(venue_00007_00019,2,aux577_BOOL);
constraint int_ne_reif(venue_00007_00001,1,aux578_BOOL);
constraint int_ne_reif(venue_00007_00001,2,aux579_BOOL);
constraint int_ne_reif(venue_00013_00003,1,aux580_BOOL);
constraint int_ne_reif(2,venue_00020_00003,aux581_BOOL);
constraint int_ne_reif(venue_00018_00014,1,aux582_BOOL);
constraint int_ne_reif(venue_00005_00005,1,aux583_BOOL);
constraint int_ne_reif(venue_00013_00012,1,aux584_BOOL);
constraint int_ne_reif(2,venue_00004_00014,aux585_BOOL);
constraint int_ne_reif(2,venue_00017_00007,aux586_BOOL);
constraint int_ne_reif(2,venue_00003_00002,aux587_BOOL);
constraint int_ne_reif(venue_00002_00017,1,aux588_BOOL);
constraint int_ne_reif(venue_00005_00011,2,aux589_BOOL);
constraint int_ne_reif(venue_00018_00016,2,aux590_BOOL);
constraint int_ne_reif(venue_00014_00003,1,aux591_BOOL);
constraint int_ne_reif(1,venue_00012_00015,aux592_BOOL);
constraint int_ne_reif(2,venue_00012_00005,aux593_BOOL);
constraint int_ne_reif(2,venue_00017_00018,aux594_BOOL);
constraint int_ne_reif(venue_00013_00014,2,aux595_BOOL);
constraint int_ne_reif(1,venue_00020_00006,aux596_BOOL);
constraint int_ne_reif(venue_00005_00016,2,aux597_BOOL);
constraint int_ne_reif(venue_00015_00014,1,aux598_BOOL);
constraint int_ne_reif(venue_00014_00006,1,aux599_BOOL);
constraint int_ne_reif(2,venue_00011_00003,aux600_BOOL);
constraint int_ne_reif(venue_00001_00008,2,aux601_BOOL);
constraint int_ne_reif(1,venue_00020_00011,aux602_BOOL);
constraint int_ne_reif(venue_00015_00011,2,aux603_BOOL);
constraint int_ne_reif(venue_00014_00010,1,aux604_BOOL);
constraint int_ne_reif(1,venue_00016_00012,aux605_BOOL);
constraint int_ne_reif(2,venue_00008_00011,aux606_BOOL);
constraint int_ne_reif(1,venue_00003_00006,aux607_BOOL);
constraint int_ne_reif(venue_00002_00007,1,aux608_BOOL);
constraint int_ne_reif(venue_00015_00016,2,aux609_BOOL);
constraint int_ne_reif(venue_00014_00015,1,aux610_BOOL);
constraint int_ne_reif(2,venue_00012_00010,aux611_BOOL);
constraint int_ne_reif(venue_00006_00019,1,aux612_BOOL);
constraint int_ne_reif(venue_00006_00019,2,aux613_BOOL);
constraint int_ne_reif(venue_00006_00001,1,aux614_BOOL);
constraint int_ne_reif(venue_00006_00001,2,aux615_BOOL);
constraint int_ne_reif(2,venue_00011_00008,aux616_BOOL);
constraint int_ne_reif(venue_00014_00012,2,aux617_BOOL);
constraint int_ne_reif(1,venue_00017_00012,aux618_BOOL);
constraint int_ne_reif(venue_00019_00013,1,aux619_BOOL);
constraint int_ne_reif(1,venue_00012_00018,aux620_BOOL);
constraint int_ne_reif(1,venue_00004_00008,aux621_BOOL);
constraint int_ne_reif(1,venue_00009_00013,aux622_BOOL);
constraint int_ne_reif(2,venue_00004_00002,aux623_BOOL);
constraint int_ne_reif(venue_00002_00013,2,aux624_BOOL);
constraint int_ne_reif(2,venue_00011_00002,aux625_BOOL);
constraint int_ne_reif(venue_00014_00019,2,aux626_BOOL);
constraint int_ne_reif(venue_00014_00019,1,aux627_BOOL);
constraint int_ne_reif(venue_00014_00001,1,aux628_BOOL);
constraint int_ne_reif(venue_00014_00001,2,aux629_BOOL);
constraint int_ne_reif(venue_00019_00015,2,aux630_BOOL);
constraint int_ne_reif(venue_00007_00006,2,aux631_BOOL);
constraint int_ne_reif(venue_00015_00005,1,aux632_BOOL);
constraint int_ne_reif(1,venue_00016_00004,aux633_BOOL);
constraint int_ne_reif(venue_00002_00004,2,aux634_BOOL);
constraint int_ne_reif(1,venue_00003_00014,aux635_BOOL);
constraint int_ne_reif(2,venue_00003_00004,aux636_BOOL);
constraint int_ne_reif(1,venue_00017_00004,aux637_BOOL);
constraint int_ne_reif(2,venue_00011_00016,aux638_BOOL);
constraint int_ne_reif(2,venue_00020_00009,aux639_BOOL);
constraint int_ne_reif(venue_00002_00009,2,aux640_BOOL);
constraint int_ne_reif(2,venue_00009_00011,aux641_BOOL);
constraint int_ne_reif(venue_00007_00004,1,aux642_BOOL);
constraint int_ne_reif(venue_00015_00007,2,aux643_BOOL);
constraint int_ne_reif(2,venue_00016_00015,aux644_BOOL);
constraint int_ne_reif(2,venue_00012_00002,aux645_BOOL);
constraint int_ne_reif(1,venue_00008_00013,aux646_BOOL);
constraint int_ne_reif(1,venue_00020_00018,aux647_BOOL);
constraint int_ne_reif(venue_00019_00010,2,aux648_BOOL);
constraint int_ne_reif(venue_00007_00009,1,aux649_BOOL);
constraint int_ne_reif(2,venue_00017_00012,aux650_BOOL);
constraint int_ne_reif(venue_00013_00009,2,aux651_BOOL);
constraint int_ne_reif(venue_00014_00016,1,aux652_BOOL);
constraint int_ne_reif(1,venue_00011_00007,aux653_BOOL);
constraint int_ne_reif(2,venue_00016_00013,aux654_BOOL);
constraint int_ne_reif(2,venue_00016_00017,aux655_BOOL);
constraint int_ne_reif(1,venue_00008_00011,aux656_BOOL);
constraint int_ne_reif(venue_00007_00010,2,aux657_BOOL);
constraint int_ne_reif(1,venue_00012_00001,aux658_BOOL);
constraint int_ne_reif(1,venue_00012_00019,aux659_BOOL);
constraint int_ne_reif(2,venue_00012_00001,aux660_BOOL);
constraint int_ne_reif(2,venue_00012_00019,aux661_BOOL);
constraint int_ne_reif(venue_00010_00003,2,aux662_BOOL);
constraint int_ne_reif(venue_00001_00013,2,aux663_BOOL);
constraint int_ne_reif(venue_00001_00018,2,aux664_BOOL);
constraint int_ne_reif(venue_00007_00015,2,aux665_BOOL);
constraint int_ne_reif(2,venue_00008_00017,aux666_BOOL);
constraint int_ne_reif(venue_00006_00006,2,aux667_BOOL);
constraint int_ne_reif(1,venue_00012_00012,aux668_BOOL);
constraint int_ne_reif(venue_00019_00012,1,aux669_BOOL);
constraint int_ne_reif(1,venue_00003_00016,aux670_BOOL);
constraint int_ne_reif(2,venue_00003_00006,aux671_BOOL);
constraint int_ne_reif(2,venue_00004_00011,aux672_BOOL);
constraint int_ne_reif(venue_00001_00018,1,aux673_BOOL);
constraint int_ne_reif(2,venue_00020_00014,aux674_BOOL);
constraint int_ne_reif(venue_00013_00004,2,aux675_BOOL);
constraint int_ne_reif(venue_00014_00011,1,aux676_BOOL);
constraint int_ne_reif(2,venue_00003_00014,aux677_BOOL);
constraint int_ne_reif(venue_00001_00003,2,aux678_BOOL);
constraint int_ne_reif(1,venue_00011_00015,aux679_BOOL);
constraint int_ne_reif(2,venue_00011_00005,aux680_BOOL);
constraint int_ne_reif(venue_00001_00011,1,aux681_BOOL);
constraint int_ne_reif(venue_00015_00003,2,aux682_BOOL);
constraint int_ne_reif(venue_00007_00013,1,aux683_BOOL);
constraint int_ne_reif(venue_00019_00014,2,aux684_BOOL);
constraint int_ne_reif(venue_00010_00004,1,aux685_BOOL);
constraint int_ne_reif(venue_00001_00016,1,aux686_BOOL);
constraint int_ne_reif(venue_00002_00011,1,aux687_BOOL);
constraint int_ne_reif(1,venue_00009_00010,aux688_BOOL);
constraint int_ne_reif(venue_00019_00008,1,aux689_BOOL);
constraint int_ne_reif(1,venue_00004_00018,aux690_BOOL);
constraint int_ne_reif(venue_00013_00017,2,aux691_BOOL);
constraint int_ne_reif(venue_00002_00016,1,aux692_BOOL);
constraint int_ne_reif(2,venue_00008_00014,aux693_BOOL);
constraint int_ne_reif(1,venue_00016_00015,aux694_BOOL);
constraint int_ne_reif(2,venue_00016_00005,aux695_BOOL);
constraint int_ne_reif(venue_00010_00006,2,aux696_BOOL);
constraint int_ne_reif(1,venue_00017_00009,aux697_BOOL);
constraint int_ne_reif(venue_00006_00010,2,aux698_BOOL);
constraint int_ne_reif(2,venue_00009_00008,aux699_BOOL);
constraint int_ne_reif(venue_00010_00010,2,aux700_BOOL);
constraint int_ne_reif(venue_00013_00016,1,aux701_BOOL);
constraint int_ne_reif(1,venue_00004_00005,aux702_BOOL);
constraint int_ne_reif(venue_00018_00004,1,aux703_BOOL);
constraint int_ne_reif(venue_00005_00003,2,aux704_BOOL);
constraint int_ne_reif(venue_00006_00015,2,aux705_BOOL);
constraint int_ne_reif(venue_00010_00015,2,aux706_BOOL);
constraint int_ne_reif(1,venue_00020_00008,aux707_BOOL);
constraint int_ne_reif(venue_00007_00017,1,aux708_BOOL);
constraint int_ne_reif(venue_00018_00009,1,aux709_BOOL);
constraint int_ne_reif(venue_00010_00009,1,aux710_BOOL);
constraint int_ne_reif(2,venue_00003_00019,aux711_BOOL);
constraint int_ne_reif(1,venue_00003_00001,aux712_BOOL);
constraint int_ne_reif(2,venue_00003_00001,aux713_BOOL);
constraint int_ne_reif(1,venue_00003_00019,aux714_BOOL);
constraint int_ne_reif(1,venue_00017_00019,aux715_BOOL);
constraint int_ne_reif(2,venue_00017_00019,aux716_BOOL);
constraint int_ne_reif(2,venue_00017_00001,aux717_BOOL);
constraint int_ne_reif(1,venue_00017_00001,aux718_BOOL);
constraint int_ne_reif(venue_00005_00014,1,aux719_BOOL);
constraint int_ne_reif(venue_00018_00006,2,aux720_BOOL);
constraint int_ne_reif(venue_00019_00005,2,aux721_BOOL);
constraint int_ne_reif(venue_00006_00013,1,aux722_BOOL);
constraint int_ne_reif(1,venue_00016_00007,aux723_BOOL);
constraint int_ne_reif(venue_00018_00003,1,aux724_BOOL);
constraint int_ne_reif(venue_00013_00011,1,aux725_BOOL);
constraint int_ne_reif(2,venue_00016_00018,aux726_BOOL);
constraint int_ne_reif(2,venue_00012_00015,aux727_BOOL);
constraint int_ne_reif(venue_00001_00004,2,aux728_BOOL);
constraint int_ne_reif(venue_00013_00013,2,aux729_BOOL);
constraint int_ne_reif(1,venue_00020_00016,aux730_BOOL);
constraint int_ne_reif(2,venue_00020_00006,aux731_BOOL);
constraint int_ne_reif(venue_00018_00015,2,aux732_BOOL);
constraint int_ne_reif(venue_00006_00004,1,aux733_BOOL);
constraint int_ne_reif(venue_00001_00009,2,aux734_BOOL);
constraint int_ne_reif(1,venue_00003_00018,aux735_BOOL);
constraint int_ne_reif(1,venue_00008_00016,aux736_BOOL);
constraint int_ne_reif(2,venue_00008_00006,aux737_BOOL);
constraint int_ne_reif(2,venue_00009_00018,aux738_BOOL);
constraint int_ne_reif(1,venue_00004_00013,aux739_BOOL);
constraint int_ne_reif(venue_00006_00009,1,aux740_BOOL);
constraint int_ne_reif(1,venue_00012_00004,aux741_BOOL);
constraint int_ne_reif(venue_00015_00015,1,aux742_BOOL);
constraint int_ne_reif(venue_00013_00007,1,aux743_BOOL);
constraint int_ne_reif(2,venue_00011_00013,aux744_BOOL);
constraint int_ne_reif(venue_00010_00013,1,aux745_BOOL);
constraint int_ne_reif(venue_00001_00007,1,aux746_BOOL);
constraint int_ne_reif(1,venue_00003_00011,aux747_BOOL);
constraint int_ne_reif(venue_00018_00010,2,aux748_BOOL);
constraint int_ne_reif(venue_00001_00007,2,aux749_BOOL);
constraint int_ne_reif(venue_00007_00010,1,aux750_BOOL);
constraint int_ne_reif(venue_00005_00010,2,aux751_BOOL);
constraint int_ne_reif(1,venue_00008_00010,aux752_BOOL);
constraint int_ne_reif(venue_00013_00002,2,aux753_BOOL);
constraint int_ne_reif(2,venue_00017_00013,aux754_BOOL);
constraint int_ne_reif(venue_00007_00015,1,aux755_BOOL);
constraint int_ne_reif(venue_00015_00010,1,aux756_BOOL);
constraint int_ne_reif(2,venue_00003_00018,aux757_BOOL);
constraint int_ne_reif(venue_00005_00015,2,aux758_BOOL);
constraint int_ne_reif(venue_00013_00010,2,aux759_BOOL);
constraint int_ne_reif(venue_00013_00003,2,aux760_BOOL);
constraint int_ne_reif(venue_00001_00005,1,aux761_BOOL);
constraint int_ne_reif(1,venue_00008_00017,aux762_BOOL);
constraint int_ne_reif(2,venue_00020_00015,aux763_BOOL);
constraint int_ne_reif(2,venue_00016_00012,aux764_BOOL);
constraint int_ne_reif(1,venue_00016_00017,aux765_BOOL);
constraint int_ne_reif(venue_00013_00004,1,aux766_BOOL);
constraint int_ne_reif(venue_00005_00013,1,aux767_BOOL);
constraint int_ne_reif(venue_00015_00012,2,aux768_BOOL);
constraint int_ne_reif(1,venue_00009_00003,aux769_BOOL);
constraint int_ne_reif(venue_00002_00017,2,aux770_BOOL);
constraint int_ne_reif(venue_00013_00009,1,aux771_BOOL);
constraint int_ne_reif(2,venue_00004_00012,aux772_BOOL);
constraint int_ne_reif(venue_00014_00018,2,aux773_BOOL);
constraint int_ne_reif(1,venue_00012_00013,aux774_BOOL);
constraint int_ne_reif(1,venue_00020_00004,aux775_BOOL);
constraint int_ne_reif(1,venue_00017_00015,aux776_BOOL);
constraint int_ne_reif(2,venue_00017_00005,aux777_BOOL);
constraint int_ne_reif(venue_00013_00006,2,aux778_BOOL);
constraint int_ne_reif(venue_00015_00006,1,aux779_BOOL);
constraint int_ne_reif(1,venue_00009_00011,aux780_BOOL);
constraint int_ne_reif(venue_00001_00011,2,aux781_BOOL);
constraint int_ne_reif(venue_00014_00018,1,aux782_BOOL);
constraint int_ne_reif(venue_00018_00006,1,aux783_BOOL);
constraint int_ne_reif(venue_00005_00003,1,aux784_BOOL);
constraint int_ne_reif(venue_00019_00014,1,aux785_BOOL);
constraint int_ne_reif(venue_00019_00016,2,aux786_BOOL);
constraint int_ne_reif(2,venue_00003_00011,aux787_BOOL);
constraint int_ne_reif(2,venue_00008_00013,aux788_BOOL);
constraint int_ne_reif(venue_00015_00018,2,aux789_BOOL);
constraint int_ne_reif(2,venue_00017_00002,aux790_BOOL);
constraint int_ne_reif(1,venue_00011_00012,aux791_BOOL);
constraint int_ne_reif(1,venue_00017_00003,aux792_BOOL);
constraint int_ne_reif(venue_00015_00008,2,aux793_BOOL);
constraint int_ne_reif(venue_00001_00016,2,aux794_BOOL);
constraint int_ne_reif(venue_00019_00011,2,aux795_BOOL);
constraint int_ne_reif(venue_00015_00018,1,aux796_BOOL);
constraint int_ne_reif(venue_00018_00008,2,aux797_BOOL);
constraint int_ne_reif(1,venue_00016_00014,aux798_BOOL);
constraint int_ne_reif(2,venue_00016_00004,aux799_BOOL);
constraint int_ne_reif(1,venue_00017_00010,aux800_BOOL);
constraint int_ne_reif(2,venue_00012_00008,aux801_BOOL);
constraint int_ne_reif(1,venue_00020_00009,aux802_BOOL);
constraint int_ne_reif(venue_00014_00009,2,aux803_BOOL);
constraint int_ne_reif(venue_00018_00012,2,aux804_BOOL);
constraint int_ne_reif(venue_00006_00007,1,aux805_BOOL);
constraint int_ne_reif(2,venue_00011_00010,aux806_BOOL);
constraint int_ne_reif(1,venue_00020_00017,aux807_BOOL);
constraint int_ne_reif(1,venue_00004_00006,aux808_BOOL);
constraint int_ne_reif(venue_00014_00003,2,aux809_BOOL);
constraint int_ne_reif(venue_00006_00003,1,aux810_BOOL);
constraint int_ne_reif(venue_00005_00006,2,aux811_BOOL);
constraint int_ne_reif(2,venue_00011_00018,aux812_BOOL);
constraint int_ne_reif(venue_00002_00005,2,aux813_BOOL);
constraint int_ne_reif(venue_00007_00002,2,aux814_BOOL);
constraint int_ne_reif(venue_00019_00005,1,aux815_BOOL);
constraint int_ne_reif(venue_00014_00004,2,aux816_BOOL);
constraint int_ne_reif(1,venue_00012_00002,aux817_BOOL);
constraint int_ne_reif(1,venue_00016_00006,aux818_BOOL);
constraint int_ne_reif(venue_00010_00003,1,aux819_BOOL);
constraint int_ne_reif(venue_00007_00002,1,aux820_BOOL);
constraint int_ne_reif(venue_00013_00013,1,aux821_BOOL);
constraint int_ne_reif(1,venue_00008_00015,aux822_BOOL);
constraint int_ne_reif(2,venue_00008_00005,aux823_BOOL);
constraint int_ne_reif(venue_00010_00005,2,aux824_BOOL);
constraint int_ne_reif(venue_00005_00004,1,aux825_BOOL);
constraint int_ne_reif(2,venue_00012_00016,aux826_BOOL);
constraint int_ne_reif(venue_00019_00007,2,aux827_BOOL);
constraint int_ne_reif(venue_00014_00013,2,aux828_BOOL);
constraint int_ne_reif(venue_00014_00007,1,aux829_BOOL);
constraint int_ne_reif(venue_00013_00002,1,aux830_BOOL);
constraint int_ne_reif(venue_00005_00009,1,aux831_BOOL);
constraint int_ne_reif(1,venue_00003_00008,aux832_BOOL);
constraint int_ne_reif(venue_00006_00004,2,aux833_BOOL);
constraint int_ne_reif(venue_00001_00017,2,aux834_BOOL);
constraint int_ne_reif(venue_00018_00010,1,aux835_BOOL);
constraint int_ne_reif(venue_00013_00015,2,aux836_BOOL);
constraint int_ne_reif(1,venue_00004_00014,aux837_BOOL);
constraint int_ne_reif(2,venue_00004_00004,aux838_BOOL);
constraint int_ne_reif(1,venue_00020_00002,aux839_BOOL);
constraint int_ne_reif(venue_00007_00003,1,aux840_BOOL);
constraint int_ne_reif(venue_00006_00009,2,aux841_BOOL);
constraint int_ne_reif(2,venue_00009_00009,aux842_BOOL);
constraint int_ne_reif(1,venue_00012_00005,aux843_BOOL);
constraint int_ne_reif(venue_00018_00015,1,aux844_BOOL);
constraint int_ne_reif(2,venue_00020_00007,aux845_BOOL);
constraint int_ne_reif(1,venue_00011_00003,aux846_BOOL);
constraint int_ne_reif(venue_00019_00004,1,aux847_BOOL);
constraint int_ne_reif(2,venue_00003_00008,aux848_BOOL);
constraint int_ne_reif(venue_00006_00008,1,aux849_BOOL);
constraint int_ne_reif(2,venue_00020_00012,aux850_BOOL);
constraint int_ne_reif(1,venue_00011_00009,aux851_BOOL);
constraint int_ne_reif(venue_00002_00014,2,aux852_BOOL);
constraint int_ne_reif(venue_00019_00009,1,aux853_BOOL);
constraint int_ne_reif(venue_00014_00008,1,aux854_BOOL);
constraint int_ne_reif(venue_00007_00007,2,aux855_BOOL);
constraint int_ne_reif(venue_00019_00006,2,aux856_BOOL);
constraint int_ne_reif(2,venue_00004_00009,aux857_BOOL);
constraint int_ne_reif(1,venue_00008_00005,aux858_BOOL);
constraint int_ne_reif(1,venue_00012_00010,aux859_BOOL);
constraint int_ne_reif(venue_00015_00002,2,aux860_BOOL);
constraint int_ne_reif(venue_00014_00005,2,aux861_BOOL);
constraint int_ne_reif(2,venue_00017_00017,aux862_BOOL);
constraint int_ne_reif(venue_00013_00018,2,aux863_BOOL);
constraint int_ne_reif(venue_00002_00012,1,aux864_BOOL);
constraint int_ne_reif(venue_00005_00017,2,aux865_BOOL);
constraint int_ne_reif(venue_00015_00002,1,aux866_BOOL);
constraint int_ne_reif(venue_00010_00008,1,aux867_BOOL);
constraint int_ne_reif(venue_00006_00014,2,aux868_BOOL);
constraint int_ne_reif(1,venue_00003_00003,aux869_BOOL);
constraint int_ne_reif(venue_00013_00018,1,aux870_BOOL);
constraint int_ne_reif(venue_00007_00005,1,aux871_BOOL);
constraint int_ne_reif(2,venue_00008_00016,aux872_BOOL);
constraint int_ne_reif(venue_00005_00005,2,aux873_BOOL);
constraint int_ne_reif(venue_00010_00012,1,aux874_BOOL);
constraint int_ne_reif(1,venue_00004_00017,aux875_BOOL);
constraint int_ne_reif(2,venue_00003_00016,aux876_BOOL);
constraint int_ne_reif(venue_00006_00005,2,aux877_BOOL);
constraint int_ne_reif(2,venue_00016_00007,aux878_BOOL);
constraint int_ne_reif(venue_00010_00014,2,aux879_BOOL);
constraint int_ne_reif(1,venue_00012_00017,aux880_BOOL);
constraint int_ne_reif(venue_00002_00008,1,aux881_BOOL);
constraint int_ne_reif(1,venue_00009_00008,aux882_BOOL);
constraint int_ne_reif(1,venue_00004_00002,aux883_BOOL);
constraint int_ne_reif(venue_00005_00008,1,aux884_BOOL);
constraint int_ne_reif(venue_00007_00011,2,aux885_BOOL);
constraint int_ne_reif(venue_00014_00014,2,aux886_BOOL);
constraint int_ne_reif(2,venue_00009_00017,aux887_BOOL);
constraint int_ne_reif(2,venue_00017_00010,aux888_BOOL);
constraint int_ne_reif(venue_00006_00003,2,aux889_BOOL);
constraint int_ne_reif(venue_00015_00019,1,aux890_BOOL);
constraint int_ne_reif(venue_00015_00019,2,aux891_BOOL);
constraint int_ne_reif(venue_00015_00001,2,aux892_BOOL);
constraint int_ne_reif(venue_00015_00001,1,aux893_BOOL);
constraint int_ne_reif(venue_00007_00016,2,aux894_BOOL);
constraint int_ne_reif(venue_00013_00008,1,aux895_BOOL);
constraint int_ne_reif(venue_00015_00016,1,aux896_BOOL);
constraint int_ne_reif(1,venue_00003_00005,aux897_BOOL);
constraint int_ne_reif(venue_00014_00002,1,aux898_BOOL);
constraint int_ne_reif(venue_00007_00018,2,aux899_BOOL);
constraint int_ne_reif(1,venue_00017_00018,aux900_BOOL);
constraint int_ne_reif(1,venue_00009_00016,aux901_BOOL);
constraint int_ne_reif(2,venue_00009_00006,aux902_BOOL);
constraint int_ne_reif(venue_00001_00006,1,aux903_BOOL);
constraint int_ne_reif(venue_00007_00018,1,aux904_BOOL);
constraint int_ne_reif(venue_00007_00014,1,aux905_BOOL);
constraint int_ne_reif(venue_00014_00012,1,aux906_BOOL);
constraint int_ne_reif(1,venue_00009_00018,aux907_BOOL);
constraint int_ne_reif(1,venue_00016_00009,aux908_BOOL);
constraint int_ne_reif(2,venue_00008_00008,aux909_BOOL);
constraint int_ne_reif(venue_00014_00002,2,aux910_BOOL);
constraint int_ne_reif(venue_00015_00011,1,aux911_BOOL);
constraint int_ne_reif(2,venue_00012_00013,aux912_BOOL);
constraint int_ne_reif(2,venue_00011_00007,aux913_BOOL);
constraint int_ne_reif(venue_00018_00007,2,aux914_BOOL);
constraint int_ne_reif(2,venue_00009_00014,aux915_BOOL);
constraint int_ne_reif(1,venue_00004_00011,aux916_BOOL);
constraint int_ne_reif(venue_00001_00012,2,aux917_BOOL);
constraint int_ne_reif(1,venue_00011_00004,aux918_BOOL);
constraint int_ne_reif(venue_00007_00017,2,aux919_BOOL);
constraint int_ne_reif(venue_00015_00013,2,aux920_BOOL);
constraint int_ne_reif(venue_00013_00005,2,aux921_BOOL);
constraint int_ne_reif(1,venue_00003_00013,aux922_BOOL);
constraint int_ne_reif(2,venue_00009_00002,aux923_BOOL);
constraint int_ne_reif(venue_00006_00012,1,aux924_BOOL);
constraint int_ne_reif(1,venue_00020_00014,aux925_BOOL);
constraint int_ne_reif(2,venue_00020_00004,aux926_BOOL);
constraint int_ne_reif(venue_00015_00007,1,aux927_BOOL);
constraint int_ne_reif(2,venue_00011_00015,aux928_BOOL);
constraint int_ne_reif(venue_00001_00010,1,aux929_BOOL);
constraint int_ne_reif(venue_00018_00003,2,aux930_BOOL);
constraint int_ne_reif(venue_00018_00001,2,aux931_BOOL);
constraint int_ne_reif(venue_00018_00001,1,aux932_BOOL);
constraint int_ne_reif(venue_00018_00019,1,aux933_BOOL);
constraint int_ne_reif(venue_00018_00019,2,aux934_BOOL);
constraint int_ne_reif(venue_00001_00003,1,aux935_BOOL);
constraint int_ne_reif(venue_00010_00017,2,aux936_BOOL);
constraint int_ne_reif(venue_00001_00015,1,aux937_BOOL);
constraint int_ne_reif(1,venue_00017_00007,aux938_BOOL);
constraint int_ne_reif(1,venue_00016_00002,aux939_BOOL);
constraint int_ne_reif(2,venue_00020_00013,aux940_BOOL);
constraint int_ne_reif(venue_00018_00017,1,aux941_BOOL);
constraint int_ne_reif(2,venue_00016_00014,aux942_BOOL);
constraint int_ne_reif(venue_00002_00014,1,aux943_BOOL);
constraint int_ne_reif(venue_00019_00012,2,aux944_BOOL);
constraint int_ne_reif(venue_00015_00009,2,aux945_BOOL);
constraint int_ne_reif(2,venue_00017_00011,aux946_BOOL);
constraint int_ne_reif(venue_00007_00009,2,aux947_BOOL);
constraint int_ne_reif(venue_00006_00018,2,aux948_BOOL);
constraint int_ne_reif(venue_00001_00013,1,aux949_BOOL);
constraint int_ne_reif(venue_00006_00008,2,aux950_BOOL);
constraint int_ne_reif(1,venue_00011_00006,aux951_BOOL);
constraint int_ne_reif(venue_00006_00018,1,aux952_BOOL);
constraint int_ne_reif(venue_00018_00018,1,aux953_BOOL);
constraint int_ne_reif(2,venue_00004_00010,aux954_BOOL);
constraint int_ne_reif(venue_00007_00007,1,aux955_BOOL);
constraint int_ne_reif(1,venue_00003_00015,aux956_BOOL);
constraint int_ne_reif(2,venue_00003_00005,aux957_BOOL);
constraint int_ne_reif(venue_00010_00002,2,aux958_BOOL);
constraint int_ne_reif(venue_00015_00004,2,aux959_BOOL);
constraint int_ne_reif(venue_00010_00002,1,aux960_BOOL);
constraint int_ne_reif(1,venue_00012_00011,aux961_BOOL);
constraint int_ne_reif(venue_00006_00006,1,aux962_BOOL);
constraint int_ne_reif(venue_00007_00013,2,aux963_BOOL);
constraint int_ne_reif(2,venue_00011_00017,aux964_BOOL);
constraint int_ne_reif(venue_00019_00006,1,aux965_BOOL);
constraint int_ne_reif(1,venue_00008_00002,aux966_BOOL);
constraint int_ne_reif(venue_00002_00011,2,aux967_BOOL);
constraint int_ne_reif(1,venue_00016_00016,aux968_BOOL);
constraint int_ne_reif(2,venue_00016_00006,aux969_BOOL);
constraint int_ne_reif(venue_00010_00004,2,aux970_BOOL);
constraint int_ne_reif(2,venue_00004_00017,aux971_BOOL);
constraint int_ne_reif(1,venue_00008_00004,aux972_BOOL);
constraint int_ne_reif(1,venue_00009_00009,aux973_BOOL);
constraint int_ne_reif(1,venue_00011_00014,aux974_BOOL);
constraint int_ne_reif(2,venue_00011_00004,aux975_BOOL);
constraint int_ne_reif(2,venue_00009_00019,aux976_BOOL);
constraint int_ne_reif(1,venue_00009_00019,aux977_BOOL);
constraint int_ne_reif(2,venue_00009_00001,aux978_BOOL);
constraint int_ne_reif(1,venue_00009_00001,aux979_BOOL);
constraint int_ne_reif(venue_00002_00016,2,aux980_BOOL);
constraint int_ne_reif(venue_00007_00016,1,aux981_BOOL);
constraint int_ne_reif(2,venue_00008_00015,aux982_BOOL);
constraint int_ne_reif(venue_00019_00008,2,aux983_BOOL);
constraint int_ne_reif(2,venue_00003_00017,aux984_BOOL);
constraint int_ne_reif(2,venue_00012_00017,aux985_BOOL);
constraint int_ne_reif(2,venue_00003_00013,aux986_BOOL);
constraint int_ne_reif(venue_00007_00011,1,aux987_BOOL);
constraint int_ne_reif(1,venue_00004_00004,aux988_BOOL);
constraint int_ne_reif(venue_00018_00004,2,aux989_BOOL);
constraint int_ne_reif(1,venue_00004_00001,aux990_BOOL);
constraint int_ne_reif(2,venue_00004_00019,aux991_BOOL);
constraint int_ne_reif(1,venue_00004_00019,aux992_BOOL);
constraint int_ne_reif(2,venue_00004_00001,aux993_BOOL);
constraint int_ne_reif(venue_00013_00016,2,aux994_BOOL);
constraint int_ne_reif(2,venue_00011_00012,aux995_BOOL);
constraint int_ne_reif(venue_00006_00010,1,aux996_BOOL);
constraint int_ne_reif(2,venue_00009_00007,aux997_BOOL);
constraint int_ne_reif(venue_00018_00009,2,aux998_BOOL);
constraint int_ne_reif(venue_00010_00007,1,aux999_BOOL);
constraint int_ne_reif(2,venue_00016_00001,aux1000_BOOL);
constraint int_ne_reif(1,venue_00016_00019,aux1001_BOOL);
constraint int_ne_reif(2,venue_00016_00019,aux1002_BOOL);
constraint int_ne_reif(1,venue_00016_00001,aux1003_BOOL);
constraint int_ne_reif(venue_00006_00015,1,aux1004_BOOL);
constraint int_ne_reif(venue_00001_00017,1,aux1005_BOOL);
constraint int_ne_reif(1,venue_00016_00008,aux1006_BOOL);
constraint int_ne_reif(venue_00005_00014,2,aux1007_BOOL);
constraint int_ne_reif(2,venue_00008_00007,aux1008_BOOL);
constraint int_ne_reif(venue_00010_00009,2,aux1009_BOOL);
constraint int_ne_reif(venue_00001_00006,2,aux1010_BOOL);
constraint int_ne_reif(venue_00019_00019,2,aux1011_BOOL);
constraint int_ne_reif(venue_00019_00019,1,aux1012_BOOL);
constraint int_ne_reif(venue_00013_00011,2,aux1013_BOOL);
constraint int_ne_reif(venue_00019_00001,1,aux1014_BOOL);
constraint int_ne_reif(venue_00019_00001,2,aux1015_BOOL);
constraint int_ne_reif(venue_00005_00012,1,aux1016_BOOL);
constraint int_ne_reif(venue_00019_00018,1,aux1017_BOOL);
constraint int_ne_reif(venue_00013_00005,1,aux1018_BOOL);
constraint int_ne_reif(venue_00001_00004,1,aux1019_BOOL);
constraint int_ne_reif(venue_00010_00018,1,aux1020_BOOL);
constraint int_ne_reif(venue_00018_00007,1,aux1021_BOOL);
constraint int_ne_reif(2,venue_00012_00014,aux1022_BOOL);
constraint int_ne_reif(venue_00006_00012,2,aux1023_BOOL);
constraint int_ne_reif(1,venue_00020_00015,aux1024_BOOL);
constraint int_ne_reif(2,venue_00020_00005,aux1025_BOOL);
constraint int_ne_reif(1,venue_00004_00012,aux1026_BOOL);
constraint int_ne_reif(venue_00001_00009,1,aux1027_BOOL);
constraint int_ne_reif(venue_00010_00011,1,aux1028_BOOL);
constraint int_ne_reif(venue_00005_00002,2,aux1029_BOOL);
constraint int_ne_reif(venue_00013_00007,2,aux1030_BOOL);
constraint int_ne_reif(venue_00001_00010,2,aux1031_BOOL);
constraint int_ne_reif(1,venue_00003_00010,aux1032_BOOL);
constraint int_ne_reif(venue_00005_00002,1,aux1033_BOOL);
constraint int_ne_reif(venue_00019_00018,2,aux1034_BOOL);
constraint int_ne_reif(1,venue_00017_00008,aux1035_BOOL);
constraint int_ne_reif(venue_00001_00015,2,aux1036_BOOL);
constraint int_ne_reif(venue_00010_00018,2,aux1037_BOOL);
constraint int_ne_reif(venue_00010_00013,2,aux1038_BOOL);
constraint int_ne_reif(1,venue_00009_00006,aux1039_BOOL);
constraint int_ne_reif(venue_00018_00011,1,aux1040_BOOL);
constraint int_ne_reif(venue_00015_00017,1,aux1041_BOOL);
constraint int_ne_reif(venue_00013_00019,1,aux1042_BOOL);
constraint int_ne_reif(venue_00013_00019,2,aux1043_BOOL);
constraint int_ne_reif(2,venue_00004_00007,aux1044_BOOL);
constraint int_ne_reif(venue_00018_00016,1,aux1045_BOOL);
constraint int_ne_reif(1,venue_00012_00008,aux1046_BOOL);
constraint int_ne_reif(venue_00013_00001,2,aux1047_BOOL);
constraint int_ne_reif(venue_00013_00001,1,aux1048_BOOL);
constraint int_ne_reif(venue_00005_00007,1,aux1049_BOOL);
constraint int_ne_reif(2,venue_00003_00010,aux1050_BOOL);
constraint int_ne_reif(venue_00018_00013,2,aux1051_BOOL);
constraint int_ne_reif(venue_00010_00016,1,aux1052_BOOL);
constraint int_ne_reif(venue_00002_00006,2,aux1053_BOOL);
constraint int_ne_reif(venue_00015_00012,1,aux1054_BOOL);
constraint int_ne_reif(2,venue_00011_00019,aux1055_BOOL);
constraint int_ne_reif(1,venue_00011_00019,aux1056_BOOL);
constraint int_ne_reif(2,venue_00011_00001,aux1057_BOOL);
constraint int_ne_reif(1,venue_00011_00001,aux1058_BOOL);
constraint int_ne_reif(2,venue_00017_00016,aux1059_BOOL);
constraint int_ne_reif(2,venue_00016_00009,aux1060_BOOL);
constraint int_ne_reif(1,venue_00008_00007,aux1061_BOOL);
constraint int_ne_reif(venue_00014_00006,2,aux1062_BOOL);
constraint int_ne_reif(2,venue_00016_00003,aux1063_BOOL);
constraint int_ne_reif(venue_00006_00013,2,aux1064_BOOL);
constraint int_ne_reif(venue_00007_00003,2,aux1065_BOOL);
constraint int_ne_reif(venue_00015_00014,2,aux1066_BOOL);
constraint int_ne_reif(venue_00005_00013,2,aux1067_BOOL);
constraint int_ne_reif(2,venue_00004_00015,aux1068_BOOL);
constraint int_ne_reif(1,venue_00012_00016,aux1069_BOOL);
constraint int_ne_reif(2,venue_00012_00006,aux1070_BOOL);
constraint int_ne_reif(2,venue_00017_00008,aux1071_BOOL);
constraint int_ne_reif(venue_00006_00011,1,aux1072_BOOL);
constraint int_ne_reif(venue_00013_00014,1,aux1073_BOOL);
constraint int_ne_reif(1,venue_00020_00007,aux1074_BOOL);
constraint int_ne_reif(venue_00005_00011,1,aux1075_BOOL);
constraint int_ne_reif(1,venue_00011_00011,aux1076_BOOL);
constraint int_ne_reif(2,venue_00008_00003,aux1077_BOOL);
constraint int_ne_reif(venue_00006_00016,1,aux1078_BOOL);
constraint int_ne_reif(venue_00005_00016,1,aux1079_BOOL);
constraint int_ne_reif(venue_00001_00014,1,aux1080_BOOL);
constraint int_ne_reif(1,venue_00020_00001,aux1081_BOOL);
constraint int_ne_reif(2,venue_00020_00019,aux1082_BOOL);
constraint int_ne_reif(1,venue_00020_00019,aux1083_BOOL);
constraint int_ne_reif(2,venue_00020_00001,aux1084_BOOL);
constraint int_ne_reif(venue_00006_00017,2,aux1085_BOOL);
constraint int_ne_reif(venue_00002_00015,2,aux1086_BOOL);
constraint int_ne_reif(1,venue_00003_00007,aux1087_BOOL);
constraint int_ne_reif(2,venue_00012_00011,aux1088_BOOL);
constraint int_ne_reif(venue_00015_00008,1,aux1089_BOOL);
constraint int_ne_reif(venue_00014_00010,2,aux1090_BOOL);
constraint int_ne_reif(venue_00002_00019,1,aux1091_BOOL);
constraint int_ne_reif(venue_00002_00019,2,aux1092_BOOL);
constraint int_ne_reif(venue_00002_00001,2,aux1093_BOOL);
constraint int_ne_reif(venue_00002_00001,1,aux1094_BOOL);
constraint int_ne_reif(2,venue_00011_00009,aux1095_BOOL);
constraint int_ne_reif(venue_00007_00008,2,aux1096_BOOL);
constraint int_ne_reif(1,venue_00016_00011,aux1097_BOOL);
constraint int_ne_reif(1,venue_00009_00002,aux1098_BOOL);
constraint int_ne_reif(venue_00010_00017,1,aux1099_BOOL);
constraint int_ne_reif(1,venue_00017_00013,aux1100_BOOL);
constraint int_ne_reif(venue_00014_00004,1,aux1101_BOOL);
constraint int_ne_reif(1,venue_00017_00002,aux1102_BOOL);
constraint int_ne_reif(venue_00019_00017,1,aux1103_BOOL);
constraint int_ne_reif(venue_00015_00005,2,aux1104_BOOL);
constraint int_ne_reif(venue_00002_00013,1,aux1105_BOOL);
constraint int_ne_reif(venue_00014_00009,1,aux1106_BOOL);
constraint int_ne_reif(1,venue_00009_00014,aux1107_BOOL);
constraint int_ne_reif(2,venue_00009_00004,aux1108_BOOL);
constraint int_ne_reif(venue_00005_00018,2,aux1109_BOOL);
constraint int_ne_reif(1,venue_00020_00012,aux1110_BOOL);
constraint int_ne_reif(venue_00007_00006,1,aux1111_BOOL);
constraint int_ne_reif(1,venue_00004_00009,aux1112_BOOL);
constraint int_ne_reif(2,venue_00008_00010,aux1113_BOOL);
constraint int_ne_reif(venue_00014_00013,1,aux1114_BOOL);
constraint int_ne_reif(venue_00005_00018,1,aux1115_BOOL);
constraint int_ne_reif(venue_00002_00004,1,aux1116_BOOL);
constraint int_ne_reif(1,venue_00017_00005,aux1117_BOOL);
constraint int_ne_reif(venue_00002_00003,1,aux1118_BOOL);
constraint int_ne_reif(venue_00005_00019,1,aux1119_BOOL);
constraint int_ne_reif(venue_00005_00019,2,aux1120_BOOL);
constraint int_ne_reif(venue_00005_00001,2,aux1121_BOOL);
constraint int_ne_reif(venue_00005_00001,1,aux1122_BOOL);
constraint int_ne_reif(venue_00010_00019,1,aux1123_BOOL);
constraint int_ne_reif(venue_00010_00019,2,aux1124_BOOL);
constraint int_ne_reif(venue_00010_00001,2,aux1125_BOOL);
constraint int_ne_reif(venue_00010_00001,1,aux1126_BOOL);
constraint int_ne_reif(venue_00006_00002,2,aux1127_BOOL);
constraint int_ne_reif(venue_00002_00009,1,aux1128_BOOL);
constraint int_ne_reif(2,venue_00009_00012,aux1129_BOOL);
constraint int_ne_reif(venue_00014_00015,2,aux1130_BOOL);
constraint int_ne_reif(2,venue_00020_00010,aux1131_BOOL);
constraint int_ne_reif(venue_00019_00010,1,aux1132_BOOL);
constraint int_ne_reif(venue_00005_00017,1,aux1133_BOOL);
constraint int_ne_reif(venue_00005_00004,2,aux1134_BOOL);
constraint int_ne_reif(1,venue_00008_00012,aux1135_BOOL);
constraint int_ne_reif(venue_00007_00012,2,aux1136_BOOL);
constraint int_ne_reif(venue_00006_00002,1,aux1137_BOOL);
constraint int_ne_reif(venue_00019_00015,1,aux1138_BOOL);
constraint int_ne_reif(venue_00005_00009,2,aux1139_BOOL);
constraint int_ne_reif(venue_00002_00010,2,aux1140_BOOL);
constraint int_lin_eq([-1,1,1],[aux1141,-1,opponent_00020_00001],0);
constraint int_lin_eq([1,-1,1],[opponent_00002_00019,aux1142,-2],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00008,aux1143,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00007,aux1144,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00009,aux1145,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00004,aux1146,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00003,aux1147,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00006,aux1148,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00005,aux1149,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00002,aux1150,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00001,aux1151,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00018,aux1152,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00017,aux1153,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00019,aux1154,-2],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00014,aux1155,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00013,aux1156,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00016,aux1157,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00015,aux1158,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00012,aux1159,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00010,aux1160,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00011,aux1161,-1],0);
constraint all_different_int([opponent_00001_00001, opponent_00001_00002, opponent_00001_00003, opponent_00001_00004, opponent_00001_00005, opponent_00001_00006, opponent_00001_00007, opponent_00001_00008, opponent_00001_00009, opponent_00001_00010, opponent_00001_00011, opponent_00001_00012, opponent_00001_00013, opponent_00001_00014, opponent_00001_00015, opponent_00001_00016, opponent_00001_00017, opponent_00001_00018, opponent_00001_00019])::domain;
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[travel_00011_00001,travel_00011_00002,travel_00011_00003,travel_00011_00004,travel_00011_00005,travel_00011_00006,travel_00011_00007,travel_00011_00008,travel_00011_00009,travel_00011_00010,travel_00011_00011,travel_00011_00012,travel_00011_00013,travel_00011_00014,travel_00011_00015,travel_00011_00016,travel_00011_00017,travel_00011_00018,travel_00011_00019,travel_00011_00020,travel_00003_00001,travel_00003_00002,travel_00003_00003,travel_00003_00004,travel_00003_00005,travel_00003_00006,travel_00003_00007,travel_00003_00008,travel_00003_00009,travel_00003_00010,travel_00003_00011,travel_00003_00012,travel_00003_00013,travel_00003_00014,travel_00003_00015,travel_00003_00016,travel_00003_00017,travel_00003_00018,travel_00003_00019,travel_00003_00020,objective,travel_00016_00001,travel_00016_00002,travel_00016_00003,travel_00016_00004,travel_00016_00005,travel_00016_00006,travel_00016_00007,travel_00016_00008,travel_00016_00009,travel_00016_00010,travel_00016_00011,travel_00016_00012,travel_00016_00013,travel_00016_00014,travel_00016_00015,travel_00016_00016,travel_00016_00017,travel_00016_00018,travel_00016_00019,travel_00016_00020,travel_00008_00001,travel_00008_00002,travel_00008_00003,travel_00008_00004,travel_00008_00005,travel_00008_00006,travel_00008_00007,travel_00008_00008,travel_00008_00009,travel_00008_00010,travel_00008_00011,travel_00008_00012,travel_00008_00013,travel_00008_00014,travel_00008_00015,travel_00008_00016,travel_00008_00017,travel_00008_00018,travel_00008_00019,travel_00008_00020,travel_00020_00001,travel_00020_00002,travel_00020_00003,travel_00020_00004,travel_00020_00005,travel_00020_00006,travel_00020_00007,travel_00020_00008,travel_00020_00009,travel_00020_00010,travel_00020_00011,travel_00020_00012,travel_00020_00013,travel_00020_00014,travel_00020_00015,travel_00020_00016,travel_00020_00017,travel_00020_00018,travel_00020_00019,travel_00020_00020,travel_00012_00001,travel_00012_00002,travel_00012_00003,travel_00012_00004,travel_00012_00005,travel_00012_00006,travel_00012_00007,travel_00012_00008,travel_00012_00009,travel_00012_00010,travel_00012_00011,travel_00012_00012,travel_00012_00013,travel_00012_00014,travel_00012_00015,travel_00012_00016,travel_00012_00017,travel_00012_00018,travel_00012_00019,travel_00012_00020,travel_00004_00001,travel_00004_00002,travel_00004_00003,travel_00004_00004,travel_00004_00005,travel_00004_00006,travel_00004_00007,travel_00004_00008,travel_00004_00009,travel_00004_00010,travel_00004_00011,travel_00004_00012,travel_00004_00013,travel_00004_00014,travel_00004_00015,travel_00004_00016,travel_00004_00017,travel_00004_00018,travel_00004_00019,travel_00004_00020,travel_00017_00001,travel_00017_00002,travel_00017_00003,travel_00017_00004,travel_00017_00005,travel_00017_00006,travel_00017_00007,travel_00017_00008,travel_00017_00009,travel_00017_00010,travel_00017_00011,travel_00017_00012,travel_00017_00013,travel_00017_00014,travel_00017_00015,travel_00017_00016,travel_00017_00017,travel_00017_00018,travel_00017_00019,travel_00017_00020,travel_00009_00001,travel_00009_00002,travel_00009_00003,travel_00009_00004,travel_00009_00005,travel_00009_00006,travel_00009_00007,travel_00009_00008,travel_00009_00009,travel_00009_00010,travel_00009_00011,travel_00009_00012,travel_00009_00013,travel_00009_00014,travel_00009_00015,travel_00009_00016,travel_00009_00017,travel_00009_00018,travel_00009_00019,travel_00009_00020,travel_00013_00001,travel_00013_00002,travel_00013_00003,travel_00013_00004,travel_00013_00005,travel_00013_00006,travel_00013_00007,travel_00013_00008,travel_00013_00009,travel_00013_00010,travel_00013_00011,travel_00013_00012,travel_00013_00013,travel_00013_00014,travel_00013_00015,travel_00013_00016,travel_00013_00017,travel_00013_00018,travel_00013_00019,travel_00013_00020,travel_00005_00001,travel_00005_00002,travel_00005_00003,travel_00005_00004,travel_00005_00005,travel_00005_00006,travel_00005_00007,travel_00005_00008,travel_00005_00009,travel_00005_00010,travel_00005_00011,travel_00005_00012,travel_00005_00013,travel_00005_00014,travel_00005_00015,travel_00005_00016,travel_00005_00017,travel_00005_00018,travel_00005_00019,travel_00005_00020,travel_00018_00001,travel_00018_00002,travel_00018_00003,travel_00018_00004,travel_00018_00005,travel_00018_00006,travel_00018_00007,travel_00018_00008,travel_00018_00009,travel_00018_00010,travel_00018_00011,travel_00018_00012,travel_00018_00013,travel_00018_00014,travel_00018_00015,travel_00018_00016,travel_00018_00017,travel_00018_00018,travel_00018_00019,travel_00018_00020,travel_00001_00001,travel_00001_00002,travel_00001_00003,travel_00001_00004,travel_00001_00005,travel_00001_00006,travel_00001_00007,travel_00001_00008,travel_00001_00009,travel_00001_00010,travel_00001_00011,travel_00001_00012,travel_00001_00013,travel_00001_00014,travel_00001_00015,travel_00001_00016,travel_00001_00017,travel_00001_00018,travel_00001_00019,travel_00001_00020,travel_00014_00001,travel_00014_00002,travel_00014_00003,travel_00014_00004,travel_00014_00005,travel_00014_00006,travel_00014_00007,travel_00014_00008,travel_00014_00009,travel_00014_00010,travel_00014_00011,travel_00014_00012,travel_00014_00013,travel_00014_00014,travel_00014_00015,travel_00014_00016,travel_00014_00017,travel_00014_00018,travel_00014_00019,travel_00014_00020,travel_00006_00001,travel_00006_00002,travel_00006_00003,travel_00006_00004,travel_00006_00005,travel_00006_00006,travel_00006_00007,travel_00006_00008,travel_00006_00009,travel_00006_00010,travel_00006_00011,travel_00006_00012,travel_00006_00013,travel_00006_00014,travel_00006_00015,travel_00006_00016,travel_00006_00017,travel_00006_00018,travel_00006_00019,travel_00006_00020,travel_00019_00001,travel_00019_00002,travel_00019_00003,travel_00019_00004,travel_00019_00005,travel_00019_00006,travel_00019_00007,travel_00019_00008,travel_00019_00009,travel_00019_00010,travel_00019_00011,travel_00019_00012,travel_00019_00013,travel_00019_00014,travel_00019_00015,travel_00019_00016,travel_00019_00017,travel_00019_00018,travel_00019_00019,travel_00019_00020,travel_00010_00001,travel_00010_00002,travel_00010_00003,travel_00010_00004,travel_00010_00005,travel_00010_00006,travel_00010_00007,travel_00010_00008,travel_00010_00009,travel_00010_00010,travel_00010_00011,travel_00010_00012,travel_00010_00013,travel_00010_00014,travel_00010_00015,travel_00010_00016,travel_00010_00017,travel_00010_00018,travel_00010_00019,travel_00010_00020,travel_00002_00001,travel_00002_00002,travel_00002_00003,travel_00002_00004,travel_00002_00005,travel_00002_00006,travel_00002_00007,travel_00002_00008,travel_00002_00009,travel_00002_00010,travel_00002_00011,travel_00002_00012,travel_00002_00013,travel_00002_00014,travel_00002_00015,travel_00002_00016,travel_00002_00017,travel_00002_00018,travel_00002_00019,travel_00002_00020,travel_00015_00001,travel_00015_00002,travel_00015_00003,travel_00015_00004,travel_00015_00005,travel_00015_00006,travel_00015_00007,travel_00015_00008,travel_00015_00009,travel_00015_00010,travel_00015_00011,travel_00015_00012,travel_00015_00013,travel_00015_00014,travel_00015_00015,travel_00015_00016,travel_00015_00017,travel_00015_00018,travel_00015_00019,travel_00015_00020,travel_00007_00001,travel_00007_00002,travel_00007_00003,travel_00007_00004,travel_00007_00005,travel_00007_00006,travel_00007_00007,travel_00007_00008,travel_00007_00009,travel_00007_00010,travel_00007_00011,travel_00007_00012,travel_00007_00013,travel_00007_00014,travel_00007_00015,travel_00007_00016,travel_00007_00017,travel_00007_00018,travel_00007_00019,travel_00007_00020],0);
constraint int_lt(opponent_00001_00001,opponent_00001_00019);
constraint array_var_int_element(aux1151, [2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2], venue_00001_00001);
constraint array_var_int_element(aux1150, [2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2], venue_00001_00002);
constraint array_var_int_element(aux1147, [2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2], venue_00001_00003);
constraint array_var_int_element(aux1146, [2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2], venue_00001_00004);
constraint array_var_int_element(aux1149, [2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2], venue_00001_00005);
constraint array_var_int_element(aux1148, [2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2], venue_00001_00006);
constraint array_var_int_element(aux1144, [2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2], venue_00001_00007);
constraint array_var_int_element(aux1143, [2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2], venue_00001_00008);
constraint array_var_int_element(aux1145, [2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2], venue_00001_00009);
constraint array_var_int_element(aux1160, [2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2], venue_00001_00010);
constraint array_var_int_element(aux1161, [2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2], venue_00001_00011);
constraint array_var_int_element(aux1159, [2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2], venue_00001_00012);
constraint array_var_int_element(aux1156, [2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2], venue_00001_00013);
constraint array_var_int_element(aux1155, [2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2], venue_00001_00014);
constraint array_var_int_element(aux1158, [2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2], venue_00001_00015);
constraint array_var_int_element(aux1157, [2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2], venue_00001_00016);
constraint array_var_int_element(aux1153, [2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2], venue_00001_00017);
constraint array_var_int_element(aux1152, [2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2], venue_00001_00018);
constraint array_var_int_element(aux1154, [2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2], venue_00001_00019);
constraint array_var_int_element(opponent_00002_00001, [1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2], venue_00002_00001);
constraint array_var_int_element(opponent_00002_00002, [1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2], venue_00002_00002);
constraint array_var_int_element(opponent_00002_00003, [1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2], venue_00002_00003);
constraint array_var_int_element(opponent_00002_00004, [1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2], venue_00002_00004);
constraint array_var_int_element(opponent_00002_00005, [1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2], venue_00002_00005);
constraint array_var_int_element(opponent_00002_00006, [1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2], venue_00002_00006);
constraint array_var_int_element(opponent_00002_00007, [1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2], venue_00002_00007);
constraint array_var_int_element(opponent_00002_00008, [1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2], venue_00002_00008);
constraint array_var_int_element(opponent_00002_00009, [1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2], venue_00002_00009);
constraint array_var_int_element(opponent_00002_00010, [1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2], venue_00002_00010);
constraint array_var_int_element(opponent_00002_00011, [1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2], venue_00002_00011);
constraint array_var_int_element(opponent_00002_00012, [1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2], venue_00002_00012);
constraint array_var_int_element(opponent_00002_00013, [1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2], venue_00002_00013);
constraint array_var_int_element(opponent_00002_00014, [1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2], venue_00002_00014);
constraint array_var_int_element(opponent_00002_00015, [1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2], venue_00002_00015);
constraint array_var_int_element(opponent_00002_00016, [1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2], venue_00002_00016);
constraint array_var_int_element(opponent_00002_00017, [1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2], venue_00002_00017);
constraint array_var_int_element(opponent_00002_00018, [1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2], venue_00002_00018);
constraint array_var_int_element(aux1142, [1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 1, 2], venue_00002_00019);
constraint array_var_int_element(opponent_00003_00001, [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1], venue_00003_00001);
constraint array_var_int_element(opponent_00003_00002, [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1], venue_00003_00002);
constraint array_var_int_element(opponent_00003_00003, [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1], venue_00003_00003);
constraint array_var_int_element(opponent_00003_00004, [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1], venue_00003_00004);
constraint array_var_int_element(opponent_00003_00005, [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1], venue_00003_00005);
constraint array_var_int_element(opponent_00003_00006, [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1], venue_00003_00006);
constraint array_var_int_element(opponent_00003_00007, [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1], venue_00003_00007);
constraint array_var_int_element(opponent_00003_00008, [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1], venue_00003_00008);
constraint array_var_int_element(opponent_00003_00009, [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1], venue_00003_00009);
constraint array_var_int_element(opponent_00003_00010, [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1], venue_00003_00010);
constraint array_var_int_element(opponent_00003_00011, [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1], venue_00003_00011);
constraint array_var_int_element(opponent_00003_00012, [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1], venue_00003_00012);
constraint array_var_int_element(opponent_00003_00013, [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1], venue_00003_00013);
constraint array_var_int_element(opponent_00003_00014, [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1], venue_00003_00014);
constraint array_var_int_element(opponent_00003_00015, [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1], venue_00003_00015);
constraint array_var_int_element(opponent_00003_00016, [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1], venue_00003_00016);
constraint array_var_int_element(opponent_00003_00017, [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1], venue_00003_00017);
constraint array_var_int_element(opponent_00003_00018, [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1], venue_00003_00018);
constraint array_var_int_element(opponent_00003_00019, [1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1], venue_00003_00019);
constraint array_var_int_element(opponent_00004_00001, [2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1], venue_00004_00001);
constraint array_var_int_element(opponent_00004_00002, [2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1], venue_00004_00002);
constraint array_var_int_element(opponent_00004_00003, [2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1], venue_00004_00003);
constraint array_var_int_element(opponent_00004_00004, [2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1], venue_00004_00004);
constraint array_var_int_element(opponent_00004_00005, [2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1], venue_00004_00005);
constraint array_var_int_element(opponent_00004_00006, [2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1], venue_00004_00006);
constraint array_var_int_element(opponent_00004_00007, [2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1], venue_00004_00007);
constraint array_var_int_element(opponent_00004_00008, [2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1], venue_00004_00008);
constraint array_var_int_element(opponent_00004_00009, [2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1], venue_00004_00009);
constraint array_var_int_element(opponent_00004_00010, [2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1], venue_00004_00010);
constraint array_var_int_element(opponent_00004_00011, [2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1], venue_00004_00011);
constraint array_var_int_element(opponent_00004_00012, [2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1], venue_00004_00012);
constraint array_var_int_element(opponent_00004_00013, [2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1], venue_00004_00013);
constraint array_var_int_element(opponent_00004_00014, [2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1], venue_00004_00014);
constraint array_var_int_element(opponent_00004_00015, [2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1], venue_00004_00015);
constraint array_var_int_element(opponent_00004_00016, [2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1], venue_00004_00016);
constraint array_var_int_element(opponent_00004_00017, [2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1], venue_00004_00017);
constraint array_var_int_element(opponent_00004_00018, [2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1], venue_00004_00018);
constraint array_var_int_element(opponent_00004_00019, [2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1], venue_00004_00019);
constraint array_var_int_element(opponent_00005_00001, [2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1], venue_00005_00001);
constraint array_var_int_element(opponent_00005_00002, [2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1], venue_00005_00002);
constraint array_var_int_element(opponent_00005_00003, [2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1], venue_00005_00003);
constraint array_var_int_element(opponent_00005_00004, [2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1], venue_00005_00004);
constraint array_var_int_element(opponent_00005_00005, [2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1], venue_00005_00005);
constraint array_var_int_element(opponent_00005_00006, [2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1], venue_00005_00006);
constraint array_var_int_element(opponent_00005_00007, [2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1], venue_00005_00007);
constraint array_var_int_element(opponent_00005_00008, [2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1], venue_00005_00008);
constraint array_var_int_element(opponent_00005_00009, [2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1], venue_00005_00009);
constraint array_var_int_element(opponent_00005_00010, [2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1], venue_00005_00010);
constraint array_var_int_element(opponent_00005_00011, [2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1], venue_00005_00011);
constraint array_var_int_element(opponent_00005_00012, [2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1], venue_00005_00012);
constraint array_var_int_element(opponent_00005_00013, [2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1], venue_00005_00013);
constraint array_var_int_element(opponent_00005_00014, [2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1], venue_00005_00014);
constraint array_var_int_element(opponent_00005_00015, [2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1], venue_00005_00015);
constraint array_var_int_element(opponent_00005_00016, [2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1], venue_00005_00016);
constraint array_var_int_element(opponent_00005_00017, [2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1], venue_00005_00017);
constraint array_var_int_element(opponent_00005_00018, [2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1], venue_00005_00018);
constraint array_var_int_element(opponent_00005_00019, [2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 1], venue_00005_00019);
constraint array_var_int_element(opponent_00006_00001, [1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1], venue_00006_00001);
constraint array_var_int_element(opponent_00006_00002, [1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1], venue_00006_00002);
constraint array_var_int_element(opponent_00006_00003, [1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1], venue_00006_00003);
constraint array_var_int_element(opponent_00006_00004, [1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1], venue_00006_00004);
constraint array_var_int_element(opponent_00006_00005, [1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1], venue_00006_00005);
constraint array_var_int_element(opponent_00006_00006, [1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1], venue_00006_00006);
constraint array_var_int_element(opponent_00006_00007, [1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1], venue_00006_00007);
constraint array_var_int_element(opponent_00006_00008, [1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1], venue_00006_00008);
constraint array_var_int_element(opponent_00006_00009, [1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1], venue_00006_00009);
constraint array_var_int_element(opponent_00006_00010, [1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1], venue_00006_00010);
constraint array_var_int_element(opponent_00006_00011, [1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1], venue_00006_00011);
constraint array_var_int_element(opponent_00006_00012, [1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1], venue_00006_00012);
constraint array_var_int_element(opponent_00006_00013, [1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1], venue_00006_00013);
constraint array_var_int_element(opponent_00006_00014, [1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1], venue_00006_00014);
constraint array_var_int_element(opponent_00006_00015, [1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1], venue_00006_00015);
constraint array_var_int_element(opponent_00006_00016, [1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1], venue_00006_00016);
constraint array_var_int_element(opponent_00006_00017, [1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1], venue_00006_00017);
constraint array_var_int_element(opponent_00006_00018, [1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1], venue_00006_00018);
constraint array_var_int_element(opponent_00006_00019, [1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1], venue_00006_00019);
constraint array_var_int_element(opponent_00007_00001, [2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00007_00001);
constraint array_var_int_element(opponent_00007_00002, [2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00007_00002);
constraint array_var_int_element(opponent_00007_00003, [2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00007_00003);
constraint array_var_int_element(opponent_00007_00004, [2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00007_00004);
constraint array_var_int_element(opponent_00007_00005, [2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00007_00005);
constraint array_var_int_element(opponent_00007_00006, [2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00007_00006);
constraint array_var_int_element(opponent_00007_00007, [2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00007_00007);
constraint array_var_int_element(opponent_00007_00008, [2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00007_00008);
constraint array_var_int_element(opponent_00007_00009, [2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00007_00009);
constraint array_var_int_element(opponent_00007_00010, [2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00007_00010);
constraint array_var_int_element(opponent_00007_00011, [2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00007_00011);
constraint array_var_int_element(opponent_00007_00012, [2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00007_00012);
constraint array_var_int_element(opponent_00007_00013, [2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00007_00013);
constraint array_var_int_element(opponent_00007_00014, [2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00007_00014);
constraint array_var_int_element(opponent_00007_00015, [2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00007_00015);
constraint array_var_int_element(opponent_00007_00016, [2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00007_00016);
constraint array_var_int_element(opponent_00007_00017, [2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00007_00017);
constraint array_var_int_element(opponent_00007_00018, [2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00007_00018);
constraint array_var_int_element(opponent_00007_00019, [2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00007_00019);
constraint array_var_int_element(opponent_00008_00001, [1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1], venue_00008_00001);
constraint array_var_int_element(opponent_00008_00002, [1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1], venue_00008_00002);
constraint array_var_int_element(opponent_00008_00003, [1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1], venue_00008_00003);
constraint array_var_int_element(opponent_00008_00004, [1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1], venue_00008_00004);
constraint array_var_int_element(opponent_00008_00005, [1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1], venue_00008_00005);
constraint array_var_int_element(opponent_00008_00006, [1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1], venue_00008_00006);
constraint array_var_int_element(opponent_00008_00007, [1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1], venue_00008_00007);
constraint array_var_int_element(opponent_00008_00008, [1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1], venue_00008_00008);
constraint array_var_int_element(opponent_00008_00009, [1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1], venue_00008_00009);
constraint array_var_int_element(opponent_00008_00010, [1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1], venue_00008_00010);
constraint array_var_int_element(opponent_00008_00011, [1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1], venue_00008_00011);
constraint array_var_int_element(opponent_00008_00012, [1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1], venue_00008_00012);
constraint array_var_int_element(opponent_00008_00013, [1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1], venue_00008_00013);
constraint array_var_int_element(opponent_00008_00014, [1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1], venue_00008_00014);
constraint array_var_int_element(opponent_00008_00015, [1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1], venue_00008_00015);
constraint array_var_int_element(opponent_00008_00016, [1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1], venue_00008_00016);
constraint array_var_int_element(opponent_00008_00017, [1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1], venue_00008_00017);
constraint array_var_int_element(opponent_00008_00018, [1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1], venue_00008_00018);
constraint array_var_int_element(opponent_00008_00019, [1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1], venue_00008_00019);
constraint array_var_int_element(opponent_00009_00001, [1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1], venue_00009_00001);
constraint array_var_int_element(opponent_00009_00002, [1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1], venue_00009_00002);
constraint array_var_int_element(opponent_00009_00003, [1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1], venue_00009_00003);
constraint array_var_int_element(opponent_00009_00004, [1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1], venue_00009_00004);
constraint array_var_int_element(opponent_00009_00005, [1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1], venue_00009_00005);
constraint array_var_int_element(opponent_00009_00006, [1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1], venue_00009_00006);
constraint array_var_int_element(opponent_00009_00007, [1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1], venue_00009_00007);
constraint array_var_int_element(opponent_00009_00008, [1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1], venue_00009_00008);
constraint array_var_int_element(opponent_00009_00009, [1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1], venue_00009_00009);
constraint array_var_int_element(opponent_00009_00010, [1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1], venue_00009_00010);
constraint array_var_int_element(opponent_00009_00011, [1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1], venue_00009_00011);
constraint array_var_int_element(opponent_00009_00012, [1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1], venue_00009_00012);
constraint array_var_int_element(opponent_00009_00013, [1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1], venue_00009_00013);
constraint array_var_int_element(opponent_00009_00014, [1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1], venue_00009_00014);
constraint array_var_int_element(opponent_00009_00015, [1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1], venue_00009_00015);
constraint array_var_int_element(opponent_00009_00016, [1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1], venue_00009_00016);
constraint array_var_int_element(opponent_00009_00017, [1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1], venue_00009_00017);
constraint array_var_int_element(opponent_00009_00018, [1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1], venue_00009_00018);
constraint array_var_int_element(opponent_00009_00019, [1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1], venue_00009_00019);
constraint array_var_int_element(opponent_00010_00001, [1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00010_00001);
constraint array_var_int_element(opponent_00010_00002, [1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00010_00002);
constraint array_var_int_element(opponent_00010_00003, [1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00010_00003);
constraint array_var_int_element(opponent_00010_00004, [1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00010_00004);
constraint array_var_int_element(opponent_00010_00005, [1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00010_00005);
constraint array_var_int_element(opponent_00010_00006, [1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00010_00006);
constraint array_var_int_element(opponent_00010_00007, [1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00010_00007);
constraint array_var_int_element(opponent_00010_00008, [1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00010_00008);
constraint array_var_int_element(opponent_00010_00009, [1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00010_00009);
constraint array_var_int_element(opponent_00010_00010, [1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00010_00010);
constraint array_var_int_element(opponent_00010_00011, [1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00010_00011);
constraint array_var_int_element(opponent_00010_00012, [1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00010_00012);
constraint array_var_int_element(opponent_00010_00013, [1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00010_00013);
constraint array_var_int_element(opponent_00010_00014, [1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00010_00014);
constraint array_var_int_element(opponent_00010_00015, [1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00010_00015);
constraint array_var_int_element(opponent_00010_00016, [1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00010_00016);
constraint array_var_int_element(opponent_00010_00017, [1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00010_00017);
constraint array_var_int_element(opponent_00010_00018, [1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00010_00018);
constraint array_var_int_element(opponent_00010_00019, [1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00010_00019);
constraint array_var_int_element(opponent_00011_00001, [1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2], venue_00011_00001);
constraint array_var_int_element(opponent_00011_00002, [1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2], venue_00011_00002);
constraint array_var_int_element(opponent_00011_00003, [1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2], venue_00011_00003);
constraint array_var_int_element(opponent_00011_00004, [1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2], venue_00011_00004);
constraint array_var_int_element(opponent_00011_00005, [1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2], venue_00011_00005);
constraint array_var_int_element(opponent_00011_00006, [1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2], venue_00011_00006);
constraint array_var_int_element(opponent_00011_00007, [1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2], venue_00011_00007);
constraint array_var_int_element(opponent_00011_00008, [1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2], venue_00011_00008);
constraint array_var_int_element(opponent_00011_00009, [1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2], venue_00011_00009);
constraint array_var_int_element(opponent_00011_00010, [1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2], venue_00011_00010);
constraint array_var_int_element(opponent_00011_00011, [1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2], venue_00011_00011);
constraint array_var_int_element(opponent_00011_00012, [1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2], venue_00011_00012);
constraint array_var_int_element(opponent_00011_00013, [1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2], venue_00011_00013);
constraint array_var_int_element(opponent_00011_00014, [1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2], venue_00011_00014);
constraint array_var_int_element(opponent_00011_00015, [1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2], venue_00011_00015);
constraint array_var_int_element(opponent_00011_00016, [1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2], venue_00011_00016);
constraint array_var_int_element(opponent_00011_00017, [1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2], venue_00011_00017);
constraint array_var_int_element(opponent_00011_00018, [1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2], venue_00011_00018);
constraint array_var_int_element(opponent_00011_00019, [1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2], venue_00011_00019);
constraint array_var_int_element(opponent_00012_00001, [1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1], venue_00012_00001);
constraint array_var_int_element(opponent_00012_00002, [1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1], venue_00012_00002);
constraint array_var_int_element(opponent_00012_00003, [1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1], venue_00012_00003);
constraint array_var_int_element(opponent_00012_00004, [1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1], venue_00012_00004);
constraint array_var_int_element(opponent_00012_00005, [1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1], venue_00012_00005);
constraint array_var_int_element(opponent_00012_00006, [1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1], venue_00012_00006);
constraint array_var_int_element(opponent_00012_00007, [1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1], venue_00012_00007);
constraint array_var_int_element(opponent_00012_00008, [1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1], venue_00012_00008);
constraint array_var_int_element(opponent_00012_00009, [1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1], venue_00012_00009);
constraint array_var_int_element(opponent_00012_00010, [1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1], venue_00012_00010);
constraint array_var_int_element(opponent_00012_00011, [1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1], venue_00012_00011);
constraint array_var_int_element(opponent_00012_00012, [1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1], venue_00012_00012);
constraint array_var_int_element(opponent_00012_00013, [1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1], venue_00012_00013);
constraint array_var_int_element(opponent_00012_00014, [1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1], venue_00012_00014);
constraint array_var_int_element(opponent_00012_00015, [1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1], venue_00012_00015);
constraint array_var_int_element(opponent_00012_00016, [1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1], venue_00012_00016);
constraint array_var_int_element(opponent_00012_00017, [1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1], venue_00012_00017);
constraint array_var_int_element(opponent_00012_00018, [1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1], venue_00012_00018);
constraint array_var_int_element(opponent_00012_00019, [1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1], venue_00012_00019);
constraint array_var_int_element(opponent_00013_00001, [2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2], venue_00013_00001);
constraint array_var_int_element(opponent_00013_00002, [2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2], venue_00013_00002);
constraint array_var_int_element(opponent_00013_00003, [2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2], venue_00013_00003);
constraint array_var_int_element(opponent_00013_00004, [2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2], venue_00013_00004);
constraint array_var_int_element(opponent_00013_00005, [2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2], venue_00013_00005);
constraint array_var_int_element(opponent_00013_00006, [2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2], venue_00013_00006);
constraint array_var_int_element(opponent_00013_00007, [2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2], venue_00013_00007);
constraint array_var_int_element(opponent_00013_00008, [2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2], venue_00013_00008);
constraint array_var_int_element(opponent_00013_00009, [2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2], venue_00013_00009);
constraint array_var_int_element(opponent_00013_00010, [2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2], venue_00013_00010);
constraint array_var_int_element(opponent_00013_00011, [2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2], venue_00013_00011);
constraint array_var_int_element(opponent_00013_00012, [2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2], venue_00013_00012);
constraint array_var_int_element(opponent_00013_00013, [2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2], venue_00013_00013);
constraint array_var_int_element(opponent_00013_00014, [2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2], venue_00013_00014);
constraint array_var_int_element(opponent_00013_00015, [2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2], venue_00013_00015);
constraint array_var_int_element(opponent_00013_00016, [2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2], venue_00013_00016);
constraint array_var_int_element(opponent_00013_00017, [2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2], venue_00013_00017);
constraint array_var_int_element(opponent_00013_00018, [2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2], venue_00013_00018);
constraint array_var_int_element(opponent_00013_00019, [2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2], venue_00013_00019);
constraint array_var_int_element(opponent_00014_00001, [2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2], venue_00014_00001);
constraint array_var_int_element(opponent_00014_00002, [2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2], venue_00014_00002);
constraint array_var_int_element(opponent_00014_00003, [2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2], venue_00014_00003);
constraint array_var_int_element(opponent_00014_00004, [2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2], venue_00014_00004);
constraint array_var_int_element(opponent_00014_00005, [2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2], venue_00014_00005);
constraint array_var_int_element(opponent_00014_00006, [2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2], venue_00014_00006);
constraint array_var_int_element(opponent_00014_00007, [2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2], venue_00014_00007);
constraint array_var_int_element(opponent_00014_00008, [2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2], venue_00014_00008);
constraint array_var_int_element(opponent_00014_00009, [2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2], venue_00014_00009);
constraint array_var_int_element(opponent_00014_00010, [2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2], venue_00014_00010);
constraint array_var_int_element(opponent_00014_00011, [2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2], venue_00014_00011);
constraint array_var_int_element(opponent_00014_00012, [2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2], venue_00014_00012);
constraint array_var_int_element(opponent_00014_00013, [2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2], venue_00014_00013);
constraint array_var_int_element(opponent_00014_00014, [2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2], venue_00014_00014);
constraint array_var_int_element(opponent_00014_00015, [2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2], venue_00014_00015);
constraint array_var_int_element(opponent_00014_00016, [2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2], venue_00014_00016);
constraint array_var_int_element(opponent_00014_00017, [2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2], venue_00014_00017);
constraint array_var_int_element(opponent_00014_00018, [2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2], venue_00014_00018);
constraint array_var_int_element(opponent_00014_00019, [2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 2], venue_00014_00019);
constraint array_var_int_element(opponent_00015_00001, [1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2], venue_00015_00001);
constraint array_var_int_element(opponent_00015_00002, [1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2], venue_00015_00002);
constraint array_var_int_element(opponent_00015_00003, [1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2], venue_00015_00003);
constraint array_var_int_element(opponent_00015_00004, [1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2], venue_00015_00004);
constraint array_var_int_element(opponent_00015_00005, [1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2], venue_00015_00005);
constraint array_var_int_element(opponent_00015_00006, [1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2], venue_00015_00006);
constraint array_var_int_element(opponent_00015_00007, [1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2], venue_00015_00007);
constraint array_var_int_element(opponent_00015_00008, [1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2], venue_00015_00008);
constraint array_var_int_element(opponent_00015_00009, [1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2], venue_00015_00009);
constraint array_var_int_element(opponent_00015_00010, [1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2], venue_00015_00010);
constraint array_var_int_element(opponent_00015_00011, [1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2], venue_00015_00011);
constraint array_var_int_element(opponent_00015_00012, [1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2], venue_00015_00012);
constraint array_var_int_element(opponent_00015_00013, [1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2], venue_00015_00013);
constraint array_var_int_element(opponent_00015_00014, [1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2], venue_00015_00014);
constraint array_var_int_element(opponent_00015_00015, [1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2], venue_00015_00015);
constraint array_var_int_element(opponent_00015_00016, [1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2], venue_00015_00016);
constraint array_var_int_element(opponent_00015_00017, [1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2], venue_00015_00017);
constraint array_var_int_element(opponent_00015_00018, [1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2], venue_00015_00018);
constraint array_var_int_element(opponent_00015_00019, [1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2], venue_00015_00019);
constraint array_var_int_element(opponent_00016_00001, [1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2], venue_00016_00001);
constraint array_var_int_element(opponent_00016_00002, [1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2], venue_00016_00002);
constraint array_var_int_element(opponent_00016_00003, [1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2], venue_00016_00003);
constraint array_var_int_element(opponent_00016_00004, [1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2], venue_00016_00004);
constraint array_var_int_element(opponent_00016_00005, [1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2], venue_00016_00005);
constraint array_var_int_element(opponent_00016_00006, [1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2], venue_00016_00006);
constraint array_var_int_element(opponent_00016_00007, [1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2], venue_00016_00007);
constraint array_var_int_element(opponent_00016_00008, [1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2], venue_00016_00008);
constraint array_var_int_element(opponent_00016_00009, [1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2], venue_00016_00009);
constraint array_var_int_element(opponent_00016_00010, [1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2], venue_00016_00010);
constraint array_var_int_element(opponent_00016_00011, [1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2], venue_00016_00011);
constraint array_var_int_element(opponent_00016_00012, [1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2], venue_00016_00012);
constraint array_var_int_element(opponent_00016_00013, [1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2], venue_00016_00013);
constraint array_var_int_element(opponent_00016_00014, [1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2], venue_00016_00014);
constraint array_var_int_element(opponent_00016_00015, [1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2], venue_00016_00015);
constraint array_var_int_element(opponent_00016_00016, [1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2], venue_00016_00016);
constraint array_var_int_element(opponent_00016_00017, [1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2], venue_00016_00017);
constraint array_var_int_element(opponent_00016_00018, [1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2], venue_00016_00018);
constraint array_var_int_element(opponent_00016_00019, [1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2], venue_00016_00019);
constraint array_var_int_element(opponent_00017_00001, [2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00017_00001);
constraint array_var_int_element(opponent_00017_00002, [2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00017_00002);
constraint array_var_int_element(opponent_00017_00003, [2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00017_00003);
constraint array_var_int_element(opponent_00017_00004, [2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00017_00004);
constraint array_var_int_element(opponent_00017_00005, [2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00017_00005);
constraint array_var_int_element(opponent_00017_00006, [2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00017_00006);
constraint array_var_int_element(opponent_00017_00007, [2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00017_00007);
constraint array_var_int_element(opponent_00017_00008, [2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00017_00008);
constraint array_var_int_element(opponent_00017_00009, [2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00017_00009);
constraint array_var_int_element(opponent_00017_00010, [2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00017_00010);
constraint array_var_int_element(opponent_00017_00011, [2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00017_00011);
constraint array_var_int_element(opponent_00017_00012, [2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00017_00012);
constraint array_var_int_element(opponent_00017_00013, [2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00017_00013);
constraint array_var_int_element(opponent_00017_00014, [2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00017_00014);
constraint array_var_int_element(opponent_00017_00015, [2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00017_00015);
constraint array_var_int_element(opponent_00017_00016, [2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00017_00016);
constraint array_var_int_element(opponent_00017_00017, [2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00017_00017);
constraint array_var_int_element(opponent_00017_00018, [2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00017_00018);
constraint array_var_int_element(opponent_00017_00019, [2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1], venue_00017_00019);
constraint array_var_int_element(opponent_00018_00001, [2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1], venue_00018_00001);
constraint array_var_int_element(opponent_00018_00002, [2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1], venue_00018_00002);
constraint array_var_int_element(opponent_00018_00003, [2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1], venue_00018_00003);
constraint array_var_int_element(opponent_00018_00004, [2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1], venue_00018_00004);
constraint array_var_int_element(opponent_00018_00005, [2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1], venue_00018_00005);
constraint array_var_int_element(opponent_00018_00006, [2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1], venue_00018_00006);
constraint array_var_int_element(opponent_00018_00007, [2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1], venue_00018_00007);
constraint array_var_int_element(opponent_00018_00008, [2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1], venue_00018_00008);
constraint array_var_int_element(opponent_00018_00009, [2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1], venue_00018_00009);
constraint array_var_int_element(opponent_00018_00010, [2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1], venue_00018_00010);
constraint array_var_int_element(opponent_00018_00011, [2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1], venue_00018_00011);
constraint array_var_int_element(opponent_00018_00012, [2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1], venue_00018_00012);
constraint array_var_int_element(opponent_00018_00013, [2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1], venue_00018_00013);
constraint array_var_int_element(opponent_00018_00014, [2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1], venue_00018_00014);
constraint array_var_int_element(opponent_00018_00015, [2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1], venue_00018_00015);
constraint array_var_int_element(opponent_00018_00016, [2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1], venue_00018_00016);
constraint array_var_int_element(opponent_00018_00017, [2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1], venue_00018_00017);
constraint array_var_int_element(opponent_00018_00018, [2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1], venue_00018_00018);
constraint array_var_int_element(opponent_00018_00019, [2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1], venue_00018_00019);
constraint array_var_int_element(opponent_00019_00001, [1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00019_00001);
constraint array_var_int_element(opponent_00019_00002, [1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00019_00002);
constraint array_var_int_element(opponent_00019_00003, [1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00019_00003);
constraint array_var_int_element(opponent_00019_00004, [1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00019_00004);
constraint array_var_int_element(opponent_00019_00005, [1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00019_00005);
constraint array_var_int_element(opponent_00019_00006, [1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00019_00006);
constraint array_var_int_element(opponent_00019_00007, [1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00019_00007);
constraint array_var_int_element(opponent_00019_00008, [1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00019_00008);
constraint array_var_int_element(opponent_00019_00009, [1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00019_00009);
constraint array_var_int_element(opponent_00019_00010, [1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00019_00010);
constraint array_var_int_element(opponent_00019_00011, [1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00019_00011);
constraint array_var_int_element(opponent_00019_00012, [1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00019_00012);
constraint array_var_int_element(opponent_00019_00013, [1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00019_00013);
constraint array_var_int_element(opponent_00019_00014, [1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00019_00014);
constraint array_var_int_element(opponent_00019_00015, [1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00019_00015);
constraint array_var_int_element(opponent_00019_00016, [1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00019_00016);
constraint array_var_int_element(opponent_00019_00017, [1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00019_00017);
constraint array_var_int_element(opponent_00019_00018, [1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00019_00018);
constraint array_var_int_element(opponent_00019_00019, [1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2], venue_00019_00019);
constraint array_var_int_element(aux1141, [1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1], venue_00020_00001);
constraint array_var_int_element(opponent_00020_00002, [1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1], venue_00020_00002);
constraint array_var_int_element(opponent_00020_00003, [1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1], venue_00020_00003);
constraint array_var_int_element(opponent_00020_00004, [1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1], venue_00020_00004);
constraint array_var_int_element(opponent_00020_00005, [1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1], venue_00020_00005);
constraint array_var_int_element(opponent_00020_00006, [1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1], venue_00020_00006);
constraint array_var_int_element(opponent_00020_00007, [1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1], venue_00020_00007);
constraint array_var_int_element(opponent_00020_00008, [1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1], venue_00020_00008);
constraint array_var_int_element(opponent_00020_00009, [1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1], venue_00020_00009);
constraint array_var_int_element(opponent_00020_00010, [1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1], venue_00020_00010);
constraint array_var_int_element(opponent_00020_00011, [1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1], venue_00020_00011);
constraint array_var_int_element(opponent_00020_00012, [1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1], venue_00020_00012);
constraint array_var_int_element(opponent_00020_00013, [1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1], venue_00020_00013);
constraint array_var_int_element(opponent_00020_00014, [1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1], venue_00020_00014);
constraint array_var_int_element(opponent_00020_00015, [1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1], venue_00020_00015);
constraint array_var_int_element(opponent_00020_00016, [1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1], venue_00020_00016);
constraint array_var_int_element(opponent_00020_00017, [1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1], venue_00020_00017);
constraint array_var_int_element(opponent_00020_00018, [1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1], venue_00020_00018);
constraint array_var_int_element(opponent_00020_00019, [1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1], venue_00020_00019);
constraint array_var_int_element(aux1151, [opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001, opponent_00015_00001, opponent_00016_00001, opponent_00017_00001, opponent_00018_00001, opponent_00019_00001], 1);
constraint array_var_int_element(aux1150, [opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002, opponent_00015_00002, opponent_00016_00002, opponent_00017_00002, opponent_00018_00002, opponent_00019_00002, opponent_00020_00002], 1);
constraint array_var_int_element(aux1147, [opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003, opponent_00015_00003, opponent_00016_00003, opponent_00017_00003, opponent_00018_00003, opponent_00019_00003, opponent_00020_00003], 1);
constraint array_var_int_element(aux1146, [opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004, opponent_00015_00004, opponent_00016_00004, opponent_00017_00004, opponent_00018_00004, opponent_00019_00004, opponent_00020_00004], 1);
constraint array_var_int_element(aux1149, [opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005, opponent_00015_00005, opponent_00016_00005, opponent_00017_00005, opponent_00018_00005, opponent_00019_00005, opponent_00020_00005], 1);
constraint array_var_int_element(aux1148, [opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006, opponent_00015_00006, opponent_00016_00006, opponent_00017_00006, opponent_00018_00006, opponent_00019_00006, opponent_00020_00006], 1);
constraint array_var_int_element(aux1144, [opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007, opponent_00015_00007, opponent_00016_00007, opponent_00017_00007, opponent_00018_00007, opponent_00019_00007, opponent_00020_00007], 1);
constraint array_var_int_element(aux1143, [opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008, opponent_00015_00008, opponent_00016_00008, opponent_00017_00008, opponent_00018_00008, opponent_00019_00008, opponent_00020_00008], 1);
constraint array_var_int_element(aux1145, [opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009, opponent_00015_00009, opponent_00016_00009, opponent_00017_00009, opponent_00018_00009, opponent_00019_00009, opponent_00020_00009], 1);
constraint array_var_int_element(aux1160, [opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010, opponent_00015_00010, opponent_00016_00010, opponent_00017_00010, opponent_00018_00010, opponent_00019_00010, opponent_00020_00010], 1);
constraint array_var_int_element(aux1161, [opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011, opponent_00015_00011, opponent_00016_00011, opponent_00017_00011, opponent_00018_00011, opponent_00019_00011, opponent_00020_00011], 1);
constraint array_var_int_element(aux1159, [opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012, opponent_00015_00012, opponent_00016_00012, opponent_00017_00012, opponent_00018_00012, opponent_00019_00012, opponent_00020_00012], 1);
constraint array_var_int_element(aux1156, [opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013, opponent_00015_00013, opponent_00016_00013, opponent_00017_00013, opponent_00018_00013, opponent_00019_00013, opponent_00020_00013], 1);
constraint array_var_int_element(aux1155, [opponent_00002_00014, opponent_00003_00014, opponent_00004_00014, opponent_00005_00014, opponent_00006_00014, opponent_00007_00014, opponent_00008_00014, opponent_00009_00014, opponent_00010_00014, opponent_00011_00014, opponent_00012_00014, opponent_00013_00014, opponent_00014_00014, opponent_00015_00014, opponent_00016_00014, opponent_00017_00014, opponent_00018_00014, opponent_00019_00014, opponent_00020_00014], 1);
constraint array_var_int_element(aux1158, [opponent_00002_00015, opponent_00003_00015, opponent_00004_00015, opponent_00005_00015, opponent_00006_00015, opponent_00007_00015, opponent_00008_00015, opponent_00009_00015, opponent_00010_00015, opponent_00011_00015, opponent_00012_00015, opponent_00013_00015, opponent_00014_00015, opponent_00015_00015, opponent_00016_00015, opponent_00017_00015, opponent_00018_00015, opponent_00019_00015, opponent_00020_00015], 1);
constraint array_var_int_element(aux1157, [opponent_00002_00016, opponent_00003_00016, opponent_00004_00016, opponent_00005_00016, opponent_00006_00016, opponent_00007_00016, opponent_00008_00016, opponent_00009_00016, opponent_00010_00016, opponent_00011_00016, opponent_00012_00016, opponent_00013_00016, opponent_00014_00016, opponent_00015_00016, opponent_00016_00016, opponent_00017_00016, opponent_00018_00016, opponent_00019_00016, opponent_00020_00016], 1);
constraint array_var_int_element(aux1153, [opponent_00002_00017, opponent_00003_00017, opponent_00004_00017, opponent_00005_00017, opponent_00006_00017, opponent_00007_00017, opponent_00008_00017, opponent_00009_00017, opponent_00010_00017, opponent_00011_00017, opponent_00012_00017, opponent_00013_00017, opponent_00014_00017, opponent_00015_00017, opponent_00016_00017, opponent_00017_00017, opponent_00018_00017, opponent_00019_00017, opponent_00020_00017], 1);
constraint array_var_int_element(aux1152, [opponent_00002_00018, opponent_00003_00018, opponent_00004_00018, opponent_00005_00018, opponent_00006_00018, opponent_00007_00018, opponent_00008_00018, opponent_00009_00018, opponent_00010_00018, opponent_00011_00018, opponent_00012_00018, opponent_00013_00018, opponent_00014_00018, opponent_00015_00018, opponent_00016_00018, opponent_00017_00018, opponent_00018_00018, opponent_00019_00018, opponent_00020_00018], 1);
constraint array_var_int_element(aux1154, [opponent_00003_00019, opponent_00004_00019, opponent_00005_00019, opponent_00006_00019, opponent_00007_00019, opponent_00008_00019, opponent_00009_00019, opponent_00010_00019, opponent_00011_00019, opponent_00012_00019, opponent_00013_00019, opponent_00014_00019, opponent_00015_00019, opponent_00016_00019, opponent_00017_00019, opponent_00018_00019, opponent_00019_00019, opponent_00020_00019], 1);
constraint array_var_int_element(opponent_00002_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001, opponent_00015_00001, opponent_00016_00001, opponent_00017_00001, opponent_00018_00001, opponent_00019_00001, opponent_00020_00001], 2);
constraint array_var_int_element(opponent_00002_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002, opponent_00015_00002, opponent_00016_00002, opponent_00017_00002, opponent_00018_00002, opponent_00019_00002, opponent_00020_00002], 2);
constraint array_var_int_element(opponent_00002_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003, opponent_00015_00003, opponent_00016_00003, opponent_00017_00003, opponent_00018_00003, opponent_00019_00003, opponent_00020_00003], 2);
constraint array_var_int_element(opponent_00002_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004, opponent_00015_00004, opponent_00016_00004, opponent_00017_00004, opponent_00018_00004, opponent_00019_00004, opponent_00020_00004], 2);
constraint array_var_int_element(opponent_00002_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005, opponent_00015_00005, opponent_00016_00005, opponent_00017_00005, opponent_00018_00005, opponent_00019_00005, opponent_00020_00005], 2);
constraint array_var_int_element(opponent_00002_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006, opponent_00015_00006, opponent_00016_00006, opponent_00017_00006, opponent_00018_00006, opponent_00019_00006, opponent_00020_00006], 2);
constraint array_var_int_element(opponent_00002_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007, opponent_00015_00007, opponent_00016_00007, opponent_00017_00007, opponent_00018_00007, opponent_00019_00007, opponent_00020_00007], 2);
constraint array_var_int_element(opponent_00002_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008, opponent_00015_00008, opponent_00016_00008, opponent_00017_00008, opponent_00018_00008, opponent_00019_00008, opponent_00020_00008], 2);
constraint array_var_int_element(opponent_00002_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009, opponent_00015_00009, opponent_00016_00009, opponent_00017_00009, opponent_00018_00009, opponent_00019_00009, opponent_00020_00009], 2);
constraint array_var_int_element(opponent_00002_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010, opponent_00015_00010, opponent_00016_00010, opponent_00017_00010, opponent_00018_00010, opponent_00019_00010, opponent_00020_00010], 2);
constraint array_var_int_element(opponent_00002_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011, opponent_00015_00011, opponent_00016_00011, opponent_00017_00011, opponent_00018_00011, opponent_00019_00011, opponent_00020_00011], 2);
constraint array_var_int_element(opponent_00002_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012, opponent_00015_00012, opponent_00016_00012, opponent_00017_00012, opponent_00018_00012, opponent_00019_00012, opponent_00020_00012], 2);
constraint array_var_int_element(opponent_00002_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013, opponent_00015_00013, opponent_00016_00013, opponent_00017_00013, opponent_00018_00013, opponent_00019_00013, opponent_00020_00013], 2);
constraint array_var_int_element(opponent_00002_00014, [opponent_00001_00014, opponent_00002_00014, opponent_00003_00014, opponent_00004_00014, opponent_00005_00014, opponent_00006_00014, opponent_00007_00014, opponent_00008_00014, opponent_00009_00014, opponent_00010_00014, opponent_00011_00014, opponent_00012_00014, opponent_00013_00014, opponent_00014_00014, opponent_00015_00014, opponent_00016_00014, opponent_00017_00014, opponent_00018_00014, opponent_00019_00014, opponent_00020_00014], 2);
constraint array_var_int_element(opponent_00002_00015, [opponent_00001_00015, opponent_00002_00015, opponent_00003_00015, opponent_00004_00015, opponent_00005_00015, opponent_00006_00015, opponent_00007_00015, opponent_00008_00015, opponent_00009_00015, opponent_00010_00015, opponent_00011_00015, opponent_00012_00015, opponent_00013_00015, opponent_00014_00015, opponent_00015_00015, opponent_00016_00015, opponent_00017_00015, opponent_00018_00015, opponent_00019_00015, opponent_00020_00015], 2);
constraint array_var_int_element(opponent_00002_00016, [opponent_00001_00016, opponent_00002_00016, opponent_00003_00016, opponent_00004_00016, opponent_00005_00016, opponent_00006_00016, opponent_00007_00016, opponent_00008_00016, opponent_00009_00016, opponent_00010_00016, opponent_00011_00016, opponent_00012_00016, opponent_00013_00016, opponent_00014_00016, opponent_00015_00016, opponent_00016_00016, opponent_00017_00016, opponent_00018_00016, opponent_00019_00016, opponent_00020_00016], 2);
constraint array_var_int_element(opponent_00002_00017, [opponent_00001_00017, opponent_00002_00017, opponent_00003_00017, opponent_00004_00017, opponent_00005_00017, opponent_00006_00017, opponent_00007_00017, opponent_00008_00017, opponent_00009_00017, opponent_00010_00017, opponent_00011_00017, opponent_00012_00017, opponent_00013_00017, opponent_00014_00017, opponent_00015_00017, opponent_00016_00017, opponent_00017_00017, opponent_00018_00017, opponent_00019_00017, opponent_00020_00017], 2);
constraint array_var_int_element(opponent_00002_00018, [opponent_00001_00018, opponent_00002_00018, opponent_00003_00018, opponent_00004_00018, opponent_00005_00018, opponent_00006_00018, opponent_00007_00018, opponent_00008_00018, opponent_00009_00018, opponent_00010_00018, opponent_00011_00018, opponent_00012_00018, opponent_00013_00018, opponent_00014_00018, opponent_00015_00018, opponent_00016_00018, opponent_00017_00018, opponent_00018_00018, opponent_00019_00018, opponent_00020_00018], 2);
constraint array_var_int_element(aux1142, [opponent_00003_00019, opponent_00004_00019, opponent_00005_00019, opponent_00006_00019, opponent_00007_00019, opponent_00008_00019, opponent_00009_00019, opponent_00010_00019, opponent_00011_00019, opponent_00012_00019, opponent_00013_00019, opponent_00014_00019, opponent_00015_00019, opponent_00016_00019, opponent_00017_00019, opponent_00018_00019, opponent_00019_00019, opponent_00020_00019], 2);
constraint array_var_int_element(opponent_00003_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001, opponent_00015_00001, opponent_00016_00001, opponent_00017_00001, opponent_00018_00001, opponent_00019_00001, opponent_00020_00001], 3);
constraint array_var_int_element(opponent_00003_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002, opponent_00015_00002, opponent_00016_00002, opponent_00017_00002, opponent_00018_00002, opponent_00019_00002, opponent_00020_00002], 3);
constraint array_var_int_element(opponent_00003_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003, opponent_00015_00003, opponent_00016_00003, opponent_00017_00003, opponent_00018_00003, opponent_00019_00003, opponent_00020_00003], 3);
constraint array_var_int_element(opponent_00003_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004, opponent_00015_00004, opponent_00016_00004, opponent_00017_00004, opponent_00018_00004, opponent_00019_00004, opponent_00020_00004], 3);
constraint array_var_int_element(opponent_00003_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005, opponent_00015_00005, opponent_00016_00005, opponent_00017_00005, opponent_00018_00005, opponent_00019_00005, opponent_00020_00005], 3);
constraint array_var_int_element(opponent_00003_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006, opponent_00015_00006, opponent_00016_00006, opponent_00017_00006, opponent_00018_00006, opponent_00019_00006, opponent_00020_00006], 3);
constraint array_var_int_element(opponent_00003_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007, opponent_00015_00007, opponent_00016_00007, opponent_00017_00007, opponent_00018_00007, opponent_00019_00007, opponent_00020_00007], 3);
constraint array_var_int_element(opponent_00003_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008, opponent_00015_00008, opponent_00016_00008, opponent_00017_00008, opponent_00018_00008, opponent_00019_00008, opponent_00020_00008], 3);
constraint array_var_int_element(opponent_00003_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009, opponent_00015_00009, opponent_00016_00009, opponent_00017_00009, opponent_00018_00009, opponent_00019_00009, opponent_00020_00009], 3);
constraint array_var_int_element(opponent_00003_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010, opponent_00015_00010, opponent_00016_00010, opponent_00017_00010, opponent_00018_00010, opponent_00019_00010, opponent_00020_00010], 3);
constraint array_var_int_element(opponent_00003_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011, opponent_00015_00011, opponent_00016_00011, opponent_00017_00011, opponent_00018_00011, opponent_00019_00011, opponent_00020_00011], 3);
constraint array_var_int_element(opponent_00003_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012, opponent_00015_00012, opponent_00016_00012, opponent_00017_00012, opponent_00018_00012, opponent_00019_00012, opponent_00020_00012], 3);
constraint array_var_int_element(opponent_00003_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013, opponent_00015_00013, opponent_00016_00013, opponent_00017_00013, opponent_00018_00013, opponent_00019_00013, opponent_00020_00013], 3);
constraint array_var_int_element(opponent_00003_00014, [opponent_00001_00014, opponent_00002_00014, opponent_00003_00014, opponent_00004_00014, opponent_00005_00014, opponent_00006_00014, opponent_00007_00014, opponent_00008_00014, opponent_00009_00014, opponent_00010_00014, opponent_00011_00014, opponent_00012_00014, opponent_00013_00014, opponent_00014_00014, opponent_00015_00014, opponent_00016_00014, opponent_00017_00014, opponent_00018_00014, opponent_00019_00014, opponent_00020_00014], 3);
constraint array_var_int_element(opponent_00003_00015, [opponent_00001_00015, opponent_00002_00015, opponent_00003_00015, opponent_00004_00015, opponent_00005_00015, opponent_00006_00015, opponent_00007_00015, opponent_00008_00015, opponent_00009_00015, opponent_00010_00015, opponent_00011_00015, opponent_00012_00015, opponent_00013_00015, opponent_00014_00015, opponent_00015_00015, opponent_00016_00015, opponent_00017_00015, opponent_00018_00015, opponent_00019_00015, opponent_00020_00015], 3);
constraint array_var_int_element(opponent_00003_00016, [opponent_00001_00016, opponent_00002_00016, opponent_00003_00016, opponent_00004_00016, opponent_00005_00016, opponent_00006_00016, opponent_00007_00016, opponent_00008_00016, opponent_00009_00016, opponent_00010_00016, opponent_00011_00016, opponent_00012_00016, opponent_00013_00016, opponent_00014_00016, opponent_00015_00016, opponent_00016_00016, opponent_00017_00016, opponent_00018_00016, opponent_00019_00016, opponent_00020_00016], 3);
constraint array_var_int_element(opponent_00003_00017, [opponent_00001_00017, opponent_00002_00017, opponent_00003_00017, opponent_00004_00017, opponent_00005_00017, opponent_00006_00017, opponent_00007_00017, opponent_00008_00017, opponent_00009_00017, opponent_00010_00017, opponent_00011_00017, opponent_00012_00017, opponent_00013_00017, opponent_00014_00017, opponent_00015_00017, opponent_00016_00017, opponent_00017_00017, opponent_00018_00017, opponent_00019_00017, opponent_00020_00017], 3);
constraint array_var_int_element(opponent_00003_00018, [opponent_00001_00018, opponent_00002_00018, opponent_00003_00018, opponent_00004_00018, opponent_00005_00018, opponent_00006_00018, opponent_00007_00018, opponent_00008_00018, opponent_00009_00018, opponent_00010_00018, opponent_00011_00018, opponent_00012_00018, opponent_00013_00018, opponent_00014_00018, opponent_00015_00018, opponent_00016_00018, opponent_00017_00018, opponent_00018_00018, opponent_00019_00018, opponent_00020_00018], 3);
constraint array_var_int_element(opponent_00003_00019, [opponent_00001_00019, opponent_00002_00019, opponent_00003_00019, opponent_00004_00019, opponent_00005_00019, opponent_00006_00019, opponent_00007_00019, opponent_00008_00019, opponent_00009_00019, opponent_00010_00019, opponent_00011_00019, opponent_00012_00019, opponent_00013_00019, opponent_00014_00019, opponent_00015_00019, opponent_00016_00019, opponent_00017_00019, opponent_00018_00019, opponent_00019_00019, opponent_00020_00019], 3);
constraint array_var_int_element(opponent_00004_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001, opponent_00015_00001, opponent_00016_00001, opponent_00017_00001, opponent_00018_00001, opponent_00019_00001, opponent_00020_00001], 4);
constraint array_var_int_element(opponent_00004_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002, opponent_00015_00002, opponent_00016_00002, opponent_00017_00002, opponent_00018_00002, opponent_00019_00002, opponent_00020_00002], 4);
constraint array_var_int_element(opponent_00004_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003, opponent_00015_00003, opponent_00016_00003, opponent_00017_00003, opponent_00018_00003, opponent_00019_00003, opponent_00020_00003], 4);
constraint array_var_int_element(opponent_00004_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004, opponent_00015_00004, opponent_00016_00004, opponent_00017_00004, opponent_00018_00004, opponent_00019_00004, opponent_00020_00004], 4);
constraint array_var_int_element(opponent_00004_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005, opponent_00015_00005, opponent_00016_00005, opponent_00017_00005, opponent_00018_00005, opponent_00019_00005, opponent_00020_00005], 4);
constraint array_var_int_element(opponent_00004_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006, opponent_00015_00006, opponent_00016_00006, opponent_00017_00006, opponent_00018_00006, opponent_00019_00006, opponent_00020_00006], 4);
constraint array_var_int_element(opponent_00004_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007, opponent_00015_00007, opponent_00016_00007, opponent_00017_00007, opponent_00018_00007, opponent_00019_00007, opponent_00020_00007], 4);
constraint array_var_int_element(opponent_00004_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008, opponent_00015_00008, opponent_00016_00008, opponent_00017_00008, opponent_00018_00008, opponent_00019_00008, opponent_00020_00008], 4);
constraint array_var_int_element(opponent_00004_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009, opponent_00015_00009, opponent_00016_00009, opponent_00017_00009, opponent_00018_00009, opponent_00019_00009, opponent_00020_00009], 4);
constraint array_var_int_element(opponent_00004_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010, opponent_00015_00010, opponent_00016_00010, opponent_00017_00010, opponent_00018_00010, opponent_00019_00010, opponent_00020_00010], 4);
constraint array_var_int_element(opponent_00004_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011, opponent_00015_00011, opponent_00016_00011, opponent_00017_00011, opponent_00018_00011, opponent_00019_00011, opponent_00020_00011], 4);
constraint array_var_int_element(opponent_00004_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012, opponent_00015_00012, opponent_00016_00012, opponent_00017_00012, opponent_00018_00012, opponent_00019_00012, opponent_00020_00012], 4);
constraint array_var_int_element(opponent_00004_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013, opponent_00015_00013, opponent_00016_00013, opponent_00017_00013, opponent_00018_00013, opponent_00019_00013, opponent_00020_00013], 4);
constraint array_var_int_element(opponent_00004_00014, [opponent_00001_00014, opponent_00002_00014, opponent_00003_00014, opponent_00004_00014, opponent_00005_00014, opponent_00006_00014, opponent_00007_00014, opponent_00008_00014, opponent_00009_00014, opponent_00010_00014, opponent_00011_00014, opponent_00012_00014, opponent_00013_00014, opponent_00014_00014, opponent_00015_00014, opponent_00016_00014, opponent_00017_00014, opponent_00018_00014, opponent_00019_00014, opponent_00020_00014], 4);
constraint array_var_int_element(opponent_00004_00015, [opponent_00001_00015, opponent_00002_00015, opponent_00003_00015, opponent_00004_00015, opponent_00005_00015, opponent_00006_00015, opponent_00007_00015, opponent_00008_00015, opponent_00009_00015, opponent_00010_00015, opponent_00011_00015, opponent_00012_00015, opponent_00013_00015, opponent_00014_00015, opponent_00015_00015, opponent_00016_00015, opponent_00017_00015, opponent_00018_00015, opponent_00019_00015, opponent_00020_00015], 4);
constraint array_var_int_element(opponent_00004_00016, [opponent_00001_00016, opponent_00002_00016, opponent_00003_00016, opponent_00004_00016, opponent_00005_00016, opponent_00006_00016, opponent_00007_00016, opponent_00008_00016, opponent_00009_00016, opponent_00010_00016, opponent_00011_00016, opponent_00012_00016, opponent_00013_00016, opponent_00014_00016, opponent_00015_00016, opponent_00016_00016, opponent_00017_00016, opponent_00018_00016, opponent_00019_00016, opponent_00020_00016], 4);
constraint array_var_int_element(opponent_00004_00017, [opponent_00001_00017, opponent_00002_00017, opponent_00003_00017, opponent_00004_00017, opponent_00005_00017, opponent_00006_00017, opponent_00007_00017, opponent_00008_00017, opponent_00009_00017, opponent_00010_00017, opponent_00011_00017, opponent_00012_00017, opponent_00013_00017, opponent_00014_00017, opponent_00015_00017, opponent_00016_00017, opponent_00017_00017, opponent_00018_00017, opponent_00019_00017, opponent_00020_00017], 4);
constraint array_var_int_element(opponent_00004_00018, [opponent_00001_00018, opponent_00002_00018, opponent_00003_00018, opponent_00004_00018, opponent_00005_00018, opponent_00006_00018, opponent_00007_00018, opponent_00008_00018, opponent_00009_00018, opponent_00010_00018, opponent_00011_00018, opponent_00012_00018, opponent_00013_00018, opponent_00014_00018, opponent_00015_00018, opponent_00016_00018, opponent_00017_00018, opponent_00018_00018, opponent_00019_00018, opponent_00020_00018], 4);
constraint array_var_int_element(opponent_00004_00019, [opponent_00001_00019, opponent_00002_00019, opponent_00003_00019, opponent_00004_00019, opponent_00005_00019, opponent_00006_00019, opponent_00007_00019, opponent_00008_00019, opponent_00009_00019, opponent_00010_00019, opponent_00011_00019, opponent_00012_00019, opponent_00013_00019, opponent_00014_00019, opponent_00015_00019, opponent_00016_00019, opponent_00017_00019, opponent_00018_00019, opponent_00019_00019, opponent_00020_00019], 4);
constraint array_var_int_element(opponent_00005_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001, opponent_00015_00001, opponent_00016_00001, opponent_00017_00001, opponent_00018_00001, opponent_00019_00001, opponent_00020_00001], 5);
constraint array_var_int_element(opponent_00005_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002, opponent_00015_00002, opponent_00016_00002, opponent_00017_00002, opponent_00018_00002, opponent_00019_00002, opponent_00020_00002], 5);
constraint array_var_int_element(opponent_00005_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003, opponent_00015_00003, opponent_00016_00003, opponent_00017_00003, opponent_00018_00003, opponent_00019_00003, opponent_00020_00003], 5);
constraint array_var_int_element(opponent_00005_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004, opponent_00015_00004, opponent_00016_00004, opponent_00017_00004, opponent_00018_00004, opponent_00019_00004, opponent_00020_00004], 5);
constraint array_var_int_element(opponent_00005_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005, opponent_00015_00005, opponent_00016_00005, opponent_00017_00005, opponent_00018_00005, opponent_00019_00005, opponent_00020_00005], 5);
constraint array_var_int_element(opponent_00005_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006, opponent_00015_00006, opponent_00016_00006, opponent_00017_00006, opponent_00018_00006, opponent_00019_00006, opponent_00020_00006], 5);
constraint array_var_int_element(opponent_00005_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007, opponent_00015_00007, opponent_00016_00007, opponent_00017_00007, opponent_00018_00007, opponent_00019_00007, opponent_00020_00007], 5);
constraint array_var_int_element(opponent_00005_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008, opponent_00015_00008, opponent_00016_00008, opponent_00017_00008, opponent_00018_00008, opponent_00019_00008, opponent_00020_00008], 5);
constraint array_var_int_element(opponent_00005_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009, opponent_00015_00009, opponent_00016_00009, opponent_00017_00009, opponent_00018_00009, opponent_00019_00009, opponent_00020_00009], 5);
constraint array_var_int_element(opponent_00005_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010, opponent_00015_00010, opponent_00016_00010, opponent_00017_00010, opponent_00018_00010, opponent_00019_00010, opponent_00020_00010], 5);
constraint array_var_int_element(opponent_00005_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011, opponent_00015_00011, opponent_00016_00011, opponent_00017_00011, opponent_00018_00011, opponent_00019_00011, opponent_00020_00011], 5);
constraint array_var_int_element(opponent_00005_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012, opponent_00015_00012, opponent_00016_00012, opponent_00017_00012, opponent_00018_00012, opponent_00019_00012, opponent_00020_00012], 5);
constraint array_var_int_element(opponent_00005_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013, opponent_00015_00013, opponent_00016_00013, opponent_00017_00013, opponent_00018_00013, opponent_00019_00013, opponent_00020_00013], 5);
constraint array_var_int_element(opponent_00005_00014, [opponent_00001_00014, opponent_00002_00014, opponent_00003_00014, opponent_00004_00014, opponent_00005_00014, opponent_00006_00014, opponent_00007_00014, opponent_00008_00014, opponent_00009_00014, opponent_00010_00014, opponent_00011_00014, opponent_00012_00014, opponent_00013_00014, opponent_00014_00014, opponent_00015_00014, opponent_00016_00014, opponent_00017_00014, opponent_00018_00014, opponent_00019_00014, opponent_00020_00014], 5);
constraint array_var_int_element(opponent_00005_00015, [opponent_00001_00015, opponent_00002_00015, opponent_00003_00015, opponent_00004_00015, opponent_00005_00015, opponent_00006_00015, opponent_00007_00015, opponent_00008_00015, opponent_00009_00015, opponent_00010_00015, opponent_00011_00015, opponent_00012_00015, opponent_00013_00015, opponent_00014_00015, opponent_00015_00015, opponent_00016_00015, opponent_00017_00015, opponent_00018_00015, opponent_00019_00015, opponent_00020_00015], 5);
constraint array_var_int_element(opponent_00005_00016, [opponent_00001_00016, opponent_00002_00016, opponent_00003_00016, opponent_00004_00016, opponent_00005_00016, opponent_00006_00016, opponent_00007_00016, opponent_00008_00016, opponent_00009_00016, opponent_00010_00016, opponent_00011_00016, opponent_00012_00016, opponent_00013_00016, opponent_00014_00016, opponent_00015_00016, opponent_00016_00016, opponent_00017_00016, opponent_00018_00016, opponent_00019_00016, opponent_00020_00016], 5);
constraint array_var_int_element(opponent_00005_00017, [opponent_00001_00017, opponent_00002_00017, opponent_00003_00017, opponent_00004_00017, opponent_00005_00017, opponent_00006_00017, opponent_00007_00017, opponent_00008_00017, opponent_00009_00017, opponent_00010_00017, opponent_00011_00017, opponent_00012_00017, opponent_00013_00017, opponent_00014_00017, opponent_00015_00017, opponent_00016_00017, opponent_00017_00017, opponent_00018_00017, opponent_00019_00017, opponent_00020_00017], 5);
constraint array_var_int_element(opponent_00005_00018, [opponent_00001_00018, opponent_00002_00018, opponent_00003_00018, opponent_00004_00018, opponent_00005_00018, opponent_00006_00018, opponent_00007_00018, opponent_00008_00018, opponent_00009_00018, opponent_00010_00018, opponent_00011_00018, opponent_00012_00018, opponent_00013_00018, opponent_00014_00018, opponent_00015_00018, opponent_00016_00018, opponent_00017_00018, opponent_00018_00018, opponent_00019_00018, opponent_00020_00018], 5);
constraint array_var_int_element(opponent_00005_00019, [opponent_00001_00019, opponent_00002_00019, opponent_00003_00019, opponent_00004_00019, opponent_00005_00019, opponent_00006_00019, opponent_00007_00019, opponent_00008_00019, opponent_00009_00019, opponent_00010_00019, opponent_00011_00019, opponent_00012_00019, opponent_00013_00019, opponent_00014_00019, opponent_00015_00019, opponent_00016_00019, opponent_00017_00019, opponent_00018_00019, opponent_00019_00019, opponent_00020_00019], 5);
constraint array_var_int_element(opponent_00006_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001, opponent_00015_00001, opponent_00016_00001, opponent_00017_00001, opponent_00018_00001, opponent_00019_00001, opponent_00020_00001], 6);
constraint array_var_int_element(opponent_00006_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002, opponent_00015_00002, opponent_00016_00002, opponent_00017_00002, opponent_00018_00002, opponent_00019_00002, opponent_00020_00002], 6);
constraint array_var_int_element(opponent_00006_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003, opponent_00015_00003, opponent_00016_00003, opponent_00017_00003, opponent_00018_00003, opponent_00019_00003, opponent_00020_00003], 6);
constraint array_var_int_element(opponent_00006_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004, opponent_00015_00004, opponent_00016_00004, opponent_00017_00004, opponent_00018_00004, opponent_00019_00004, opponent_00020_00004], 6);
constraint array_var_int_element(opponent_00006_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005, opponent_00015_00005, opponent_00016_00005, opponent_00017_00005, opponent_00018_00005, opponent_00019_00005, opponent_00020_00005], 6);
constraint array_var_int_element(opponent_00006_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006, opponent_00015_00006, opponent_00016_00006, opponent_00017_00006, opponent_00018_00006, opponent_00019_00006, opponent_00020_00006], 6);
constraint array_var_int_element(opponent_00006_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007, opponent_00015_00007, opponent_00016_00007, opponent_00017_00007, opponent_00018_00007, opponent_00019_00007, opponent_00020_00007], 6);
constraint array_var_int_element(opponent_00006_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008, opponent_00015_00008, opponent_00016_00008, opponent_00017_00008, opponent_00018_00008, opponent_00019_00008, opponent_00020_00008], 6);
constraint array_var_int_element(opponent_00006_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009, opponent_00015_00009, opponent_00016_00009, opponent_00017_00009, opponent_00018_00009, opponent_00019_00009, opponent_00020_00009], 6);
constraint array_var_int_element(opponent_00006_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010, opponent_00015_00010, opponent_00016_00010, opponent_00017_00010, opponent_00018_00010, opponent_00019_00010, opponent_00020_00010], 6);
constraint array_var_int_element(opponent_00006_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011, opponent_00015_00011, opponent_00016_00011, opponent_00017_00011, opponent_00018_00011, opponent_00019_00011, opponent_00020_00011], 6);
constraint array_var_int_element(opponent_00006_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012, opponent_00015_00012, opponent_00016_00012, opponent_00017_00012, opponent_00018_00012, opponent_00019_00012, opponent_00020_00012], 6);
constraint array_var_int_element(opponent_00006_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013, opponent_00015_00013, opponent_00016_00013, opponent_00017_00013, opponent_00018_00013, opponent_00019_00013, opponent_00020_00013], 6);
constraint array_var_int_element(opponent_00006_00014, [opponent_00001_00014, opponent_00002_00014, opponent_00003_00014, opponent_00004_00014, opponent_00005_00014, opponent_00006_00014, opponent_00007_00014, opponent_00008_00014, opponent_00009_00014, opponent_00010_00014, opponent_00011_00014, opponent_00012_00014, opponent_00013_00014, opponent_00014_00014, opponent_00015_00014, opponent_00016_00014, opponent_00017_00014, opponent_00018_00014, opponent_00019_00014, opponent_00020_00014], 6);
constraint array_var_int_element(opponent_00006_00015, [opponent_00001_00015, opponent_00002_00015, opponent_00003_00015, opponent_00004_00015, opponent_00005_00015, opponent_00006_00015, opponent_00007_00015, opponent_00008_00015, opponent_00009_00015, opponent_00010_00015, opponent_00011_00015, opponent_00012_00015, opponent_00013_00015, opponent_00014_00015, opponent_00015_00015, opponent_00016_00015, opponent_00017_00015, opponent_00018_00015, opponent_00019_00015, opponent_00020_00015], 6);
constraint array_var_int_element(opponent_00006_00016, [opponent_00001_00016, opponent_00002_00016, opponent_00003_00016, opponent_00004_00016, opponent_00005_00016, opponent_00006_00016, opponent_00007_00016, opponent_00008_00016, opponent_00009_00016, opponent_00010_00016, opponent_00011_00016, opponent_00012_00016, opponent_00013_00016, opponent_00014_00016, opponent_00015_00016, opponent_00016_00016, opponent_00017_00016, opponent_00018_00016, opponent_00019_00016, opponent_00020_00016], 6);
constraint array_var_int_element(opponent_00006_00017, [opponent_00001_00017, opponent_00002_00017, opponent_00003_00017, opponent_00004_00017, opponent_00005_00017, opponent_00006_00017, opponent_00007_00017, opponent_00008_00017, opponent_00009_00017, opponent_00010_00017, opponent_00011_00017, opponent_00012_00017, opponent_00013_00017, opponent_00014_00017, opponent_00015_00017, opponent_00016_00017, opponent_00017_00017, opponent_00018_00017, opponent_00019_00017, opponent_00020_00017], 6);
constraint array_var_int_element(opponent_00006_00018, [opponent_00001_00018, opponent_00002_00018, opponent_00003_00018, opponent_00004_00018, opponent_00005_00018, opponent_00006_00018, opponent_00007_00018, opponent_00008_00018, opponent_00009_00018, opponent_00010_00018, opponent_00011_00018, opponent_00012_00018, opponent_00013_00018, opponent_00014_00018, opponent_00015_00018, opponent_00016_00018, opponent_00017_00018, opponent_00018_00018, opponent_00019_00018, opponent_00020_00018], 6);
constraint array_var_int_element(opponent_00006_00019, [opponent_00001_00019, opponent_00002_00019, opponent_00003_00019, opponent_00004_00019, opponent_00005_00019, opponent_00006_00019, opponent_00007_00019, opponent_00008_00019, opponent_00009_00019, opponent_00010_00019, opponent_00011_00019, opponent_00012_00019, opponent_00013_00019, opponent_00014_00019, opponent_00015_00019, opponent_00016_00019, opponent_00017_00019, opponent_00018_00019, opponent_00019_00019, opponent_00020_00019], 6);
constraint array_var_int_element(opponent_00007_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001, opponent_00015_00001, opponent_00016_00001, opponent_00017_00001, opponent_00018_00001, opponent_00019_00001, opponent_00020_00001], 7);
constraint array_var_int_element(opponent_00007_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002, opponent_00015_00002, opponent_00016_00002, opponent_00017_00002, opponent_00018_00002, opponent_00019_00002, opponent_00020_00002], 7);
constraint array_var_int_element(opponent_00007_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003, opponent_00015_00003, opponent_00016_00003, opponent_00017_00003, opponent_00018_00003, opponent_00019_00003, opponent_00020_00003], 7);
constraint array_var_int_element(opponent_00007_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004, opponent_00015_00004, opponent_00016_00004, opponent_00017_00004, opponent_00018_00004, opponent_00019_00004, opponent_00020_00004], 7);
constraint array_var_int_element(opponent_00007_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005, opponent_00015_00005, opponent_00016_00005, opponent_00017_00005, opponent_00018_00005, opponent_00019_00005, opponent_00020_00005], 7);
constraint array_var_int_element(opponent_00007_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006, opponent_00015_00006, opponent_00016_00006, opponent_00017_00006, opponent_00018_00006, opponent_00019_00006, opponent_00020_00006], 7);
constraint array_var_int_element(opponent_00007_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007, opponent_00015_00007, opponent_00016_00007, opponent_00017_00007, opponent_00018_00007, opponent_00019_00007, opponent_00020_00007], 7);
constraint array_var_int_element(opponent_00007_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008, opponent_00015_00008, opponent_00016_00008, opponent_00017_00008, opponent_00018_00008, opponent_00019_00008, opponent_00020_00008], 7);
constraint array_var_int_element(opponent_00007_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009, opponent_00015_00009, opponent_00016_00009, opponent_00017_00009, opponent_00018_00009, opponent_00019_00009, opponent_00020_00009], 7);
constraint array_var_int_element(opponent_00007_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010, opponent_00015_00010, opponent_00016_00010, opponent_00017_00010, opponent_00018_00010, opponent_00019_00010, opponent_00020_00010], 7);
constraint array_var_int_element(opponent_00007_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011, opponent_00015_00011, opponent_00016_00011, opponent_00017_00011, opponent_00018_00011, opponent_00019_00011, opponent_00020_00011], 7);
constraint array_var_int_element(opponent_00007_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012, opponent_00015_00012, opponent_00016_00012, opponent_00017_00012, opponent_00018_00012, opponent_00019_00012, opponent_00020_00012], 7);
constraint array_var_int_element(opponent_00007_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013, opponent_00015_00013, opponent_00016_00013, opponent_00017_00013, opponent_00018_00013, opponent_00019_00013, opponent_00020_00013], 7);
constraint array_var_int_element(opponent_00007_00014, [opponent_00001_00014, opponent_00002_00014, opponent_00003_00014, opponent_00004_00014, opponent_00005_00014, opponent_00006_00014, opponent_00007_00014, opponent_00008_00014, opponent_00009_00014, opponent_00010_00014, opponent_00011_00014, opponent_00012_00014, opponent_00013_00014, opponent_00014_00014, opponent_00015_00014, opponent_00016_00014, opponent_00017_00014, opponent_00018_00014, opponent_00019_00014, opponent_00020_00014], 7);
constraint array_var_int_element(opponent_00007_00015, [opponent_00001_00015, opponent_00002_00015, opponent_00003_00015, opponent_00004_00015, opponent_00005_00015, opponent_00006_00015, opponent_00007_00015, opponent_00008_00015, opponent_00009_00015, opponent_00010_00015, opponent_00011_00015, opponent_00012_00015, opponent_00013_00015, opponent_00014_00015, opponent_00015_00015, opponent_00016_00015, opponent_00017_00015, opponent_00018_00015, opponent_00019_00015, opponent_00020_00015], 7);
constraint array_var_int_element(opponent_00007_00016, [opponent_00001_00016, opponent_00002_00016, opponent_00003_00016, opponent_00004_00016, opponent_00005_00016, opponent_00006_00016, opponent_00007_00016, opponent_00008_00016, opponent_00009_00016, opponent_00010_00016, opponent_00011_00016, opponent_00012_00016, opponent_00013_00016, opponent_00014_00016, opponent_00015_00016, opponent_00016_00016, opponent_00017_00016, opponent_00018_00016, opponent_00019_00016, opponent_00020_00016], 7);
constraint array_var_int_element(opponent_00007_00017, [opponent_00001_00017, opponent_00002_00017, opponent_00003_00017, opponent_00004_00017, opponent_00005_00017, opponent_00006_00017, opponent_00007_00017, opponent_00008_00017, opponent_00009_00017, opponent_00010_00017, opponent_00011_00017, opponent_00012_00017, opponent_00013_00017, opponent_00014_00017, opponent_00015_00017, opponent_00016_00017, opponent_00017_00017, opponent_00018_00017, opponent_00019_00017, opponent_00020_00017], 7);
constraint array_var_int_element(opponent_00007_00018, [opponent_00001_00018, opponent_00002_00018, opponent_00003_00018, opponent_00004_00018, opponent_00005_00018, opponent_00006_00018, opponent_00007_00018, opponent_00008_00018, opponent_00009_00018, opponent_00010_00018, opponent_00011_00018, opponent_00012_00018, opponent_00013_00018, opponent_00014_00018, opponent_00015_00018, opponent_00016_00018, opponent_00017_00018, opponent_00018_00018, opponent_00019_00018, opponent_00020_00018], 7);
constraint array_var_int_element(opponent_00007_00019, [opponent_00001_00019, opponent_00002_00019, opponent_00003_00019, opponent_00004_00019, opponent_00005_00019, opponent_00006_00019, opponent_00007_00019, opponent_00008_00019, opponent_00009_00019, opponent_00010_00019, opponent_00011_00019, opponent_00012_00019, opponent_00013_00019, opponent_00014_00019, opponent_00015_00019, opponent_00016_00019, opponent_00017_00019, opponent_00018_00019, opponent_00019_00019, opponent_00020_00019], 7);
constraint array_var_int_element(opponent_00008_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001, opponent_00015_00001, opponent_00016_00001, opponent_00017_00001, opponent_00018_00001, opponent_00019_00001, opponent_00020_00001], 8);
constraint array_var_int_element(opponent_00008_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002, opponent_00015_00002, opponent_00016_00002, opponent_00017_00002, opponent_00018_00002, opponent_00019_00002, opponent_00020_00002], 8);
constraint array_var_int_element(opponent_00008_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003, opponent_00015_00003, opponent_00016_00003, opponent_00017_00003, opponent_00018_00003, opponent_00019_00003, opponent_00020_00003], 8);
constraint array_var_int_element(opponent_00008_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004, opponent_00015_00004, opponent_00016_00004, opponent_00017_00004, opponent_00018_00004, opponent_00019_00004, opponent_00020_00004], 8);
constraint array_var_int_element(opponent_00008_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005, opponent_00015_00005, opponent_00016_00005, opponent_00017_00005, opponent_00018_00005, opponent_00019_00005, opponent_00020_00005], 8);
constraint array_var_int_element(opponent_00008_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006, opponent_00015_00006, opponent_00016_00006, opponent_00017_00006, opponent_00018_00006, opponent_00019_00006, opponent_00020_00006], 8);
constraint array_var_int_element(opponent_00008_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007, opponent_00015_00007, opponent_00016_00007, opponent_00017_00007, opponent_00018_00007, opponent_00019_00007, opponent_00020_00007], 8);
constraint array_var_int_element(opponent_00008_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008, opponent_00015_00008, opponent_00016_00008, opponent_00017_00008, opponent_00018_00008, opponent_00019_00008, opponent_00020_00008], 8);
constraint array_var_int_element(opponent_00008_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009, opponent_00015_00009, opponent_00016_00009, opponent_00017_00009, opponent_00018_00009, opponent_00019_00009, opponent_00020_00009], 8);
constraint array_var_int_element(opponent_00008_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010, opponent_00015_00010, opponent_00016_00010, opponent_00017_00010, opponent_00018_00010, opponent_00019_00010, opponent_00020_00010], 8);
constraint array_var_int_element(opponent_00008_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011, opponent_00015_00011, opponent_00016_00011, opponent_00017_00011, opponent_00018_00011, opponent_00019_00011, opponent_00020_00011], 8);
constraint array_var_int_element(opponent_00008_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012, opponent_00015_00012, opponent_00016_00012, opponent_00017_00012, opponent_00018_00012, opponent_00019_00012, opponent_00020_00012], 8);
constraint array_var_int_element(opponent_00008_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013, opponent_00015_00013, opponent_00016_00013, opponent_00017_00013, opponent_00018_00013, opponent_00019_00013, opponent_00020_00013], 8);
constraint array_var_int_element(opponent_00008_00014, [opponent_00001_00014, opponent_00002_00014, opponent_00003_00014, opponent_00004_00014, opponent_00005_00014, opponent_00006_00014, opponent_00007_00014, opponent_00008_00014, opponent_00009_00014, opponent_00010_00014, opponent_00011_00014, opponent_00012_00014, opponent_00013_00014, opponent_00014_00014, opponent_00015_00014, opponent_00016_00014, opponent_00017_00014, opponent_00018_00014, opponent_00019_00014, opponent_00020_00014], 8);
constraint array_var_int_element(opponent_00008_00015, [opponent_00001_00015, opponent_00002_00015, opponent_00003_00015, opponent_00004_00015, opponent_00005_00015, opponent_00006_00015, opponent_00007_00015, opponent_00008_00015, opponent_00009_00015, opponent_00010_00015, opponent_00011_00015, opponent_00012_00015, opponent_00013_00015, opponent_00014_00015, opponent_00015_00015, opponent_00016_00015, opponent_00017_00015, opponent_00018_00015, opponent_00019_00015, opponent_00020_00015], 8);
constraint array_var_int_element(opponent_00008_00016, [opponent_00001_00016, opponent_00002_00016, opponent_00003_00016, opponent_00004_00016, opponent_00005_00016, opponent_00006_00016, opponent_00007_00016, opponent_00008_00016, opponent_00009_00016, opponent_00010_00016, opponent_00011_00016, opponent_00012_00016, opponent_00013_00016, opponent_00014_00016, opponent_00015_00016, opponent_00016_00016, opponent_00017_00016, opponent_00018_00016, opponent_00019_00016, opponent_00020_00016], 8);
constraint array_var_int_element(opponent_00008_00017, [opponent_00001_00017, opponent_00002_00017, opponent_00003_00017, opponent_00004_00017, opponent_00005_00017, opponent_00006_00017, opponent_00007_00017, opponent_00008_00017, opponent_00009_00017, opponent_00010_00017, opponent_00011_00017, opponent_00012_00017, opponent_00013_00017, opponent_00014_00017, opponent_00015_00017, opponent_00016_00017, opponent_00017_00017, opponent_00018_00017, opponent_00019_00017, opponent_00020_00017], 8);
constraint array_var_int_element(opponent_00008_00018, [opponent_00001_00018, opponent_00002_00018, opponent_00003_00018, opponent_00004_00018, opponent_00005_00018, opponent_00006_00018, opponent_00007_00018, opponent_00008_00018, opponent_00009_00018, opponent_00010_00018, opponent_00011_00018, opponent_00012_00018, opponent_00013_00018, opponent_00014_00018, opponent_00015_00018, opponent_00016_00018, opponent_00017_00018, opponent_00018_00018, opponent_00019_00018, opponent_00020_00018], 8);
constraint array_var_int_element(opponent_00008_00019, [opponent_00001_00019, opponent_00002_00019, opponent_00003_00019, opponent_00004_00019, opponent_00005_00019, opponent_00006_00019, opponent_00007_00019, opponent_00008_00019, opponent_00009_00019, opponent_00010_00019, opponent_00011_00019, opponent_00012_00019, opponent_00013_00019, opponent_00014_00019, opponent_00015_00019, opponent_00016_00019, opponent_00017_00019, opponent_00018_00019, opponent_00019_00019, opponent_00020_00019], 8);
constraint array_var_int_element(opponent_00009_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001, opponent_00015_00001, opponent_00016_00001, opponent_00017_00001, opponent_00018_00001, opponent_00019_00001, opponent_00020_00001], 9);
constraint array_var_int_element(opponent_00009_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002, opponent_00015_00002, opponent_00016_00002, opponent_00017_00002, opponent_00018_00002, opponent_00019_00002, opponent_00020_00002], 9);
constraint array_var_int_element(opponent_00009_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003, opponent_00015_00003, opponent_00016_00003, opponent_00017_00003, opponent_00018_00003, opponent_00019_00003, opponent_00020_00003], 9);
constraint array_var_int_element(opponent_00009_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004, opponent_00015_00004, opponent_00016_00004, opponent_00017_00004, opponent_00018_00004, opponent_00019_00004, opponent_00020_00004], 9);
constraint array_var_int_element(opponent_00009_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005, opponent_00015_00005, opponent_00016_00005, opponent_00017_00005, opponent_00018_00005, opponent_00019_00005, opponent_00020_00005], 9);
constraint array_var_int_element(opponent_00009_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006, opponent_00015_00006, opponent_00016_00006, opponent_00017_00006, opponent_00018_00006, opponent_00019_00006, opponent_00020_00006], 9);
constraint array_var_int_element(opponent_00009_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007, opponent_00015_00007, opponent_00016_00007, opponent_00017_00007, opponent_00018_00007, opponent_00019_00007, opponent_00020_00007], 9);
constraint array_var_int_element(opponent_00009_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008, opponent_00015_00008, opponent_00016_00008, opponent_00017_00008, opponent_00018_00008, opponent_00019_00008, opponent_00020_00008], 9);
constraint array_var_int_element(opponent_00009_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009, opponent_00015_00009, opponent_00016_00009, opponent_00017_00009, opponent_00018_00009, opponent_00019_00009, opponent_00020_00009], 9);
constraint array_var_int_element(opponent_00009_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010, opponent_00015_00010, opponent_00016_00010, opponent_00017_00010, opponent_00018_00010, opponent_00019_00010, opponent_00020_00010], 9);
constraint array_var_int_element(opponent_00009_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011, opponent_00015_00011, opponent_00016_00011, opponent_00017_00011, opponent_00018_00011, opponent_00019_00011, opponent_00020_00011], 9);
constraint array_var_int_element(opponent_00009_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012, opponent_00015_00012, opponent_00016_00012, opponent_00017_00012, opponent_00018_00012, opponent_00019_00012, opponent_00020_00012], 9);
constraint array_var_int_element(opponent_00009_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013, opponent_00015_00013, opponent_00016_00013, opponent_00017_00013, opponent_00018_00013, opponent_00019_00013, opponent_00020_00013], 9);
constraint array_var_int_element(opponent_00009_00014, [opponent_00001_00014, opponent_00002_00014, opponent_00003_00014, opponent_00004_00014, opponent_00005_00014, opponent_00006_00014, opponent_00007_00014, opponent_00008_00014, opponent_00009_00014, opponent_00010_00014, opponent_00011_00014, opponent_00012_00014, opponent_00013_00014, opponent_00014_00014, opponent_00015_00014, opponent_00016_00014, opponent_00017_00014, opponent_00018_00014, opponent_00019_00014, opponent_00020_00014], 9);
constraint array_var_int_element(opponent_00009_00015, [opponent_00001_00015, opponent_00002_00015, opponent_00003_00015, opponent_00004_00015, opponent_00005_00015, opponent_00006_00015, opponent_00007_00015, opponent_00008_00015, opponent_00009_00015, opponent_00010_00015, opponent_00011_00015, opponent_00012_00015, opponent_00013_00015, opponent_00014_00015, opponent_00015_00015, opponent_00016_00015, opponent_00017_00015, opponent_00018_00015, opponent_00019_00015, opponent_00020_00015], 9);
constraint array_var_int_element(opponent_00009_00016, [opponent_00001_00016, opponent_00002_00016, opponent_00003_00016, opponent_00004_00016, opponent_00005_00016, opponent_00006_00016, opponent_00007_00016, opponent_00008_00016, opponent_00009_00016, opponent_00010_00016, opponent_00011_00016, opponent_00012_00016, opponent_00013_00016, opponent_00014_00016, opponent_00015_00016, opponent_00016_00016, opponent_00017_00016, opponent_00018_00016, opponent_00019_00016, opponent_00020_00016], 9);
constraint array_var_int_element(opponent_00009_00017, [opponent_00001_00017, opponent_00002_00017, opponent_00003_00017, opponent_00004_00017, opponent_00005_00017, opponent_00006_00017, opponent_00007_00017, opponent_00008_00017, opponent_00009_00017, opponent_00010_00017, opponent_00011_00017, opponent_00012_00017, opponent_00013_00017, opponent_00014_00017, opponent_00015_00017, opponent_00016_00017, opponent_00017_00017, opponent_00018_00017, opponent_00019_00017, opponent_00020_00017], 9);
constraint array_var_int_element(opponent_00009_00018, [opponent_00001_00018, opponent_00002_00018, opponent_00003_00018, opponent_00004_00018, opponent_00005_00018, opponent_00006_00018, opponent_00007_00018, opponent_00008_00018, opponent_00009_00018, opponent_00010_00018, opponent_00011_00018, opponent_00012_00018, opponent_00013_00018, opponent_00014_00018, opponent_00015_00018, opponent_00016_00018, opponent_00017_00018, opponent_00018_00018, opponent_00019_00018, opponent_00020_00018], 9);
constraint array_var_int_element(opponent_00009_00019, [opponent_00001_00019, opponent_00002_00019, opponent_00003_00019, opponent_00004_00019, opponent_00005_00019, opponent_00006_00019, opponent_00007_00019, opponent_00008_00019, opponent_00009_00019, opponent_00010_00019, opponent_00011_00019, opponent_00012_00019, opponent_00013_00019, opponent_00014_00019, opponent_00015_00019, opponent_00016_00019, opponent_00017_00019, opponent_00018_00019, opponent_00019_00019, opponent_00020_00019], 9);
constraint array_var_int_element(opponent_00010_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001, opponent_00015_00001, opponent_00016_00001, opponent_00017_00001, opponent_00018_00001, opponent_00019_00001, opponent_00020_00001], 10);
constraint array_var_int_element(opponent_00010_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002, opponent_00015_00002, opponent_00016_00002, opponent_00017_00002, opponent_00018_00002, opponent_00019_00002, opponent_00020_00002], 10);
constraint array_var_int_element(opponent_00010_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003, opponent_00015_00003, opponent_00016_00003, opponent_00017_00003, opponent_00018_00003, opponent_00019_00003, opponent_00020_00003], 10);
constraint array_var_int_element(opponent_00010_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004, opponent_00015_00004, opponent_00016_00004, opponent_00017_00004, opponent_00018_00004, opponent_00019_00004, opponent_00020_00004], 10);
constraint array_var_int_element(opponent_00010_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005, opponent_00015_00005, opponent_00016_00005, opponent_00017_00005, opponent_00018_00005, opponent_00019_00005, opponent_00020_00005], 10);
constraint array_var_int_element(opponent_00010_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006, opponent_00015_00006, opponent_00016_00006, opponent_00017_00006, opponent_00018_00006, opponent_00019_00006, opponent_00020_00006], 10);
constraint array_var_int_element(opponent_00010_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007, opponent_00015_00007, opponent_00016_00007, opponent_00017_00007, opponent_00018_00007, opponent_00019_00007, opponent_00020_00007], 10);
constraint array_var_int_element(opponent_00010_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008, opponent_00015_00008, opponent_00016_00008, opponent_00017_00008, opponent_00018_00008, opponent_00019_00008, opponent_00020_00008], 10);
constraint array_var_int_element(opponent_00010_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009, opponent_00015_00009, opponent_00016_00009, opponent_00017_00009, opponent_00018_00009, opponent_00019_00009, opponent_00020_00009], 10);
constraint array_var_int_element(opponent_00010_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010, opponent_00015_00010, opponent_00016_00010, opponent_00017_00010, opponent_00018_00010, opponent_00019_00010, opponent_00020_00010], 10);
constraint array_var_int_element(opponent_00010_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011, opponent_00015_00011, opponent_00016_00011, opponent_00017_00011, opponent_00018_00011, opponent_00019_00011, opponent_00020_00011], 10);
constraint array_var_int_element(opponent_00010_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012, opponent_00015_00012, opponent_00016_00012, opponent_00017_00012, opponent_00018_00012, opponent_00019_00012, opponent_00020_00012], 10);
constraint array_var_int_element(opponent_00010_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013, opponent_00015_00013, opponent_00016_00013, opponent_00017_00013, opponent_00018_00013, opponent_00019_00013, opponent_00020_00013], 10);
constraint array_var_int_element(opponent_00010_00014, [opponent_00001_00014, opponent_00002_00014, opponent_00003_00014, opponent_00004_00014, opponent_00005_00014, opponent_00006_00014, opponent_00007_00014, opponent_00008_00014, opponent_00009_00014, opponent_00010_00014, opponent_00011_00014, opponent_00012_00014, opponent_00013_00014, opponent_00014_00014, opponent_00015_00014, opponent_00016_00014, opponent_00017_00014, opponent_00018_00014, opponent_00019_00014, opponent_00020_00014], 10);
constraint array_var_int_element(opponent_00010_00015, [opponent_00001_00015, opponent_00002_00015, opponent_00003_00015, opponent_00004_00015, opponent_00005_00015, opponent_00006_00015, opponent_00007_00015, opponent_00008_00015, opponent_00009_00015, opponent_00010_00015, opponent_00011_00015, opponent_00012_00015, opponent_00013_00015, opponent_00014_00015, opponent_00015_00015, opponent_00016_00015, opponent_00017_00015, opponent_00018_00015, opponent_00019_00015, opponent_00020_00015], 10);
constraint array_var_int_element(opponent_00010_00016, [opponent_00001_00016, opponent_00002_00016, opponent_00003_00016, opponent_00004_00016, opponent_00005_00016, opponent_00006_00016, opponent_00007_00016, opponent_00008_00016, opponent_00009_00016, opponent_00010_00016, opponent_00011_00016, opponent_00012_00016, opponent_00013_00016, opponent_00014_00016, opponent_00015_00016, opponent_00016_00016, opponent_00017_00016, opponent_00018_00016, opponent_00019_00016, opponent_00020_00016], 10);
constraint array_var_int_element(opponent_00010_00017, [opponent_00001_00017, opponent_00002_00017, opponent_00003_00017, opponent_00004_00017, opponent_00005_00017, opponent_00006_00017, opponent_00007_00017, opponent_00008_00017, opponent_00009_00017, opponent_00010_00017, opponent_00011_00017, opponent_00012_00017, opponent_00013_00017, opponent_00014_00017, opponent_00015_00017, opponent_00016_00017, opponent_00017_00017, opponent_00018_00017, opponent_00019_00017, opponent_00020_00017], 10);
constraint array_var_int_element(opponent_00010_00018, [opponent_00001_00018, opponent_00002_00018, opponent_00003_00018, opponent_00004_00018, opponent_00005_00018, opponent_00006_00018, opponent_00007_00018, opponent_00008_00018, opponent_00009_00018, opponent_00010_00018, opponent_00011_00018, opponent_00012_00018, opponent_00013_00018, opponent_00014_00018, opponent_00015_00018, opponent_00016_00018, opponent_00017_00018, opponent_00018_00018, opponent_00019_00018, opponent_00020_00018], 10);
constraint array_var_int_element(opponent_00010_00019, [opponent_00001_00019, opponent_00002_00019, opponent_00003_00019, opponent_00004_00019, opponent_00005_00019, opponent_00006_00019, opponent_00007_00019, opponent_00008_00019, opponent_00009_00019, opponent_00010_00019, opponent_00011_00019, opponent_00012_00019, opponent_00013_00019, opponent_00014_00019, opponent_00015_00019, opponent_00016_00019, opponent_00017_00019, opponent_00018_00019, opponent_00019_00019, opponent_00020_00019], 10);
constraint array_var_int_element(opponent_00011_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001, opponent_00015_00001, opponent_00016_00001, opponent_00017_00001, opponent_00018_00001, opponent_00019_00001, opponent_00020_00001], 11);
constraint array_var_int_element(opponent_00011_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002, opponent_00015_00002, opponent_00016_00002, opponent_00017_00002, opponent_00018_00002, opponent_00019_00002, opponent_00020_00002], 11);
constraint array_var_int_element(opponent_00011_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003, opponent_00015_00003, opponent_00016_00003, opponent_00017_00003, opponent_00018_00003, opponent_00019_00003, opponent_00020_00003], 11);
constraint array_var_int_element(opponent_00011_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004, opponent_00015_00004, opponent_00016_00004, opponent_00017_00004, opponent_00018_00004, opponent_00019_00004, opponent_00020_00004], 11);
constraint array_var_int_element(opponent_00011_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005, opponent_00015_00005, opponent_00016_00005, opponent_00017_00005, opponent_00018_00005, opponent_00019_00005, opponent_00020_00005], 11);
constraint array_var_int_element(opponent_00011_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006, opponent_00015_00006, opponent_00016_00006, opponent_00017_00006, opponent_00018_00006, opponent_00019_00006, opponent_00020_00006], 11);
constraint array_var_int_element(opponent_00011_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007, opponent_00015_00007, opponent_00016_00007, opponent_00017_00007, opponent_00018_00007, opponent_00019_00007, opponent_00020_00007], 11);
constraint array_var_int_element(opponent_00011_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008, opponent_00015_00008, opponent_00016_00008, opponent_00017_00008, opponent_00018_00008, opponent_00019_00008, opponent_00020_00008], 11);
constraint array_var_int_element(opponent_00011_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009, opponent_00015_00009, opponent_00016_00009, opponent_00017_00009, opponent_00018_00009, opponent_00019_00009, opponent_00020_00009], 11);
constraint array_var_int_element(opponent_00011_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010, opponent_00015_00010, opponent_00016_00010, opponent_00017_00010, opponent_00018_00010, opponent_00019_00010, opponent_00020_00010], 11);
constraint array_var_int_element(opponent_00011_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011, opponent_00015_00011, opponent_00016_00011, opponent_00017_00011, opponent_00018_00011, opponent_00019_00011, opponent_00020_00011], 11);
constraint array_var_int_element(opponent_00011_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012, opponent_00015_00012, opponent_00016_00012, opponent_00017_00012, opponent_00018_00012, opponent_00019_00012, opponent_00020_00012], 11);
constraint array_var_int_element(opponent_00011_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013, opponent_00015_00013, opponent_00016_00013, opponent_00017_00013, opponent_00018_00013, opponent_00019_00013, opponent_00020_00013], 11);
constraint array_var_int_element(opponent_00011_00014, [opponent_00001_00014, opponent_00002_00014, opponent_00003_00014, opponent_00004_00014, opponent_00005_00014, opponent_00006_00014, opponent_00007_00014, opponent_00008_00014, opponent_00009_00014, opponent_00010_00014, opponent_00011_00014, opponent_00012_00014, opponent_00013_00014, opponent_00014_00014, opponent_00015_00014, opponent_00016_00014, opponent_00017_00014, opponent_00018_00014, opponent_00019_00014, opponent_00020_00014], 11);
constraint array_var_int_element(opponent_00011_00015, [opponent_00001_00015, opponent_00002_00015, opponent_00003_00015, opponent_00004_00015, opponent_00005_00015, opponent_00006_00015, opponent_00007_00015, opponent_00008_00015, opponent_00009_00015, opponent_00010_00015, opponent_00011_00015, opponent_00012_00015, opponent_00013_00015, opponent_00014_00015, opponent_00015_00015, opponent_00016_00015, opponent_00017_00015, opponent_00018_00015, opponent_00019_00015, opponent_00020_00015], 11);
constraint array_var_int_element(opponent_00011_00016, [opponent_00001_00016, opponent_00002_00016, opponent_00003_00016, opponent_00004_00016, opponent_00005_00016, opponent_00006_00016, opponent_00007_00016, opponent_00008_00016, opponent_00009_00016, opponent_00010_00016, opponent_00011_00016, opponent_00012_00016, opponent_00013_00016, opponent_00014_00016, opponent_00015_00016, opponent_00016_00016, opponent_00017_00016, opponent_00018_00016, opponent_00019_00016, opponent_00020_00016], 11);
constraint array_var_int_element(opponent_00011_00017, [opponent_00001_00017, opponent_00002_00017, opponent_00003_00017, opponent_00004_00017, opponent_00005_00017, opponent_00006_00017, opponent_00007_00017, opponent_00008_00017, opponent_00009_00017, opponent_00010_00017, opponent_00011_00017, opponent_00012_00017, opponent_00013_00017, opponent_00014_00017, opponent_00015_00017, opponent_00016_00017, opponent_00017_00017, opponent_00018_00017, opponent_00019_00017, opponent_00020_00017], 11);
constraint array_var_int_element(opponent_00011_00018, [opponent_00001_00018, opponent_00002_00018, opponent_00003_00018, opponent_00004_00018, opponent_00005_00018, opponent_00006_00018, opponent_00007_00018, opponent_00008_00018, opponent_00009_00018, opponent_00010_00018, opponent_00011_00018, opponent_00012_00018, opponent_00013_00018, opponent_00014_00018, opponent_00015_00018, opponent_00016_00018, opponent_00017_00018, opponent_00018_00018, opponent_00019_00018, opponent_00020_00018], 11);
constraint array_var_int_element(opponent_00011_00019, [opponent_00001_00019, opponent_00002_00019, opponent_00003_00019, opponent_00004_00019, opponent_00005_00019, opponent_00006_00019, opponent_00007_00019, opponent_00008_00019, opponent_00009_00019, opponent_00010_00019, opponent_00011_00019, opponent_00012_00019, opponent_00013_00019, opponent_00014_00019, opponent_00015_00019, opponent_00016_00019, opponent_00017_00019, opponent_00018_00019, opponent_00019_00019, opponent_00020_00019], 11);
constraint array_var_int_element(opponent_00012_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001, opponent_00015_00001, opponent_00016_00001, opponent_00017_00001, opponent_00018_00001, opponent_00019_00001, opponent_00020_00001], 12);
constraint array_var_int_element(opponent_00012_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002, opponent_00015_00002, opponent_00016_00002, opponent_00017_00002, opponent_00018_00002, opponent_00019_00002, opponent_00020_00002], 12);
constraint array_var_int_element(opponent_00012_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003, opponent_00015_00003, opponent_00016_00003, opponent_00017_00003, opponent_00018_00003, opponent_00019_00003, opponent_00020_00003], 12);
constraint array_var_int_element(opponent_00012_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004, opponent_00015_00004, opponent_00016_00004, opponent_00017_00004, opponent_00018_00004, opponent_00019_00004, opponent_00020_00004], 12);
constraint array_var_int_element(opponent_00012_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005, opponent_00015_00005, opponent_00016_00005, opponent_00017_00005, opponent_00018_00005, opponent_00019_00005, opponent_00020_00005], 12);
constraint array_var_int_element(opponent_00012_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006, opponent_00015_00006, opponent_00016_00006, opponent_00017_00006, opponent_00018_00006, opponent_00019_00006, opponent_00020_00006], 12);
constraint array_var_int_element(opponent_00012_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007, opponent_00015_00007, opponent_00016_00007, opponent_00017_00007, opponent_00018_00007, opponent_00019_00007, opponent_00020_00007], 12);
constraint array_var_int_element(opponent_00012_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008, opponent_00015_00008, opponent_00016_00008, opponent_00017_00008, opponent_00018_00008, opponent_00019_00008, opponent_00020_00008], 12);
constraint array_var_int_element(opponent_00012_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009, opponent_00015_00009, opponent_00016_00009, opponent_00017_00009, opponent_00018_00009, opponent_00019_00009, opponent_00020_00009], 12);
constraint array_var_int_element(opponent_00012_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010, opponent_00015_00010, opponent_00016_00010, opponent_00017_00010, opponent_00018_00010, opponent_00019_00010, opponent_00020_00010], 12);
constraint array_var_int_element(opponent_00012_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011, opponent_00015_00011, opponent_00016_00011, opponent_00017_00011, opponent_00018_00011, opponent_00019_00011, opponent_00020_00011], 12);
constraint array_var_int_element(opponent_00012_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012, opponent_00015_00012, opponent_00016_00012, opponent_00017_00012, opponent_00018_00012, opponent_00019_00012, opponent_00020_00012], 12);
constraint array_var_int_element(opponent_00012_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013, opponent_00015_00013, opponent_00016_00013, opponent_00017_00013, opponent_00018_00013, opponent_00019_00013, opponent_00020_00013], 12);
constraint array_var_int_element(opponent_00012_00014, [opponent_00001_00014, opponent_00002_00014, opponent_00003_00014, opponent_00004_00014, opponent_00005_00014, opponent_00006_00014, opponent_00007_00014, opponent_00008_00014, opponent_00009_00014, opponent_00010_00014, opponent_00011_00014, opponent_00012_00014, opponent_00013_00014, opponent_00014_00014, opponent_00015_00014, opponent_00016_00014, opponent_00017_00014, opponent_00018_00014, opponent_00019_00014, opponent_00020_00014], 12);
constraint array_var_int_element(opponent_00012_00015, [opponent_00001_00015, opponent_00002_00015, opponent_00003_00015, opponent_00004_00015, opponent_00005_00015, opponent_00006_00015, opponent_00007_00015, opponent_00008_00015, opponent_00009_00015, opponent_00010_00015, opponent_00011_00015, opponent_00012_00015, opponent_00013_00015, opponent_00014_00015, opponent_00015_00015, opponent_00016_00015, opponent_00017_00015, opponent_00018_00015, opponent_00019_00015, opponent_00020_00015], 12);
constraint array_var_int_element(opponent_00012_00016, [opponent_00001_00016, opponent_00002_00016, opponent_00003_00016, opponent_00004_00016, opponent_00005_00016, opponent_00006_00016, opponent_00007_00016, opponent_00008_00016, opponent_00009_00016, opponent_00010_00016, opponent_00011_00016, opponent_00012_00016, opponent_00013_00016, opponent_00014_00016, opponent_00015_00016, opponent_00016_00016, opponent_00017_00016, opponent_00018_00016, opponent_00019_00016, opponent_00020_00016], 12);
constraint array_var_int_element(opponent_00012_00017, [opponent_00001_00017, opponent_00002_00017, opponent_00003_00017, opponent_00004_00017, opponent_00005_00017, opponent_00006_00017, opponent_00007_00017, opponent_00008_00017, opponent_00009_00017, opponent_00010_00017, opponent_00011_00017, opponent_00012_00017, opponent_00013_00017, opponent_00014_00017, opponent_00015_00017, opponent_00016_00017, opponent_00017_00017, opponent_00018_00017, opponent_00019_00017, opponent_00020_00017], 12);
constraint array_var_int_element(opponent_00012_00018, [opponent_00001_00018, opponent_00002_00018, opponent_00003_00018, opponent_00004_00018, opponent_00005_00018, opponent_00006_00018, opponent_00007_00018, opponent_00008_00018, opponent_00009_00018, opponent_00010_00018, opponent_00011_00018, opponent_00012_00018, opponent_00013_00018, opponent_00014_00018, opponent_00015_00018, opponent_00016_00018, opponent_00017_00018, opponent_00018_00018, opponent_00019_00018, opponent_00020_00018], 12);
constraint array_var_int_element(opponent_00012_00019, [opponent_00001_00019, opponent_00002_00019, opponent_00003_00019, opponent_00004_00019, opponent_00005_00019, opponent_00006_00019, opponent_00007_00019, opponent_00008_00019, opponent_00009_00019, opponent_00010_00019, opponent_00011_00019, opponent_00012_00019, opponent_00013_00019, opponent_00014_00019, opponent_00015_00019, opponent_00016_00019, opponent_00017_00019, opponent_00018_00019, opponent_00019_00019, opponent_00020_00019], 12);
constraint array_var_int_element(opponent_00013_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001, opponent_00015_00001, opponent_00016_00001, opponent_00017_00001, opponent_00018_00001, opponent_00019_00001, opponent_00020_00001], 13);
constraint array_var_int_element(opponent_00013_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002, opponent_00015_00002, opponent_00016_00002, opponent_00017_00002, opponent_00018_00002, opponent_00019_00002, opponent_00020_00002], 13);
constraint array_var_int_element(opponent_00013_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003, opponent_00015_00003, opponent_00016_00003, opponent_00017_00003, opponent_00018_00003, opponent_00019_00003, opponent_00020_00003], 13);
constraint array_var_int_element(opponent_00013_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004, opponent_00015_00004, opponent_00016_00004, opponent_00017_00004, opponent_00018_00004, opponent_00019_00004, opponent_00020_00004], 13);
constraint array_var_int_element(opponent_00013_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005, opponent_00015_00005, opponent_00016_00005, opponent_00017_00005, opponent_00018_00005, opponent_00019_00005, opponent_00020_00005], 13);
constraint array_var_int_element(opponent_00013_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006, opponent_00015_00006, opponent_00016_00006, opponent_00017_00006, opponent_00018_00006, opponent_00019_00006, opponent_00020_00006], 13);
constraint array_var_int_element(opponent_00013_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007, opponent_00015_00007, opponent_00016_00007, opponent_00017_00007, opponent_00018_00007, opponent_00019_00007, opponent_00020_00007], 13);
constraint array_var_int_element(opponent_00013_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008, opponent_00015_00008, opponent_00016_00008, opponent_00017_00008, opponent_00018_00008, opponent_00019_00008, opponent_00020_00008], 13);
constraint array_var_int_element(opponent_00013_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009, opponent_00015_00009, opponent_00016_00009, opponent_00017_00009, opponent_00018_00009, opponent_00019_00009, opponent_00020_00009], 13);
constraint array_var_int_element(opponent_00013_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010, opponent_00015_00010, opponent_00016_00010, opponent_00017_00010, opponent_00018_00010, opponent_00019_00010, opponent_00020_00010], 13);
constraint array_var_int_element(opponent_00013_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011, opponent_00015_00011, opponent_00016_00011, opponent_00017_00011, opponent_00018_00011, opponent_00019_00011, opponent_00020_00011], 13);
constraint array_var_int_element(opponent_00013_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012, opponent_00015_00012, opponent_00016_00012, opponent_00017_00012, opponent_00018_00012, opponent_00019_00012, opponent_00020_00012], 13);
constraint array_var_int_element(opponent_00013_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013, opponent_00015_00013, opponent_00016_00013, opponent_00017_00013, opponent_00018_00013, opponent_00019_00013, opponent_00020_00013], 13);
constraint array_var_int_element(opponent_00013_00014, [opponent_00001_00014, opponent_00002_00014, opponent_00003_00014, opponent_00004_00014, opponent_00005_00014, opponent_00006_00014, opponent_00007_00014, opponent_00008_00014, opponent_00009_00014, opponent_00010_00014, opponent_00011_00014, opponent_00012_00014, opponent_00013_00014, opponent_00014_00014, opponent_00015_00014, opponent_00016_00014, opponent_00017_00014, opponent_00018_00014, opponent_00019_00014, opponent_00020_00014], 13);
constraint array_var_int_element(opponent_00013_00015, [opponent_00001_00015, opponent_00002_00015, opponent_00003_00015, opponent_00004_00015, opponent_00005_00015, opponent_00006_00015, opponent_00007_00015, opponent_00008_00015, opponent_00009_00015, opponent_00010_00015, opponent_00011_00015, opponent_00012_00015, opponent_00013_00015, opponent_00014_00015, opponent_00015_00015, opponent_00016_00015, opponent_00017_00015, opponent_00018_00015, opponent_00019_00015, opponent_00020_00015], 13);
constraint array_var_int_element(opponent_00013_00016, [opponent_00001_00016, opponent_00002_00016, opponent_00003_00016, opponent_00004_00016, opponent_00005_00016, opponent_00006_00016, opponent_00007_00016, opponent_00008_00016, opponent_00009_00016, opponent_00010_00016, opponent_00011_00016, opponent_00012_00016, opponent_00013_00016, opponent_00014_00016, opponent_00015_00016, opponent_00016_00016, opponent_00017_00016, opponent_00018_00016, opponent_00019_00016, opponent_00020_00016], 13);
constraint array_var_int_element(opponent_00013_00017, [opponent_00001_00017, opponent_00002_00017, opponent_00003_00017, opponent_00004_00017, opponent_00005_00017, opponent_00006_00017, opponent_00007_00017, opponent_00008_00017, opponent_00009_00017, opponent_00010_00017, opponent_00011_00017, opponent_00012_00017, opponent_00013_00017, opponent_00014_00017, opponent_00015_00017, opponent_00016_00017, opponent_00017_00017, opponent_00018_00017, opponent_00019_00017, opponent_00020_00017], 13);
constraint array_var_int_element(opponent_00013_00018, [opponent_00001_00018, opponent_00002_00018, opponent_00003_00018, opponent_00004_00018, opponent_00005_00018, opponent_00006_00018, opponent_00007_00018, opponent_00008_00018, opponent_00009_00018, opponent_00010_00018, opponent_00011_00018, opponent_00012_00018, opponent_00013_00018, opponent_00014_00018, opponent_00015_00018, opponent_00016_00018, opponent_00017_00018, opponent_00018_00018, opponent_00019_00018, opponent_00020_00018], 13);
constraint array_var_int_element(opponent_00013_00019, [opponent_00001_00019, opponent_00002_00019, opponent_00003_00019, opponent_00004_00019, opponent_00005_00019, opponent_00006_00019, opponent_00007_00019, opponent_00008_00019, opponent_00009_00019, opponent_00010_00019, opponent_00011_00019, opponent_00012_00019, opponent_00013_00019, opponent_00014_00019, opponent_00015_00019, opponent_00016_00019, opponent_00017_00019, opponent_00018_00019, opponent_00019_00019, opponent_00020_00019], 13);
constraint array_var_int_element(opponent_00014_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001, opponent_00015_00001, opponent_00016_00001, opponent_00017_00001, opponent_00018_00001, opponent_00019_00001, opponent_00020_00001], 14);
constraint array_var_int_element(opponent_00014_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002, opponent_00015_00002, opponent_00016_00002, opponent_00017_00002, opponent_00018_00002, opponent_00019_00002, opponent_00020_00002], 14);
constraint array_var_int_element(opponent_00014_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003, opponent_00015_00003, opponent_00016_00003, opponent_00017_00003, opponent_00018_00003, opponent_00019_00003, opponent_00020_00003], 14);
constraint array_var_int_element(opponent_00014_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004, opponent_00015_00004, opponent_00016_00004, opponent_00017_00004, opponent_00018_00004, opponent_00019_00004, opponent_00020_00004], 14);
constraint array_var_int_element(opponent_00014_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005, opponent_00015_00005, opponent_00016_00005, opponent_00017_00005, opponent_00018_00005, opponent_00019_00005, opponent_00020_00005], 14);
constraint array_var_int_element(opponent_00014_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006, opponent_00015_00006, opponent_00016_00006, opponent_00017_00006, opponent_00018_00006, opponent_00019_00006, opponent_00020_00006], 14);
constraint array_var_int_element(opponent_00014_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007, opponent_00015_00007, opponent_00016_00007, opponent_00017_00007, opponent_00018_00007, opponent_00019_00007, opponent_00020_00007], 14);
constraint array_var_int_element(opponent_00014_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008, opponent_00015_00008, opponent_00016_00008, opponent_00017_00008, opponent_00018_00008, opponent_00019_00008, opponent_00020_00008], 14);
constraint array_var_int_element(opponent_00014_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009, opponent_00015_00009, opponent_00016_00009, opponent_00017_00009, opponent_00018_00009, opponent_00019_00009, opponent_00020_00009], 14);
constraint array_var_int_element(opponent_00014_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010, opponent_00015_00010, opponent_00016_00010, opponent_00017_00010, opponent_00018_00010, opponent_00019_00010, opponent_00020_00010], 14);
constraint array_var_int_element(opponent_00014_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011, opponent_00015_00011, opponent_00016_00011, opponent_00017_00011, opponent_00018_00011, opponent_00019_00011, opponent_00020_00011], 14);
constraint array_var_int_element(opponent_00014_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012, opponent_00015_00012, opponent_00016_00012, opponent_00017_00012, opponent_00018_00012, opponent_00019_00012, opponent_00020_00012], 14);
constraint array_var_int_element(opponent_00014_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013, opponent_00015_00013, opponent_00016_00013, opponent_00017_00013, opponent_00018_00013, opponent_00019_00013, opponent_00020_00013], 14);
constraint array_var_int_element(opponent_00014_00014, [opponent_00001_00014, opponent_00002_00014, opponent_00003_00014, opponent_00004_00014, opponent_00005_00014, opponent_00006_00014, opponent_00007_00014, opponent_00008_00014, opponent_00009_00014, opponent_00010_00014, opponent_00011_00014, opponent_00012_00014, opponent_00013_00014, opponent_00014_00014, opponent_00015_00014, opponent_00016_00014, opponent_00017_00014, opponent_00018_00014, opponent_00019_00014, opponent_00020_00014], 14);
constraint array_var_int_element(opponent_00014_00015, [opponent_00001_00015, opponent_00002_00015, opponent_00003_00015, opponent_00004_00015, opponent_00005_00015, opponent_00006_00015, opponent_00007_00015, opponent_00008_00015, opponent_00009_00015, opponent_00010_00015, opponent_00011_00015, opponent_00012_00015, opponent_00013_00015, opponent_00014_00015, opponent_00015_00015, opponent_00016_00015, opponent_00017_00015, opponent_00018_00015, opponent_00019_00015, opponent_00020_00015], 14);
constraint array_var_int_element(opponent_00014_00016, [opponent_00001_00016, opponent_00002_00016, opponent_00003_00016, opponent_00004_00016, opponent_00005_00016, opponent_00006_00016, opponent_00007_00016, opponent_00008_00016, opponent_00009_00016, opponent_00010_00016, opponent_00011_00016, opponent_00012_00016, opponent_00013_00016, opponent_00014_00016, opponent_00015_00016, opponent_00016_00016, opponent_00017_00016, opponent_00018_00016, opponent_00019_00016, opponent_00020_00016], 14);
constraint array_var_int_element(opponent_00014_00017, [opponent_00001_00017, opponent_00002_00017, opponent_00003_00017, opponent_00004_00017, opponent_00005_00017, opponent_00006_00017, opponent_00007_00017, opponent_00008_00017, opponent_00009_00017, opponent_00010_00017, opponent_00011_00017, opponent_00012_00017, opponent_00013_00017, opponent_00014_00017, opponent_00015_00017, opponent_00016_00017, opponent_00017_00017, opponent_00018_00017, opponent_00019_00017, opponent_00020_00017], 14);
constraint array_var_int_element(opponent_00014_00018, [opponent_00001_00018, opponent_00002_00018, opponent_00003_00018, opponent_00004_00018, opponent_00005_00018, opponent_00006_00018, opponent_00007_00018, opponent_00008_00018, opponent_00009_00018, opponent_00010_00018, opponent_00011_00018, opponent_00012_00018, opponent_00013_00018, opponent_00014_00018, opponent_00015_00018, opponent_00016_00018, opponent_00017_00018, opponent_00018_00018, opponent_00019_00018, opponent_00020_00018], 14);
constraint array_var_int_element(opponent_00014_00019, [opponent_00001_00019, opponent_00002_00019, opponent_00003_00019, opponent_00004_00019, opponent_00005_00019, opponent_00006_00019, opponent_00007_00019, opponent_00008_00019, opponent_00009_00019, opponent_00010_00019, opponent_00011_00019, opponent_00012_00019, opponent_00013_00019, opponent_00014_00019, opponent_00015_00019, opponent_00016_00019, opponent_00017_00019, opponent_00018_00019, opponent_00019_00019, opponent_00020_00019], 14);
constraint array_var_int_element(opponent_00015_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001, opponent_00015_00001, opponent_00016_00001, opponent_00017_00001, opponent_00018_00001, opponent_00019_00001, opponent_00020_00001], 15);
constraint array_var_int_element(opponent_00015_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002, opponent_00015_00002, opponent_00016_00002, opponent_00017_00002, opponent_00018_00002, opponent_00019_00002, opponent_00020_00002], 15);
constraint array_var_int_element(opponent_00015_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003, opponent_00015_00003, opponent_00016_00003, opponent_00017_00003, opponent_00018_00003, opponent_00019_00003, opponent_00020_00003], 15);
constraint array_var_int_element(opponent_00015_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004, opponent_00015_00004, opponent_00016_00004, opponent_00017_00004, opponent_00018_00004, opponent_00019_00004, opponent_00020_00004], 15);
constraint array_var_int_element(opponent_00015_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005, opponent_00015_00005, opponent_00016_00005, opponent_00017_00005, opponent_00018_00005, opponent_00019_00005, opponent_00020_00005], 15);
constraint array_var_int_element(opponent_00015_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006, opponent_00015_00006, opponent_00016_00006, opponent_00017_00006, opponent_00018_00006, opponent_00019_00006, opponent_00020_00006], 15);
constraint array_var_int_element(opponent_00015_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007, opponent_00015_00007, opponent_00016_00007, opponent_00017_00007, opponent_00018_00007, opponent_00019_00007, opponent_00020_00007], 15);
constraint array_var_int_element(opponent_00015_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008, opponent_00015_00008, opponent_00016_00008, opponent_00017_00008, opponent_00018_00008, opponent_00019_00008, opponent_00020_00008], 15);
constraint array_var_int_element(opponent_00015_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009, opponent_00015_00009, opponent_00016_00009, opponent_00017_00009, opponent_00018_00009, opponent_00019_00009, opponent_00020_00009], 15);
constraint array_var_int_element(opponent_00015_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010, opponent_00015_00010, opponent_00016_00010, opponent_00017_00010, opponent_00018_00010, opponent_00019_00010, opponent_00020_00010], 15);
constraint array_var_int_element(opponent_00015_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011, opponent_00015_00011, opponent_00016_00011, opponent_00017_00011, opponent_00018_00011, opponent_00019_00011, opponent_00020_00011], 15);
constraint array_var_int_element(opponent_00015_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012, opponent_00015_00012, opponent_00016_00012, opponent_00017_00012, opponent_00018_00012, opponent_00019_00012, opponent_00020_00012], 15);
constraint array_var_int_element(opponent_00015_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013, opponent_00015_00013, opponent_00016_00013, opponent_00017_00013, opponent_00018_00013, opponent_00019_00013, opponent_00020_00013], 15);
constraint array_var_int_element(opponent_00015_00014, [opponent_00001_00014, opponent_00002_00014, opponent_00003_00014, opponent_00004_00014, opponent_00005_00014, opponent_00006_00014, opponent_00007_00014, opponent_00008_00014, opponent_00009_00014, opponent_00010_00014, opponent_00011_00014, opponent_00012_00014, opponent_00013_00014, opponent_00014_00014, opponent_00015_00014, opponent_00016_00014, opponent_00017_00014, opponent_00018_00014, opponent_00019_00014, opponent_00020_00014], 15);
constraint array_var_int_element(opponent_00015_00015, [opponent_00001_00015, opponent_00002_00015, opponent_00003_00015, opponent_00004_00015, opponent_00005_00015, opponent_00006_00015, opponent_00007_00015, opponent_00008_00015, opponent_00009_00015, opponent_00010_00015, opponent_00011_00015, opponent_00012_00015, opponent_00013_00015, opponent_00014_00015, opponent_00015_00015, opponent_00016_00015, opponent_00017_00015, opponent_00018_00015, opponent_00019_00015, opponent_00020_00015], 15);
constraint array_var_int_element(opponent_00015_00016, [opponent_00001_00016, opponent_00002_00016, opponent_00003_00016, opponent_00004_00016, opponent_00005_00016, opponent_00006_00016, opponent_00007_00016, opponent_00008_00016, opponent_00009_00016, opponent_00010_00016, opponent_00011_00016, opponent_00012_00016, opponent_00013_00016, opponent_00014_00016, opponent_00015_00016, opponent_00016_00016, opponent_00017_00016, opponent_00018_00016, opponent_00019_00016, opponent_00020_00016], 15);
constraint array_var_int_element(opponent_00015_00017, [opponent_00001_00017, opponent_00002_00017, opponent_00003_00017, opponent_00004_00017, opponent_00005_00017, opponent_00006_00017, opponent_00007_00017, opponent_00008_00017, opponent_00009_00017, opponent_00010_00017, opponent_00011_00017, opponent_00012_00017, opponent_00013_00017, opponent_00014_00017, opponent_00015_00017, opponent_00016_00017, opponent_00017_00017, opponent_00018_00017, opponent_00019_00017, opponent_00020_00017], 15);
constraint array_var_int_element(opponent_00015_00018, [opponent_00001_00018, opponent_00002_00018, opponent_00003_00018, opponent_00004_00018, opponent_00005_00018, opponent_00006_00018, opponent_00007_00018, opponent_00008_00018, opponent_00009_00018, opponent_00010_00018, opponent_00011_00018, opponent_00012_00018, opponent_00013_00018, opponent_00014_00018, opponent_00015_00018, opponent_00016_00018, opponent_00017_00018, opponent_00018_00018, opponent_00019_00018, opponent_00020_00018], 15);
constraint array_var_int_element(opponent_00015_00019, [opponent_00001_00019, opponent_00002_00019, opponent_00003_00019, opponent_00004_00019, opponent_00005_00019, opponent_00006_00019, opponent_00007_00019, opponent_00008_00019, opponent_00009_00019, opponent_00010_00019, opponent_00011_00019, opponent_00012_00019, opponent_00013_00019, opponent_00014_00019, opponent_00015_00019, opponent_00016_00019, opponent_00017_00019, opponent_00018_00019, opponent_00019_00019, opponent_00020_00019], 15);
constraint array_var_int_element(opponent_00016_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001, opponent_00015_00001, opponent_00016_00001, opponent_00017_00001, opponent_00018_00001, opponent_00019_00001, opponent_00020_00001], 16);
constraint array_var_int_element(opponent_00016_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002, opponent_00015_00002, opponent_00016_00002, opponent_00017_00002, opponent_00018_00002, opponent_00019_00002, opponent_00020_00002], 16);
constraint array_var_int_element(opponent_00016_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003, opponent_00015_00003, opponent_00016_00003, opponent_00017_00003, opponent_00018_00003, opponent_00019_00003, opponent_00020_00003], 16);
constraint array_var_int_element(opponent_00016_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004, opponent_00015_00004, opponent_00016_00004, opponent_00017_00004, opponent_00018_00004, opponent_00019_00004, opponent_00020_00004], 16);
constraint array_var_int_element(opponent_00016_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005, opponent_00015_00005, opponent_00016_00005, opponent_00017_00005, opponent_00018_00005, opponent_00019_00005, opponent_00020_00005], 16);
constraint array_var_int_element(opponent_00016_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006, opponent_00015_00006, opponent_00016_00006, opponent_00017_00006, opponent_00018_00006, opponent_00019_00006, opponent_00020_00006], 16);
constraint array_var_int_element(opponent_00016_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007, opponent_00015_00007, opponent_00016_00007, opponent_00017_00007, opponent_00018_00007, opponent_00019_00007, opponent_00020_00007], 16);
constraint array_var_int_element(opponent_00016_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008, opponent_00015_00008, opponent_00016_00008, opponent_00017_00008, opponent_00018_00008, opponent_00019_00008, opponent_00020_00008], 16);
constraint array_var_int_element(opponent_00016_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009, opponent_00015_00009, opponent_00016_00009, opponent_00017_00009, opponent_00018_00009, opponent_00019_00009, opponent_00020_00009], 16);
constraint array_var_int_element(opponent_00016_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010, opponent_00015_00010, opponent_00016_00010, opponent_00017_00010, opponent_00018_00010, opponent_00019_00010, opponent_00020_00010], 16);
constraint array_var_int_element(opponent_00016_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011, opponent_00015_00011, opponent_00016_00011, opponent_00017_00011, opponent_00018_00011, opponent_00019_00011, opponent_00020_00011], 16);
constraint array_var_int_element(opponent_00016_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012, opponent_00015_00012, opponent_00016_00012, opponent_00017_00012, opponent_00018_00012, opponent_00019_00012, opponent_00020_00012], 16);
constraint array_var_int_element(opponent_00016_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013, opponent_00015_00013, opponent_00016_00013, opponent_00017_00013, opponent_00018_00013, opponent_00019_00013, opponent_00020_00013], 16);
constraint array_var_int_element(opponent_00016_00014, [opponent_00001_00014, opponent_00002_00014, opponent_00003_00014, opponent_00004_00014, opponent_00005_00014, opponent_00006_00014, opponent_00007_00014, opponent_00008_00014, opponent_00009_00014, opponent_00010_00014, opponent_00011_00014, opponent_00012_00014, opponent_00013_00014, opponent_00014_00014, opponent_00015_00014, opponent_00016_00014, opponent_00017_00014, opponent_00018_00014, opponent_00019_00014, opponent_00020_00014], 16);
constraint array_var_int_element(opponent_00016_00015, [opponent_00001_00015, opponent_00002_00015, opponent_00003_00015, opponent_00004_00015, opponent_00005_00015, opponent_00006_00015, opponent_00007_00015, opponent_00008_00015, opponent_00009_00015, opponent_00010_00015, opponent_00011_00015, opponent_00012_00015, opponent_00013_00015, opponent_00014_00015, opponent_00015_00015, opponent_00016_00015, opponent_00017_00015, opponent_00018_00015, opponent_00019_00015, opponent_00020_00015], 16);
constraint array_var_int_element(opponent_00016_00016, [opponent_00001_00016, opponent_00002_00016, opponent_00003_00016, opponent_00004_00016, opponent_00005_00016, opponent_00006_00016, opponent_00007_00016, opponent_00008_00016, opponent_00009_00016, opponent_00010_00016, opponent_00011_00016, opponent_00012_00016, opponent_00013_00016, opponent_00014_00016, opponent_00015_00016, opponent_00016_00016, opponent_00017_00016, opponent_00018_00016, opponent_00019_00016, opponent_00020_00016], 16);
constraint array_var_int_element(opponent_00016_00017, [opponent_00001_00017, opponent_00002_00017, opponent_00003_00017, opponent_00004_00017, opponent_00005_00017, opponent_00006_00017, opponent_00007_00017, opponent_00008_00017, opponent_00009_00017, opponent_00010_00017, opponent_00011_00017, opponent_00012_00017, opponent_00013_00017, opponent_00014_00017, opponent_00015_00017, opponent_00016_00017, opponent_00017_00017, opponent_00018_00017, opponent_00019_00017, opponent_00020_00017], 16);
constraint array_var_int_element(opponent_00016_00018, [opponent_00001_00018, opponent_00002_00018, opponent_00003_00018, opponent_00004_00018, opponent_00005_00018, opponent_00006_00018, opponent_00007_00018, opponent_00008_00018, opponent_00009_00018, opponent_00010_00018, opponent_00011_00018, opponent_00012_00018, opponent_00013_00018, opponent_00014_00018, opponent_00015_00018, opponent_00016_00018, opponent_00017_00018, opponent_00018_00018, opponent_00019_00018, opponent_00020_00018], 16);
constraint array_var_int_element(opponent_00016_00019, [opponent_00001_00019, opponent_00002_00019, opponent_00003_00019, opponent_00004_00019, opponent_00005_00019, opponent_00006_00019, opponent_00007_00019, opponent_00008_00019, opponent_00009_00019, opponent_00010_00019, opponent_00011_00019, opponent_00012_00019, opponent_00013_00019, opponent_00014_00019, opponent_00015_00019, opponent_00016_00019, opponent_00017_00019, opponent_00018_00019, opponent_00019_00019, opponent_00020_00019], 16);
constraint array_var_int_element(opponent_00017_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001, opponent_00015_00001, opponent_00016_00001, opponent_00017_00001, opponent_00018_00001, opponent_00019_00001, opponent_00020_00001], 17);
constraint array_var_int_element(opponent_00017_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002, opponent_00015_00002, opponent_00016_00002, opponent_00017_00002, opponent_00018_00002, opponent_00019_00002, opponent_00020_00002], 17);
constraint array_var_int_element(opponent_00017_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003, opponent_00015_00003, opponent_00016_00003, opponent_00017_00003, opponent_00018_00003, opponent_00019_00003, opponent_00020_00003], 17);
constraint array_var_int_element(opponent_00017_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004, opponent_00015_00004, opponent_00016_00004, opponent_00017_00004, opponent_00018_00004, opponent_00019_00004, opponent_00020_00004], 17);
constraint array_var_int_element(opponent_00017_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005, opponent_00015_00005, opponent_00016_00005, opponent_00017_00005, opponent_00018_00005, opponent_00019_00005, opponent_00020_00005], 17);
constraint array_var_int_element(opponent_00017_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006, opponent_00015_00006, opponent_00016_00006, opponent_00017_00006, opponent_00018_00006, opponent_00019_00006, opponent_00020_00006], 17);
constraint array_var_int_element(opponent_00017_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007, opponent_00015_00007, opponent_00016_00007, opponent_00017_00007, opponent_00018_00007, opponent_00019_00007, opponent_00020_00007], 17);
constraint array_var_int_element(opponent_00017_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008, opponent_00015_00008, opponent_00016_00008, opponent_00017_00008, opponent_00018_00008, opponent_00019_00008, opponent_00020_00008], 17);
constraint array_var_int_element(opponent_00017_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009, opponent_00015_00009, opponent_00016_00009, opponent_00017_00009, opponent_00018_00009, opponent_00019_00009, opponent_00020_00009], 17);
constraint array_var_int_element(opponent_00017_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010, opponent_00015_00010, opponent_00016_00010, opponent_00017_00010, opponent_00018_00010, opponent_00019_00010, opponent_00020_00010], 17);
constraint array_var_int_element(opponent_00017_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011, opponent_00015_00011, opponent_00016_00011, opponent_00017_00011, opponent_00018_00011, opponent_00019_00011, opponent_00020_00011], 17);
constraint array_var_int_element(opponent_00017_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012, opponent_00015_00012, opponent_00016_00012, opponent_00017_00012, opponent_00018_00012, opponent_00019_00012, opponent_00020_00012], 17);
constraint array_var_int_element(opponent_00017_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013, opponent_00015_00013, opponent_00016_00013, opponent_00017_00013, opponent_00018_00013, opponent_00019_00013, opponent_00020_00013], 17);
constraint array_var_int_element(opponent_00017_00014, [opponent_00001_00014, opponent_00002_00014, opponent_00003_00014, opponent_00004_00014, opponent_00005_00014, opponent_00006_00014, opponent_00007_00014, opponent_00008_00014, opponent_00009_00014, opponent_00010_00014, opponent_00011_00014, opponent_00012_00014, opponent_00013_00014, opponent_00014_00014, opponent_00015_00014, opponent_00016_00014, opponent_00017_00014, opponent_00018_00014, opponent_00019_00014, opponent_00020_00014], 17);
constraint array_var_int_element(opponent_00017_00015, [opponent_00001_00015, opponent_00002_00015, opponent_00003_00015, opponent_00004_00015, opponent_00005_00015, opponent_00006_00015, opponent_00007_00015, opponent_00008_00015, opponent_00009_00015, opponent_00010_00015, opponent_00011_00015, opponent_00012_00015, opponent_00013_00015, opponent_00014_00015, opponent_00015_00015, opponent_00016_00015, opponent_00017_00015, opponent_00018_00015, opponent_00019_00015, opponent_00020_00015], 17);
constraint array_var_int_element(opponent_00017_00016, [opponent_00001_00016, opponent_00002_00016, opponent_00003_00016, opponent_00004_00016, opponent_00005_00016, opponent_00006_00016, opponent_00007_00016, opponent_00008_00016, opponent_00009_00016, opponent_00010_00016, opponent_00011_00016, opponent_00012_00016, opponent_00013_00016, opponent_00014_00016, opponent_00015_00016, opponent_00016_00016, opponent_00017_00016, opponent_00018_00016, opponent_00019_00016, opponent_00020_00016], 17);
constraint array_var_int_element(opponent_00017_00017, [opponent_00001_00017, opponent_00002_00017, opponent_00003_00017, opponent_00004_00017, opponent_00005_00017, opponent_00006_00017, opponent_00007_00017, opponent_00008_00017, opponent_00009_00017, opponent_00010_00017, opponent_00011_00017, opponent_00012_00017, opponent_00013_00017, opponent_00014_00017, opponent_00015_00017, opponent_00016_00017, opponent_00017_00017, opponent_00018_00017, opponent_00019_00017, opponent_00020_00017], 17);
constraint array_var_int_element(opponent_00017_00018, [opponent_00001_00018, opponent_00002_00018, opponent_00003_00018, opponent_00004_00018, opponent_00005_00018, opponent_00006_00018, opponent_00007_00018, opponent_00008_00018, opponent_00009_00018, opponent_00010_00018, opponent_00011_00018, opponent_00012_00018, opponent_00013_00018, opponent_00014_00018, opponent_00015_00018, opponent_00016_00018, opponent_00017_00018, opponent_00018_00018, opponent_00019_00018, opponent_00020_00018], 17);
constraint array_var_int_element(opponent_00017_00019, [opponent_00001_00019, opponent_00002_00019, opponent_00003_00019, opponent_00004_00019, opponent_00005_00019, opponent_00006_00019, opponent_00007_00019, opponent_00008_00019, opponent_00009_00019, opponent_00010_00019, opponent_00011_00019, opponent_00012_00019, opponent_00013_00019, opponent_00014_00019, opponent_00015_00019, opponent_00016_00019, opponent_00017_00019, opponent_00018_00019, opponent_00019_00019, opponent_00020_00019], 17);
constraint array_var_int_element(opponent_00018_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001, opponent_00015_00001, opponent_00016_00001, opponent_00017_00001, opponent_00018_00001, opponent_00019_00001, opponent_00020_00001], 18);
constraint array_var_int_element(opponent_00018_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002, opponent_00015_00002, opponent_00016_00002, opponent_00017_00002, opponent_00018_00002, opponent_00019_00002, opponent_00020_00002], 18);
constraint array_var_int_element(opponent_00018_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003, opponent_00015_00003, opponent_00016_00003, opponent_00017_00003, opponent_00018_00003, opponent_00019_00003, opponent_00020_00003], 18);
constraint array_var_int_element(opponent_00018_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004, opponent_00015_00004, opponent_00016_00004, opponent_00017_00004, opponent_00018_00004, opponent_00019_00004, opponent_00020_00004], 18);
constraint array_var_int_element(opponent_00018_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005, opponent_00015_00005, opponent_00016_00005, opponent_00017_00005, opponent_00018_00005, opponent_00019_00005, opponent_00020_00005], 18);
constraint array_var_int_element(opponent_00018_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006, opponent_00015_00006, opponent_00016_00006, opponent_00017_00006, opponent_00018_00006, opponent_00019_00006, opponent_00020_00006], 18);
constraint array_var_int_element(opponent_00018_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007, opponent_00015_00007, opponent_00016_00007, opponent_00017_00007, opponent_00018_00007, opponent_00019_00007, opponent_00020_00007], 18);
constraint array_var_int_element(opponent_00018_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008, opponent_00015_00008, opponent_00016_00008, opponent_00017_00008, opponent_00018_00008, opponent_00019_00008, opponent_00020_00008], 18);
constraint array_var_int_element(opponent_00018_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009, opponent_00015_00009, opponent_00016_00009, opponent_00017_00009, opponent_00018_00009, opponent_00019_00009, opponent_00020_00009], 18);
constraint array_var_int_element(opponent_00018_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010, opponent_00015_00010, opponent_00016_00010, opponent_00017_00010, opponent_00018_00010, opponent_00019_00010, opponent_00020_00010], 18);
constraint array_var_int_element(opponent_00018_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011, opponent_00015_00011, opponent_00016_00011, opponent_00017_00011, opponent_00018_00011, opponent_00019_00011, opponent_00020_00011], 18);
constraint array_var_int_element(opponent_00018_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012, opponent_00015_00012, opponent_00016_00012, opponent_00017_00012, opponent_00018_00012, opponent_00019_00012, opponent_00020_00012], 18);
constraint array_var_int_element(opponent_00018_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013, opponent_00015_00013, opponent_00016_00013, opponent_00017_00013, opponent_00018_00013, opponent_00019_00013, opponent_00020_00013], 18);
constraint array_var_int_element(opponent_00018_00014, [opponent_00001_00014, opponent_00002_00014, opponent_00003_00014, opponent_00004_00014, opponent_00005_00014, opponent_00006_00014, opponent_00007_00014, opponent_00008_00014, opponent_00009_00014, opponent_00010_00014, opponent_00011_00014, opponent_00012_00014, opponent_00013_00014, opponent_00014_00014, opponent_00015_00014, opponent_00016_00014, opponent_00017_00014, opponent_00018_00014, opponent_00019_00014, opponent_00020_00014], 18);
constraint array_var_int_element(opponent_00018_00015, [opponent_00001_00015, opponent_00002_00015, opponent_00003_00015, opponent_00004_00015, opponent_00005_00015, opponent_00006_00015, opponent_00007_00015, opponent_00008_00015, opponent_00009_00015, opponent_00010_00015, opponent_00011_00015, opponent_00012_00015, opponent_00013_00015, opponent_00014_00015, opponent_00015_00015, opponent_00016_00015, opponent_00017_00015, opponent_00018_00015, opponent_00019_00015, opponent_00020_00015], 18);
constraint array_var_int_element(opponent_00018_00016, [opponent_00001_00016, opponent_00002_00016, opponent_00003_00016, opponent_00004_00016, opponent_00005_00016, opponent_00006_00016, opponent_00007_00016, opponent_00008_00016, opponent_00009_00016, opponent_00010_00016, opponent_00011_00016, opponent_00012_00016, opponent_00013_00016, opponent_00014_00016, opponent_00015_00016, opponent_00016_00016, opponent_00017_00016, opponent_00018_00016, opponent_00019_00016, opponent_00020_00016], 18);
constraint array_var_int_element(opponent_00018_00017, [opponent_00001_00017, opponent_00002_00017, opponent_00003_00017, opponent_00004_00017, opponent_00005_00017, opponent_00006_00017, opponent_00007_00017, opponent_00008_00017, opponent_00009_00017, opponent_00010_00017, opponent_00011_00017, opponent_00012_00017, opponent_00013_00017, opponent_00014_00017, opponent_00015_00017, opponent_00016_00017, opponent_00017_00017, opponent_00018_00017, opponent_00019_00017, opponent_00020_00017], 18);
constraint array_var_int_element(opponent_00018_00018, [opponent_00001_00018, opponent_00002_00018, opponent_00003_00018, opponent_00004_00018, opponent_00005_00018, opponent_00006_00018, opponent_00007_00018, opponent_00008_00018, opponent_00009_00018, opponent_00010_00018, opponent_00011_00018, opponent_00012_00018, opponent_00013_00018, opponent_00014_00018, opponent_00015_00018, opponent_00016_00018, opponent_00017_00018, opponent_00018_00018, opponent_00019_00018, opponent_00020_00018], 18);
constraint array_var_int_element(opponent_00018_00019, [opponent_00001_00019, opponent_00002_00019, opponent_00003_00019, opponent_00004_00019, opponent_00005_00019, opponent_00006_00019, opponent_00007_00019, opponent_00008_00019, opponent_00009_00019, opponent_00010_00019, opponent_00011_00019, opponent_00012_00019, opponent_00013_00019, opponent_00014_00019, opponent_00015_00019, opponent_00016_00019, opponent_00017_00019, opponent_00018_00019, opponent_00019_00019, opponent_00020_00019], 18);
constraint array_var_int_element(opponent_00019_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001, opponent_00015_00001, opponent_00016_00001, opponent_00017_00001, opponent_00018_00001, opponent_00019_00001, opponent_00020_00001], 19);
constraint array_var_int_element(opponent_00019_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002, opponent_00015_00002, opponent_00016_00002, opponent_00017_00002, opponent_00018_00002, opponent_00019_00002, opponent_00020_00002], 19);
constraint array_var_int_element(opponent_00019_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003, opponent_00015_00003, opponent_00016_00003, opponent_00017_00003, opponent_00018_00003, opponent_00019_00003, opponent_00020_00003], 19);
constraint array_var_int_element(opponent_00019_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004, opponent_00015_00004, opponent_00016_00004, opponent_00017_00004, opponent_00018_00004, opponent_00019_00004, opponent_00020_00004], 19);
constraint array_var_int_element(opponent_00019_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005, opponent_00015_00005, opponent_00016_00005, opponent_00017_00005, opponent_00018_00005, opponent_00019_00005, opponent_00020_00005], 19);
constraint array_var_int_element(opponent_00019_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006, opponent_00015_00006, opponent_00016_00006, opponent_00017_00006, opponent_00018_00006, opponent_00019_00006, opponent_00020_00006], 19);
constraint array_var_int_element(opponent_00019_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007, opponent_00015_00007, opponent_00016_00007, opponent_00017_00007, opponent_00018_00007, opponent_00019_00007, opponent_00020_00007], 19);
constraint array_var_int_element(opponent_00019_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008, opponent_00015_00008, opponent_00016_00008, opponent_00017_00008, opponent_00018_00008, opponent_00019_00008, opponent_00020_00008], 19);
constraint array_var_int_element(opponent_00019_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009, opponent_00015_00009, opponent_00016_00009, opponent_00017_00009, opponent_00018_00009, opponent_00019_00009, opponent_00020_00009], 19);
constraint array_var_int_element(opponent_00019_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010, opponent_00015_00010, opponent_00016_00010, opponent_00017_00010, opponent_00018_00010, opponent_00019_00010, opponent_00020_00010], 19);
constraint array_var_int_element(opponent_00019_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011, opponent_00015_00011, opponent_00016_00011, opponent_00017_00011, opponent_00018_00011, opponent_00019_00011, opponent_00020_00011], 19);
constraint array_var_int_element(opponent_00019_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012, opponent_00015_00012, opponent_00016_00012, opponent_00017_00012, opponent_00018_00012, opponent_00019_00012, opponent_00020_00012], 19);
constraint array_var_int_element(opponent_00019_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013, opponent_00015_00013, opponent_00016_00013, opponent_00017_00013, opponent_00018_00013, opponent_00019_00013, opponent_00020_00013], 19);
constraint array_var_int_element(opponent_00019_00014, [opponent_00001_00014, opponent_00002_00014, opponent_00003_00014, opponent_00004_00014, opponent_00005_00014, opponent_00006_00014, opponent_00007_00014, opponent_00008_00014, opponent_00009_00014, opponent_00010_00014, opponent_00011_00014, opponent_00012_00014, opponent_00013_00014, opponent_00014_00014, opponent_00015_00014, opponent_00016_00014, opponent_00017_00014, opponent_00018_00014, opponent_00019_00014, opponent_00020_00014], 19);
constraint array_var_int_element(opponent_00019_00015, [opponent_00001_00015, opponent_00002_00015, opponent_00003_00015, opponent_00004_00015, opponent_00005_00015, opponent_00006_00015, opponent_00007_00015, opponent_00008_00015, opponent_00009_00015, opponent_00010_00015, opponent_00011_00015, opponent_00012_00015, opponent_00013_00015, opponent_00014_00015, opponent_00015_00015, opponent_00016_00015, opponent_00017_00015, opponent_00018_00015, opponent_00019_00015, opponent_00020_00015], 19);
constraint array_var_int_element(opponent_00019_00016, [opponent_00001_00016, opponent_00002_00016, opponent_00003_00016, opponent_00004_00016, opponent_00005_00016, opponent_00006_00016, opponent_00007_00016, opponent_00008_00016, opponent_00009_00016, opponent_00010_00016, opponent_00011_00016, opponent_00012_00016, opponent_00013_00016, opponent_00014_00016, opponent_00015_00016, opponent_00016_00016, opponent_00017_00016, opponent_00018_00016, opponent_00019_00016, opponent_00020_00016], 19);
constraint array_var_int_element(opponent_00019_00017, [opponent_00001_00017, opponent_00002_00017, opponent_00003_00017, opponent_00004_00017, opponent_00005_00017, opponent_00006_00017, opponent_00007_00017, opponent_00008_00017, opponent_00009_00017, opponent_00010_00017, opponent_00011_00017, opponent_00012_00017, opponent_00013_00017, opponent_00014_00017, opponent_00015_00017, opponent_00016_00017, opponent_00017_00017, opponent_00018_00017, opponent_00019_00017, opponent_00020_00017], 19);
constraint array_var_int_element(opponent_00019_00018, [opponent_00001_00018, opponent_00002_00018, opponent_00003_00018, opponent_00004_00018, opponent_00005_00018, opponent_00006_00018, opponent_00007_00018, opponent_00008_00018, opponent_00009_00018, opponent_00010_00018, opponent_00011_00018, opponent_00012_00018, opponent_00013_00018, opponent_00014_00018, opponent_00015_00018, opponent_00016_00018, opponent_00017_00018, opponent_00018_00018, opponent_00019_00018, opponent_00020_00018], 19);
constraint array_var_int_element(opponent_00019_00019, [opponent_00001_00019, opponent_00002_00019, opponent_00003_00019, opponent_00004_00019, opponent_00005_00019, opponent_00006_00019, opponent_00007_00019, opponent_00008_00019, opponent_00009_00019, opponent_00010_00019, opponent_00011_00019, opponent_00012_00019, opponent_00013_00019, opponent_00014_00019, opponent_00015_00019, opponent_00016_00019, opponent_00017_00019, opponent_00018_00019, opponent_00019_00019, opponent_00020_00019], 19);
constraint array_var_int_element(aux1141, [opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001, opponent_00015_00001, opponent_00016_00001, opponent_00017_00001, opponent_00018_00001, opponent_00019_00001], 20);
constraint array_var_int_element(opponent_00020_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002, opponent_00015_00002, opponent_00016_00002, opponent_00017_00002, opponent_00018_00002, opponent_00019_00002], 20);
constraint array_var_int_element(opponent_00020_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003, opponent_00015_00003, opponent_00016_00003, opponent_00017_00003, opponent_00018_00003, opponent_00019_00003], 20);
constraint array_var_int_element(opponent_00020_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004, opponent_00015_00004, opponent_00016_00004, opponent_00017_00004, opponent_00018_00004, opponent_00019_00004], 20);
constraint array_var_int_element(opponent_00020_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005, opponent_00015_00005, opponent_00016_00005, opponent_00017_00005, opponent_00018_00005, opponent_00019_00005], 20);
constraint array_var_int_element(opponent_00020_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006, opponent_00015_00006, opponent_00016_00006, opponent_00017_00006, opponent_00018_00006, opponent_00019_00006], 20);
constraint array_var_int_element(opponent_00020_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007, opponent_00015_00007, opponent_00016_00007, opponent_00017_00007, opponent_00018_00007, opponent_00019_00007], 20);
constraint array_var_int_element(opponent_00020_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008, opponent_00015_00008, opponent_00016_00008, opponent_00017_00008, opponent_00018_00008, opponent_00019_00008], 20);
constraint array_var_int_element(opponent_00020_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009, opponent_00015_00009, opponent_00016_00009, opponent_00017_00009, opponent_00018_00009, opponent_00019_00009], 20);
constraint array_var_int_element(opponent_00020_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010, opponent_00015_00010, opponent_00016_00010, opponent_00017_00010, opponent_00018_00010, opponent_00019_00010], 20);
constraint array_var_int_element(opponent_00020_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011, opponent_00015_00011, opponent_00016_00011, opponent_00017_00011, opponent_00018_00011, opponent_00019_00011], 20);
constraint array_var_int_element(opponent_00020_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012, opponent_00015_00012, opponent_00016_00012, opponent_00017_00012, opponent_00018_00012, opponent_00019_00012], 20);
constraint array_var_int_element(opponent_00020_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013, opponent_00015_00013, opponent_00016_00013, opponent_00017_00013, opponent_00018_00013, opponent_00019_00013], 20);
constraint array_var_int_element(opponent_00020_00014, [opponent_00001_00014, opponent_00002_00014, opponent_00003_00014, opponent_00004_00014, opponent_00005_00014, opponent_00006_00014, opponent_00007_00014, opponent_00008_00014, opponent_00009_00014, opponent_00010_00014, opponent_00011_00014, opponent_00012_00014, opponent_00013_00014, opponent_00014_00014, opponent_00015_00014, opponent_00016_00014, opponent_00017_00014, opponent_00018_00014, opponent_00019_00014], 20);
constraint array_var_int_element(opponent_00020_00015, [opponent_00001_00015, opponent_00002_00015, opponent_00003_00015, opponent_00004_00015, opponent_00005_00015, opponent_00006_00015, opponent_00007_00015, opponent_00008_00015, opponent_00009_00015, opponent_00010_00015, opponent_00011_00015, opponent_00012_00015, opponent_00013_00015, opponent_00014_00015, opponent_00015_00015, opponent_00016_00015, opponent_00017_00015, opponent_00018_00015, opponent_00019_00015], 20);
constraint array_var_int_element(opponent_00020_00016, [opponent_00001_00016, opponent_00002_00016, opponent_00003_00016, opponent_00004_00016, opponent_00005_00016, opponent_00006_00016, opponent_00007_00016, opponent_00008_00016, opponent_00009_00016, opponent_00010_00016, opponent_00011_00016, opponent_00012_00016, opponent_00013_00016, opponent_00014_00016, opponent_00015_00016, opponent_00016_00016, opponent_00017_00016, opponent_00018_00016, opponent_00019_00016], 20);
constraint array_var_int_element(opponent_00020_00017, [opponent_00001_00017, opponent_00002_00017, opponent_00003_00017, opponent_00004_00017, opponent_00005_00017, opponent_00006_00017, opponent_00007_00017, opponent_00008_00017, opponent_00009_00017, opponent_00010_00017, opponent_00011_00017, opponent_00012_00017, opponent_00013_00017, opponent_00014_00017, opponent_00015_00017, opponent_00016_00017, opponent_00017_00017, opponent_00018_00017, opponent_00019_00017], 20);
constraint array_var_int_element(opponent_00020_00018, [opponent_00001_00018, opponent_00002_00018, opponent_00003_00018, opponent_00004_00018, opponent_00005_00018, opponent_00006_00018, opponent_00007_00018, opponent_00008_00018, opponent_00009_00018, opponent_00010_00018, opponent_00011_00018, opponent_00012_00018, opponent_00013_00018, opponent_00014_00018, opponent_00015_00018, opponent_00016_00018, opponent_00017_00018, opponent_00018_00018, opponent_00019_00018], 20);
constraint array_var_int_element(opponent_00020_00019, [opponent_00001_00019, opponent_00002_00019, opponent_00003_00019, opponent_00004_00019, opponent_00005_00019, opponent_00006_00019, opponent_00007_00019, opponent_00008_00019, opponent_00009_00019, opponent_00010_00019, opponent_00011_00019, opponent_00012_00019, opponent_00013_00019, opponent_00014_00019, opponent_00015_00019, opponent_00016_00019, opponent_00017_00019, opponent_00018_00019, opponent_00019_00019], 20);
constraint all_different_int([opponent_00002_00001, opponent_00002_00002, opponent_00002_00003, opponent_00002_00004, opponent_00002_00005, opponent_00002_00006, opponent_00002_00007, opponent_00002_00008, opponent_00002_00009, opponent_00002_00010, opponent_00002_00011, opponent_00002_00012, opponent_00002_00013, opponent_00002_00014, opponent_00002_00015, opponent_00002_00016, opponent_00002_00017, opponent_00002_00018, opponent_00002_00019])::domain;
constraint all_different_int([opponent_00003_00001, opponent_00003_00002, opponent_00003_00003, opponent_00003_00004, opponent_00003_00005, opponent_00003_00006, opponent_00003_00007, opponent_00003_00008, opponent_00003_00009, opponent_00003_00010, opponent_00003_00011, opponent_00003_00012, opponent_00003_00013, opponent_00003_00014, opponent_00003_00015, opponent_00003_00016, opponent_00003_00017, opponent_00003_00018, opponent_00003_00019])::domain;
constraint all_different_int([opponent_00004_00001, opponent_00004_00002, opponent_00004_00003, opponent_00004_00004, opponent_00004_00005, opponent_00004_00006, opponent_00004_00007, opponent_00004_00008, opponent_00004_00009, opponent_00004_00010, opponent_00004_00011, opponent_00004_00012, opponent_00004_00013, opponent_00004_00014, opponent_00004_00015, opponent_00004_00016, opponent_00004_00017, opponent_00004_00018, opponent_00004_00019])::domain;
constraint all_different_int([opponent_00005_00001, opponent_00005_00002, opponent_00005_00003, opponent_00005_00004, opponent_00005_00005, opponent_00005_00006, opponent_00005_00007, opponent_00005_00008, opponent_00005_00009, opponent_00005_00010, opponent_00005_00011, opponent_00005_00012, opponent_00005_00013, opponent_00005_00014, opponent_00005_00015, opponent_00005_00016, opponent_00005_00017, opponent_00005_00018, opponent_00005_00019])::domain;
constraint all_different_int([opponent_00006_00001, opponent_00006_00002, opponent_00006_00003, opponent_00006_00004, opponent_00006_00005, opponent_00006_00006, opponent_00006_00007, opponent_00006_00008, opponent_00006_00009, opponent_00006_00010, opponent_00006_00011, opponent_00006_00012, opponent_00006_00013, opponent_00006_00014, opponent_00006_00015, opponent_00006_00016, opponent_00006_00017, opponent_00006_00018, opponent_00006_00019])::domain;
constraint all_different_int([opponent_00007_00001, opponent_00007_00002, opponent_00007_00003, opponent_00007_00004, opponent_00007_00005, opponent_00007_00006, opponent_00007_00007, opponent_00007_00008, opponent_00007_00009, opponent_00007_00010, opponent_00007_00011, opponent_00007_00012, opponent_00007_00013, opponent_00007_00014, opponent_00007_00015, opponent_00007_00016, opponent_00007_00017, opponent_00007_00018, opponent_00007_00019])::domain;
constraint all_different_int([opponent_00008_00001, opponent_00008_00002, opponent_00008_00003, opponent_00008_00004, opponent_00008_00005, opponent_00008_00006, opponent_00008_00007, opponent_00008_00008, opponent_00008_00009, opponent_00008_00010, opponent_00008_00011, opponent_00008_00012, opponent_00008_00013, opponent_00008_00014, opponent_00008_00015, opponent_00008_00016, opponent_00008_00017, opponent_00008_00018, opponent_00008_00019])::domain;
constraint all_different_int([opponent_00009_00001, opponent_00009_00002, opponent_00009_00003, opponent_00009_00004, opponent_00009_00005, opponent_00009_00006, opponent_00009_00007, opponent_00009_00008, opponent_00009_00009, opponent_00009_00010, opponent_00009_00011, opponent_00009_00012, opponent_00009_00013, opponent_00009_00014, opponent_00009_00015, opponent_00009_00016, opponent_00009_00017, opponent_00009_00018, opponent_00009_00019])::domain;
constraint all_different_int([opponent_00010_00001, opponent_00010_00002, opponent_00010_00003, opponent_00010_00004, opponent_00010_00005, opponent_00010_00006, opponent_00010_00007, opponent_00010_00008, opponent_00010_00009, opponent_00010_00010, opponent_00010_00011, opponent_00010_00012, opponent_00010_00013, opponent_00010_00014, opponent_00010_00015, opponent_00010_00016, opponent_00010_00017, opponent_00010_00018, opponent_00010_00019])::domain;
constraint all_different_int([opponent_00011_00001, opponent_00011_00002, opponent_00011_00003, opponent_00011_00004, opponent_00011_00005, opponent_00011_00006, opponent_00011_00007, opponent_00011_00008, opponent_00011_00009, opponent_00011_00010, opponent_00011_00011, opponent_00011_00012, opponent_00011_00013, opponent_00011_00014, opponent_00011_00015, opponent_00011_00016, opponent_00011_00017, opponent_00011_00018, opponent_00011_00019])::domain;
constraint all_different_int([opponent_00012_00001, opponent_00012_00002, opponent_00012_00003, opponent_00012_00004, opponent_00012_00005, opponent_00012_00006, opponent_00012_00007, opponent_00012_00008, opponent_00012_00009, opponent_00012_00010, opponent_00012_00011, opponent_00012_00012, opponent_00012_00013, opponent_00012_00014, opponent_00012_00015, opponent_00012_00016, opponent_00012_00017, opponent_00012_00018, opponent_00012_00019])::domain;
constraint all_different_int([opponent_00013_00001, opponent_00013_00002, opponent_00013_00003, opponent_00013_00004, opponent_00013_00005, opponent_00013_00006, opponent_00013_00007, opponent_00013_00008, opponent_00013_00009, opponent_00013_00010, opponent_00013_00011, opponent_00013_00012, opponent_00013_00013, opponent_00013_00014, opponent_00013_00015, opponent_00013_00016, opponent_00013_00017, opponent_00013_00018, opponent_00013_00019])::domain;
constraint all_different_int([opponent_00014_00001, opponent_00014_00002, opponent_00014_00003, opponent_00014_00004, opponent_00014_00005, opponent_00014_00006, opponent_00014_00007, opponent_00014_00008, opponent_00014_00009, opponent_00014_00010, opponent_00014_00011, opponent_00014_00012, opponent_00014_00013, opponent_00014_00014, opponent_00014_00015, opponent_00014_00016, opponent_00014_00017, opponent_00014_00018, opponent_00014_00019])::domain;
constraint all_different_int([opponent_00015_00001, opponent_00015_00002, opponent_00015_00003, opponent_00015_00004, opponent_00015_00005, opponent_00015_00006, opponent_00015_00007, opponent_00015_00008, opponent_00015_00009, opponent_00015_00010, opponent_00015_00011, opponent_00015_00012, opponent_00015_00013, opponent_00015_00014, opponent_00015_00015, opponent_00015_00016, opponent_00015_00017, opponent_00015_00018, opponent_00015_00019])::domain;
constraint all_different_int([opponent_00016_00001, opponent_00016_00002, opponent_00016_00003, opponent_00016_00004, opponent_00016_00005, opponent_00016_00006, opponent_00016_00007, opponent_00016_00008, opponent_00016_00009, opponent_00016_00010, opponent_00016_00011, opponent_00016_00012, opponent_00016_00013, opponent_00016_00014, opponent_00016_00015, opponent_00016_00016, opponent_00016_00017, opponent_00016_00018, opponent_00016_00019])::domain;
constraint all_different_int([opponent_00017_00001, opponent_00017_00002, opponent_00017_00003, opponent_00017_00004, opponent_00017_00005, opponent_00017_00006, opponent_00017_00007, opponent_00017_00008, opponent_00017_00009, opponent_00017_00010, opponent_00017_00011, opponent_00017_00012, opponent_00017_00013, opponent_00017_00014, opponent_00017_00015, opponent_00017_00016, opponent_00017_00017, opponent_00017_00018, opponent_00017_00019])::domain;
constraint all_different_int([opponent_00018_00001, opponent_00018_00002, opponent_00018_00003, opponent_00018_00004, opponent_00018_00005, opponent_00018_00006, opponent_00018_00007, opponent_00018_00008, opponent_00018_00009, opponent_00018_00010, opponent_00018_00011, opponent_00018_00012, opponent_00018_00013, opponent_00018_00014, opponent_00018_00015, opponent_00018_00016, opponent_00018_00017, opponent_00018_00018, opponent_00018_00019])::domain;
constraint all_different_int([opponent_00019_00001, opponent_00019_00002, opponent_00019_00003, opponent_00019_00004, opponent_00019_00005, opponent_00019_00006, opponent_00019_00007, opponent_00019_00008, opponent_00019_00009, opponent_00019_00010, opponent_00019_00011, opponent_00019_00012, opponent_00019_00013, opponent_00019_00014, opponent_00019_00015, opponent_00019_00016, opponent_00019_00017, opponent_00019_00018, opponent_00019_00019])::domain;
constraint all_different_int([opponent_00020_00001, opponent_00020_00002, opponent_00020_00003, opponent_00020_00004, opponent_00020_00005, opponent_00020_00006, opponent_00020_00007, opponent_00020_00008, opponent_00020_00009, opponent_00020_00010, opponent_00020_00011, opponent_00020_00012, opponent_00020_00013, opponent_00020_00014, opponent_00020_00015, opponent_00020_00016, opponent_00020_00017, opponent_00020_00018, opponent_00020_00019])::domain;
constraint all_different_int([opponent_00001_00001, opponent_00014_00001, opponent_00006_00001, opponent_00019_00001, opponent_00010_00001, opponent_00002_00001, opponent_00015_00001, opponent_00007_00001, opponent_00011_00001, opponent_00003_00001, opponent_00016_00001, opponent_00008_00001, opponent_00020_00001, opponent_00012_00001, opponent_00004_00001, opponent_00017_00001, opponent_00009_00001, opponent_00013_00001, opponent_00005_00001, opponent_00018_00001])::domain;
constraint all_different_int([opponent_00001_00002, opponent_00014_00002, opponent_00006_00002, opponent_00019_00002, opponent_00010_00002, opponent_00002_00002, opponent_00015_00002, opponent_00007_00002, opponent_00011_00002, opponent_00003_00002, opponent_00016_00002, opponent_00008_00002, opponent_00020_00002, opponent_00012_00002, opponent_00004_00002, opponent_00017_00002, opponent_00009_00002, opponent_00013_00002, opponent_00005_00002, opponent_00018_00002])::domain;
constraint all_different_int([opponent_00001_00003, opponent_00014_00003, opponent_00006_00003, opponent_00019_00003, opponent_00010_00003, opponent_00002_00003, opponent_00015_00003, opponent_00007_00003, opponent_00011_00003, opponent_00003_00003, opponent_00016_00003, opponent_00008_00003, opponent_00020_00003, opponent_00012_00003, opponent_00004_00003, opponent_00017_00003, opponent_00009_00003, opponent_00013_00003, opponent_00005_00003, opponent_00018_00003])::domain;
constraint all_different_int([opponent_00001_00004, opponent_00014_00004, opponent_00006_00004, opponent_00019_00004, opponent_00010_00004, opponent_00002_00004, opponent_00015_00004, opponent_00007_00004, opponent_00011_00004, opponent_00003_00004, opponent_00016_00004, opponent_00008_00004, opponent_00020_00004, opponent_00012_00004, opponent_00004_00004, opponent_00017_00004, opponent_00009_00004, opponent_00013_00004, opponent_00005_00004, opponent_00018_00004])::domain;
constraint all_different_int([opponent_00001_00005, opponent_00014_00005, opponent_00006_00005, opponent_00019_00005, opponent_00010_00005, opponent_00002_00005, opponent_00015_00005, opponent_00007_00005, opponent_00011_00005, opponent_00003_00005, opponent_00016_00005, opponent_00008_00005, opponent_00020_00005, opponent_00012_00005, opponent_00004_00005, opponent_00017_00005, opponent_00009_00005, opponent_00013_00005, opponent_00005_00005, opponent_00018_00005])::domain;
constraint all_different_int([opponent_00001_00006, opponent_00014_00006, opponent_00006_00006, opponent_00019_00006, opponent_00010_00006, opponent_00002_00006, opponent_00015_00006, opponent_00007_00006, opponent_00011_00006, opponent_00003_00006, opponent_00016_00006, opponent_00008_00006, opponent_00020_00006, opponent_00012_00006, opponent_00004_00006, opponent_00017_00006, opponent_00009_00006, opponent_00013_00006, opponent_00005_00006, opponent_00018_00006])::domain;
constraint all_different_int([opponent_00001_00007, opponent_00014_00007, opponent_00006_00007, opponent_00019_00007, opponent_00010_00007, opponent_00002_00007, opponent_00015_00007, opponent_00007_00007, opponent_00011_00007, opponent_00003_00007, opponent_00016_00007, opponent_00008_00007, opponent_00020_00007, opponent_00012_00007, opponent_00004_00007, opponent_00017_00007, opponent_00009_00007, opponent_00013_00007, opponent_00005_00007, opponent_00018_00007])::domain;
constraint all_different_int([opponent_00001_00008, opponent_00014_00008, opponent_00006_00008, opponent_00019_00008, opponent_00010_00008, opponent_00002_00008, opponent_00015_00008, opponent_00007_00008, opponent_00011_00008, opponent_00003_00008, opponent_00016_00008, opponent_00008_00008, opponent_00020_00008, opponent_00012_00008, opponent_00004_00008, opponent_00017_00008, opponent_00009_00008, opponent_00013_00008, opponent_00005_00008, opponent_00018_00008])::domain;
constraint all_different_int([opponent_00001_00009, opponent_00014_00009, opponent_00006_00009, opponent_00019_00009, opponent_00010_00009, opponent_00002_00009, opponent_00015_00009, opponent_00007_00009, opponent_00011_00009, opponent_00003_00009, opponent_00016_00009, opponent_00008_00009, opponent_00020_00009, opponent_00012_00009, opponent_00004_00009, opponent_00017_00009, opponent_00009_00009, opponent_00013_00009, opponent_00005_00009, opponent_00018_00009])::domain;
constraint all_different_int([opponent_00001_00010, opponent_00014_00010, opponent_00006_00010, opponent_00019_00010, opponent_00010_00010, opponent_00002_00010, opponent_00015_00010, opponent_00007_00010, opponent_00011_00010, opponent_00003_00010, opponent_00016_00010, opponent_00008_00010, opponent_00020_00010, opponent_00012_00010, opponent_00004_00010, opponent_00017_00010, opponent_00009_00010, opponent_00013_00010, opponent_00005_00010, opponent_00018_00010])::domain;
constraint all_different_int([opponent_00001_00011, opponent_00014_00011, opponent_00006_00011, opponent_00019_00011, opponent_00010_00011, opponent_00002_00011, opponent_00015_00011, opponent_00007_00011, opponent_00011_00011, opponent_00003_00011, opponent_00016_00011, opponent_00008_00011, opponent_00020_00011, opponent_00012_00011, opponent_00004_00011, opponent_00017_00011, opponent_00009_00011, opponent_00013_00011, opponent_00005_00011, opponent_00018_00011])::domain;
constraint all_different_int([opponent_00001_00012, opponent_00014_00012, opponent_00006_00012, opponent_00019_00012, opponent_00010_00012, opponent_00002_00012, opponent_00015_00012, opponent_00007_00012, opponent_00011_00012, opponent_00003_00012, opponent_00016_00012, opponent_00008_00012, opponent_00020_00012, opponent_00012_00012, opponent_00004_00012, opponent_00017_00012, opponent_00009_00012, opponent_00013_00012, opponent_00005_00012, opponent_00018_00012])::domain;
constraint all_different_int([opponent_00001_00013, opponent_00014_00013, opponent_00006_00013, opponent_00019_00013, opponent_00010_00013, opponent_00002_00013, opponent_00015_00013, opponent_00007_00013, opponent_00011_00013, opponent_00003_00013, opponent_00016_00013, opponent_00008_00013, opponent_00020_00013, opponent_00012_00013, opponent_00004_00013, opponent_00017_00013, opponent_00009_00013, opponent_00013_00013, opponent_00005_00013, opponent_00018_00013])::domain;
constraint all_different_int([opponent_00001_00014, opponent_00014_00014, opponent_00006_00014, opponent_00019_00014, opponent_00010_00014, opponent_00002_00014, opponent_00015_00014, opponent_00007_00014, opponent_00011_00014, opponent_00003_00014, opponent_00016_00014, opponent_00008_00014, opponent_00020_00014, opponent_00012_00014, opponent_00004_00014, opponent_00017_00014, opponent_00009_00014, opponent_00013_00014, opponent_00005_00014, opponent_00018_00014])::domain;
constraint all_different_int([opponent_00001_00015, opponent_00014_00015, opponent_00006_00015, opponent_00019_00015, opponent_00010_00015, opponent_00002_00015, opponent_00015_00015, opponent_00007_00015, opponent_00011_00015, opponent_00003_00015, opponent_00016_00015, opponent_00008_00015, opponent_00020_00015, opponent_00012_00015, opponent_00004_00015, opponent_00017_00015, opponent_00009_00015, opponent_00013_00015, opponent_00005_00015, opponent_00018_00015])::domain;
constraint all_different_int([opponent_00001_00016, opponent_00014_00016, opponent_00006_00016, opponent_00019_00016, opponent_00010_00016, opponent_00002_00016, opponent_00015_00016, opponent_00007_00016, opponent_00011_00016, opponent_00003_00016, opponent_00016_00016, opponent_00008_00016, opponent_00020_00016, opponent_00012_00016, opponent_00004_00016, opponent_00017_00016, opponent_00009_00016, opponent_00013_00016, opponent_00005_00016, opponent_00018_00016])::domain;
constraint all_different_int([opponent_00001_00017, opponent_00014_00017, opponent_00006_00017, opponent_00019_00017, opponent_00010_00017, opponent_00002_00017, opponent_00015_00017, opponent_00007_00017, opponent_00011_00017, opponent_00003_00017, opponent_00016_00017, opponent_00008_00017, opponent_00020_00017, opponent_00012_00017, opponent_00004_00017, opponent_00017_00017, opponent_00009_00017, opponent_00013_00017, opponent_00005_00017, opponent_00018_00017])::domain;
constraint all_different_int([opponent_00001_00018, opponent_00014_00018, opponent_00006_00018, opponent_00019_00018, opponent_00010_00018, opponent_00002_00018, opponent_00015_00018, opponent_00007_00018, opponent_00011_00018, opponent_00003_00018, opponent_00016_00018, opponent_00008_00018, opponent_00020_00018, opponent_00012_00018, opponent_00004_00018, opponent_00017_00018, opponent_00009_00018, opponent_00013_00018, opponent_00005_00018, opponent_00018_00018])::domain;
constraint all_different_int([opponent_00001_00019, opponent_00014_00019, opponent_00006_00019, opponent_00019_00019, opponent_00010_00019, opponent_00002_00019, opponent_00015_00019, opponent_00007_00019, opponent_00011_00019, opponent_00003_00019, opponent_00016_00019, opponent_00008_00019, opponent_00020_00019, opponent_00012_00019, opponent_00004_00019, opponent_00017_00019, opponent_00009_00019, opponent_00013_00019, opponent_00005_00019, opponent_00018_00019])::domain;
constraint array_bool_or([aux458_BOOL,aux413_BOOL,aux935_BOOL,aux1019_BOOL],true);
constraint array_bool_or([aux413_BOOL,aux935_BOOL,aux1019_BOOL,aux761_BOOL],true);
constraint array_bool_or([aux935_BOOL,aux1019_BOOL,aux761_BOOL,aux903_BOOL],true);
constraint array_bool_or([aux1019_BOOL,aux761_BOOL,aux903_BOOL,aux746_BOOL],true);
constraint array_bool_or([aux761_BOOL,aux903_BOOL,aux746_BOOL,aux502_BOOL],true);
constraint array_bool_or([aux903_BOOL,aux746_BOOL,aux502_BOOL,aux1027_BOOL],true);
constraint array_bool_or([aux746_BOOL,aux502_BOOL,aux1027_BOOL,aux929_BOOL],true);
constraint array_bool_or([aux502_BOOL,aux1027_BOOL,aux929_BOOL,aux681_BOOL],true);
constraint array_bool_or([aux1027_BOOL,aux929_BOOL,aux681_BOOL,aux445_BOOL],true);
constraint array_bool_or([aux929_BOOL,aux681_BOOL,aux445_BOOL,aux949_BOOL],true);
constraint array_bool_or([aux681_BOOL,aux445_BOOL,aux949_BOOL,aux1080_BOOL],true);
constraint array_bool_or([aux445_BOOL,aux949_BOOL,aux1080_BOOL,aux937_BOOL],true);
constraint array_bool_or([aux949_BOOL,aux1080_BOOL,aux937_BOOL,aux686_BOOL],true);
constraint array_bool_or([aux1080_BOOL,aux937_BOOL,aux686_BOOL,aux1005_BOOL],true);
constraint array_bool_or([aux937_BOOL,aux686_BOOL,aux1005_BOOL,aux673_BOOL],true);
constraint array_bool_or([aux686_BOOL,aux1005_BOOL,aux673_BOOL,aux457_BOOL],true);
constraint array_bool_or([aux459_BOOL,aux415_BOOL,aux678_BOOL,aux728_BOOL],true);
constraint array_bool_or([aux415_BOOL,aux678_BOOL,aux728_BOOL,aux485_BOOL],true);
constraint array_bool_or([aux678_BOOL,aux728_BOOL,aux485_BOOL,aux1010_BOOL],true);
constraint array_bool_or([aux728_BOOL,aux485_BOOL,aux1010_BOOL,aux749_BOOL],true);
constraint array_bool_or([aux485_BOOL,aux1010_BOOL,aux749_BOOL,aux601_BOOL],true);
constraint array_bool_or([aux1010_BOOL,aux749_BOOL,aux601_BOOL,aux734_BOOL],true);
constraint array_bool_or([aux749_BOOL,aux601_BOOL,aux734_BOOL,aux1031_BOOL],true);
constraint array_bool_or([aux601_BOOL,aux734_BOOL,aux1031_BOOL,aux781_BOOL],true);
constraint array_bool_or([aux734_BOOL,aux1031_BOOL,aux781_BOOL,aux917_BOOL],true);
constraint array_bool_or([aux1031_BOOL,aux781_BOOL,aux917_BOOL,aux663_BOOL],true);
constraint array_bool_or([aux781_BOOL,aux917_BOOL,aux663_BOOL,aux427_BOOL],true);
constraint array_bool_or([aux917_BOOL,aux663_BOOL,aux427_BOOL,aux1036_BOOL],true);
constraint array_bool_or([aux663_BOOL,aux427_BOOL,aux1036_BOOL,aux794_BOOL],true);
constraint array_bool_or([aux427_BOOL,aux1036_BOOL,aux794_BOOL,aux834_BOOL],true);
constraint array_bool_or([aux1036_BOOL,aux794_BOOL,aux834_BOOL,aux664_BOOL],true);
constraint array_bool_or([aux794_BOOL,aux834_BOOL,aux664_BOOL,aux456_BOOL],true);
constraint array_bool_or([aux1094_BOOL,aux410_BOOL,aux1118_BOOL,aux1116_BOOL],true);
constraint array_bool_or([aux410_BOOL,aux1118_BOOL,aux1116_BOOL,aux524_BOOL],true);
constraint array_bool_or([aux1118_BOOL,aux1116_BOOL,aux524_BOOL,aux387_BOOL],true);
constraint array_bool_or([aux1116_BOOL,aux524_BOOL,aux387_BOOL,aux608_BOOL],true);
constraint array_bool_or([aux524_BOOL,aux387_BOOL,aux608_BOOL,aux881_BOOL],true);
constraint array_bool_or([aux387_BOOL,aux608_BOOL,aux881_BOOL,aux1128_BOOL],true);
constraint array_bool_or([aux608_BOOL,aux881_BOOL,aux1128_BOOL,aux452_BOOL],true);
constraint array_bool_or([aux881_BOOL,aux1128_BOOL,aux452_BOOL,aux687_BOOL],true);
constraint array_bool_or([aux1128_BOOL,aux452_BOOL,aux687_BOOL,aux864_BOOL],true);
constraint array_bool_or([aux452_BOOL,aux687_BOOL,aux864_BOOL,aux1105_BOOL],true);
constraint array_bool_or([aux687_BOOL,aux864_BOOL,aux1105_BOOL,aux943_BOOL],true);
constraint array_bool_or([aux864_BOOL,aux1105_BOOL,aux943_BOOL,aux460_BOOL],true);
constraint array_bool_or([aux1105_BOOL,aux943_BOOL,aux460_BOOL,aux692_BOOL],true);
constraint array_bool_or([aux943_BOOL,aux460_BOOL,aux692_BOOL,aux588_BOOL],true);
constraint array_bool_or([aux460_BOOL,aux692_BOOL,aux588_BOOL,aux425_BOOL],true);
constraint array_bool_or([aux692_BOOL,aux588_BOOL,aux425_BOOL,aux1091_BOOL],true);
constraint array_bool_or([aux1093_BOOL,aux405_BOOL,aux512_BOOL,aux634_BOOL],true);
constraint array_bool_or([aux405_BOOL,aux512_BOOL,aux634_BOOL,aux813_BOOL],true);
constraint array_bool_or([aux512_BOOL,aux634_BOOL,aux813_BOOL,aux1053_BOOL],true);
constraint array_bool_or([aux634_BOOL,aux813_BOOL,aux1053_BOOL,aux515_BOOL],true);
constraint array_bool_or([aux813_BOOL,aux1053_BOOL,aux515_BOOL,aux417_BOOL],true);
constraint array_bool_or([aux1053_BOOL,aux515_BOOL,aux417_BOOL,aux640_BOOL],true);
constraint array_bool_or([aux515_BOOL,aux417_BOOL,aux640_BOOL,aux1140_BOOL],true);
constraint array_bool_or([aux417_BOOL,aux640_BOOL,aux1140_BOOL,aux967_BOOL],true);
constraint array_bool_or([aux640_BOOL,aux1140_BOOL,aux967_BOOL,aux448_BOOL],true);
constraint array_bool_or([aux1140_BOOL,aux967_BOOL,aux448_BOOL,aux624_BOOL],true);
constraint array_bool_or([aux967_BOOL,aux448_BOOL,aux624_BOOL,aux852_BOOL],true);
constraint array_bool_or([aux448_BOOL,aux624_BOOL,aux852_BOOL,aux1086_BOOL],true);
constraint array_bool_or([aux624_BOOL,aux852_BOOL,aux1086_BOOL,aux980_BOOL],true);
constraint array_bool_or([aux852_BOOL,aux1086_BOOL,aux980_BOOL,aux770_BOOL],true);
constraint array_bool_or([aux1086_BOOL,aux980_BOOL,aux770_BOOL,aux426_BOOL],true);
constraint array_bool_or([aux980_BOOL,aux770_BOOL,aux426_BOOL,aux1092_BOOL],true);
constraint array_bool_or([aux712_BOOL,aux534_BOOL,aux869_BOOL,aux438_BOOL],true);
constraint array_bool_or([aux534_BOOL,aux869_BOOL,aux438_BOOL,aux897_BOOL],true);
constraint array_bool_or([aux869_BOOL,aux438_BOOL,aux897_BOOL,aux607_BOOL],true);
constraint array_bool_or([aux438_BOOL,aux897_BOOL,aux607_BOOL,aux1087_BOOL],true);
constraint array_bool_or([aux897_BOOL,aux607_BOOL,aux1087_BOOL,aux832_BOOL],true);
constraint array_bool_or([aux607_BOOL,aux1087_BOOL,aux832_BOOL,aux537_BOOL],true);
constraint array_bool_or([aux1087_BOOL,aux832_BOOL,aux537_BOOL,aux1032_BOOL],true);
constraint array_bool_or([aux832_BOOL,aux537_BOOL,aux1032_BOOL,aux747_BOOL],true);
constraint array_bool_or([aux537_BOOL,aux1032_BOOL,aux747_BOOL,aux446_BOOL],true);
constraint array_bool_or([aux1032_BOOL,aux747_BOOL,aux446_BOOL,aux922_BOOL],true);
constraint array_bool_or([aux747_BOOL,aux446_BOOL,aux922_BOOL,aux635_BOOL],true);
constraint array_bool_or([aux446_BOOL,aux922_BOOL,aux635_BOOL,aux956_BOOL],true);
constraint array_bool_or([aux922_BOOL,aux635_BOOL,aux956_BOOL,aux670_BOOL],true);
constraint array_bool_or([aux635_BOOL,aux956_BOOL,aux670_BOOL,aux505_BOOL],true);
constraint array_bool_or([aux956_BOOL,aux670_BOOL,aux505_BOOL,aux735_BOOL],true);
constraint array_bool_or([aux670_BOOL,aux505_BOOL,aux735_BOOL,aux714_BOOL],true);
constraint array_bool_or([aux713_BOOL,aux587_BOOL,aux548_BOOL,aux636_BOOL],true);
constraint array_bool_or([aux587_BOOL,aux548_BOOL,aux636_BOOL,aux957_BOOL],true);
constraint array_bool_or([aux548_BOOL,aux636_BOOL,aux957_BOOL,aux671_BOOL],true);
constraint array_bool_or([aux636_BOOL,aux957_BOOL,aux671_BOOL,aux383_BOOL],true);
constraint array_bool_or([aux957_BOOL,aux671_BOOL,aux383_BOOL,aux848_BOOL],true);
constraint array_bool_or([aux671_BOOL,aux383_BOOL,aux848_BOOL,aux564_BOOL],true);
constraint array_bool_or([aux383_BOOL,aux848_BOOL,aux564_BOOL,aux1050_BOOL],true);
constraint array_bool_or([aux848_BOOL,aux564_BOOL,aux1050_BOOL,aux787_BOOL],true);
constraint array_bool_or([aux564_BOOL,aux1050_BOOL,aux787_BOOL,aux506_BOOL],true);
constraint array_bool_or([aux1050_BOOL,aux787_BOOL,aux506_BOOL,aux986_BOOL],true);
constraint array_bool_or([aux787_BOOL,aux506_BOOL,aux986_BOOL,aux677_BOOL],true);
constraint array_bool_or([aux506_BOOL,aux986_BOOL,aux677_BOOL,aux408_BOOL],true);
constraint array_bool_or([aux986_BOOL,aux677_BOOL,aux408_BOOL,aux876_BOOL],true);
constraint array_bool_or([aux677_BOOL,aux408_BOOL,aux876_BOOL,aux984_BOOL],true);
constraint array_bool_or([aux408_BOOL,aux876_BOOL,aux984_BOOL,aux757_BOOL],true);
constraint array_bool_or([aux876_BOOL,aux984_BOOL,aux757_BOOL,aux711_BOOL],true);
constraint array_bool_or([aux990_BOOL,aux883_BOOL,aux472_BOOL,aux988_BOOL],true);
constraint array_bool_or([aux883_BOOL,aux472_BOOL,aux988_BOOL,aux702_BOOL],true);
constraint array_bool_or([aux472_BOOL,aux988_BOOL,aux702_BOOL,aux808_BOOL],true);
constraint array_bool_or([aux988_BOOL,aux702_BOOL,aux808_BOOL,aux521_BOOL],true);
constraint array_bool_or([aux702_BOOL,aux808_BOOL,aux521_BOOL,aux621_BOOL],true);
constraint array_bool_or([aux808_BOOL,aux521_BOOL,aux621_BOOL,aux1112_BOOL],true);
constraint array_bool_or([aux521_BOOL,aux621_BOOL,aux1112_BOOL,aux443_BOOL],true);
constraint array_bool_or([aux621_BOOL,aux1112_BOOL,aux443_BOOL,aux916_BOOL],true);
constraint array_bool_or([aux1112_BOOL,aux443_BOOL,aux916_BOOL,aux1026_BOOL],true);
constraint array_bool_or([aux443_BOOL,aux916_BOOL,aux1026_BOOL,aux739_BOOL],true);
constraint array_bool_or([aux916_BOOL,aux1026_BOOL,aux739_BOOL,aux837_BOOL],true);
constraint array_bool_or([aux1026_BOOL,aux739_BOOL,aux837_BOOL,aux541_BOOL],true);
constraint array_bool_or([aux739_BOOL,aux837_BOOL,aux541_BOOL,aux553_BOOL],true);
constraint array_bool_or([aux837_BOOL,aux541_BOOL,aux553_BOOL,aux875_BOOL],true);
constraint array_bool_or([aux541_BOOL,aux553_BOOL,aux875_BOOL,aux690_BOOL],true);
constraint array_bool_or([aux553_BOOL,aux875_BOOL,aux690_BOOL,aux992_BOOL],true);
constraint array_bool_or([aux993_BOOL,aux623_BOOL,aux569_BOOL,aux838_BOOL],true);
constraint array_bool_or([aux623_BOOL,aux569_BOOL,aux838_BOOL,aux542_BOOL],true);
constraint array_bool_or([aux569_BOOL,aux838_BOOL,aux542_BOOL,aux554_BOOL],true);
constraint array_bool_or([aux838_BOOL,aux542_BOOL,aux554_BOOL,aux1044_BOOL],true);
constraint array_bool_or([aux542_BOOL,aux554_BOOL,aux1044_BOOL,aux393_BOOL],true);
constraint array_bool_or([aux554_BOOL,aux1044_BOOL,aux393_BOOL,aux857_BOOL],true);
constraint array_bool_or([aux1044_BOOL,aux393_BOOL,aux857_BOOL,aux954_BOOL],true);
constraint array_bool_or([aux393_BOOL,aux857_BOOL,aux954_BOOL,aux672_BOOL],true);
constraint array_bool_or([aux857_BOOL,aux954_BOOL,aux672_BOOL,aux772_BOOL],true);
constraint array_bool_or([aux954_BOOL,aux672_BOOL,aux772_BOOL,aux487_BOOL],true);
constraint array_bool_or([aux672_BOOL,aux772_BOOL,aux487_BOOL,aux585_BOOL],true);
constraint array_bool_or([aux772_BOOL,aux487_BOOL,aux585_BOOL,aux1068_BOOL],true);
constraint array_bool_or([aux487_BOOL,aux585_BOOL,aux1068_BOOL,aux416_BOOL],true);
constraint array_bool_or([aux585_BOOL,aux1068_BOOL,aux416_BOOL,aux971_BOOL],true);
constraint array_bool_or([aux1068_BOOL,aux416_BOOL,aux971_BOOL,aux435_BOOL],true);
constraint array_bool_or([aux416_BOOL,aux971_BOOL,aux435_BOOL,aux991_BOOL],true);
constraint array_bool_or([aux1122_BOOL,aux1033_BOOL,aux784_BOOL,aux825_BOOL],true);
constraint array_bool_or([aux1033_BOOL,aux784_BOOL,aux825_BOOL,aux583_BOOL],true);
constraint array_bool_or([aux784_BOOL,aux825_BOOL,aux583_BOOL,aux520_BOOL],true);
constraint array_bool_or([aux825_BOOL,aux583_BOOL,aux520_BOOL,aux1049_BOOL],true);
constraint array_bool_or([aux583_BOOL,aux520_BOOL,aux1049_BOOL,aux884_BOOL],true);
constraint array_bool_or([aux520_BOOL,aux1049_BOOL,aux884_BOOL,aux831_BOOL],true);
constraint array_bool_or([aux1049_BOOL,aux884_BOOL,aux831_BOOL,aux543_BOOL],true);
constraint array_bool_or([aux884_BOOL,aux831_BOOL,aux543_BOOL,aux1075_BOOL],true);
constraint array_bool_or([aux831_BOOL,aux543_BOOL,aux1075_BOOL,aux1016_BOOL],true);
constraint array_bool_or([aux543_BOOL,aux1075_BOOL,aux1016_BOOL,aux767_BOOL],true);
constraint array_bool_or([aux1075_BOOL,aux1016_BOOL,aux767_BOOL,aux719_BOOL],true);
constraint array_bool_or([aux1016_BOOL,aux767_BOOL,aux719_BOOL,aux464_BOOL],true);
constraint array_bool_or([aux767_BOOL,aux719_BOOL,aux464_BOOL,aux1079_BOOL],true);
constraint array_bool_or([aux719_BOOL,aux464_BOOL,aux1079_BOOL,aux1133_BOOL],true);
constraint array_bool_or([aux464_BOOL,aux1079_BOOL,aux1133_BOOL,aux1115_BOOL],true);
constraint array_bool_or([aux1079_BOOL,aux1133_BOOL,aux1115_BOOL,aux1119_BOOL],true);
constraint array_bool_or([aux1121_BOOL,aux1029_BOOL,aux704_BOOL,aux1134_BOOL],true);
constraint array_bool_or([aux1029_BOOL,aux704_BOOL,aux1134_BOOL,aux873_BOOL],true);
constraint array_bool_or([aux704_BOOL,aux1134_BOOL,aux873_BOOL,aux811_BOOL],true);
constraint array_bool_or([aux1134_BOOL,aux873_BOOL,aux811_BOOL,aux571_BOOL],true);
constraint array_bool_or([aux873_BOOL,aux811_BOOL,aux571_BOOL,aux508_BOOL],true);
constraint array_bool_or([aux811_BOOL,aux571_BOOL,aux508_BOOL,aux1139_BOOL],true);
constraint array_bool_or([aux571_BOOL,aux508_BOOL,aux1139_BOOL,aux751_BOOL],true);
constraint array_bool_or([aux508_BOOL,aux1139_BOOL,aux751_BOOL,aux589_BOOL],true);
constraint array_bool_or([aux1139_BOOL,aux751_BOOL,aux589_BOOL,aux532_BOOL],true);
constraint array_bool_or([aux751_BOOL,aux589_BOOL,aux532_BOOL,aux1067_BOOL],true);
constraint array_bool_or([aux589_BOOL,aux532_BOOL,aux1067_BOOL,aux1007_BOOL],true);
constraint array_bool_or([aux532_BOOL,aux1067_BOOL,aux1007_BOOL,aux758_BOOL],true);
constraint array_bool_or([aux1067_BOOL,aux1007_BOOL,aux758_BOOL,aux597_BOOL],true);
constraint array_bool_or([aux1007_BOOL,aux758_BOOL,aux597_BOOL,aux865_BOOL],true);
constraint array_bool_or([aux758_BOOL,aux597_BOOL,aux865_BOOL,aux1109_BOOL],true);
constraint array_bool_or([aux597_BOOL,aux865_BOOL,aux1109_BOOL,aux1120_BOOL],true);
constraint array_bool_or([aux614_BOOL,aux1137_BOOL,aux810_BOOL,aux733_BOOL],true);
constraint array_bool_or([aux1137_BOOL,aux810_BOOL,aux733_BOOL,aux402_BOOL],true);
constraint array_bool_or([aux810_BOOL,aux733_BOOL,aux402_BOOL,aux962_BOOL],true);
constraint array_bool_or([aux733_BOOL,aux402_BOOL,aux962_BOOL,aux805_BOOL],true);
constraint array_bool_or([aux402_BOOL,aux962_BOOL,aux805_BOOL,aux849_BOOL],true);
constraint array_bool_or([aux962_BOOL,aux805_BOOL,aux849_BOOL,aux740_BOOL],true);
constraint array_bool_or([aux805_BOOL,aux849_BOOL,aux740_BOOL,aux996_BOOL],true);
constraint array_bool_or([aux849_BOOL,aux740_BOOL,aux996_BOOL,aux1072_BOOL],true);
constraint array_bool_or([aux740_BOOL,aux996_BOOL,aux1072_BOOL,aux924_BOOL],true);
constraint array_bool_or([aux996_BOOL,aux1072_BOOL,aux924_BOOL,aux722_BOOL],true);
constraint array_bool_or([aux1072_BOOL,aux924_BOOL,aux722_BOOL,aux396_BOOL],true);
constraint array_bool_or([aux924_BOOL,aux722_BOOL,aux396_BOOL,aux1004_BOOL],true);
constraint array_bool_or([aux722_BOOL,aux396_BOOL,aux1004_BOOL,aux1078_BOOL],true);
constraint array_bool_or([aux396_BOOL,aux1004_BOOL,aux1078_BOOL,aux479_BOOL],true);
constraint array_bool_or([aux1004_BOOL,aux1078_BOOL,aux479_BOOL,aux952_BOOL],true);
constraint array_bool_or([aux1078_BOOL,aux479_BOOL,aux952_BOOL,aux612_BOOL],true);
constraint array_bool_or([aux615_BOOL,aux1127_BOOL,aux889_BOOL,aux833_BOOL],true);
constraint array_bool_or([aux1127_BOOL,aux889_BOOL,aux833_BOOL,aux877_BOOL],true);
constraint array_bool_or([aux889_BOOL,aux833_BOOL,aux877_BOOL,aux667_BOOL],true);
constraint array_bool_or([aux833_BOOL,aux877_BOOL,aux667_BOOL,aux522_BOOL],true);
constraint array_bool_or([aux877_BOOL,aux667_BOOL,aux522_BOOL,aux950_BOOL],true);
constraint array_bool_or([aux667_BOOL,aux522_BOOL,aux950_BOOL,aux841_BOOL],true);
constraint array_bool_or([aux522_BOOL,aux950_BOOL,aux841_BOOL,aux698_BOOL],true);
constraint array_bool_or([aux950_BOOL,aux841_BOOL,aux698_BOOL,aux421_BOOL],true);
constraint array_bool_or([aux841_BOOL,aux698_BOOL,aux421_BOOL,aux1023_BOOL],true);
constraint array_bool_or([aux698_BOOL,aux421_BOOL,aux1023_BOOL,aux1064_BOOL],true);
constraint array_bool_or([aux421_BOOL,aux1023_BOOL,aux1064_BOOL,aux868_BOOL],true);
constraint array_bool_or([aux1023_BOOL,aux1064_BOOL,aux868_BOOL,aux705_BOOL],true);
constraint array_bool_or([aux1064_BOOL,aux868_BOOL,aux705_BOOL,aux386_BOOL],true);
constraint array_bool_or([aux868_BOOL,aux705_BOOL,aux386_BOOL,aux1085_BOOL],true);
constraint array_bool_or([aux705_BOOL,aux386_BOOL,aux1085_BOOL,aux948_BOOL],true);
constraint array_bool_or([aux386_BOOL,aux1085_BOOL,aux948_BOOL,aux613_BOOL],true);
constraint array_bool_or([aux578_BOOL,aux820_BOOL,aux840_BOOL,aux642_BOOL],true);
constraint array_bool_or([aux820_BOOL,aux840_BOOL,aux642_BOOL,aux871_BOOL],true);
constraint array_bool_or([aux840_BOOL,aux642_BOOL,aux871_BOOL,aux1111_BOOL],true);
constraint array_bool_or([aux642_BOOL,aux871_BOOL,aux1111_BOOL,aux955_BOOL],true);
constraint array_bool_or([aux871_BOOL,aux1111_BOOL,aux955_BOOL,aux424_BOOL],true);
constraint array_bool_or([aux1111_BOOL,aux955_BOOL,aux424_BOOL,aux649_BOOL],true);
constraint array_bool_or([aux955_BOOL,aux424_BOOL,aux649_BOOL,aux750_BOOL],true);
constraint array_bool_or([aux424_BOOL,aux649_BOOL,aux750_BOOL,aux987_BOOL],true);
constraint array_bool_or([aux649_BOOL,aux750_BOOL,aux987_BOOL,aux451_BOOL],true);
constraint array_bool_or([aux750_BOOL,aux987_BOOL,aux451_BOOL,aux683_BOOL],true);
constraint array_bool_or([aux987_BOOL,aux451_BOOL,aux683_BOOL,aux905_BOOL],true);
constraint array_bool_or([aux451_BOOL,aux683_BOOL,aux905_BOOL,aux755_BOOL],true);
constraint array_bool_or([aux683_BOOL,aux905_BOOL,aux755_BOOL,aux981_BOOL],true);
constraint array_bool_or([aux905_BOOL,aux755_BOOL,aux981_BOOL,aux708_BOOL],true);
constraint array_bool_or([aux755_BOOL,aux981_BOOL,aux708_BOOL,aux904_BOOL],true);
constraint array_bool_or([aux981_BOOL,aux708_BOOL,aux904_BOOL,aux576_BOOL],true);
constraint array_bool_or([aux579_BOOL,aux814_BOOL,aux1065_BOOL,aux545_BOOL],true);
constraint array_bool_or([aux814_BOOL,aux1065_BOOL,aux545_BOOL,aux409_BOOL],true);
constraint array_bool_or([aux1065_BOOL,aux545_BOOL,aux409_BOOL,aux631_BOOL],true);
constraint array_bool_or([aux545_BOOL,aux409_BOOL,aux631_BOOL,aux855_BOOL],true);
constraint array_bool_or([aux409_BOOL,aux631_BOOL,aux855_BOOL,aux1096_BOOL],true);
constraint array_bool_or([aux631_BOOL,aux855_BOOL,aux1096_BOOL,aux947_BOOL],true);
constraint array_bool_or([aux855_BOOL,aux1096_BOOL,aux947_BOOL,aux657_BOOL],true);
constraint array_bool_or([aux1096_BOOL,aux947_BOOL,aux657_BOOL,aux885_BOOL],true);
constraint array_bool_or([aux947_BOOL,aux657_BOOL,aux885_BOOL,aux1136_BOOL],true);
constraint array_bool_or([aux657_BOOL,aux885_BOOL,aux1136_BOOL,aux963_BOOL],true);
constraint array_bool_or([aux885_BOOL,aux1136_BOOL,aux963_BOOL,aux442_BOOL],true);
constraint array_bool_or([aux1136_BOOL,aux963_BOOL,aux442_BOOL,aux665_BOOL],true);
constraint array_bool_or([aux963_BOOL,aux442_BOOL,aux665_BOOL,aux894_BOOL],true);
constraint array_bool_or([aux442_BOOL,aux665_BOOL,aux894_BOOL,aux919_BOOL],true);
constraint array_bool_or([aux665_BOOL,aux894_BOOL,aux919_BOOL,aux899_BOOL],true);
constraint array_bool_or([aux894_BOOL,aux919_BOOL,aux899_BOOL,aux577_BOOL],true);
constraint array_bool_or([aux550_BOOL,aux966_BOOL,aux414_BOOL,aux972_BOOL],true);
constraint array_bool_or([aux966_BOOL,aux414_BOOL,aux972_BOOL,aux858_BOOL],true);
constraint array_bool_or([aux414_BOOL,aux972_BOOL,aux858_BOOL,aux400_BOOL],true);
constraint array_bool_or([aux972_BOOL,aux858_BOOL,aux400_BOOL,aux1061_BOOL],true);
constraint array_bool_or([aux858_BOOL,aux400_BOOL,aux1061_BOOL,aux556_BOOL],true);
constraint array_bool_or([aux400_BOOL,aux1061_BOOL,aux556_BOOL,aux469_BOOL],true);
constraint array_bool_or([aux1061_BOOL,aux556_BOOL,aux469_BOOL,aux752_BOOL],true);
constraint array_bool_or([aux556_BOOL,aux469_BOOL,aux752_BOOL,aux656_BOOL],true);
constraint array_bool_or([aux469_BOOL,aux752_BOOL,aux656_BOOL,aux1135_BOOL],true);
constraint array_bool_or([aux752_BOOL,aux656_BOOL,aux1135_BOOL,aux646_BOOL],true);
constraint array_bool_or([aux656_BOOL,aux1135_BOOL,aux646_BOOL,aux528_BOOL],true);
constraint array_bool_or([aux1135_BOOL,aux646_BOOL,aux528_BOOL,aux822_BOOL],true);
constraint array_bool_or([aux646_BOOL,aux528_BOOL,aux822_BOOL,aux736_BOOL],true);
constraint array_bool_or([aux528_BOOL,aux822_BOOL,aux736_BOOL,aux762_BOOL],true);
constraint array_bool_or([aux822_BOOL,aux736_BOOL,aux762_BOOL,aux401_BOOL],true);
constraint array_bool_or([aux736_BOOL,aux762_BOOL,aux401_BOOL,aux551_BOOL],true);
constraint array_bool_or([aux552_BOOL,aux390_BOOL,aux1077_BOOL,aux529_BOOL],true);
constraint array_bool_or([aux390_BOOL,aux1077_BOOL,aux529_BOOL,aux823_BOOL],true);
constraint array_bool_or([aux1077_BOOL,aux529_BOOL,aux823_BOOL,aux737_BOOL],true);
constraint array_bool_or([aux529_BOOL,aux823_BOOL,aux737_BOOL,aux1008_BOOL],true);
constraint array_bool_or([aux823_BOOL,aux737_BOOL,aux1008_BOOL,aux909_BOOL],true);
constraint array_bool_or([aux737_BOOL,aux1008_BOOL,aux909_BOOL,aux444_BOOL],true);
constraint array_bool_or([aux1008_BOOL,aux909_BOOL,aux444_BOOL,aux1113_BOOL],true);
constraint array_bool_or([aux909_BOOL,aux444_BOOL,aux1113_BOOL,aux606_BOOL],true);
constraint array_bool_or([aux444_BOOL,aux1113_BOOL,aux606_BOOL,aux513_BOOL],true);
constraint array_bool_or([aux1113_BOOL,aux606_BOOL,aux513_BOOL,aux788_BOOL],true);
constraint array_bool_or([aux606_BOOL,aux513_BOOL,aux788_BOOL,aux693_BOOL],true);
constraint array_bool_or([aux513_BOOL,aux788_BOOL,aux693_BOOL,aux982_BOOL],true);
constraint array_bool_or([aux788_BOOL,aux693_BOOL,aux982_BOOL,aux872_BOOL],true);
constraint array_bool_or([aux693_BOOL,aux982_BOOL,aux872_BOOL,aux666_BOOL],true);
constraint array_bool_or([aux982_BOOL,aux872_BOOL,aux666_BOOL,aux559_BOOL],true);
constraint array_bool_or([aux872_BOOL,aux666_BOOL,aux559_BOOL,aux549_BOOL],true);
constraint array_bool_or([aux979_BOOL,aux1098_BOOL,aux769_BOOL,aux473_BOOL],true);
constraint array_bool_or([aux1098_BOOL,aux769_BOOL,aux473_BOOL,aux558_BOOL],true);
constraint array_bool_or([aux769_BOOL,aux473_BOOL,aux558_BOOL,aux1039_BOOL],true);
constraint array_bool_or([aux473_BOOL,aux558_BOOL,aux1039_BOOL,aux418_BOOL],true);
constraint array_bool_or([aux558_BOOL,aux1039_BOOL,aux418_BOOL,aux882_BOOL],true);
constraint array_bool_or([aux1039_BOOL,aux418_BOOL,aux882_BOOL,aux973_BOOL],true);
constraint array_bool_or([aux418_BOOL,aux882_BOOL,aux973_BOOL,aux688_BOOL],true);
constraint array_bool_or([aux882_BOOL,aux973_BOOL,aux688_BOOL,aux780_BOOL],true);
constraint array_bool_or([aux973_BOOL,aux688_BOOL,aux780_BOOL,aux486_BOOL],true);
constraint array_bool_or([aux688_BOOL,aux780_BOOL,aux486_BOOL,aux622_BOOL],true);
constraint array_bool_or([aux780_BOOL,aux486_BOOL,aux622_BOOL,aux1107_BOOL],true);
constraint array_bool_or([aux486_BOOL,aux622_BOOL,aux1107_BOOL,aux430_BOOL],true);
constraint array_bool_or([aux622_BOOL,aux1107_BOOL,aux430_BOOL,aux901_BOOL],true);
constraint array_bool_or([aux1107_BOOL,aux430_BOOL,aux901_BOOL,aux382_BOOL],true);
constraint array_bool_or([aux430_BOOL,aux901_BOOL,aux382_BOOL,aux907_BOOL],true);
constraint array_bool_or([aux901_BOOL,aux382_BOOL,aux907_BOOL,aux977_BOOL],true);
constraint array_bool_or([aux978_BOOL,aux923_BOOL,aux476_BOOL,aux1108_BOOL],true);
constraint array_bool_or([aux923_BOOL,aux476_BOOL,aux1108_BOOL,aux431_BOOL],true);
constraint array_bool_or([aux476_BOOL,aux1108_BOOL,aux431_BOOL,aux902_BOOL],true);
constraint array_bool_or([aux1108_BOOL,aux431_BOOL,aux902_BOOL,aux997_BOOL],true);
constraint array_bool_or([aux431_BOOL,aux902_BOOL,aux997_BOOL,aux699_BOOL],true);
constraint array_bool_or([aux902_BOOL,aux997_BOOL,aux699_BOOL,aux842_BOOL],true);
constraint array_bool_or([aux997_BOOL,aux699_BOOL,aux842_BOOL,aux540_BOOL],true);
constraint array_bool_or([aux699_BOOL,aux842_BOOL,aux540_BOOL,aux641_BOOL],true);
constraint array_bool_or([aux842_BOOL,aux540_BOOL,aux641_BOOL,aux1129_BOOL],true);
constraint array_bool_or([aux540_BOOL,aux641_BOOL,aux1129_BOOL,aux449_BOOL],true);
constraint array_bool_or([aux641_BOOL,aux1129_BOOL,aux449_BOOL,aux915_BOOL],true);
constraint array_bool_or([aux1129_BOOL,aux449_BOOL,aux915_BOOL,aux482_BOOL],true);
constraint array_bool_or([aux449_BOOL,aux915_BOOL,aux482_BOOL,aux572_BOOL],true);
constraint array_bool_or([aux915_BOOL,aux482_BOOL,aux572_BOOL,aux887_BOOL],true);
constraint array_bool_or([aux482_BOOL,aux572_BOOL,aux887_BOOL,aux738_BOOL],true);
constraint array_bool_or([aux572_BOOL,aux887_BOOL,aux738_BOOL,aux976_BOOL],true);
constraint array_bool_or([aux1126_BOOL,aux960_BOOL,aux819_BOOL,aux685_BOOL],true);
constraint array_bool_or([aux960_BOOL,aux819_BOOL,aux685_BOOL,aux544_BOOL],true);
constraint array_bool_or([aux819_BOOL,aux685_BOOL,aux544_BOOL,aux412_BOOL],true);
constraint array_bool_or([aux685_BOOL,aux544_BOOL,aux412_BOOL,aux999_BOOL],true);
constraint array_bool_or([aux544_BOOL,aux412_BOOL,aux999_BOOL,aux867_BOOL],true);
constraint array_bool_or([aux412_BOOL,aux999_BOOL,aux867_BOOL,aux710_BOOL],true);
constraint array_bool_or([aux999_BOOL,aux867_BOOL,aux710_BOOL,aux439_BOOL],true);
constraint array_bool_or([aux867_BOOL,aux710_BOOL,aux439_BOOL,aux1028_BOOL],true);
constraint array_bool_or([aux710_BOOL,aux439_BOOL,aux1028_BOOL,aux874_BOOL],true);
constraint array_bool_or([aux439_BOOL,aux1028_BOOL,aux874_BOOL,aux745_BOOL],true);
constraint array_bool_or([aux1028_BOOL,aux874_BOOL,aux745_BOOL,aux563_BOOL],true);
constraint array_bool_or([aux874_BOOL,aux745_BOOL,aux563_BOOL,aux423_BOOL],true);
constraint array_bool_or([aux745_BOOL,aux563_BOOL,aux423_BOOL,aux1052_BOOL],true);
constraint array_bool_or([aux563_BOOL,aux423_BOOL,aux1052_BOOL,aux1099_BOOL],true);
constraint array_bool_or([aux423_BOOL,aux1052_BOOL,aux1099_BOOL,aux1020_BOOL],true);
constraint array_bool_or([aux1052_BOOL,aux1099_BOOL,aux1020_BOOL,aux1123_BOOL],true);
constraint array_bool_or([aux1125_BOOL,aux958_BOOL,aux662_BOOL,aux970_BOOL],true);
constraint array_bool_or([aux958_BOOL,aux662_BOOL,aux970_BOOL,aux824_BOOL],true);
constraint array_bool_or([aux662_BOOL,aux970_BOOL,aux824_BOOL,aux696_BOOL],true);
constraint array_bool_or([aux970_BOOL,aux824_BOOL,aux696_BOOL,aux517_BOOL],true);
constraint array_bool_or([aux824_BOOL,aux696_BOOL,aux517_BOOL,aux381_BOOL],true);
constraint array_bool_or([aux696_BOOL,aux517_BOOL,aux381_BOOL,aux1009_BOOL],true);
constraint array_bool_or([aux517_BOOL,aux381_BOOL,aux1009_BOOL,aux700_BOOL],true);
constraint array_bool_or([aux381_BOOL,aux1009_BOOL,aux700_BOOL,aux570_BOOL],true);
constraint array_bool_or([aux1009_BOOL,aux700_BOOL,aux570_BOOL,aux406_BOOL],true);
constraint array_bool_or([aux700_BOOL,aux570_BOOL,aux406_BOOL,aux1038_BOOL],true);
constraint array_bool_or([aux570_BOOL,aux406_BOOL,aux1038_BOOL,aux879_BOOL],true);
constraint array_bool_or([aux406_BOOL,aux1038_BOOL,aux879_BOOL,aux706_BOOL],true);
constraint array_bool_or([aux1038_BOOL,aux879_BOOL,aux706_BOOL,aux575_BOOL],true);
constraint array_bool_or([aux879_BOOL,aux706_BOOL,aux575_BOOL,aux936_BOOL],true);
constraint array_bool_or([aux706_BOOL,aux575_BOOL,aux936_BOOL,aux1037_BOOL],true);
constraint array_bool_or([aux575_BOOL,aux936_BOOL,aux1037_BOOL,aux1124_BOOL],true);
constraint array_bool_or([aux1058_BOOL,aux385_BOOL,aux846_BOOL,aux918_BOOL],true);
constraint array_bool_or([aux385_BOOL,aux846_BOOL,aux918_BOOL,aux484_BOOL],true);
constraint array_bool_or([aux846_BOOL,aux918_BOOL,aux484_BOOL,aux951_BOOL],true);
constraint array_bool_or([aux918_BOOL,aux484_BOOL,aux951_BOOL,aux653_BOOL],true);
constraint array_bool_or([aux484_BOOL,aux951_BOOL,aux653_BOOL,aux392_BOOL],true);
constraint array_bool_or([aux951_BOOL,aux653_BOOL,aux392_BOOL,aux851_BOOL],true);
constraint array_bool_or([aux653_BOOL,aux392_BOOL,aux851_BOOL,aux557_BOOL],true);
constraint array_bool_or([aux392_BOOL,aux851_BOOL,aux557_BOOL,aux1076_BOOL],true);
constraint array_bool_or([aux851_BOOL,aux557_BOOL,aux1076_BOOL,aux791_BOOL],true);
constraint array_bool_or([aux557_BOOL,aux1076_BOOL,aux791_BOOL,aux501_BOOL],true);
constraint array_bool_or([aux1076_BOOL,aux791_BOOL,aux501_BOOL,aux974_BOOL],true);
constraint array_bool_or([aux791_BOOL,aux501_BOOL,aux974_BOOL,aux679_BOOL],true);
constraint array_bool_or([aux501_BOOL,aux974_BOOL,aux679_BOOL,aux440_BOOL],true);
constraint array_bool_or([aux974_BOOL,aux679_BOOL,aux440_BOOL,aux489_BOOL],true);
constraint array_bool_or([aux679_BOOL,aux440_BOOL,aux489_BOOL,aux555_BOOL],true);
constraint array_bool_or([aux440_BOOL,aux489_BOOL,aux555_BOOL,aux1056_BOOL],true);
constraint array_bool_or([aux1057_BOOL,aux625_BOOL,aux600_BOOL,aux975_BOOL],true);
constraint array_bool_or([aux625_BOOL,aux600_BOOL,aux975_BOOL,aux680_BOOL],true);
constraint array_bool_or([aux600_BOOL,aux975_BOOL,aux680_BOOL,aux441_BOOL],true);
constraint array_bool_or([aux975_BOOL,aux680_BOOL,aux441_BOOL,aux913_BOOL],true);
constraint array_bool_or([aux680_BOOL,aux441_BOOL,aux913_BOOL,aux616_BOOL],true);
constraint array_bool_or([aux441_BOOL,aux913_BOOL,aux616_BOOL,aux1095_BOOL],true);
constraint array_bool_or([aux913_BOOL,aux616_BOOL,aux1095_BOOL,aux806_BOOL],true);
constraint array_bool_or([aux616_BOOL,aux1095_BOOL,aux806_BOOL,aux514_BOOL],true);
constraint array_bool_or([aux1095_BOOL,aux806_BOOL,aux514_BOOL,aux995_BOOL],true);
constraint array_bool_or([aux806_BOOL,aux514_BOOL,aux995_BOOL,aux744_BOOL],true);
constraint array_bool_or([aux514_BOOL,aux995_BOOL,aux744_BOOL,aux454_BOOL],true);
constraint array_bool_or([aux995_BOOL,aux744_BOOL,aux454_BOOL,aux928_BOOL],true);
constraint array_bool_or([aux744_BOOL,aux454_BOOL,aux928_BOOL,aux638_BOOL],true);
constraint array_bool_or([aux454_BOOL,aux928_BOOL,aux638_BOOL,aux964_BOOL],true);
constraint array_bool_or([aux928_BOOL,aux638_BOOL,aux964_BOOL,aux812_BOOL],true);
constraint array_bool_or([aux638_BOOL,aux964_BOOL,aux812_BOOL,aux1055_BOOL],true);
constraint array_bool_or([aux658_BOOL,aux817_BOOL,aux483_BOOL,aux741_BOOL],true);
constraint array_bool_or([aux817_BOOL,aux483_BOOL,aux741_BOOL,aux843_BOOL],true);
constraint array_bool_or([aux483_BOOL,aux741_BOOL,aux843_BOOL,aux466_BOOL],true);
constraint array_bool_or([aux741_BOOL,aux843_BOOL,aux466_BOOL,aux565_BOOL],true);
constraint array_bool_or([aux843_BOOL,aux466_BOOL,aux565_BOOL,aux1046_BOOL],true);
constraint array_bool_or([aux466_BOOL,aux565_BOOL,aux1046_BOOL,aux397_BOOL],true);
constraint array_bool_or([aux565_BOOL,aux1046_BOOL,aux397_BOOL,aux859_BOOL],true);
constraint array_bool_or([aux1046_BOOL,aux397_BOOL,aux859_BOOL,aux961_BOOL],true);
constraint array_bool_or([aux397_BOOL,aux859_BOOL,aux961_BOOL,aux668_BOOL],true);
constraint array_bool_or([aux859_BOOL,aux961_BOOL,aux668_BOOL,aux774_BOOL],true);
constraint array_bool_or([aux961_BOOL,aux668_BOOL,aux774_BOOL,aux490_BOOL],true);
constraint array_bool_or([aux668_BOOL,aux774_BOOL,aux490_BOOL,aux592_BOOL],true);
constraint array_bool_or([aux774_BOOL,aux490_BOOL,aux592_BOOL,aux1069_BOOL],true);
constraint array_bool_or([aux490_BOOL,aux592_BOOL,aux1069_BOOL,aux880_BOOL],true);
constraint array_bool_or([aux592_BOOL,aux1069_BOOL,aux880_BOOL,aux620_BOOL],true);
constraint array_bool_or([aux1069_BOOL,aux880_BOOL,aux620_BOOL,aux659_BOOL],true);
constraint array_bool_or([aux660_BOOL,aux645_BOOL,aux573_BOOL,aux491_BOOL],true);
constraint array_bool_or([aux645_BOOL,aux573_BOOL,aux491_BOOL,aux593_BOOL],true);
constraint array_bool_or([aux573_BOOL,aux491_BOOL,aux593_BOOL,aux1070_BOOL],true);
constraint array_bool_or([aux491_BOOL,aux593_BOOL,aux1070_BOOL,aux419_BOOL],true);
constraint array_bool_or([aux593_BOOL,aux1070_BOOL,aux419_BOOL,aux801_BOOL],true);
constraint array_bool_or([aux1070_BOOL,aux419_BOOL,aux801_BOOL,aux519_BOOL],true);
constraint array_bool_or([aux419_BOOL,aux801_BOOL,aux519_BOOL,aux611_BOOL],true);
constraint array_bool_or([aux801_BOOL,aux519_BOOL,aux611_BOOL,aux1088_BOOL],true);
constraint array_bool_or([aux519_BOOL,aux611_BOOL,aux1088_BOOL,aux429_BOOL],true);
constraint array_bool_or([aux611_BOOL,aux1088_BOOL,aux429_BOOL,aux912_BOOL],true);
constraint array_bool_or([aux1088_BOOL,aux429_BOOL,aux912_BOOL,aux1022_BOOL],true);
constraint array_bool_or([aux429_BOOL,aux912_BOOL,aux1022_BOOL,aux727_BOOL],true);
constraint array_bool_or([aux912_BOOL,aux1022_BOOL,aux727_BOOL,aux826_BOOL],true);
constraint array_bool_or([aux1022_BOOL,aux727_BOOL,aux826_BOOL,aux985_BOOL],true);
constraint array_bool_or([aux727_BOOL,aux826_BOOL,aux985_BOOL,aux462_BOOL],true);
constraint array_bool_or([aux826_BOOL,aux985_BOOL,aux462_BOOL,aux661_BOOL],true);
constraint array_bool_or([aux1048_BOOL,aux830_BOOL,aux580_BOOL,aux766_BOOL],true);
constraint array_bool_or([aux830_BOOL,aux580_BOOL,aux766_BOOL,aux1018_BOOL],true);
constraint array_bool_or([aux580_BOOL,aux766_BOOL,aux1018_BOOL,aux503_BOOL],true);
constraint array_bool_or([aux766_BOOL,aux1018_BOOL,aux503_BOOL,aux743_BOOL],true);
constraint array_bool_or([aux1018_BOOL,aux503_BOOL,aux743_BOOL,aux895_BOOL],true);
constraint array_bool_or([aux503_BOOL,aux743_BOOL,aux895_BOOL,aux771_BOOL],true);
constraint array_bool_or([aux743_BOOL,aux895_BOOL,aux771_BOOL,aux467_BOOL],true);
constraint array_bool_or([aux895_BOOL,aux771_BOOL,aux467_BOOL,aux725_BOOL],true);
constraint array_bool_or([aux771_BOOL,aux467_BOOL,aux725_BOOL,aux584_BOOL],true);
constraint array_bool_or([aux467_BOOL,aux725_BOOL,aux584_BOOL,aux821_BOOL],true);
constraint array_bool_or([aux725_BOOL,aux584_BOOL,aux821_BOOL,aux1073_BOOL],true);
constraint array_bool_or([aux584_BOOL,aux821_BOOL,aux1073_BOOL,aux474_BOOL],true);
constraint array_bool_or([aux821_BOOL,aux1073_BOOL,aux474_BOOL,aux701_BOOL],true);
constraint array_bool_or([aux1073_BOOL,aux474_BOOL,aux701_BOOL,aux433_BOOL],true);
constraint array_bool_or([aux474_BOOL,aux701_BOOL,aux433_BOOL,aux870_BOOL],true);
constraint array_bool_or([aux701_BOOL,aux433_BOOL,aux870_BOOL,aux1042_BOOL],true);
constraint array_bool_or([aux1047_BOOL,aux753_BOOL,aux760_BOOL,aux675_BOOL],true);
constraint array_bool_or([aux753_BOOL,aux760_BOOL,aux675_BOOL,aux921_BOOL],true);
constraint array_bool_or([aux760_BOOL,aux675_BOOL,aux921_BOOL,aux778_BOOL],true);
constraint array_bool_or([aux675_BOOL,aux921_BOOL,aux778_BOOL,aux1030_BOOL],true);
constraint array_bool_or([aux921_BOOL,aux778_BOOL,aux1030_BOOL,aux428_BOOL],true);
constraint array_bool_or([aux778_BOOL,aux1030_BOOL,aux428_BOOL,aux651_BOOL],true);
constraint array_bool_or([aux1030_BOOL,aux428_BOOL,aux651_BOOL,aux759_BOOL],true);
constraint array_bool_or([aux428_BOOL,aux651_BOOL,aux759_BOOL,aux1013_BOOL],true);
constraint array_bool_or([aux651_BOOL,aux759_BOOL,aux1013_BOOL,aux477_BOOL],true);
constraint array_bool_or([aux759_BOOL,aux1013_BOOL,aux477_BOOL,aux729_BOOL],true);
constraint array_bool_or([aux1013_BOOL,aux477_BOOL,aux729_BOOL,aux595_BOOL],true);
constraint array_bool_or([aux477_BOOL,aux729_BOOL,aux595_BOOL,aux836_BOOL],true);
constraint array_bool_or([aux729_BOOL,aux595_BOOL,aux836_BOOL,aux994_BOOL],true);
constraint array_bool_or([aux595_BOOL,aux836_BOOL,aux994_BOOL,aux691_BOOL],true);
constraint array_bool_or([aux836_BOOL,aux994_BOOL,aux691_BOOL,aux863_BOOL],true);
constraint array_bool_or([aux994_BOOL,aux691_BOOL,aux863_BOOL,aux1043_BOOL],true);
constraint array_bool_or([aux628_BOOL,aux898_BOOL,aux591_BOOL,aux1101_BOOL],true);
constraint array_bool_or([aux898_BOOL,aux591_BOOL,aux1101_BOOL,aux536_BOOL],true);
constraint array_bool_or([aux591_BOOL,aux1101_BOOL,aux536_BOOL,aux599_BOOL],true);
constraint array_bool_or([aux1101_BOOL,aux536_BOOL,aux599_BOOL,aux829_BOOL],true);
constraint array_bool_or([aux536_BOOL,aux599_BOOL,aux829_BOOL,aux854_BOOL],true);
constraint array_bool_or([aux599_BOOL,aux829_BOOL,aux854_BOOL,aux1106_BOOL],true);
constraint array_bool_or([aux829_BOOL,aux854_BOOL,aux1106_BOOL,aux604_BOOL],true);
constraint array_bool_or([aux854_BOOL,aux1106_BOOL,aux604_BOOL,aux676_BOOL],true);
constraint array_bool_or([aux1106_BOOL,aux604_BOOL,aux676_BOOL,aux906_BOOL],true);
constraint array_bool_or([aux604_BOOL,aux676_BOOL,aux906_BOOL,aux1114_BOOL],true);
constraint array_bool_or([aux676_BOOL,aux906_BOOL,aux1114_BOOL,aux420_BOOL],true);
constraint array_bool_or([aux906_BOOL,aux1114_BOOL,aux420_BOOL,aux610_BOOL],true);
constraint array_bool_or([aux1114_BOOL,aux420_BOOL,aux610_BOOL,aux652_BOOL],true);
constraint array_bool_or([aux420_BOOL,aux610_BOOL,aux652_BOOL,aux461_BOOL],true);
constraint array_bool_or([aux610_BOOL,aux652_BOOL,aux461_BOOL,aux782_BOOL],true);
constraint array_bool_or([aux652_BOOL,aux461_BOOL,aux782_BOOL,aux627_BOOL],true);
constraint array_bool_or([aux629_BOOL,aux910_BOOL,aux809_BOOL,aux816_BOOL],true);
constraint array_bool_or([aux910_BOOL,aux809_BOOL,aux816_BOOL,aux861_BOOL],true);
constraint array_bool_or([aux809_BOOL,aux816_BOOL,aux861_BOOL,aux1062_BOOL],true);
constraint array_bool_or([aux816_BOOL,aux861_BOOL,aux1062_BOOL,aux546_BOOL],true);
constraint array_bool_or([aux861_BOOL,aux1062_BOOL,aux546_BOOL,aux560_BOOL],true);
constraint array_bool_or([aux1062_BOOL,aux546_BOOL,aux560_BOOL,aux803_BOOL],true);
constraint array_bool_or([aux546_BOOL,aux560_BOOL,aux803_BOOL,aux1090_BOOL],true);
constraint array_bool_or([aux560_BOOL,aux803_BOOL,aux1090_BOOL,aux384_BOOL],true);
constraint array_bool_or([aux803_BOOL,aux1090_BOOL,aux384_BOOL,aux617_BOOL],true);
constraint array_bool_or([aux1090_BOOL,aux384_BOOL,aux617_BOOL,aux828_BOOL],true);
constraint array_bool_or([aux384_BOOL,aux617_BOOL,aux828_BOOL,aux886_BOOL],true);
constraint array_bool_or([aux617_BOOL,aux828_BOOL,aux886_BOOL,aux1130_BOOL],true);
constraint array_bool_or([aux828_BOOL,aux886_BOOL,aux1130_BOOL,aux389_BOOL],true);
constraint array_bool_or([aux886_BOOL,aux1130_BOOL,aux389_BOOL,aux468_BOOL],true);
constraint array_bool_or([aux1130_BOOL,aux389_BOOL,aux468_BOOL,aux773_BOOL],true);
constraint array_bool_or([aux389_BOOL,aux468_BOOL,aux773_BOOL,aux626_BOOL],true);
constraint array_bool_or([aux893_BOOL,aux866_BOOL,aux525_BOOL,aux481_BOOL],true);
constraint array_bool_or([aux866_BOOL,aux525_BOOL,aux481_BOOL,aux632_BOOL],true);
constraint array_bool_or([aux525_BOOL,aux481_BOOL,aux632_BOOL,aux779_BOOL],true);
constraint array_bool_or([aux481_BOOL,aux632_BOOL,aux779_BOOL,aux927_BOOL],true);
constraint array_bool_or([aux632_BOOL,aux779_BOOL,aux927_BOOL,aux1089_BOOL],true);
constraint array_bool_or([aux779_BOOL,aux927_BOOL,aux1089_BOOL,aux465_BOOL],true);
constraint array_bool_or([aux927_BOOL,aux1089_BOOL,aux465_BOOL,aux756_BOOL],true);
constraint array_bool_or([aux1089_BOOL,aux465_BOOL,aux756_BOOL,aux911_BOOL],true);
constraint array_bool_or([aux465_BOOL,aux756_BOOL,aux911_BOOL,aux1054_BOOL],true);
constraint array_bool_or([aux756_BOOL,aux911_BOOL,aux1054_BOOL,aux447_BOOL],true);
constraint array_bool_or([aux911_BOOL,aux1054_BOOL,aux447_BOOL,aux598_BOOL],true);
constraint array_bool_or([aux1054_BOOL,aux447_BOOL,aux598_BOOL,aux742_BOOL],true);
constraint array_bool_or([aux447_BOOL,aux598_BOOL,aux742_BOOL,aux896_BOOL],true);
constraint array_bool_or([aux598_BOOL,aux742_BOOL,aux896_BOOL,aux1041_BOOL],true);
constraint array_bool_or([aux742_BOOL,aux896_BOOL,aux1041_BOOL,aux796_BOOL],true);
constraint array_bool_or([aux896_BOOL,aux1041_BOOL,aux796_BOOL,aux890_BOOL],true);
constraint array_bool_or([aux892_BOOL,aux860_BOOL,aux682_BOOL,aux959_BOOL],true);
constraint array_bool_or([aux860_BOOL,aux682_BOOL,aux959_BOOL,aux1104_BOOL],true);
constraint array_bool_or([aux682_BOOL,aux959_BOOL,aux1104_BOOL,aux492_BOOL],true);
constraint array_bool_or([aux959_BOOL,aux1104_BOOL,aux492_BOOL,aux643_BOOL],true);
constraint array_bool_or([aux1104_BOOL,aux492_BOOL,aux643_BOOL,aux793_BOOL],true);
constraint array_bool_or([aux492_BOOL,aux643_BOOL,aux793_BOOL,aux945_BOOL],true);
constraint array_bool_or([aux643_BOOL,aux793_BOOL,aux945_BOOL,aux471_BOOL],true);
constraint array_bool_or([aux793_BOOL,aux945_BOOL,aux471_BOOL,aux603_BOOL],true);
constraint array_bool_or([aux945_BOOL,aux471_BOOL,aux603_BOOL,aux768_BOOL],true);
constraint array_bool_or([aux471_BOOL,aux603_BOOL,aux768_BOOL,aux920_BOOL],true);
constraint array_bool_or([aux603_BOOL,aux768_BOOL,aux920_BOOL,aux1066_BOOL],true);
constraint array_bool_or([aux768_BOOL,aux920_BOOL,aux1066_BOOL,aux455_BOOL],true);
constraint array_bool_or([aux920_BOOL,aux1066_BOOL,aux455_BOOL,aux609_BOOL],true);
constraint array_bool_or([aux1066_BOOL,aux455_BOOL,aux609_BOOL,aux450_BOOL],true);
constraint array_bool_or([aux455_BOOL,aux609_BOOL,aux450_BOOL,aux789_BOOL],true);
constraint array_bool_or([aux609_BOOL,aux450_BOOL,aux789_BOOL,aux891_BOOL],true);
constraint array_bool_or([aux1003_BOOL,aux939_BOOL,aux407_BOOL,aux633_BOOL],true);
constraint array_bool_or([aux939_BOOL,aux407_BOOL,aux633_BOOL,aux535_BOOL],true);
constraint array_bool_or([aux407_BOOL,aux633_BOOL,aux535_BOOL,aux818_BOOL],true);
constraint array_bool_or([aux633_BOOL,aux535_BOOL,aux818_BOOL,aux723_BOOL],true);
constraint array_bool_or([aux535_BOOL,aux818_BOOL,aux723_BOOL,aux1006_BOOL],true);
constraint array_bool_or([aux818_BOOL,aux723_BOOL,aux1006_BOOL,aux908_BOOL],true);
constraint array_bool_or([aux723_BOOL,aux1006_BOOL,aux908_BOOL,aux434_BOOL],true);
constraint array_bool_or([aux1006_BOOL,aux908_BOOL,aux434_BOOL,aux1097_BOOL],true);
constraint array_bool_or([aux908_BOOL,aux434_BOOL,aux1097_BOOL,aux605_BOOL],true);
constraint array_bool_or([aux434_BOOL,aux1097_BOOL,aux605_BOOL,aux504_BOOL],true);
constraint array_bool_or([aux1097_BOOL,aux605_BOOL,aux504_BOOL,aux798_BOOL],true);
constraint array_bool_or([aux605_BOOL,aux504_BOOL,aux798_BOOL,aux694_BOOL],true);
constraint array_bool_or([aux504_BOOL,aux798_BOOL,aux694_BOOL,aux968_BOOL],true);
constraint array_bool_or([aux798_BOOL,aux694_BOOL,aux968_BOOL,aux765_BOOL],true);
constraint array_bool_or([aux694_BOOL,aux968_BOOL,aux765_BOOL,aux394_BOOL],true);
constraint array_bool_or([aux968_BOOL,aux765_BOOL,aux394_BOOL,aux1001_BOOL],true);
constraint array_bool_or([aux1000_BOOL,aux531_BOOL,aux1063_BOOL,aux799_BOOL],true);
constraint array_bool_or([aux531_BOOL,aux1063_BOOL,aux799_BOOL,aux695_BOOL],true);
constraint array_bool_or([aux1063_BOOL,aux799_BOOL,aux695_BOOL,aux969_BOOL],true);
constraint array_bool_or([aux799_BOOL,aux695_BOOL,aux969_BOOL,aux878_BOOL],true);
constraint array_bool_or([aux695_BOOL,aux969_BOOL,aux878_BOOL,aux404_BOOL],true);
constraint array_bool_or([aux969_BOOL,aux878_BOOL,aux404_BOOL,aux1060_BOOL],true);
constraint array_bool_or([aux878_BOOL,aux404_BOOL,aux1060_BOOL,aux574_BOOL],true);
constraint array_bool_or([aux404_BOOL,aux1060_BOOL,aux574_BOOL,aux475_BOOL],true);
constraint array_bool_or([aux1060_BOOL,aux574_BOOL,aux475_BOOL,aux764_BOOL],true);
constraint array_bool_or([aux574_BOOL,aux475_BOOL,aux764_BOOL,aux654_BOOL],true);
constraint array_bool_or([aux475_BOOL,aux764_BOOL,aux654_BOOL,aux942_BOOL],true);
constraint array_bool_or([aux764_BOOL,aux654_BOOL,aux942_BOOL,aux644_BOOL],true);
constraint array_bool_or([aux654_BOOL,aux942_BOOL,aux644_BOOL,aux547_BOOL],true);
constraint array_bool_or([aux942_BOOL,aux644_BOOL,aux547_BOOL,aux655_BOOL],true);
constraint array_bool_or([aux644_BOOL,aux547_BOOL,aux655_BOOL,aux726_BOOL],true);
constraint array_bool_or([aux547_BOOL,aux655_BOOL,aux726_BOOL,aux1002_BOOL],true);
constraint array_bool_or([aux718_BOOL,aux1102_BOOL,aux792_BOOL,aux637_BOOL],true);
constraint array_bool_or([aux1102_BOOL,aux792_BOOL,aux637_BOOL,aux1117_BOOL],true);
constraint array_bool_or([aux792_BOOL,aux637_BOOL,aux1117_BOOL,aux453_BOOL],true);
constraint array_bool_or([aux637_BOOL,aux1117_BOOL,aux453_BOOL,aux938_BOOL],true);
constraint array_bool_or([aux1117_BOOL,aux453_BOOL,aux938_BOOL,aux1035_BOOL],true);
constraint array_bool_or([aux453_BOOL,aux938_BOOL,aux1035_BOOL,aux697_BOOL],true);
constraint array_bool_or([aux938_BOOL,aux1035_BOOL,aux697_BOOL,aux800_BOOL],true);
constraint array_bool_or([aux1035_BOOL,aux697_BOOL,aux800_BOOL,aux518_BOOL],true);
constraint array_bool_or([aux697_BOOL,aux800_BOOL,aux518_BOOL,aux618_BOOL],true);
constraint array_bool_or([aux800_BOOL,aux518_BOOL,aux618_BOOL,aux1100_BOOL],true);
constraint array_bool_or([aux518_BOOL,aux618_BOOL,aux1100_BOOL,aux436_BOOL],true);
constraint array_bool_or([aux618_BOOL,aux1100_BOOL,aux436_BOOL,aux776_BOOL],true);
constraint array_bool_or([aux1100_BOOL,aux436_BOOL,aux776_BOOL,aux493_BOOL],true);
constraint array_bool_or([aux436_BOOL,aux776_BOOL,aux493_BOOL,aux388_BOOL],true);
constraint array_bool_or([aux776_BOOL,aux493_BOOL,aux388_BOOL,aux900_BOOL],true);
constraint array_bool_or([aux493_BOOL,aux388_BOOL,aux900_BOOL,aux715_BOOL],true);
constraint array_bool_or([aux717_BOOL,aux790_BOOL,aux498_BOOL,aux437_BOOL],true);
constraint array_bool_or([aux790_BOOL,aux498_BOOL,aux437_BOOL,aux777_BOOL],true);
constraint array_bool_or([aux498_BOOL,aux437_BOOL,aux777_BOOL,aux494_BOOL],true);
constraint array_bool_or([aux437_BOOL,aux777_BOOL,aux494_BOOL,aux586_BOOL],true);
constraint array_bool_or([aux777_BOOL,aux494_BOOL,aux586_BOOL,aux1071_BOOL],true);
constraint array_bool_or([aux494_BOOL,aux586_BOOL,aux1071_BOOL,aux422_BOOL],true);
constraint array_bool_or([aux586_BOOL,aux1071_BOOL,aux422_BOOL,aux888_BOOL],true);
constraint array_bool_or([aux1071_BOOL,aux422_BOOL,aux888_BOOL,aux946_BOOL],true);
constraint array_bool_or([aux422_BOOL,aux888_BOOL,aux946_BOOL,aux650_BOOL],true);
constraint array_bool_or([aux888_BOOL,aux946_BOOL,aux650_BOOL,aux754_BOOL],true);
constraint array_bool_or([aux946_BOOL,aux650_BOOL,aux754_BOOL,aux478_BOOL],true);
constraint array_bool_or([aux650_BOOL,aux754_BOOL,aux478_BOOL,aux568_BOOL],true);
constraint array_bool_or([aux754_BOOL,aux478_BOOL,aux568_BOOL,aux1059_BOOL],true);
constraint array_bool_or([aux478_BOOL,aux568_BOOL,aux1059_BOOL,aux862_BOOL],true);
constraint array_bool_or([aux568_BOOL,aux1059_BOOL,aux862_BOOL,aux594_BOOL],true);
constraint array_bool_or([aux1059_BOOL,aux862_BOOL,aux594_BOOL,aux716_BOOL],true);
constraint array_bool_or([aux932_BOOL,aux470_BOOL,aux724_BOOL,aux703_BOOL],true);
constraint array_bool_or([aux470_BOOL,aux724_BOOL,aux703_BOOL,aux566_BOOL],true);
constraint array_bool_or([aux724_BOOL,aux703_BOOL,aux566_BOOL,aux783_BOOL],true);
constraint array_bool_or([aux703_BOOL,aux566_BOOL,aux783_BOOL,aux1021_BOOL],true);
constraint array_bool_or([aux566_BOOL,aux783_BOOL,aux1021_BOOL,aux499_BOOL],true);
constraint array_bool_or([aux783_BOOL,aux1021_BOOL,aux499_BOOL,aux709_BOOL],true);
constraint array_bool_or([aux1021_BOOL,aux499_BOOL,aux709_BOOL,aux835_BOOL],true);
constraint array_bool_or([aux499_BOOL,aux709_BOOL,aux835_BOOL,aux1040_BOOL],true);
constraint array_bool_or([aux709_BOOL,aux835_BOOL,aux1040_BOOL,aux523_BOOL],true);
constraint array_bool_or([aux835_BOOL,aux1040_BOOL,aux523_BOOL,aux398_BOOL],true);
constraint array_bool_or([aux1040_BOOL,aux523_BOOL,aux398_BOOL,aux582_BOOL],true);
constraint array_bool_or([aux523_BOOL,aux398_BOOL,aux582_BOOL,aux844_BOOL],true);
constraint array_bool_or([aux398_BOOL,aux582_BOOL,aux844_BOOL,aux1045_BOOL],true);
constraint array_bool_or([aux582_BOOL,aux844_BOOL,aux1045_BOOL,aux941_BOOL],true);
constraint array_bool_or([aux844_BOOL,aux1045_BOOL,aux941_BOOL,aux953_BOOL],true);
constraint array_bool_or([aux1045_BOOL,aux941_BOOL,aux953_BOOL,aux933_BOOL],true);
constraint array_bool_or([aux931_BOOL,aux463_BOOL,aux930_BOOL,aux989_BOOL],true);
constraint array_bool_or([aux463_BOOL,aux930_BOOL,aux989_BOOL,aux480_BOOL],true);
constraint array_bool_or([aux930_BOOL,aux989_BOOL,aux480_BOOL,aux720_BOOL],true);
constraint array_bool_or([aux989_BOOL,aux480_BOOL,aux720_BOOL,aux914_BOOL],true);
constraint array_bool_or([aux480_BOOL,aux720_BOOL,aux914_BOOL,aux797_BOOL],true);
constraint array_bool_or([aux720_BOOL,aux914_BOOL,aux797_BOOL,aux998_BOOL],true);
constraint array_bool_or([aux914_BOOL,aux797_BOOL,aux998_BOOL,aux748_BOOL],true);
constraint array_bool_or([aux797_BOOL,aux998_BOOL,aux748_BOOL,aux561_BOOL],true);
constraint array_bool_or([aux998_BOOL,aux748_BOOL,aux561_BOOL,aux804_BOOL],true);
constraint array_bool_or([aux748_BOOL,aux561_BOOL,aux804_BOOL,aux1051_BOOL],true);
constraint array_bool_or([aux561_BOOL,aux804_BOOL,aux1051_BOOL,aux495_BOOL],true);
constraint array_bool_or([aux804_BOOL,aux1051_BOOL,aux495_BOOL,aux732_BOOL],true);
constraint array_bool_or([aux1051_BOOL,aux495_BOOL,aux732_BOOL,aux590_BOOL],true);
constraint array_bool_or([aux495_BOOL,aux732_BOOL,aux590_BOOL,aux411_BOOL],true);
constraint array_bool_or([aux732_BOOL,aux590_BOOL,aux411_BOOL,aux533_BOOL],true);
constraint array_bool_or([aux590_BOOL,aux411_BOOL,aux533_BOOL,aux934_BOOL],true);
constraint array_bool_or([aux1014_BOOL,aux511_BOOL,aux403_BOOL,aux847_BOOL],true);
constraint array_bool_or([aux511_BOOL,aux403_BOOL,aux847_BOOL,aux815_BOOL],true);
constraint array_bool_or([aux403_BOOL,aux847_BOOL,aux815_BOOL,aux965_BOOL],true);
constraint array_bool_or([aux847_BOOL,aux815_BOOL,aux965_BOOL,aux530_BOOL],true);
constraint array_bool_or([aux815_BOOL,aux965_BOOL,aux530_BOOL,aux689_BOOL],true);
constraint array_bool_or([aux965_BOOL,aux530_BOOL,aux689_BOOL,aux853_BOOL],true);
constraint array_bool_or([aux530_BOOL,aux689_BOOL,aux853_BOOL,aux1132_BOOL],true);
constraint array_bool_or([aux689_BOOL,aux853_BOOL,aux1132_BOOL,aux516_BOOL],true);
constraint array_bool_or([aux853_BOOL,aux1132_BOOL,aux516_BOOL,aux669_BOOL],true);
constraint array_bool_or([aux1132_BOOL,aux516_BOOL,aux669_BOOL,aux619_BOOL],true);
constraint array_bool_or([aux516_BOOL,aux669_BOOL,aux619_BOOL,aux785_BOOL],true);
constraint array_bool_or([aux669_BOOL,aux619_BOOL,aux785_BOOL,aux1138_BOOL],true);
constraint array_bool_or([aux619_BOOL,aux785_BOOL,aux1138_BOOL,aux500_BOOL],true);
constraint array_bool_or([aux785_BOOL,aux1138_BOOL,aux500_BOOL,aux1103_BOOL],true);
constraint array_bool_or([aux1138_BOOL,aux500_BOOL,aux1103_BOOL,aux1017_BOOL],true);
constraint array_bool_or([aux500_BOOL,aux1103_BOOL,aux1017_BOOL,aux1012_BOOL],true);
constraint array_bool_or([aux1015_BOOL,aux526_BOOL,aux562_BOOL,aux395_BOOL],true);
constraint array_bool_or([aux526_BOOL,aux562_BOOL,aux395_BOOL,aux721_BOOL],true);
constraint array_bool_or([aux562_BOOL,aux395_BOOL,aux721_BOOL,aux856_BOOL],true);
constraint array_bool_or([aux395_BOOL,aux721_BOOL,aux856_BOOL,aux827_BOOL],true);
constraint array_bool_or([aux721_BOOL,aux856_BOOL,aux827_BOOL,aux983_BOOL],true);
constraint array_bool_or([aux856_BOOL,aux827_BOOL,aux983_BOOL,aux538_BOOL],true);
constraint array_bool_or([aux827_BOOL,aux983_BOOL,aux538_BOOL,aux648_BOOL],true);
constraint array_bool_or([aux983_BOOL,aux538_BOOL,aux648_BOOL,aux795_BOOL],true);
constraint array_bool_or([aux538_BOOL,aux648_BOOL,aux795_BOOL,aux944_BOOL],true);
constraint array_bool_or([aux648_BOOL,aux795_BOOL,aux944_BOOL,aux527_BOOL],true);
constraint array_bool_or([aux795_BOOL,aux944_BOOL,aux527_BOOL,aux684_BOOL],true);
constraint array_bool_or([aux944_BOOL,aux527_BOOL,aux684_BOOL,aux630_BOOL],true);
constraint array_bool_or([aux527_BOOL,aux684_BOOL,aux630_BOOL,aux786_BOOL],true);
constraint array_bool_or([aux684_BOOL,aux630_BOOL,aux786_BOOL,aux497_BOOL],true);
constraint array_bool_or([aux630_BOOL,aux786_BOOL,aux497_BOOL,aux1034_BOOL],true);
constraint array_bool_or([aux786_BOOL,aux497_BOOL,aux1034_BOOL,aux1011_BOOL],true);
constraint array_bool_or([aux1081_BOOL,aux839_BOOL,aux488_BOOL,aux775_BOOL],true);
constraint array_bool_or([aux839_BOOL,aux488_BOOL,aux775_BOOL,aux507_BOOL],true);
constraint array_bool_or([aux488_BOOL,aux775_BOOL,aux507_BOOL,aux596_BOOL],true);
constraint array_bool_or([aux775_BOOL,aux507_BOOL,aux596_BOOL,aux1074_BOOL],true);
constraint array_bool_or([aux507_BOOL,aux596_BOOL,aux1074_BOOL,aux707_BOOL],true);
constraint array_bool_or([aux596_BOOL,aux1074_BOOL,aux707_BOOL,aux802_BOOL],true);
constraint array_bool_or([aux1074_BOOL,aux707_BOOL,aux802_BOOL,aux510_BOOL],true);
constraint array_bool_or([aux707_BOOL,aux802_BOOL,aux510_BOOL,aux602_BOOL],true);
constraint array_bool_or([aux802_BOOL,aux510_BOOL,aux602_BOOL,aux1110_BOOL],true);
constraint array_bool_or([aux510_BOOL,aux602_BOOL,aux1110_BOOL,aux432_BOOL],true);
constraint array_bool_or([aux602_BOOL,aux1110_BOOL,aux432_BOOL,aux925_BOOL],true);
constraint array_bool_or([aux1110_BOOL,aux432_BOOL,aux925_BOOL,aux1024_BOOL],true);
constraint array_bool_or([aux432_BOOL,aux925_BOOL,aux1024_BOOL,aux730_BOOL],true);
constraint array_bool_or([aux925_BOOL,aux1024_BOOL,aux730_BOOL,aux807_BOOL],true);
constraint array_bool_or([aux1024_BOOL,aux730_BOOL,aux807_BOOL,aux647_BOOL],true);
constraint array_bool_or([aux730_BOOL,aux807_BOOL,aux647_BOOL,aux1083_BOOL],true);
constraint array_bool_or([aux1084_BOOL,aux567_BOOL,aux581_BOOL,aux926_BOOL],true);
constraint array_bool_or([aux567_BOOL,aux581_BOOL,aux926_BOOL,aux1025_BOOL],true);
constraint array_bool_or([aux581_BOOL,aux926_BOOL,aux1025_BOOL,aux731_BOOL],true);
constraint array_bool_or([aux926_BOOL,aux1025_BOOL,aux731_BOOL,aux845_BOOL],true);
constraint array_bool_or([aux1025_BOOL,aux731_BOOL,aux845_BOOL,aux539_BOOL],true);
constraint array_bool_or([aux731_BOOL,aux845_BOOL,aux539_BOOL,aux639_BOOL],true);
constraint array_bool_or([aux845_BOOL,aux539_BOOL,aux639_BOOL,aux1131_BOOL],true);
constraint array_bool_or([aux539_BOOL,aux639_BOOL,aux1131_BOOL,aux391_BOOL],true);
constraint array_bool_or([aux639_BOOL,aux1131_BOOL,aux391_BOOL,aux850_BOOL],true);
constraint array_bool_or([aux1131_BOOL,aux391_BOOL,aux850_BOOL,aux940_BOOL],true);
constraint array_bool_or([aux391_BOOL,aux850_BOOL,aux940_BOOL,aux674_BOOL],true);
constraint array_bool_or([aux850_BOOL,aux940_BOOL,aux674_BOOL,aux763_BOOL],true);
constraint array_bool_or([aux940_BOOL,aux674_BOOL,aux763_BOOL,aux496_BOOL],true);
constraint array_bool_or([aux674_BOOL,aux763_BOOL,aux496_BOOL,aux509_BOOL],true);
constraint array_bool_or([aux763_BOOL,aux496_BOOL,aux509_BOOL,aux399_BOOL],true);
constraint array_bool_or([aux496_BOOL,aux509_BOOL,aux399_BOOL,aux1082_BOOL],true);
constraint bool_clause([aux458_BOOL,aux1162_BOOL],[]);
constraint bool_clause([aux459_BOOL,aux1163_BOOL],[]);
constraint bool_clause([aux1094_BOOL,aux1164_BOOL],[]);
constraint bool_clause([aux1093_BOOL,aux1165_BOOL],[]);
constraint bool_clause([aux712_BOOL,aux1166_BOOL],[]);
constraint bool_clause([aux713_BOOL,aux1167_BOOL],[]);
constraint bool_clause([aux990_BOOL,aux1168_BOOL],[]);
constraint bool_clause([aux993_BOOL,aux1169_BOOL],[]);
constraint bool_clause([aux1122_BOOL,aux1170_BOOL],[]);
constraint bool_clause([aux1121_BOOL,aux1171_BOOL],[]);
constraint bool_clause([aux614_BOOL,aux1172_BOOL],[]);
constraint bool_clause([aux615_BOOL,aux1173_BOOL],[]);
constraint bool_clause([aux578_BOOL,aux1174_BOOL],[]);
constraint bool_clause([aux579_BOOL,aux1175_BOOL],[]);
constraint bool_clause([aux550_BOOL,aux1176_BOOL],[]);
constraint bool_clause([aux552_BOOL,aux1177_BOOL],[]);
constraint bool_clause([aux979_BOOL,aux1178_BOOL],[]);
constraint bool_clause([aux978_BOOL,aux1179_BOOL],[]);
constraint bool_clause([aux1126_BOOL,aux1180_BOOL],[]);
constraint bool_clause([aux1125_BOOL,aux1181_BOOL],[]);
constraint bool_clause([aux1058_BOOL,aux1182_BOOL],[]);
constraint bool_clause([aux1057_BOOL,aux1183_BOOL],[]);
constraint bool_clause([aux658_BOOL,aux1184_BOOL],[]);
constraint bool_clause([aux660_BOOL,aux1185_BOOL],[]);
constraint bool_clause([aux1048_BOOL,aux1186_BOOL],[]);
constraint bool_clause([aux1047_BOOL,aux1187_BOOL],[]);
constraint bool_clause([aux628_BOOL,aux1188_BOOL],[]);
constraint bool_clause([aux629_BOOL,aux1189_BOOL],[]);
constraint bool_clause([aux893_BOOL,aux1190_BOOL],[]);
constraint bool_clause([aux892_BOOL,aux1191_BOOL],[]);
constraint bool_clause([aux1003_BOOL,aux1192_BOOL],[]);
constraint bool_clause([aux1000_BOOL,aux1193_BOOL],[]);
constraint bool_clause([aux718_BOOL,aux1194_BOOL],[]);
constraint bool_clause([aux717_BOOL,aux1195_BOOL],[]);
constraint bool_clause([aux932_BOOL,aux1196_BOOL],[]);
constraint bool_clause([aux931_BOOL,aux1197_BOOL],[]);
constraint bool_clause([aux1014_BOOL,aux1198_BOOL],[]);
constraint bool_clause([aux1015_BOOL,aux1199_BOOL],[]);
constraint bool_clause([aux1081_BOOL,aux1200_BOOL],[]);
constraint bool_clause([aux1084_BOOL,aux1201_BOOL],[]);
constraint array_bool_or([aux459_BOOL,aux415_BOOL,aux1203_BOOL],true);
constraint array_bool_or([aux1204_BOOL,aux458_BOOL,aux415_BOOL],true);
constraint array_bool_or([aux1205_BOOL,aux458_BOOL,aux413_BOOL],true);
constraint array_bool_or([aux1206_BOOL,aux459_BOOL,aux413_BOOL],true);
constraint array_bool_or([aux1208_BOOL,aux415_BOOL,aux678_BOOL],true);
constraint array_bool_or([aux1209_BOOL,aux413_BOOL,aux678_BOOL],true);
constraint array_bool_or([aux1210_BOOL,aux413_BOOL,aux935_BOOL],true);
constraint array_bool_or([aux1211_BOOL,aux415_BOOL,aux935_BOOL],true);
constraint array_bool_or([aux1213_BOOL,aux678_BOOL,aux728_BOOL],true);
constraint array_bool_or([aux1214_BOOL,aux935_BOOL,aux728_BOOL],true);
constraint array_bool_or([aux1215_BOOL,aux935_BOOL,aux1019_BOOL],true);
constraint array_bool_or([aux1216_BOOL,aux678_BOOL,aux1019_BOOL],true);
constraint array_bool_or([aux1218_BOOL,aux728_BOOL,aux485_BOOL],true);
constraint array_bool_or([aux1219_BOOL,aux1019_BOOL,aux485_BOOL],true);
constraint array_bool_or([aux1220_BOOL,aux1019_BOOL,aux761_BOOL],true);
constraint array_bool_or([aux1221_BOOL,aux728_BOOL,aux761_BOOL],true);
constraint array_bool_or([aux1223_BOOL,aux485_BOOL,aux1010_BOOL],true);
constraint array_bool_or([aux1224_BOOL,aux761_BOOL,aux1010_BOOL],true);
constraint array_bool_or([aux1225_BOOL,aux761_BOOL,aux903_BOOL],true);
constraint array_bool_or([aux1226_BOOL,aux485_BOOL,aux903_BOOL],true);
constraint array_bool_or([aux1228_BOOL,aux1010_BOOL,aux749_BOOL],true);
constraint array_bool_or([aux1229_BOOL,aux903_BOOL,aux749_BOOL],true);
constraint array_bool_or([aux1230_BOOL,aux903_BOOL,aux746_BOOL],true);
constraint array_bool_or([aux1231_BOOL,aux1010_BOOL,aux746_BOOL],true);
constraint array_bool_or([aux1233_BOOL,aux749_BOOL,aux601_BOOL],true);
constraint array_bool_or([aux1234_BOOL,aux746_BOOL,aux601_BOOL],true);
constraint array_bool_or([aux1235_BOOL,aux746_BOOL,aux502_BOOL],true);
constraint array_bool_or([aux1236_BOOL,aux749_BOOL,aux502_BOOL],true);
constraint array_bool_or([aux1238_BOOL,aux601_BOOL,aux734_BOOL],true);
constraint array_bool_or([aux1239_BOOL,aux502_BOOL,aux734_BOOL],true);
constraint array_bool_or([aux1240_BOOL,aux502_BOOL,aux1027_BOOL],true);
constraint array_bool_or([aux1241_BOOL,aux601_BOOL,aux1027_BOOL],true);
constraint array_bool_or([aux1243_BOOL,aux734_BOOL,aux1031_BOOL],true);
constraint array_bool_or([aux1244_BOOL,aux1027_BOOL,aux1031_BOOL],true);
constraint array_bool_or([aux1245_BOOL,aux1027_BOOL,aux929_BOOL],true);
constraint array_bool_or([aux1246_BOOL,aux734_BOOL,aux929_BOOL],true);
constraint array_bool_or([aux1248_BOOL,aux1031_BOOL,aux781_BOOL],true);
constraint array_bool_or([aux1249_BOOL,aux929_BOOL,aux781_BOOL],true);
constraint array_bool_or([aux1250_BOOL,aux929_BOOL,aux681_BOOL],true);
constraint array_bool_or([aux1251_BOOL,aux1031_BOOL,aux681_BOOL],true);
constraint array_bool_or([aux1253_BOOL,aux781_BOOL,aux917_BOOL],true);
constraint array_bool_or([aux1254_BOOL,aux681_BOOL,aux917_BOOL],true);
constraint array_bool_or([aux1255_BOOL,aux681_BOOL,aux445_BOOL],true);
constraint array_bool_or([aux1256_BOOL,aux781_BOOL,aux445_BOOL],true);
constraint array_bool_or([aux1258_BOOL,aux917_BOOL,aux663_BOOL],true);
constraint array_bool_or([aux1259_BOOL,aux445_BOOL,aux663_BOOL],true);
constraint array_bool_or([aux1260_BOOL,aux445_BOOL,aux949_BOOL],true);
constraint array_bool_or([aux1261_BOOL,aux917_BOOL,aux949_BOOL],true);
constraint array_bool_or([aux1263_BOOL,aux663_BOOL,aux427_BOOL],true);
constraint array_bool_or([aux1264_BOOL,aux949_BOOL,aux427_BOOL],true);
constraint array_bool_or([aux1265_BOOL,aux949_BOOL,aux1080_BOOL],true);
constraint array_bool_or([aux1266_BOOL,aux663_BOOL,aux1080_BOOL],true);
constraint array_bool_or([aux1268_BOOL,aux427_BOOL,aux1036_BOOL],true);
constraint array_bool_or([aux1269_BOOL,aux1080_BOOL,aux1036_BOOL],true);
constraint array_bool_or([aux1270_BOOL,aux1080_BOOL,aux937_BOOL],true);
constraint array_bool_or([aux1271_BOOL,aux427_BOOL,aux937_BOOL],true);
constraint array_bool_or([aux1273_BOOL,aux1036_BOOL,aux794_BOOL],true);
constraint array_bool_or([aux1274_BOOL,aux937_BOOL,aux794_BOOL],true);
constraint array_bool_or([aux1275_BOOL,aux937_BOOL,aux686_BOOL],true);
constraint array_bool_or([aux1276_BOOL,aux1036_BOOL,aux686_BOOL],true);
constraint array_bool_or([aux1278_BOOL,aux794_BOOL,aux834_BOOL],true);
constraint array_bool_or([aux1279_BOOL,aux686_BOOL,aux834_BOOL],true);
constraint array_bool_or([aux1280_BOOL,aux686_BOOL,aux1005_BOOL],true);
constraint array_bool_or([aux1281_BOOL,aux794_BOOL,aux1005_BOOL],true);
constraint array_bool_or([aux1283_BOOL,aux834_BOOL,aux664_BOOL],true);
constraint array_bool_or([aux1284_BOOL,aux1005_BOOL,aux664_BOOL],true);
constraint array_bool_or([aux1285_BOOL,aux1005_BOOL,aux673_BOOL],true);
constraint array_bool_or([aux1286_BOOL,aux834_BOOL,aux673_BOOL],true);
constraint array_bool_or([aux1288_BOOL,aux664_BOOL,aux456_BOOL],true);
constraint array_bool_or([aux1289_BOOL,aux673_BOOL,aux456_BOOL],true);
constraint array_bool_or([aux1290_BOOL,aux673_BOOL,aux457_BOOL],true);
constraint array_bool_or([aux1291_BOOL,aux664_BOOL,aux457_BOOL],true);
constraint array_bool_or([aux1293_BOOL,aux1093_BOOL,aux405_BOOL],true);
constraint array_bool_or([aux1094_BOOL,aux405_BOOL,aux1294_BOOL],true);
constraint array_bool_or([aux1094_BOOL,aux410_BOOL,aux1295_BOOL],true);
constraint array_bool_or([aux1093_BOOL,aux410_BOOL,aux1296_BOOL],true);
constraint array_bool_or([aux1298_BOOL,aux405_BOOL,aux512_BOOL],true);
constraint array_bool_or([aux410_BOOL,aux512_BOOL,aux1299_BOOL],true);
constraint array_bool_or([aux410_BOOL,aux1118_BOOL,aux1300_BOOL],true);
constraint array_bool_or([aux405_BOOL,aux1118_BOOL,aux1301_BOOL],true);
constraint array_bool_or([aux1303_BOOL,aux512_BOOL,aux634_BOOL],true);
constraint array_bool_or([aux1118_BOOL,aux634_BOOL,aux1304_BOOL],true);
constraint array_bool_or([aux1118_BOOL,aux1116_BOOL,aux1305_BOOL],true);
constraint array_bool_or([aux512_BOOL,aux1116_BOOL,aux1306_BOOL],true);
constraint array_bool_or([aux1308_BOOL,aux634_BOOL,aux813_BOOL],true);
constraint array_bool_or([aux1116_BOOL,aux813_BOOL,aux1309_BOOL],true);
constraint array_bool_or([aux1116_BOOL,aux524_BOOL,aux1310_BOOL],true);
constraint array_bool_or([aux634_BOOL,aux524_BOOL,aux1311_BOOL],true);
constraint array_bool_or([aux1313_BOOL,aux813_BOOL,aux1053_BOOL],true);
constraint array_bool_or([aux524_BOOL,aux1053_BOOL,aux1314_BOOL],true);
constraint array_bool_or([aux524_BOOL,aux387_BOOL,aux1315_BOOL],true);
constraint array_bool_or([aux813_BOOL,aux387_BOOL,aux1316_BOOL],true);
constraint array_bool_or([aux1318_BOOL,aux1053_BOOL,aux515_BOOL],true);
constraint array_bool_or([aux387_BOOL,aux515_BOOL,aux1319_BOOL],true);
constraint array_bool_or([aux387_BOOL,aux608_BOOL,aux1320_BOOL],true);
constraint array_bool_or([aux1053_BOOL,aux608_BOOL,aux1321_BOOL],true);
constraint array_bool_or([aux1323_BOOL,aux515_BOOL,aux417_BOOL],true);
constraint array_bool_or([aux608_BOOL,aux417_BOOL,aux1324_BOOL],true);
constraint array_bool_or([aux608_BOOL,aux881_BOOL,aux1325_BOOL],true);
constraint array_bool_or([aux515_BOOL,aux881_BOOL,aux1326_BOOL],true);
constraint array_bool_or([aux1328_BOOL,aux417_BOOL,aux640_BOOL],true);
constraint array_bool_or([aux881_BOOL,aux640_BOOL,aux1329_BOOL],true);
constraint array_bool_or([aux881_BOOL,aux1128_BOOL,aux1330_BOOL],true);
constraint array_bool_or([aux417_BOOL,aux1128_BOOL,aux1331_BOOL],true);
constraint array_bool_or([aux1333_BOOL,aux640_BOOL,aux1140_BOOL],true);
constraint array_bool_or([aux1128_BOOL,aux1140_BOOL,aux1334_BOOL],true);
constraint array_bool_or([aux1128_BOOL,aux452_BOOL,aux1335_BOOL],true);
constraint array_bool_or([aux640_BOOL,aux452_BOOL,aux1336_BOOL],true);
constraint array_bool_or([aux1338_BOOL,aux1140_BOOL,aux967_BOOL],true);
constraint array_bool_or([aux452_BOOL,aux967_BOOL,aux1339_BOOL],true);
constraint array_bool_or([aux452_BOOL,aux687_BOOL,aux1340_BOOL],true);
constraint array_bool_or([aux1140_BOOL,aux687_BOOL,aux1341_BOOL],true);
constraint array_bool_or([aux1343_BOOL,aux967_BOOL,aux448_BOOL],true);
constraint array_bool_or([aux687_BOOL,aux448_BOOL,aux1344_BOOL],true);
constraint array_bool_or([aux687_BOOL,aux864_BOOL,aux1345_BOOL],true);
constraint array_bool_or([aux967_BOOL,aux864_BOOL,aux1346_BOOL],true);
constraint array_bool_or([aux1348_BOOL,aux448_BOOL,aux624_BOOL],true);
constraint array_bool_or([aux864_BOOL,aux624_BOOL,aux1349_BOOL],true);
constraint array_bool_or([aux864_BOOL,aux1105_BOOL,aux1350_BOOL],true);
constraint array_bool_or([aux448_BOOL,aux1105_BOOL,aux1351_BOOL],true);
constraint array_bool_or([aux1353_BOOL,aux624_BOOL,aux852_BOOL],true);
constraint array_bool_or([aux1105_BOOL,aux852_BOOL,aux1354_BOOL],true);
constraint array_bool_or([aux1105_BOOL,aux943_BOOL,aux1355_BOOL],true);
constraint array_bool_or([aux624_BOOL,aux943_BOOL,aux1356_BOOL],true);
constraint array_bool_or([aux1358_BOOL,aux852_BOOL,aux1086_BOOL],true);
constraint array_bool_or([aux943_BOOL,aux1086_BOOL,aux1359_BOOL],true);
constraint array_bool_or([aux943_BOOL,aux460_BOOL,aux1360_BOOL],true);
constraint array_bool_or([aux852_BOOL,aux460_BOOL,aux1361_BOOL],true);
constraint array_bool_or([aux1363_BOOL,aux1086_BOOL,aux980_BOOL],true);
constraint array_bool_or([aux460_BOOL,aux980_BOOL,aux1364_BOOL],true);
constraint array_bool_or([aux460_BOOL,aux692_BOOL,aux1365_BOOL],true);
constraint array_bool_or([aux1086_BOOL,aux692_BOOL,aux1366_BOOL],true);
constraint array_bool_or([aux1368_BOOL,aux980_BOOL,aux770_BOOL],true);
constraint array_bool_or([aux692_BOOL,aux770_BOOL,aux1369_BOOL],true);
constraint array_bool_or([aux692_BOOL,aux588_BOOL,aux1370_BOOL],true);
constraint array_bool_or([aux980_BOOL,aux588_BOOL,aux1371_BOOL],true);
constraint array_bool_or([aux1373_BOOL,aux770_BOOL,aux426_BOOL],true);
constraint array_bool_or([aux588_BOOL,aux426_BOOL,aux1374_BOOL],true);
constraint array_bool_or([aux588_BOOL,aux425_BOOL,aux1375_BOOL],true);
constraint array_bool_or([aux770_BOOL,aux425_BOOL,aux1376_BOOL],true);
constraint array_bool_or([aux426_BOOL,aux1092_BOOL,aux1378_BOOL],true);
constraint array_bool_or([aux425_BOOL,aux1092_BOOL,aux1379_BOOL],true);
constraint array_bool_or([aux425_BOOL,aux1091_BOOL,aux1380_BOOL],true);
constraint array_bool_or([aux426_BOOL,aux1091_BOOL,aux1381_BOOL],true);
constraint array_bool_or([aux713_BOOL,aux587_BOOL,aux1383_BOOL],true);
constraint array_bool_or([aux712_BOOL,aux587_BOOL,aux1384_BOOL],true);
constraint array_bool_or([aux712_BOOL,aux534_BOOL,aux1385_BOOL],true);
constraint array_bool_or([aux534_BOOL,aux713_BOOL,aux1386_BOOL],true);
constraint array_bool_or([aux587_BOOL,aux548_BOOL,aux1388_BOOL],true);
constraint array_bool_or([aux534_BOOL,aux548_BOOL,aux1389_BOOL],true);
constraint array_bool_or([aux534_BOOL,aux869_BOOL,aux1390_BOOL],true);
constraint array_bool_or([aux869_BOOL,aux587_BOOL,aux1391_BOOL],true);
constraint array_bool_or([aux548_BOOL,aux636_BOOL,aux1393_BOOL],true);
constraint array_bool_or([aux869_BOOL,aux636_BOOL,aux1394_BOOL],true);
constraint array_bool_or([aux869_BOOL,aux438_BOOL,aux1395_BOOL],true);
constraint array_bool_or([aux438_BOOL,aux548_BOOL,aux1396_BOOL],true);
constraint array_bool_or([aux636_BOOL,aux957_BOOL,aux1398_BOOL],true);
constraint array_bool_or([aux438_BOOL,aux957_BOOL,aux1399_BOOL],true);
constraint array_bool_or([aux438_BOOL,aux897_BOOL,aux1400_BOOL],true);
constraint array_bool_or([aux897_BOOL,aux636_BOOL,aux1401_BOOL],true);
constraint array_bool_or([aux957_BOOL,aux671_BOOL,aux1403_BOOL],true);
constraint array_bool_or([aux897_BOOL,aux671_BOOL,aux1404_BOOL],true);
constraint array_bool_or([aux897_BOOL,aux607_BOOL,aux1405_BOOL],true);
constraint array_bool_or([aux607_BOOL,aux957_BOOL,aux1406_BOOL],true);
constraint array_bool_or([aux671_BOOL,aux383_BOOL,aux1408_BOOL],true);
constraint array_bool_or([aux607_BOOL,aux383_BOOL,aux1409_BOOL],true);
constraint array_bool_or([aux607_BOOL,aux1087_BOOL,aux1410_BOOL],true);
constraint array_bool_or([aux1087_BOOL,aux671_BOOL,aux1411_BOOL],true);
constraint array_bool_or([aux383_BOOL,aux848_BOOL,aux1413_BOOL],true);
constraint array_bool_or([aux1087_BOOL,aux848_BOOL,aux1414_BOOL],true);
constraint array_bool_or([aux1087_BOOL,aux832_BOOL,aux1415_BOOL],true);
constraint array_bool_or([aux832_BOOL,aux383_BOOL,aux1416_BOOL],true);
constraint array_bool_or([aux848_BOOL,aux564_BOOL,aux1418_BOOL],true);
constraint array_bool_or([aux832_BOOL,aux564_BOOL,aux1419_BOOL],true);
constraint array_bool_or([aux832_BOOL,aux537_BOOL,aux1420_BOOL],true);
constraint array_bool_or([aux537_BOOL,aux848_BOOL,aux1421_BOOL],true);
constraint array_bool_or([aux564_BOOL,aux1050_BOOL,aux1423_BOOL],true);
constraint array_bool_or([aux537_BOOL,aux1050_BOOL,aux1424_BOOL],true);
constraint array_bool_or([aux537_BOOL,aux1032_BOOL,aux1425_BOOL],true);
constraint array_bool_or([aux1032_BOOL,aux564_BOOL,aux1426_BOOL],true);
constraint array_bool_or([aux1050_BOOL,aux787_BOOL,aux1428_BOOL],true);
constraint array_bool_or([aux1032_BOOL,aux787_BOOL,aux1429_BOOL],true);
constraint array_bool_or([aux1032_BOOL,aux747_BOOL,aux1430_BOOL],true);
constraint array_bool_or([aux747_BOOL,aux1050_BOOL,aux1431_BOOL],true);
constraint array_bool_or([aux787_BOOL,aux506_BOOL,aux1433_BOOL],true);
constraint array_bool_or([aux747_BOOL,aux506_BOOL,aux1434_BOOL],true);
constraint array_bool_or([aux747_BOOL,aux446_BOOL,aux1435_BOOL],true);
constraint array_bool_or([aux446_BOOL,aux787_BOOL,aux1436_BOOL],true);
constraint array_bool_or([aux506_BOOL,aux986_BOOL,aux1438_BOOL],true);
constraint array_bool_or([aux446_BOOL,aux986_BOOL,aux1439_BOOL],true);
constraint array_bool_or([aux446_BOOL,aux922_BOOL,aux1440_BOOL],true);
constraint array_bool_or([aux922_BOOL,aux506_BOOL,aux1441_BOOL],true);
constraint array_bool_or([aux986_BOOL,aux677_BOOL,aux1443_BOOL],true);
constraint array_bool_or([aux922_BOOL,aux677_BOOL,aux1444_BOOL],true);
constraint array_bool_or([aux922_BOOL,aux635_BOOL,aux1445_BOOL],true);
constraint array_bool_or([aux635_BOOL,aux986_BOOL,aux1446_BOOL],true);
constraint array_bool_or([aux677_BOOL,aux408_BOOL,aux1448_BOOL],true);
constraint array_bool_or([aux635_BOOL,aux408_BOOL,aux1449_BOOL],true);
constraint array_bool_or([aux635_BOOL,aux956_BOOL,aux1450_BOOL],true);
constraint array_bool_or([aux956_BOOL,aux677_BOOL,aux1451_BOOL],true);
constraint array_bool_or([aux408_BOOL,aux876_BOOL,aux1453_BOOL],true);
constraint array_bool_or([aux956_BOOL,aux876_BOOL,aux1454_BOOL],true);
constraint array_bool_or([aux956_BOOL,aux670_BOOL,aux1455_BOOL],true);
constraint array_bool_or([aux670_BOOL,aux408_BOOL,aux1456_BOOL],true);
constraint array_bool_or([aux876_BOOL,aux984_BOOL,aux1458_BOOL],true);
constraint array_bool_or([aux670_BOOL,aux984_BOOL,aux1459_BOOL],true);
constraint array_bool_or([aux670_BOOL,aux505_BOOL,aux1460_BOOL],true);
constraint array_bool_or([aux505_BOOL,aux876_BOOL,aux1461_BOOL],true);
constraint array_bool_or([aux984_BOOL,aux757_BOOL,aux1463_BOOL],true);
constraint array_bool_or([aux505_BOOL,aux757_BOOL,aux1464_BOOL],true);
constraint array_bool_or([aux505_BOOL,aux735_BOOL,aux1465_BOOL],true);
constraint array_bool_or([aux735_BOOL,aux984_BOOL,aux1466_BOOL],true);
constraint array_bool_or([aux757_BOOL,aux711_BOOL,aux1468_BOOL],true);
constraint array_bool_or([aux735_BOOL,aux711_BOOL,aux1469_BOOL],true);
constraint array_bool_or([aux735_BOOL,aux714_BOOL,aux1470_BOOL],true);
constraint array_bool_or([aux714_BOOL,aux757_BOOL,aux1471_BOOL],true);
constraint array_bool_or([aux993_BOOL,aux623_BOOL,aux1473_BOOL],true);
constraint array_bool_or([aux990_BOOL,aux623_BOOL,aux1474_BOOL],true);
constraint array_bool_or([aux990_BOOL,aux883_BOOL,aux1475_BOOL],true);
constraint array_bool_or([aux883_BOOL,aux993_BOOL,aux1476_BOOL],true);
constraint array_bool_or([aux623_BOOL,aux569_BOOL,aux1478_BOOL],true);
constraint array_bool_or([aux883_BOOL,aux569_BOOL,aux1479_BOOL],true);
constraint array_bool_or([aux883_BOOL,aux472_BOOL,aux1480_BOOL],true);
constraint array_bool_or([aux472_BOOL,aux623_BOOL,aux1481_BOOL],true);
constraint array_bool_or([aux569_BOOL,aux838_BOOL,aux1483_BOOL],true);
constraint array_bool_or([aux472_BOOL,aux838_BOOL,aux1484_BOOL],true);
constraint array_bool_or([aux472_BOOL,aux988_BOOL,aux1485_BOOL],true);
constraint array_bool_or([aux988_BOOL,aux569_BOOL,aux1486_BOOL],true);
constraint array_bool_or([aux838_BOOL,aux542_BOOL,aux1488_BOOL],true);
constraint array_bool_or([aux988_BOOL,aux542_BOOL,aux1489_BOOL],true);
constraint array_bool_or([aux988_BOOL,aux702_BOOL,aux1490_BOOL],true);
constraint array_bool_or([aux702_BOOL,aux838_BOOL,aux1491_BOOL],true);
constraint array_bool_or([aux542_BOOL,aux554_BOOL,aux1493_BOOL],true);
constraint array_bool_or([aux702_BOOL,aux554_BOOL,aux1494_BOOL],true);
constraint array_bool_or([aux702_BOOL,aux808_BOOL,aux1495_BOOL],true);
constraint array_bool_or([aux808_BOOL,aux542_BOOL,aux1496_BOOL],true);
constraint array_bool_or([aux554_BOOL,aux1044_BOOL,aux1498_BOOL],true);
constraint array_bool_or([aux808_BOOL,aux1044_BOOL,aux1499_BOOL],true);
constraint array_bool_or([aux808_BOOL,aux521_BOOL,aux1500_BOOL],true);
constraint array_bool_or([aux521_BOOL,aux554_BOOL,aux1501_BOOL],true);
constraint array_bool_or([aux1044_BOOL,aux393_BOOL,aux1503_BOOL],true);
constraint array_bool_or([aux521_BOOL,aux393_BOOL,aux1504_BOOL],true);
constraint array_bool_or([aux521_BOOL,aux621_BOOL,aux1505_BOOL],true);
constraint array_bool_or([aux621_BOOL,aux1044_BOOL,aux1506_BOOL],true);
constraint array_bool_or([aux393_BOOL,aux857_BOOL,aux1508_BOOL],true);
constraint array_bool_or([aux621_BOOL,aux857_BOOL,aux1509_BOOL],true);
constraint array_bool_or([aux621_BOOL,aux1112_BOOL,aux1510_BOOL],true);
constraint array_bool_or([aux1112_BOOL,aux393_BOOL,aux1511_BOOL],true);
constraint array_bool_or([aux857_BOOL,aux954_BOOL,aux1513_BOOL],true);
constraint array_bool_or([aux1112_BOOL,aux954_BOOL,aux1514_BOOL],true);
constraint array_bool_or([aux1112_BOOL,aux443_BOOL,aux1515_BOOL],true);
constraint array_bool_or([aux443_BOOL,aux857_BOOL,aux1516_BOOL],true);
constraint array_bool_or([aux954_BOOL,aux672_BOOL,aux1518_BOOL],true);
constraint array_bool_or([aux443_BOOL,aux672_BOOL,aux1519_BOOL],true);
constraint array_bool_or([aux443_BOOL,aux916_BOOL,aux1520_BOOL],true);
constraint array_bool_or([aux916_BOOL,aux954_BOOL,aux1521_BOOL],true);
constraint array_bool_or([aux672_BOOL,aux772_BOOL,aux1523_BOOL],true);
constraint array_bool_or([aux916_BOOL,aux772_BOOL,aux1524_BOOL],true);
constraint array_bool_or([aux916_BOOL,aux1026_BOOL,aux1525_BOOL],true);
constraint array_bool_or([aux1026_BOOL,aux672_BOOL,aux1526_BOOL],true);
constraint array_bool_or([aux772_BOOL,aux487_BOOL,aux1528_BOOL],true);
constraint array_bool_or([aux1026_BOOL,aux487_BOOL,aux1529_BOOL],true);
constraint array_bool_or([aux1026_BOOL,aux739_BOOL,aux1530_BOOL],true);
constraint array_bool_or([aux739_BOOL,aux772_BOOL,aux1531_BOOL],true);
constraint array_bool_or([aux487_BOOL,aux585_BOOL,aux1533_BOOL],true);
constraint array_bool_or([aux739_BOOL,aux585_BOOL,aux1534_BOOL],true);
constraint array_bool_or([aux739_BOOL,aux837_BOOL,aux1535_BOOL],true);
constraint array_bool_or([aux837_BOOL,aux487_BOOL,aux1536_BOOL],true);
constraint array_bool_or([aux585_BOOL,aux1068_BOOL,aux1538_BOOL],true);
constraint array_bool_or([aux837_BOOL,aux1068_BOOL,aux1539_BOOL],true);
constraint array_bool_or([aux837_BOOL,aux541_BOOL,aux1540_BOOL],true);
constraint array_bool_or([aux541_BOOL,aux585_BOOL,aux1541_BOOL],true);
constraint array_bool_or([aux1068_BOOL,aux416_BOOL,aux1543_BOOL],true);
constraint array_bool_or([aux541_BOOL,aux416_BOOL,aux1544_BOOL],true);
constraint array_bool_or([aux541_BOOL,aux553_BOOL,aux1545_BOOL],true);
constraint array_bool_or([aux553_BOOL,aux1068_BOOL,aux1546_BOOL],true);
constraint array_bool_or([aux416_BOOL,aux971_BOOL,aux1548_BOOL],true);
constraint array_bool_or([aux553_BOOL,aux971_BOOL,aux1549_BOOL],true);
constraint array_bool_or([aux553_BOOL,aux875_BOOL,aux1550_BOOL],true);
constraint array_bool_or([aux875_BOOL,aux416_BOOL,aux1551_BOOL],true);
constraint array_bool_or([aux971_BOOL,aux435_BOOL,aux1553_BOOL],true);
constraint array_bool_or([aux875_BOOL,aux435_BOOL,aux1554_BOOL],true);
constraint array_bool_or([aux875_BOOL,aux690_BOOL,aux1555_BOOL],true);
constraint array_bool_or([aux690_BOOL,aux971_BOOL,aux1556_BOOL],true);
constraint array_bool_or([aux435_BOOL,aux991_BOOL,aux1558_BOOL],true);
constraint array_bool_or([aux690_BOOL,aux991_BOOL,aux1559_BOOL],true);
constraint array_bool_or([aux690_BOOL,aux992_BOOL,aux1560_BOOL],true);
constraint array_bool_or([aux992_BOOL,aux435_BOOL,aux1561_BOOL],true);
constraint array_bool_or([aux1563_BOOL,aux1121_BOOL,aux1029_BOOL],true);
constraint array_bool_or([aux1564_BOOL,aux1122_BOOL,aux1029_BOOL],true);
constraint array_bool_or([aux1565_BOOL,aux1122_BOOL,aux1033_BOOL],true);
constraint array_bool_or([aux1566_BOOL,aux1121_BOOL,aux1033_BOOL],true);
constraint array_bool_or([aux1568_BOOL,aux1029_BOOL,aux704_BOOL],true);
constraint array_bool_or([aux1569_BOOL,aux1033_BOOL,aux704_BOOL],true);
constraint array_bool_or([aux1570_BOOL,aux1033_BOOL,aux784_BOOL],true);
constraint array_bool_or([aux1571_BOOL,aux1029_BOOL,aux784_BOOL],true);
constraint array_bool_or([aux1573_BOOL,aux704_BOOL,aux1134_BOOL],true);
constraint array_bool_or([aux1574_BOOL,aux784_BOOL,aux1134_BOOL],true);
constraint array_bool_or([aux1575_BOOL,aux784_BOOL,aux825_BOOL],true);
constraint array_bool_or([aux1576_BOOL,aux704_BOOL,aux825_BOOL],true);
constraint array_bool_or([aux1578_BOOL,aux1134_BOOL,aux873_BOOL],true);
constraint array_bool_or([aux1579_BOOL,aux825_BOOL,aux873_BOOL],true);
constraint array_bool_or([aux1580_BOOL,aux825_BOOL,aux583_BOOL],true);
constraint array_bool_or([aux1581_BOOL,aux1134_BOOL,aux583_BOOL],true);
constraint array_bool_or([aux1583_BOOL,aux873_BOOL,aux811_BOOL],true);
constraint array_bool_or([aux1584_BOOL,aux583_BOOL,aux811_BOOL],true);
constraint array_bool_or([aux1585_BOOL,aux583_BOOL,aux520_BOOL],true);
constraint array_bool_or([aux1586_BOOL,aux873_BOOL,aux520_BOOL],true);
constraint array_bool_or([aux1588_BOOL,aux811_BOOL,aux571_BOOL],true);
constraint array_bool_or([aux1589_BOOL,aux520_BOOL,aux571_BOOL],true);
constraint array_bool_or([aux1590_BOOL,aux520_BOOL,aux1049_BOOL],true);
constraint array_bool_or([aux1591_BOOL,aux811_BOOL,aux1049_BOOL],true);
constraint array_bool_or([aux1593_BOOL,aux571_BOOL,aux508_BOOL],true);
constraint array_bool_or([aux1594_BOOL,aux1049_BOOL,aux508_BOOL],true);
constraint array_bool_or([aux1595_BOOL,aux1049_BOOL,aux884_BOOL],true);
constraint array_bool_or([aux1596_BOOL,aux571_BOOL,aux884_BOOL],true);
constraint array_bool_or([aux1598_BOOL,aux508_BOOL,aux1139_BOOL],true);
constraint array_bool_or([aux1599_BOOL,aux884_BOOL,aux1139_BOOL],true);
constraint array_bool_or([aux1600_BOOL,aux884_BOOL,aux831_BOOL],true);
constraint array_bool_or([aux1601_BOOL,aux508_BOOL,aux831_BOOL],true);
constraint array_bool_or([aux1603_BOOL,aux1139_BOOL,aux751_BOOL],true);
constraint array_bool_or([aux1604_BOOL,aux831_BOOL,aux751_BOOL],true);
constraint array_bool_or([aux1605_BOOL,aux831_BOOL,aux543_BOOL],true);
constraint array_bool_or([aux1606_BOOL,aux1139_BOOL,aux543_BOOL],true);
constraint array_bool_or([aux1608_BOOL,aux751_BOOL,aux589_BOOL],true);
constraint array_bool_or([aux1609_BOOL,aux543_BOOL,aux589_BOOL],true);
constraint array_bool_or([aux1610_BOOL,aux543_BOOL,aux1075_BOOL],true);
constraint array_bool_or([aux1611_BOOL,aux751_BOOL,aux1075_BOOL],true);
constraint array_bool_or([aux1613_BOOL,aux589_BOOL,aux532_BOOL],true);
constraint array_bool_or([aux1614_BOOL,aux1075_BOOL,aux532_BOOL],true);
constraint array_bool_or([aux1615_BOOL,aux1075_BOOL,aux1016_BOOL],true);
constraint array_bool_or([aux1616_BOOL,aux589_BOOL,aux1016_BOOL],true);
constraint array_bool_or([aux1618_BOOL,aux532_BOOL,aux1067_BOOL],true);
constraint array_bool_or([aux1619_BOOL,aux1016_BOOL,aux1067_BOOL],true);
constraint array_bool_or([aux1620_BOOL,aux1016_BOOL,aux767_BOOL],true);
constraint array_bool_or([aux1621_BOOL,aux532_BOOL,aux767_BOOL],true);
constraint array_bool_or([aux1623_BOOL,aux1067_BOOL,aux1007_BOOL],true);
constraint array_bool_or([aux1624_BOOL,aux767_BOOL,aux1007_BOOL],true);
constraint array_bool_or([aux1625_BOOL,aux767_BOOL,aux719_BOOL],true);
constraint array_bool_or([aux1626_BOOL,aux1067_BOOL,aux719_BOOL],true);
constraint array_bool_or([aux1628_BOOL,aux1007_BOOL,aux758_BOOL],true);
constraint array_bool_or([aux1629_BOOL,aux719_BOOL,aux758_BOOL],true);
constraint array_bool_or([aux1630_BOOL,aux719_BOOL,aux464_BOOL],true);
constraint array_bool_or([aux1631_BOOL,aux1007_BOOL,aux464_BOOL],true);
constraint array_bool_or([aux1633_BOOL,aux758_BOOL,aux597_BOOL],true);
constraint array_bool_or([aux1634_BOOL,aux464_BOOL,aux597_BOOL],true);
constraint array_bool_or([aux1635_BOOL,aux464_BOOL,aux1079_BOOL],true);
constraint array_bool_or([aux1636_BOOL,aux758_BOOL,aux1079_BOOL],true);
constraint array_bool_or([aux1638_BOOL,aux597_BOOL,aux865_BOOL],true);
constraint array_bool_or([aux1639_BOOL,aux1079_BOOL,aux865_BOOL],true);
constraint array_bool_or([aux1640_BOOL,aux1079_BOOL,aux1133_BOOL],true);
constraint array_bool_or([aux1641_BOOL,aux597_BOOL,aux1133_BOOL],true);
constraint array_bool_or([aux1643_BOOL,aux865_BOOL,aux1109_BOOL],true);
constraint array_bool_or([aux1644_BOOL,aux1133_BOOL,aux1109_BOOL],true);
constraint array_bool_or([aux1645_BOOL,aux1133_BOOL,aux1115_BOOL],true);
constraint array_bool_or([aux1646_BOOL,aux865_BOOL,aux1115_BOOL],true);
constraint array_bool_or([aux1648_BOOL,aux1109_BOOL,aux1120_BOOL],true);
constraint array_bool_or([aux1649_BOOL,aux1115_BOOL,aux1120_BOOL],true);
constraint array_bool_or([aux1650_BOOL,aux1115_BOOL,aux1119_BOOL],true);
constraint array_bool_or([aux1651_BOOL,aux1109_BOOL,aux1119_BOOL],true);
constraint array_bool_or([aux1653_BOOL,aux615_BOOL,aux1127_BOOL],true);
constraint array_bool_or([aux1654_BOOL,aux614_BOOL,aux1127_BOOL],true);
constraint array_bool_or([aux1655_BOOL,aux614_BOOL,aux1137_BOOL],true);
constraint array_bool_or([aux1656_BOOL,aux615_BOOL,aux1137_BOOL],true);
constraint array_bool_or([aux1658_BOOL,aux1127_BOOL,aux889_BOOL],true);
constraint array_bool_or([aux1659_BOOL,aux1137_BOOL,aux889_BOOL],true);
constraint array_bool_or([aux1660_BOOL,aux1137_BOOL,aux810_BOOL],true);
constraint array_bool_or([aux1661_BOOL,aux1127_BOOL,aux810_BOOL],true);
constraint array_bool_or([aux1663_BOOL,aux889_BOOL,aux833_BOOL],true);
constraint array_bool_or([aux1664_BOOL,aux810_BOOL,aux833_BOOL],true);
constraint array_bool_or([aux1665_BOOL,aux810_BOOL,aux733_BOOL],true);
constraint array_bool_or([aux1666_BOOL,aux889_BOOL,aux733_BOOL],true);
constraint array_bool_or([aux1668_BOOL,aux833_BOOL,aux877_BOOL],true);
constraint array_bool_or([aux1669_BOOL,aux733_BOOL,aux877_BOOL],true);
constraint array_bool_or([aux1670_BOOL,aux733_BOOL,aux402_BOOL],true);
constraint array_bool_or([aux1671_BOOL,aux833_BOOL,aux402_BOOL],true);
constraint array_bool_or([aux1673_BOOL,aux877_BOOL,aux667_BOOL],true);
constraint array_bool_or([aux1674_BOOL,aux402_BOOL,aux667_BOOL],true);
constraint array_bool_or([aux1675_BOOL,aux402_BOOL,aux962_BOOL],true);
constraint array_bool_or([aux1676_BOOL,aux877_BOOL,aux962_BOOL],true);
constraint array_bool_or([aux1678_BOOL,aux667_BOOL,aux522_BOOL],true);
constraint array_bool_or([aux1679_BOOL,aux962_BOOL,aux522_BOOL],true);
constraint array_bool_or([aux1680_BOOL,aux962_BOOL,aux805_BOOL],true);
constraint array_bool_or([aux1681_BOOL,aux667_BOOL,aux805_BOOL],true);
constraint array_bool_or([aux1683_BOOL,aux522_BOOL,aux950_BOOL],true);
constraint array_bool_or([aux1684_BOOL,aux805_BOOL,aux950_BOOL],true);
constraint array_bool_or([aux1685_BOOL,aux805_BOOL,aux849_BOOL],true);
constraint array_bool_or([aux1686_BOOL,aux522_BOOL,aux849_BOOL],true);
constraint array_bool_or([aux1688_BOOL,aux950_BOOL,aux841_BOOL],true);
constraint array_bool_or([aux1689_BOOL,aux849_BOOL,aux841_BOOL],true);
constraint array_bool_or([aux1690_BOOL,aux849_BOOL,aux740_BOOL],true);
constraint array_bool_or([aux1691_BOOL,aux950_BOOL,aux740_BOOL],true);
constraint array_bool_or([aux1693_BOOL,aux841_BOOL,aux698_BOOL],true);
constraint array_bool_or([aux1694_BOOL,aux740_BOOL,aux698_BOOL],true);
constraint array_bool_or([aux1695_BOOL,aux740_BOOL,aux996_BOOL],true);
constraint array_bool_or([aux1696_BOOL,aux841_BOOL,aux996_BOOL],true);
constraint array_bool_or([aux1698_BOOL,aux698_BOOL,aux421_BOOL],true);
constraint array_bool_or([aux1699_BOOL,aux996_BOOL,aux421_BOOL],true);
constraint array_bool_or([aux1700_BOOL,aux996_BOOL,aux1072_BOOL],true);
constraint array_bool_or([aux1701_BOOL,aux698_BOOL,aux1072_BOOL],true);
constraint array_bool_or([aux1703_BOOL,aux421_BOOL,aux1023_BOOL],true);
constraint array_bool_or([aux1704_BOOL,aux1072_BOOL,aux1023_BOOL],true);
constraint array_bool_or([aux1705_BOOL,aux1072_BOOL,aux924_BOOL],true);
constraint array_bool_or([aux1706_BOOL,aux421_BOOL,aux924_BOOL],true);
constraint array_bool_or([aux1708_BOOL,aux1023_BOOL,aux1064_BOOL],true);
constraint array_bool_or([aux1709_BOOL,aux924_BOOL,aux1064_BOOL],true);
constraint array_bool_or([aux1710_BOOL,aux924_BOOL,aux722_BOOL],true);
constraint array_bool_or([aux1711_BOOL,aux1023_BOOL,aux722_BOOL],true);
constraint array_bool_or([aux1713_BOOL,aux1064_BOOL,aux868_BOOL],true);
constraint array_bool_or([aux1714_BOOL,aux722_BOOL,aux868_BOOL],true);
constraint array_bool_or([aux1715_BOOL,aux722_BOOL,aux396_BOOL],true);
constraint array_bool_or([aux1716_BOOL,aux1064_BOOL,aux396_BOOL],true);
constraint array_bool_or([aux1718_BOOL,aux868_BOOL,aux705_BOOL],true);
constraint array_bool_or([aux1719_BOOL,aux396_BOOL,aux705_BOOL],true);
constraint array_bool_or([aux1720_BOOL,aux396_BOOL,aux1004_BOOL],true);
constraint array_bool_or([aux1721_BOOL,aux868_BOOL,aux1004_BOOL],true);
constraint array_bool_or([aux1723_BOOL,aux705_BOOL,aux386_BOOL],true);
constraint array_bool_or([aux1724_BOOL,aux1004_BOOL,aux386_BOOL],true);
constraint array_bool_or([aux1725_BOOL,aux1004_BOOL,aux1078_BOOL],true);
constraint array_bool_or([aux1726_BOOL,aux705_BOOL,aux1078_BOOL],true);
constraint array_bool_or([aux1728_BOOL,aux386_BOOL,aux1085_BOOL],true);
constraint array_bool_or([aux1729_BOOL,aux1078_BOOL,aux1085_BOOL],true);
constraint array_bool_or([aux1730_BOOL,aux1078_BOOL,aux479_BOOL],true);
constraint array_bool_or([aux1731_BOOL,aux386_BOOL,aux479_BOOL],true);
constraint array_bool_or([aux1733_BOOL,aux1085_BOOL,aux948_BOOL],true);
constraint array_bool_or([aux1734_BOOL,aux479_BOOL,aux948_BOOL],true);
constraint array_bool_or([aux1735_BOOL,aux479_BOOL,aux952_BOOL],true);
constraint array_bool_or([aux1736_BOOL,aux1085_BOOL,aux952_BOOL],true);
constraint array_bool_or([aux1738_BOOL,aux948_BOOL,aux613_BOOL],true);
constraint array_bool_or([aux1739_BOOL,aux952_BOOL,aux613_BOOL],true);
constraint array_bool_or([aux1740_BOOL,aux952_BOOL,aux612_BOOL],true);
constraint array_bool_or([aux1741_BOOL,aux948_BOOL,aux612_BOOL],true);
constraint array_bool_or([aux579_BOOL,aux814_BOOL,aux1743_BOOL],true);
constraint array_bool_or([aux578_BOOL,aux814_BOOL,aux1744_BOOL],true);
constraint array_bool_or([aux578_BOOL,aux820_BOOL,aux1745_BOOL],true);
constraint array_bool_or([aux579_BOOL,aux820_BOOL,aux1746_BOOL],true);
constraint array_bool_or([aux814_BOOL,aux1065_BOOL,aux1748_BOOL],true);
constraint array_bool_or([aux820_BOOL,aux1065_BOOL,aux1749_BOOL],true);
constraint array_bool_or([aux820_BOOL,aux840_BOOL,aux1750_BOOL],true);
constraint array_bool_or([aux814_BOOL,aux840_BOOL,aux1751_BOOL],true);
constraint array_bool_or([aux1065_BOOL,aux545_BOOL,aux1753_BOOL],true);
constraint array_bool_or([aux840_BOOL,aux545_BOOL,aux1754_BOOL],true);
constraint array_bool_or([aux840_BOOL,aux642_BOOL,aux1755_BOOL],true);
constraint array_bool_or([aux1065_BOOL,aux642_BOOL,aux1756_BOOL],true);
constraint array_bool_or([aux545_BOOL,aux409_BOOL,aux1758_BOOL],true);
constraint array_bool_or([aux642_BOOL,aux409_BOOL,aux1759_BOOL],true);
constraint array_bool_or([aux642_BOOL,aux871_BOOL,aux1760_BOOL],true);
constraint array_bool_or([aux545_BOOL,aux871_BOOL,aux1761_BOOL],true);
constraint array_bool_or([aux409_BOOL,aux631_BOOL,aux1763_BOOL],true);
constraint array_bool_or([aux871_BOOL,aux631_BOOL,aux1764_BOOL],true);
constraint array_bool_or([aux871_BOOL,aux1111_BOOL,aux1765_BOOL],true);
constraint array_bool_or([aux409_BOOL,aux1111_BOOL,aux1766_BOOL],true);
constraint array_bool_or([aux631_BOOL,aux855_BOOL,aux1768_BOOL],true);
constraint array_bool_or([aux1111_BOOL,aux855_BOOL,aux1769_BOOL],true);
constraint array_bool_or([aux1111_BOOL,aux955_BOOL,aux1770_BOOL],true);
constraint array_bool_or([aux631_BOOL,aux955_BOOL,aux1771_BOOL],true);
constraint array_bool_or([aux855_BOOL,aux1096_BOOL,aux1773_BOOL],true);
constraint array_bool_or([aux955_BOOL,aux1096_BOOL,aux1774_BOOL],true);
constraint array_bool_or([aux955_BOOL,aux424_BOOL,aux1775_BOOL],true);
constraint array_bool_or([aux855_BOOL,aux424_BOOL,aux1776_BOOL],true);
constraint array_bool_or([aux1096_BOOL,aux947_BOOL,aux1778_BOOL],true);
constraint array_bool_or([aux424_BOOL,aux947_BOOL,aux1779_BOOL],true);
constraint array_bool_or([aux424_BOOL,aux649_BOOL,aux1780_BOOL],true);
constraint array_bool_or([aux1096_BOOL,aux649_BOOL,aux1781_BOOL],true);
constraint array_bool_or([aux947_BOOL,aux657_BOOL,aux1783_BOOL],true);
constraint array_bool_or([aux649_BOOL,aux657_BOOL,aux1784_BOOL],true);
constraint array_bool_or([aux649_BOOL,aux750_BOOL,aux1785_BOOL],true);
constraint array_bool_or([aux947_BOOL,aux750_BOOL,aux1786_BOOL],true);
constraint array_bool_or([aux657_BOOL,aux885_BOOL,aux1788_BOOL],true);
constraint array_bool_or([aux750_BOOL,aux885_BOOL,aux1789_BOOL],true);
constraint array_bool_or([aux750_BOOL,aux987_BOOL,aux1790_BOOL],true);
constraint array_bool_or([aux657_BOOL,aux987_BOOL,aux1791_BOOL],true);
constraint array_bool_or([aux885_BOOL,aux1136_BOOL,aux1793_BOOL],true);
constraint array_bool_or([aux987_BOOL,aux1136_BOOL,aux1794_BOOL],true);
constraint array_bool_or([aux987_BOOL,aux451_BOOL,aux1795_BOOL],true);
constraint array_bool_or([aux885_BOOL,aux451_BOOL,aux1796_BOOL],true);
constraint array_bool_or([aux1136_BOOL,aux963_BOOL,aux1798_BOOL],true);
constraint array_bool_or([aux451_BOOL,aux963_BOOL,aux1799_BOOL],true);
constraint array_bool_or([aux451_BOOL,aux683_BOOL,aux1800_BOOL],true);
constraint array_bool_or([aux1136_BOOL,aux683_BOOL,aux1801_BOOL],true);
constraint array_bool_or([aux963_BOOL,aux442_BOOL,aux1803_BOOL],true);
constraint array_bool_or([aux683_BOOL,aux442_BOOL,aux1804_BOOL],true);
constraint array_bool_or([aux683_BOOL,aux905_BOOL,aux1805_BOOL],true);
constraint array_bool_or([aux963_BOOL,aux905_BOOL,aux1806_BOOL],true);
constraint array_bool_or([aux442_BOOL,aux665_BOOL,aux1808_BOOL],true);
constraint array_bool_or([aux905_BOOL,aux665_BOOL,aux1809_BOOL],true);
constraint array_bool_or([aux905_BOOL,aux755_BOOL,aux1810_BOOL],true);
constraint array_bool_or([aux442_BOOL,aux755_BOOL,aux1811_BOOL],true);
constraint array_bool_or([aux665_BOOL,aux894_BOOL,aux1813_BOOL],true);
constraint array_bool_or([aux755_BOOL,aux894_BOOL,aux1814_BOOL],true);
constraint array_bool_or([aux755_BOOL,aux981_BOOL,aux1815_BOOL],true);
constraint array_bool_or([aux665_BOOL,aux981_BOOL,aux1816_BOOL],true);
constraint array_bool_or([aux894_BOOL,aux919_BOOL,aux1818_BOOL],true);
constraint array_bool_or([aux981_BOOL,aux919_BOOL,aux1819_BOOL],true);
constraint array_bool_or([aux981_BOOL,aux708_BOOL,aux1820_BOOL],true);
constraint array_bool_or([aux894_BOOL,aux708_BOOL,aux1821_BOOL],true);
constraint array_bool_or([aux919_BOOL,aux899_BOOL,aux1823_BOOL],true);
constraint array_bool_or([aux708_BOOL,aux899_BOOL,aux1824_BOOL],true);
constraint array_bool_or([aux708_BOOL,aux904_BOOL,aux1825_BOOL],true);
constraint array_bool_or([aux919_BOOL,aux904_BOOL,aux1826_BOOL],true);
constraint array_bool_or([aux899_BOOL,aux577_BOOL,aux1828_BOOL],true);
constraint array_bool_or([aux904_BOOL,aux577_BOOL,aux1829_BOOL],true);
constraint array_bool_or([aux904_BOOL,aux576_BOOL,aux1830_BOOL],true);
constraint array_bool_or([aux899_BOOL,aux576_BOOL,aux1831_BOOL],true);
constraint array_bool_or([aux552_BOOL,aux390_BOOL,aux1833_BOOL],true);
constraint array_bool_or([aux1834_BOOL,aux550_BOOL,aux390_BOOL],true);
constraint array_bool_or([aux550_BOOL,aux966_BOOL,aux1835_BOOL],true);
constraint array_bool_or([aux1836_BOOL,aux966_BOOL,aux552_BOOL],true);
constraint array_bool_or([aux390_BOOL,aux1077_BOOL,aux1838_BOOL],true);
constraint array_bool_or([aux1839_BOOL,aux966_BOOL,aux1077_BOOL],true);
constraint array_bool_or([aux966_BOOL,aux414_BOOL,aux1840_BOOL],true);
constraint array_bool_or([aux1841_BOOL,aux414_BOOL,aux390_BOOL],true);
constraint array_bool_or([aux1077_BOOL,aux529_BOOL,aux1843_BOOL],true);
constraint array_bool_or([aux1844_BOOL,aux414_BOOL,aux529_BOOL],true);
constraint array_bool_or([aux414_BOOL,aux972_BOOL,aux1845_BOOL],true);
constraint array_bool_or([aux1846_BOOL,aux972_BOOL,aux1077_BOOL],true);
constraint array_bool_or([aux529_BOOL,aux823_BOOL,aux1848_BOOL],true);
constraint array_bool_or([aux1849_BOOL,aux972_BOOL,aux823_BOOL],true);
constraint array_bool_or([aux972_BOOL,aux858_BOOL,aux1850_BOOL],true);
constraint array_bool_or([aux1851_BOOL,aux858_BOOL,aux529_BOOL],true);
constraint array_bool_or([aux823_BOOL,aux737_BOOL,aux1853_BOOL],true);
constraint array_bool_or([aux1854_BOOL,aux858_BOOL,aux737_BOOL],true);
constraint array_bool_or([aux858_BOOL,aux400_BOOL,aux1855_BOOL],true);
constraint array_bool_or([aux1856_BOOL,aux400_BOOL,aux823_BOOL],true);
constraint array_bool_or([aux737_BOOL,aux1008_BOOL,aux1858_BOOL],true);
constraint array_bool_or([aux1859_BOOL,aux400_BOOL,aux1008_BOOL],true);
constraint array_bool_or([aux400_BOOL,aux1061_BOOL,aux1860_BOOL],true);
constraint array_bool_or([aux1861_BOOL,aux1061_BOOL,aux737_BOOL],true);
constraint array_bool_or([aux1008_BOOL,aux909_BOOL,aux1863_BOOL],true);
constraint array_bool_or([aux1864_BOOL,aux1061_BOOL,aux909_BOOL],true);
constraint array_bool_or([aux1061_BOOL,aux556_BOOL,aux1865_BOOL],true);
constraint array_bool_or([aux1866_BOOL,aux556_BOOL,aux1008_BOOL],true);
constraint array_bool_or([aux909_BOOL,aux444_BOOL,aux1868_BOOL],true);
constraint array_bool_or([aux1869_BOOL,aux556_BOOL,aux444_BOOL],true);
constraint array_bool_or([aux556_BOOL,aux469_BOOL,aux1870_BOOL],true);
constraint array_bool_or([aux1871_BOOL,aux469_BOOL,aux909_BOOL],true);
constraint array_bool_or([aux444_BOOL,aux1113_BOOL,aux1873_BOOL],true);
constraint array_bool_or([aux1874_BOOL,aux469_BOOL,aux1113_BOOL],true);
constraint array_bool_or([aux469_BOOL,aux752_BOOL,aux1875_BOOL],true);
constraint array_bool_or([aux1876_BOOL,aux752_BOOL,aux444_BOOL],true);
constraint array_bool_or([aux1113_BOOL,aux606_BOOL,aux1878_BOOL],true);
constraint array_bool_or([aux1879_BOOL,aux752_BOOL,aux606_BOOL],true);
constraint array_bool_or([aux752_BOOL,aux656_BOOL,aux1880_BOOL],true);
constraint array_bool_or([aux1881_BOOL,aux656_BOOL,aux1113_BOOL],true);
constraint array_bool_or([aux606_BOOL,aux513_BOOL,aux1883_BOOL],true);
constraint array_bool_or([aux1884_BOOL,aux656_BOOL,aux513_BOOL],true);
constraint array_bool_or([aux656_BOOL,aux1135_BOOL,aux1885_BOOL],true);
constraint array_bool_or([aux1886_BOOL,aux1135_BOOL,aux606_BOOL],true);
constraint array_bool_or([aux513_BOOL,aux788_BOOL,aux1888_BOOL],true);
constraint array_bool_or([aux1889_BOOL,aux1135_BOOL,aux788_BOOL],true);
constraint array_bool_or([aux1135_BOOL,aux646_BOOL,aux1890_BOOL],true);
constraint array_bool_or([aux1891_BOOL,aux646_BOOL,aux513_BOOL],true);
constraint array_bool_or([aux788_BOOL,aux693_BOOL,aux1893_BOOL],true);
constraint array_bool_or([aux1894_BOOL,aux646_BOOL,aux693_BOOL],true);
constraint array_bool_or([aux646_BOOL,aux528_BOOL,aux1895_BOOL],true);
constraint array_bool_or([aux1896_BOOL,aux528_BOOL,aux788_BOOL],true);
constraint array_bool_or([aux693_BOOL,aux982_BOOL,aux1898_BOOL],true);
constraint array_bool_or([aux1899_BOOL,aux528_BOOL,aux982_BOOL],true);
constraint array_bool_or([aux528_BOOL,aux822_BOOL,aux1900_BOOL],true);
constraint array_bool_or([aux1901_BOOL,aux822_BOOL,aux693_BOOL],true);
constraint array_bool_or([aux982_BOOL,aux872_BOOL,aux1903_BOOL],true);
constraint array_bool_or([aux1904_BOOL,aux822_BOOL,aux872_BOOL],true);
constraint array_bool_or([aux822_BOOL,aux736_BOOL,aux1905_BOOL],true);
constraint array_bool_or([aux1906_BOOL,aux736_BOOL,aux982_BOOL],true);
constraint array_bool_or([aux872_BOOL,aux666_BOOL,aux1908_BOOL],true);
constraint array_bool_or([aux1909_BOOL,aux736_BOOL,aux666_BOOL],true);
constraint array_bool_or([aux736_BOOL,aux762_BOOL,aux1910_BOOL],true);
constraint array_bool_or([aux1911_BOOL,aux762_BOOL,aux872_BOOL],true);
constraint array_bool_or([aux666_BOOL,aux559_BOOL,aux1913_BOOL],true);
constraint array_bool_or([aux1914_BOOL,aux762_BOOL,aux559_BOOL],true);
constraint array_bool_or([aux762_BOOL,aux401_BOOL,aux1915_BOOL],true);
constraint array_bool_or([aux1916_BOOL,aux401_BOOL,aux666_BOOL],true);
constraint array_bool_or([aux559_BOOL,aux549_BOOL,aux1918_BOOL],true);
constraint array_bool_or([aux1919_BOOL,aux401_BOOL,aux549_BOOL],true);
constraint array_bool_or([aux401_BOOL,aux551_BOOL,aux1920_BOOL],true);
constraint array_bool_or([aux1921_BOOL,aux551_BOOL,aux559_BOOL],true);
constraint array_bool_or([aux978_BOOL,aux923_BOOL,aux1923_BOOL],true);
constraint array_bool_or([aux979_BOOL,aux923_BOOL,aux1924_BOOL],true);
constraint array_bool_or([aux979_BOOL,aux1098_BOOL,aux1925_BOOL],true);
constraint array_bool_or([aux1098_BOOL,aux978_BOOL,aux1926_BOOL],true);
constraint array_bool_or([aux923_BOOL,aux476_BOOL,aux1928_BOOL],true);
constraint array_bool_or([aux1098_BOOL,aux476_BOOL,aux1929_BOOL],true);
constraint array_bool_or([aux1098_BOOL,aux769_BOOL,aux1930_BOOL],true);
constraint array_bool_or([aux769_BOOL,aux923_BOOL,aux1931_BOOL],true);
constraint array_bool_or([aux476_BOOL,aux1108_BOOL,aux1933_BOOL],true);
constraint array_bool_or([aux769_BOOL,aux1108_BOOL,aux1934_BOOL],true);
constraint array_bool_or([aux769_BOOL,aux473_BOOL,aux1935_BOOL],true);
constraint array_bool_or([aux473_BOOL,aux476_BOOL,aux1936_BOOL],true);
constraint array_bool_or([aux1108_BOOL,aux431_BOOL,aux1938_BOOL],true);
constraint array_bool_or([aux473_BOOL,aux431_BOOL,aux1939_BOOL],true);
constraint array_bool_or([aux473_BOOL,aux558_BOOL,aux1940_BOOL],true);
constraint array_bool_or([aux558_BOOL,aux1108_BOOL,aux1941_BOOL],true);
constraint array_bool_or([aux431_BOOL,aux902_BOOL,aux1943_BOOL],true);
constraint array_bool_or([aux558_BOOL,aux902_BOOL,aux1944_BOOL],true);
constraint array_bool_or([aux558_BOOL,aux1039_BOOL,aux1945_BOOL],true);
constraint array_bool_or([aux1039_BOOL,aux431_BOOL,aux1946_BOOL],true);
constraint array_bool_or([aux902_BOOL,aux997_BOOL,aux1948_BOOL],true);
constraint array_bool_or([aux1039_BOOL,aux997_BOOL,aux1949_BOOL],true);
constraint array_bool_or([aux1039_BOOL,aux418_BOOL,aux1950_BOOL],true);
constraint array_bool_or([aux418_BOOL,aux902_BOOL,aux1951_BOOL],true);
constraint array_bool_or([aux997_BOOL,aux699_BOOL,aux1953_BOOL],true);
constraint array_bool_or([aux418_BOOL,aux699_BOOL,aux1954_BOOL],true);
constraint array_bool_or([aux418_BOOL,aux882_BOOL,aux1955_BOOL],true);
constraint array_bool_or([aux882_BOOL,aux997_BOOL,aux1956_BOOL],true);
constraint array_bool_or([aux699_BOOL,aux842_BOOL,aux1958_BOOL],true);
constraint array_bool_or([aux882_BOOL,aux842_BOOL,aux1959_BOOL],true);
constraint array_bool_or([aux882_BOOL,aux973_BOOL,aux1960_BOOL],true);
constraint array_bool_or([aux973_BOOL,aux699_BOOL,aux1961_BOOL],true);
constraint array_bool_or([aux842_BOOL,aux540_BOOL,aux1963_BOOL],true);
constraint array_bool_or([aux973_BOOL,aux540_BOOL,aux1964_BOOL],true);
constraint array_bool_or([aux973_BOOL,aux688_BOOL,aux1965_BOOL],true);
constraint array_bool_or([aux688_BOOL,aux842_BOOL,aux1966_BOOL],true);
constraint array_bool_or([aux540_BOOL,aux641_BOOL,aux1968_BOOL],true);
constraint array_bool_or([aux688_BOOL,aux641_BOOL,aux1969_BOOL],true);
constraint array_bool_or([aux688_BOOL,aux780_BOOL,aux1970_BOOL],true);
constraint array_bool_or([aux780_BOOL,aux540_BOOL,aux1971_BOOL],true);
constraint array_bool_or([aux641_BOOL,aux1129_BOOL,aux1973_BOOL],true);
constraint array_bool_or([aux780_BOOL,aux1129_BOOL,aux1974_BOOL],true);
constraint array_bool_or([aux780_BOOL,aux486_BOOL,aux1975_BOOL],true);
constraint array_bool_or([aux486_BOOL,aux641_BOOL,aux1976_BOOL],true);
constraint array_bool_or([aux1129_BOOL,aux449_BOOL,aux1978_BOOL],true);
constraint array_bool_or([aux486_BOOL,aux449_BOOL,aux1979_BOOL],true);
constraint array_bool_or([aux486_BOOL,aux622_BOOL,aux1980_BOOL],true);
constraint array_bool_or([aux622_BOOL,aux1129_BOOL,aux1981_BOOL],true);
constraint array_bool_or([aux449_BOOL,aux915_BOOL,aux1983_BOOL],true);
constraint array_bool_or([aux622_BOOL,aux915_BOOL,aux1984_BOOL],true);
constraint array_bool_or([aux622_BOOL,aux1107_BOOL,aux1985_BOOL],true);
constraint array_bool_or([aux1107_BOOL,aux449_BOOL,aux1986_BOOL],true);
constraint array_bool_or([aux915_BOOL,aux482_BOOL,aux1988_BOOL],true);
constraint array_bool_or([aux1107_BOOL,aux482_BOOL,aux1989_BOOL],true);
constraint array_bool_or([aux1107_BOOL,aux430_BOOL,aux1990_BOOL],true);
constraint array_bool_or([aux430_BOOL,aux915_BOOL,aux1991_BOOL],true);
constraint array_bool_or([aux482_BOOL,aux572_BOOL,aux1993_BOOL],true);
constraint array_bool_or([aux430_BOOL,aux572_BOOL,aux1994_BOOL],true);
constraint array_bool_or([aux430_BOOL,aux901_BOOL,aux1995_BOOL],true);
constraint array_bool_or([aux901_BOOL,aux482_BOOL,aux1996_BOOL],true);
constraint array_bool_or([aux572_BOOL,aux887_BOOL,aux1998_BOOL],true);
constraint array_bool_or([aux901_BOOL,aux887_BOOL,aux1999_BOOL],true);
constraint array_bool_or([aux901_BOOL,aux382_BOOL,aux2000_BOOL],true);
constraint array_bool_or([aux382_BOOL,aux572_BOOL,aux2001_BOOL],true);
constraint array_bool_or([aux887_BOOL,aux738_BOOL,aux2003_BOOL],true);
constraint array_bool_or([aux382_BOOL,aux738_BOOL,aux2004_BOOL],true);
constraint array_bool_or([aux382_BOOL,aux907_BOOL,aux2005_BOOL],true);
constraint array_bool_or([aux907_BOOL,aux887_BOOL,aux2006_BOOL],true);
constraint array_bool_or([aux738_BOOL,aux976_BOOL,aux2008_BOOL],true);
constraint array_bool_or([aux907_BOOL,aux976_BOOL,aux2009_BOOL],true);
constraint array_bool_or([aux907_BOOL,aux977_BOOL,aux2010_BOOL],true);
constraint array_bool_or([aux977_BOOL,aux738_BOOL,aux2011_BOOL],true);
constraint array_bool_or([aux2013_BOOL,aux1125_BOOL,aux958_BOOL],true);
constraint array_bool_or([aux2014_BOOL,aux1126_BOOL,aux958_BOOL],true);
constraint array_bool_or([aux2015_BOOL,aux1126_BOOL,aux960_BOOL],true);
constraint array_bool_or([aux2016_BOOL,aux1125_BOOL,aux960_BOOL],true);
constraint array_bool_or([aux2018_BOOL,aux958_BOOL,aux662_BOOL],true);
constraint array_bool_or([aux2019_BOOL,aux960_BOOL,aux662_BOOL],true);
constraint array_bool_or([aux2020_BOOL,aux960_BOOL,aux819_BOOL],true);
constraint array_bool_or([aux2021_BOOL,aux958_BOOL,aux819_BOOL],true);
constraint array_bool_or([aux2023_BOOL,aux662_BOOL,aux970_BOOL],true);
constraint array_bool_or([aux2024_BOOL,aux819_BOOL,aux970_BOOL],true);
constraint array_bool_or([aux2025_BOOL,aux819_BOOL,aux685_BOOL],true);
constraint array_bool_or([aux2026_BOOL,aux662_BOOL,aux685_BOOL],true);
constraint array_bool_or([aux2028_BOOL,aux970_BOOL,aux824_BOOL],true);
constraint array_bool_or([aux2029_BOOL,aux685_BOOL,aux824_BOOL],true);
constraint array_bool_or([aux2030_BOOL,aux685_BOOL,aux544_BOOL],true);
constraint array_bool_or([aux2031_BOOL,aux970_BOOL,aux544_BOOL],true);
constraint array_bool_or([aux2033_BOOL,aux824_BOOL,aux696_BOOL],true);
constraint array_bool_or([aux2034_BOOL,aux544_BOOL,aux696_BOOL],true);
constraint array_bool_or([aux2035_BOOL,aux544_BOOL,aux412_BOOL],true);
constraint array_bool_or([aux2036_BOOL,aux824_BOOL,aux412_BOOL],true);
constraint array_bool_or([aux2038_BOOL,aux696_BOOL,aux517_BOOL],true);
constraint array_bool_or([aux2039_BOOL,aux412_BOOL,aux517_BOOL],true);
constraint array_bool_or([aux2040_BOOL,aux412_BOOL,aux999_BOOL],true);
constraint array_bool_or([aux2041_BOOL,aux696_BOOL,aux999_BOOL],true);
constraint array_bool_or([aux2043_BOOL,aux517_BOOL,aux381_BOOL],true);
constraint array_bool_or([aux2044_BOOL,aux999_BOOL,aux381_BOOL],true);
constraint array_bool_or([aux2045_BOOL,aux999_BOOL,aux867_BOOL],true);
constraint array_bool_or([aux2046_BOOL,aux517_BOOL,aux867_BOOL],true);
constraint array_bool_or([aux2048_BOOL,aux381_BOOL,aux1009_BOOL],true);
constraint array_bool_or([aux2049_BOOL,aux867_BOOL,aux1009_BOOL],true);
constraint array_bool_or([aux2050_BOOL,aux867_BOOL,aux710_BOOL],true);
constraint array_bool_or([aux2051_BOOL,aux381_BOOL,aux710_BOOL],true);
constraint array_bool_or([aux2053_BOOL,aux1009_BOOL,aux700_BOOL],true);
constraint array_bool_or([aux2054_BOOL,aux710_BOOL,aux700_BOOL],true);
constraint array_bool_or([aux2055_BOOL,aux710_BOOL,aux439_BOOL],true);
constraint array_bool_or([aux2056_BOOL,aux1009_BOOL,aux439_BOOL],true);
constraint array_bool_or([aux2058_BOOL,aux700_BOOL,aux570_BOOL],true);
constraint array_bool_or([aux2059_BOOL,aux439_BOOL,aux570_BOOL],true);
constraint array_bool_or([aux2060_BOOL,aux439_BOOL,aux1028_BOOL],true);
constraint array_bool_or([aux2061_BOOL,aux700_BOOL,aux1028_BOOL],true);
constraint array_bool_or([aux2063_BOOL,aux570_BOOL,aux406_BOOL],true);
constraint array_bool_or([aux2064_BOOL,aux1028_BOOL,aux406_BOOL],true);
constraint array_bool_or([aux2065_BOOL,aux1028_BOOL,aux874_BOOL],true);
constraint array_bool_or([aux2066_BOOL,aux570_BOOL,aux874_BOOL],true);
constraint array_bool_or([aux2068_BOOL,aux406_BOOL,aux1038_BOOL],true);
constraint array_bool_or([aux2069_BOOL,aux874_BOOL,aux1038_BOOL],true);
constraint array_bool_or([aux2070_BOOL,aux874_BOOL,aux745_BOOL],true);
constraint array_bool_or([aux2071_BOOL,aux406_BOOL,aux745_BOOL],true);
constraint array_bool_or([aux2073_BOOL,aux1038_BOOL,aux879_BOOL],true);
constraint array_bool_or([aux2074_BOOL,aux745_BOOL,aux879_BOOL],true);
constraint array_bool_or([aux2075_BOOL,aux745_BOOL,aux563_BOOL],true);
constraint array_bool_or([aux2076_BOOL,aux1038_BOOL,aux563_BOOL],true);
constraint array_bool_or([aux2078_BOOL,aux879_BOOL,aux706_BOOL],true);
constraint array_bool_or([aux2079_BOOL,aux563_BOOL,aux706_BOOL],true);
constraint array_bool_or([aux2080_BOOL,aux563_BOOL,aux423_BOOL],true);
constraint array_bool_or([aux2081_BOOL,aux879_BOOL,aux423_BOOL],true);
constraint array_bool_or([aux2083_BOOL,aux706_BOOL,aux575_BOOL],true);
constraint array_bool_or([aux2084_BOOL,aux423_BOOL,aux575_BOOL],true);
constraint array_bool_or([aux2085_BOOL,aux423_BOOL,aux1052_BOOL],true);
constraint array_bool_or([aux2086_BOOL,aux706_BOOL,aux1052_BOOL],true);
constraint array_bool_or([aux2088_BOOL,aux575_BOOL,aux936_BOOL],true);
constraint array_bool_or([aux2089_BOOL,aux1052_BOOL,aux936_BOOL],true);
constraint array_bool_or([aux2090_BOOL,aux1052_BOOL,aux1099_BOOL],true);
constraint array_bool_or([aux2091_BOOL,aux575_BOOL,aux1099_BOOL],true);
constraint array_bool_or([aux2093_BOOL,aux936_BOOL,aux1037_BOOL],true);
constraint array_bool_or([aux2094_BOOL,aux1099_BOOL,aux1037_BOOL],true);
constraint array_bool_or([aux2095_BOOL,aux1099_BOOL,aux1020_BOOL],true);
constraint array_bool_or([aux2096_BOOL,aux936_BOOL,aux1020_BOOL],true);
constraint array_bool_or([aux2098_BOOL,aux1037_BOOL,aux1124_BOOL],true);
constraint array_bool_or([aux2099_BOOL,aux1020_BOOL,aux1124_BOOL],true);
constraint array_bool_or([aux2100_BOOL,aux1020_BOOL,aux1123_BOOL],true);
constraint array_bool_or([aux2101_BOOL,aux1037_BOOL,aux1123_BOOL],true);
constraint array_bool_or([aux2103_BOOL,aux1057_BOOL,aux625_BOOL],true);
constraint array_bool_or([aux1058_BOOL,aux625_BOOL,aux2104_BOOL],true);
constraint array_bool_or([aux1058_BOOL,aux385_BOOL,aux2105_BOOL],true);
constraint array_bool_or([aux385_BOOL,aux1057_BOOL,aux2106_BOOL],true);
constraint array_bool_or([aux2108_BOOL,aux625_BOOL,aux600_BOOL],true);
constraint array_bool_or([aux385_BOOL,aux600_BOOL,aux2109_BOOL],true);
constraint array_bool_or([aux385_BOOL,aux846_BOOL,aux2110_BOOL],true);
constraint array_bool_or([aux846_BOOL,aux625_BOOL,aux2111_BOOL],true);
constraint array_bool_or([aux2113_BOOL,aux600_BOOL,aux975_BOOL],true);
constraint array_bool_or([aux846_BOOL,aux975_BOOL,aux2114_BOOL],true);
constraint array_bool_or([aux846_BOOL,aux918_BOOL,aux2115_BOOL],true);
constraint array_bool_or([aux918_BOOL,aux600_BOOL,aux2116_BOOL],true);
constraint array_bool_or([aux2118_BOOL,aux975_BOOL,aux680_BOOL],true);
constraint array_bool_or([aux918_BOOL,aux680_BOOL,aux2119_BOOL],true);
constraint array_bool_or([aux918_BOOL,aux484_BOOL,aux2120_BOOL],true);
constraint array_bool_or([aux484_BOOL,aux975_BOOL,aux2121_BOOL],true);
constraint array_bool_or([aux2123_BOOL,aux680_BOOL,aux441_BOOL],true);
constraint array_bool_or([aux484_BOOL,aux441_BOOL,aux2124_BOOL],true);
constraint array_bool_or([aux484_BOOL,aux951_BOOL,aux2125_BOOL],true);
constraint array_bool_or([aux951_BOOL,aux680_BOOL,aux2126_BOOL],true);
constraint array_bool_or([aux2128_BOOL,aux441_BOOL,aux913_BOOL],true);
constraint array_bool_or([aux951_BOOL,aux913_BOOL,aux2129_BOOL],true);
constraint array_bool_or([aux951_BOOL,aux653_BOOL,aux2130_BOOL],true);
constraint array_bool_or([aux653_BOOL,aux441_BOOL,aux2131_BOOL],true);
constraint array_bool_or([aux2133_BOOL,aux913_BOOL,aux616_BOOL],true);
constraint array_bool_or([aux653_BOOL,aux616_BOOL,aux2134_BOOL],true);
constraint array_bool_or([aux653_BOOL,aux392_BOOL,aux2135_BOOL],true);
constraint array_bool_or([aux392_BOOL,aux913_BOOL,aux2136_BOOL],true);
constraint array_bool_or([aux2138_BOOL,aux616_BOOL,aux1095_BOOL],true);
constraint array_bool_or([aux392_BOOL,aux1095_BOOL,aux2139_BOOL],true);
constraint array_bool_or([aux392_BOOL,aux851_BOOL,aux2140_BOOL],true);
constraint array_bool_or([aux851_BOOL,aux616_BOOL,aux2141_BOOL],true);
constraint array_bool_or([aux2143_BOOL,aux1095_BOOL,aux806_BOOL],true);
constraint array_bool_or([aux851_BOOL,aux806_BOOL,aux2144_BOOL],true);
constraint array_bool_or([aux851_BOOL,aux557_BOOL,aux2145_BOOL],true);
constraint array_bool_or([aux557_BOOL,aux1095_BOOL,aux2146_BOOL],true);
constraint array_bool_or([aux2148_BOOL,aux806_BOOL,aux514_BOOL],true);
constraint array_bool_or([aux557_BOOL,aux514_BOOL,aux2149_BOOL],true);
constraint array_bool_or([aux557_BOOL,aux1076_BOOL,aux2150_BOOL],true);
constraint array_bool_or([aux1076_BOOL,aux806_BOOL,aux2151_BOOL],true);
constraint array_bool_or([aux2153_BOOL,aux514_BOOL,aux995_BOOL],true);
constraint array_bool_or([aux1076_BOOL,aux995_BOOL,aux2154_BOOL],true);
constraint array_bool_or([aux1076_BOOL,aux791_BOOL,aux2155_BOOL],true);
constraint array_bool_or([aux791_BOOL,aux514_BOOL,aux2156_BOOL],true);
constraint array_bool_or([aux2158_BOOL,aux995_BOOL,aux744_BOOL],true);
constraint array_bool_or([aux791_BOOL,aux744_BOOL,aux2159_BOOL],true);
constraint array_bool_or([aux791_BOOL,aux501_BOOL,aux2160_BOOL],true);
constraint array_bool_or([aux501_BOOL,aux995_BOOL,aux2161_BOOL],true);
constraint array_bool_or([aux2163_BOOL,aux744_BOOL,aux454_BOOL],true);
constraint array_bool_or([aux501_BOOL,aux454_BOOL,aux2164_BOOL],true);
constraint array_bool_or([aux501_BOOL,aux974_BOOL,aux2165_BOOL],true);
constraint array_bool_or([aux974_BOOL,aux744_BOOL,aux2166_BOOL],true);
constraint array_bool_or([aux2168_BOOL,aux454_BOOL,aux928_BOOL],true);
constraint array_bool_or([aux974_BOOL,aux928_BOOL,aux2169_BOOL],true);
constraint array_bool_or([aux974_BOOL,aux679_BOOL,aux2170_BOOL],true);
constraint array_bool_or([aux679_BOOL,aux454_BOOL,aux2171_BOOL],true);
constraint array_bool_or([aux2173_BOOL,aux928_BOOL,aux638_BOOL],true);
constraint array_bool_or([aux679_BOOL,aux638_BOOL,aux2174_BOOL],true);
constraint array_bool_or([aux679_BOOL,aux440_BOOL,aux2175_BOOL],true);
constraint array_bool_or([aux440_BOOL,aux928_BOOL,aux2176_BOOL],true);
constraint array_bool_or([aux2178_BOOL,aux638_BOOL,aux964_BOOL],true);
constraint array_bool_or([aux440_BOOL,aux964_BOOL,aux2179_BOOL],true);
constraint array_bool_or([aux440_BOOL,aux489_BOOL,aux2180_BOOL],true);
constraint array_bool_or([aux489_BOOL,aux638_BOOL,aux2181_BOOL],true);
constraint array_bool_or([aux2183_BOOL,aux964_BOOL,aux812_BOOL],true);
constraint array_bool_or([aux489_BOOL,aux812_BOOL,aux2184_BOOL],true);
constraint array_bool_or([aux489_BOOL,aux555_BOOL,aux2185_BOOL],true);
constraint array_bool_or([aux555_BOOL,aux964_BOOL,aux2186_BOOL],true);
constraint array_bool_or([aux2188_BOOL,aux812_BOOL,aux1055_BOOL],true);
constraint array_bool_or([aux555_BOOL,aux1055_BOOL,aux2189_BOOL],true);
constraint array_bool_or([aux555_BOOL,aux1056_BOOL,aux2190_BOOL],true);
constraint array_bool_or([aux1056_BOOL,aux812_BOOL,aux2191_BOOL],true);
constraint array_bool_or([aux660_BOOL,aux645_BOOL,aux2193_BOOL],true);
constraint array_bool_or([aux2194_BOOL,aux658_BOOL,aux645_BOOL],true);
constraint array_bool_or([aux658_BOOL,aux817_BOOL,aux2195_BOOL],true);
constraint array_bool_or([aux2196_BOOL,aux817_BOOL,aux660_BOOL],true);
constraint array_bool_or([aux645_BOOL,aux573_BOOL,aux2198_BOOL],true);
constraint array_bool_or([aux2199_BOOL,aux817_BOOL,aux573_BOOL],true);
constraint array_bool_or([aux817_BOOL,aux483_BOOL,aux2200_BOOL],true);
constraint array_bool_or([aux2201_BOOL,aux483_BOOL,aux645_BOOL],true);
constraint array_bool_or([aux573_BOOL,aux491_BOOL,aux2203_BOOL],true);
constraint array_bool_or([aux2204_BOOL,aux483_BOOL,aux491_BOOL],true);
constraint array_bool_or([aux483_BOOL,aux741_BOOL,aux2205_BOOL],true);
constraint array_bool_or([aux2206_BOOL,aux741_BOOL,aux573_BOOL],true);
constraint array_bool_or([aux491_BOOL,aux593_BOOL,aux2208_BOOL],true);
constraint array_bool_or([aux2209_BOOL,aux741_BOOL,aux593_BOOL],true);
constraint array_bool_or([aux741_BOOL,aux843_BOOL,aux2210_BOOL],true);
constraint array_bool_or([aux2211_BOOL,aux843_BOOL,aux491_BOOL],true);
constraint array_bool_or([aux593_BOOL,aux1070_BOOL,aux2213_BOOL],true);
constraint array_bool_or([aux2214_BOOL,aux843_BOOL,aux1070_BOOL],true);
constraint array_bool_or([aux843_BOOL,aux466_BOOL,aux2215_BOOL],true);
constraint array_bool_or([aux2216_BOOL,aux466_BOOL,aux593_BOOL],true);
constraint array_bool_or([aux1070_BOOL,aux419_BOOL,aux2218_BOOL],true);
constraint array_bool_or([aux2219_BOOL,aux466_BOOL,aux419_BOOL],true);
constraint array_bool_or([aux466_BOOL,aux565_BOOL,aux2220_BOOL],true);
constraint array_bool_or([aux2221_BOOL,aux565_BOOL,aux1070_BOOL],true);
constraint array_bool_or([aux419_BOOL,aux801_BOOL,aux2223_BOOL],true);
constraint array_bool_or([aux2224_BOOL,aux565_BOOL,aux801_BOOL],true);
constraint array_bool_or([aux565_BOOL,aux1046_BOOL,aux2225_BOOL],true);
constraint array_bool_or([aux2226_BOOL,aux1046_BOOL,aux419_BOOL],true);
constraint array_bool_or([aux801_BOOL,aux519_BOOL,aux2228_BOOL],true);
constraint array_bool_or([aux2229_BOOL,aux1046_BOOL,aux519_BOOL],true);
constraint array_bool_or([aux1046_BOOL,aux397_BOOL,aux2230_BOOL],true);
constraint array_bool_or([aux2231_BOOL,aux397_BOOL,aux801_BOOL],true);
constraint array_bool_or([aux519_BOOL,aux611_BOOL,aux2233_BOOL],true);
constraint array_bool_or([aux2234_BOOL,aux397_BOOL,aux611_BOOL],true);
constraint array_bool_or([aux397_BOOL,aux859_BOOL,aux2235_BOOL],true);
constraint array_bool_or([aux2236_BOOL,aux859_BOOL,aux519_BOOL],true);
constraint array_bool_or([aux611_BOOL,aux1088_BOOL,aux2238_BOOL],true);
constraint array_bool_or([aux2239_BOOL,aux859_BOOL,aux1088_BOOL],true);
constraint array_bool_or([aux859_BOOL,aux961_BOOL,aux2240_BOOL],true);
constraint array_bool_or([aux2241_BOOL,aux961_BOOL,aux611_BOOL],true);
constraint array_bool_or([aux1088_BOOL,aux429_BOOL,aux2243_BOOL],true);
constraint array_bool_or([aux2244_BOOL,aux961_BOOL,aux429_BOOL],true);
constraint array_bool_or([aux961_BOOL,aux668_BOOL,aux2245_BOOL],true);
constraint array_bool_or([aux2246_BOOL,aux668_BOOL,aux1088_BOOL],true);
constraint array_bool_or([aux429_BOOL,aux912_BOOL,aux2248_BOOL],true);
constraint array_bool_or([aux2249_BOOL,aux668_BOOL,aux912_BOOL],true);
constraint array_bool_or([aux668_BOOL,aux774_BOOL,aux2250_BOOL],true);
constraint array_bool_or([aux2251_BOOL,aux774_BOOL,aux429_BOOL],true);
constraint array_bool_or([aux912_BOOL,aux1022_BOOL,aux2253_BOOL],true);
constraint array_bool_or([aux2254_BOOL,aux774_BOOL,aux1022_BOOL],true);
constraint array_bool_or([aux774_BOOL,aux490_BOOL,aux2255_BOOL],true);
constraint array_bool_or([aux2256_BOOL,aux490_BOOL,aux912_BOOL],true);
constraint array_bool_or([aux1022_BOOL,aux727_BOOL,aux2258_BOOL],true);
constraint array_bool_or([aux2259_BOOL,aux490_BOOL,aux727_BOOL],true);
constraint array_bool_or([aux490_BOOL,aux592_BOOL,aux2260_BOOL],true);
constraint array_bool_or([aux2261_BOOL,aux592_BOOL,aux1022_BOOL],true);
constraint array_bool_or([aux727_BOOL,aux826_BOOL,aux2263_BOOL],true);
constraint array_bool_or([aux2264_BOOL,aux592_BOOL,aux826_BOOL],true);
constraint array_bool_or([aux592_BOOL,aux1069_BOOL,aux2265_BOOL],true);
constraint array_bool_or([aux2266_BOOL,aux1069_BOOL,aux727_BOOL],true);
constraint array_bool_or([aux826_BOOL,aux985_BOOL,aux2268_BOOL],true);
constraint array_bool_or([aux2269_BOOL,aux1069_BOOL,aux985_BOOL],true);
constraint array_bool_or([aux1069_BOOL,aux880_BOOL,aux2270_BOOL],true);
constraint array_bool_or([aux2271_BOOL,aux880_BOOL,aux826_BOOL],true);
constraint array_bool_or([aux985_BOOL,aux462_BOOL,aux2273_BOOL],true);
constraint array_bool_or([aux2274_BOOL,aux880_BOOL,aux462_BOOL],true);
constraint array_bool_or([aux880_BOOL,aux620_BOOL,aux2275_BOOL],true);
constraint array_bool_or([aux2276_BOOL,aux620_BOOL,aux985_BOOL],true);
constraint array_bool_or([aux462_BOOL,aux661_BOOL,aux2278_BOOL],true);
constraint array_bool_or([aux2279_BOOL,aux620_BOOL,aux661_BOOL],true);
constraint array_bool_or([aux620_BOOL,aux659_BOOL,aux2280_BOOL],true);
constraint array_bool_or([aux2281_BOOL,aux659_BOOL,aux462_BOOL],true);
constraint array_bool_or([aux1047_BOOL,aux753_BOOL,aux2283_BOOL],true);
constraint array_bool_or([aux2284_BOOL,aux1048_BOOL,aux753_BOOL],true);
constraint array_bool_or([aux2285_BOOL,aux1048_BOOL,aux830_BOOL],true);
constraint array_bool_or([aux2286_BOOL,aux1047_BOOL,aux830_BOOL],true);
constraint array_bool_or([aux753_BOOL,aux760_BOOL,aux2288_BOOL],true);
constraint array_bool_or([aux2289_BOOL,aux830_BOOL,aux760_BOOL],true);
constraint array_bool_or([aux2290_BOOL,aux830_BOOL,aux580_BOOL],true);
constraint array_bool_or([aux2291_BOOL,aux753_BOOL,aux580_BOOL],true);
constraint array_bool_or([aux760_BOOL,aux675_BOOL,aux2293_BOOL],true);
constraint array_bool_or([aux2294_BOOL,aux580_BOOL,aux675_BOOL],true);
constraint array_bool_or([aux2295_BOOL,aux580_BOOL,aux766_BOOL],true);
constraint array_bool_or([aux2296_BOOL,aux760_BOOL,aux766_BOOL],true);
constraint array_bool_or([aux675_BOOL,aux921_BOOL,aux2298_BOOL],true);
constraint array_bool_or([aux2299_BOOL,aux766_BOOL,aux921_BOOL],true);
constraint array_bool_or([aux2300_BOOL,aux766_BOOL,aux1018_BOOL],true);
constraint array_bool_or([aux2301_BOOL,aux675_BOOL,aux1018_BOOL],true);
constraint array_bool_or([aux921_BOOL,aux778_BOOL,aux2303_BOOL],true);
constraint array_bool_or([aux2304_BOOL,aux1018_BOOL,aux778_BOOL],true);
constraint array_bool_or([aux2305_BOOL,aux1018_BOOL,aux503_BOOL],true);
constraint array_bool_or([aux2306_BOOL,aux921_BOOL,aux503_BOOL],true);
constraint array_bool_or([aux778_BOOL,aux1030_BOOL,aux2308_BOOL],true);
constraint array_bool_or([aux2309_BOOL,aux503_BOOL,aux1030_BOOL],true);
constraint array_bool_or([aux2310_BOOL,aux503_BOOL,aux743_BOOL],true);
constraint array_bool_or([aux2311_BOOL,aux778_BOOL,aux743_BOOL],true);
constraint array_bool_or([aux1030_BOOL,aux428_BOOL,aux2313_BOOL],true);
constraint array_bool_or([aux2314_BOOL,aux743_BOOL,aux428_BOOL],true);
constraint array_bool_or([aux2315_BOOL,aux743_BOOL,aux895_BOOL],true);
constraint array_bool_or([aux2316_BOOL,aux1030_BOOL,aux895_BOOL],true);
constraint array_bool_or([aux428_BOOL,aux651_BOOL,aux2318_BOOL],true);
constraint array_bool_or([aux2319_BOOL,aux895_BOOL,aux651_BOOL],true);
constraint array_bool_or([aux2320_BOOL,aux895_BOOL,aux771_BOOL],true);
constraint array_bool_or([aux2321_BOOL,aux428_BOOL,aux771_BOOL],true);
constraint array_bool_or([aux651_BOOL,aux759_BOOL,aux2323_BOOL],true);
constraint array_bool_or([aux2324_BOOL,aux771_BOOL,aux759_BOOL],true);
constraint array_bool_or([aux2325_BOOL,aux771_BOOL,aux467_BOOL],true);
constraint array_bool_or([aux2326_BOOL,aux651_BOOL,aux467_BOOL],true);
constraint array_bool_or([aux759_BOOL,aux1013_BOOL,aux2328_BOOL],true);
constraint array_bool_or([aux2329_BOOL,aux467_BOOL,aux1013_BOOL],true);
constraint array_bool_or([aux2330_BOOL,aux467_BOOL,aux725_BOOL],true);
constraint array_bool_or([aux2331_BOOL,aux759_BOOL,aux725_BOOL],true);
constraint array_bool_or([aux1013_BOOL,aux477_BOOL,aux2333_BOOL],true);
constraint array_bool_or([aux2334_BOOL,aux725_BOOL,aux477_BOOL],true);
constraint array_bool_or([aux2335_BOOL,aux725_BOOL,aux584_BOOL],true);
constraint array_bool_or([aux2336_BOOL,aux1013_BOOL,aux584_BOOL],true);
constraint array_bool_or([aux477_BOOL,aux729_BOOL,aux2338_BOOL],true);
constraint array_bool_or([aux2339_BOOL,aux584_BOOL,aux729_BOOL],true);
constraint array_bool_or([aux2340_BOOL,aux584_BOOL,aux821_BOOL],true);
constraint array_bool_or([aux2341_BOOL,aux477_BOOL,aux821_BOOL],true);
constraint array_bool_or([aux729_BOOL,aux595_BOOL,aux2343_BOOL],true);
constraint array_bool_or([aux2344_BOOL,aux821_BOOL,aux595_BOOL],true);
constraint array_bool_or([aux2345_BOOL,aux821_BOOL,aux1073_BOOL],true);
constraint array_bool_or([aux2346_BOOL,aux729_BOOL,aux1073_BOOL],true);
constraint array_bool_or([aux595_BOOL,aux836_BOOL,aux2348_BOOL],true);
constraint array_bool_or([aux2349_BOOL,aux1073_BOOL,aux836_BOOL],true);
constraint array_bool_or([aux2350_BOOL,aux1073_BOOL,aux474_BOOL],true);
constraint array_bool_or([aux2351_BOOL,aux595_BOOL,aux474_BOOL],true);
constraint array_bool_or([aux836_BOOL,aux994_BOOL,aux2353_BOOL],true);
constraint array_bool_or([aux2354_BOOL,aux474_BOOL,aux994_BOOL],true);
constraint array_bool_or([aux2355_BOOL,aux474_BOOL,aux701_BOOL],true);
constraint array_bool_or([aux2356_BOOL,aux836_BOOL,aux701_BOOL],true);
constraint array_bool_or([aux994_BOOL,aux691_BOOL,aux2358_BOOL],true);
constraint array_bool_or([aux2359_BOOL,aux701_BOOL,aux691_BOOL],true);
constraint array_bool_or([aux2360_BOOL,aux701_BOOL,aux433_BOOL],true);
constraint array_bool_or([aux2361_BOOL,aux994_BOOL,aux433_BOOL],true);
constraint array_bool_or([aux691_BOOL,aux863_BOOL,aux2363_BOOL],true);
constraint array_bool_or([aux2364_BOOL,aux433_BOOL,aux863_BOOL],true);
constraint array_bool_or([aux2365_BOOL,aux433_BOOL,aux870_BOOL],true);
constraint array_bool_or([aux2366_BOOL,aux691_BOOL,aux870_BOOL],true);
constraint array_bool_or([aux863_BOOL,aux1043_BOOL,aux2368_BOOL],true);
constraint array_bool_or([aux2369_BOOL,aux870_BOOL,aux1043_BOOL],true);
constraint array_bool_or([aux2370_BOOL,aux870_BOOL,aux1042_BOOL],true);
constraint array_bool_or([aux2371_BOOL,aux863_BOOL,aux1042_BOOL],true);
constraint array_bool_or([aux629_BOOL,aux910_BOOL,aux2373_BOOL],true);
constraint array_bool_or([aux2374_BOOL,aux628_BOOL,aux910_BOOL],true);
constraint array_bool_or([aux2375_BOOL,aux628_BOOL,aux898_BOOL],true);
constraint array_bool_or([aux2376_BOOL,aux629_BOOL,aux898_BOOL],true);
constraint array_bool_or([aux910_BOOL,aux809_BOOL,aux2378_BOOL],true);
constraint array_bool_or([aux2379_BOOL,aux898_BOOL,aux809_BOOL],true);
constraint array_bool_or([aux2380_BOOL,aux898_BOOL,aux591_BOOL],true);
constraint array_bool_or([aux2381_BOOL,aux910_BOOL,aux591_BOOL],true);
constraint array_bool_or([aux809_BOOL,aux816_BOOL,aux2383_BOOL],true);
constraint array_bool_or([aux2384_BOOL,aux591_BOOL,aux816_BOOL],true);
constraint array_bool_or([aux2385_BOOL,aux591_BOOL,aux1101_BOOL],true);
constraint array_bool_or([aux2386_BOOL,aux809_BOOL,aux1101_BOOL],true);
constraint array_bool_or([aux816_BOOL,aux861_BOOL,aux2388_BOOL],true);
constraint array_bool_or([aux2389_BOOL,aux1101_BOOL,aux861_BOOL],true);
constraint array_bool_or([aux2390_BOOL,aux1101_BOOL,aux536_BOOL],true);
constraint array_bool_or([aux2391_BOOL,aux816_BOOL,aux536_BOOL],true);
constraint array_bool_or([aux861_BOOL,aux1062_BOOL,aux2393_BOOL],true);
constraint array_bool_or([aux2394_BOOL,aux536_BOOL,aux1062_BOOL],true);
constraint array_bool_or([aux2395_BOOL,aux536_BOOL,aux599_BOOL],true);
constraint array_bool_or([aux2396_BOOL,aux861_BOOL,aux599_BOOL],true);
constraint array_bool_or([aux1062_BOOL,aux546_BOOL,aux2398_BOOL],true);
constraint array_bool_or([aux2399_BOOL,aux599_BOOL,aux546_BOOL],true);
constraint array_bool_or([aux2400_BOOL,aux599_BOOL,aux829_BOOL],true);
constraint array_bool_or([aux2401_BOOL,aux1062_BOOL,aux829_BOOL],true);
constraint array_bool_or([aux546_BOOL,aux560_BOOL,aux2403_BOOL],true);
constraint array_bool_or([aux2404_BOOL,aux829_BOOL,aux560_BOOL],true);
constraint array_bool_or([aux2405_BOOL,aux829_BOOL,aux854_BOOL],true);
constraint array_bool_or([aux2406_BOOL,aux546_BOOL,aux854_BOOL],true);
constraint array_bool_or([aux560_BOOL,aux803_BOOL,aux2408_BOOL],true);
constraint array_bool_or([aux2409_BOOL,aux854_BOOL,aux803_BOOL],true);
constraint array_bool_or([aux2410_BOOL,aux854_BOOL,aux1106_BOOL],true);
constraint array_bool_or([aux2411_BOOL,aux560_BOOL,aux1106_BOOL],true);
constraint array_bool_or([aux803_BOOL,aux1090_BOOL,aux2413_BOOL],true);
constraint array_bool_or([aux2414_BOOL,aux1106_BOOL,aux1090_BOOL],true);
constraint array_bool_or([aux2415_BOOL,aux1106_BOOL,aux604_BOOL],true);
constraint array_bool_or([aux2416_BOOL,aux803_BOOL,aux604_BOOL],true);
constraint array_bool_or([aux1090_BOOL,aux384_BOOL,aux2418_BOOL],true);
constraint array_bool_or([aux2419_BOOL,aux604_BOOL,aux384_BOOL],true);
constraint array_bool_or([aux2420_BOOL,aux604_BOOL,aux676_BOOL],true);
constraint array_bool_or([aux2421_BOOL,aux1090_BOOL,aux676_BOOL],true);
constraint array_bool_or([aux384_BOOL,aux617_BOOL,aux2423_BOOL],true);
constraint array_bool_or([aux2424_BOOL,aux676_BOOL,aux617_BOOL],true);
constraint array_bool_or([aux2425_BOOL,aux676_BOOL,aux906_BOOL],true);
constraint array_bool_or([aux2426_BOOL,aux384_BOOL,aux906_BOOL],true);
constraint array_bool_or([aux617_BOOL,aux828_BOOL,aux2428_BOOL],true);
constraint array_bool_or([aux2429_BOOL,aux906_BOOL,aux828_BOOL],true);
constraint array_bool_or([aux2430_BOOL,aux906_BOOL,aux1114_BOOL],true);
constraint array_bool_or([aux2431_BOOL,aux617_BOOL,aux1114_BOOL],true);
constraint array_bool_or([aux828_BOOL,aux886_BOOL,aux2433_BOOL],true);
constraint array_bool_or([aux2434_BOOL,aux1114_BOOL,aux886_BOOL],true);
constraint array_bool_or([aux2435_BOOL,aux1114_BOOL,aux420_BOOL],true);
constraint array_bool_or([aux2436_BOOL,aux828_BOOL,aux420_BOOL],true);
constraint array_bool_or([aux886_BOOL,aux1130_BOOL,aux2438_BOOL],true);
constraint array_bool_or([aux2439_BOOL,aux420_BOOL,aux1130_BOOL],true);
constraint array_bool_or([aux2440_BOOL,aux420_BOOL,aux610_BOOL],true);
constraint array_bool_or([aux2441_BOOL,aux886_BOOL,aux610_BOOL],true);
constraint array_bool_or([aux1130_BOOL,aux389_BOOL,aux2443_BOOL],true);
constraint array_bool_or([aux2444_BOOL,aux610_BOOL,aux389_BOOL],true);
constraint array_bool_or([aux2445_BOOL,aux610_BOOL,aux652_BOOL],true);
constraint array_bool_or([aux2446_BOOL,aux1130_BOOL,aux652_BOOL],true);
constraint array_bool_or([aux389_BOOL,aux468_BOOL,aux2448_BOOL],true);
constraint array_bool_or([aux2449_BOOL,aux652_BOOL,aux468_BOOL],true);
constraint array_bool_or([aux2450_BOOL,aux652_BOOL,aux461_BOOL],true);
constraint array_bool_or([aux2451_BOOL,aux389_BOOL,aux461_BOOL],true);
constraint array_bool_or([aux468_BOOL,aux773_BOOL,aux2453_BOOL],true);
constraint array_bool_or([aux2454_BOOL,aux461_BOOL,aux773_BOOL],true);
constraint array_bool_or([aux2455_BOOL,aux461_BOOL,aux782_BOOL],true);
constraint array_bool_or([aux2456_BOOL,aux468_BOOL,aux782_BOOL],true);
constraint array_bool_or([aux773_BOOL,aux626_BOOL,aux2458_BOOL],true);
constraint array_bool_or([aux2459_BOOL,aux782_BOOL,aux626_BOOL],true);
constraint array_bool_or([aux2460_BOOL,aux782_BOOL,aux627_BOOL],true);
constraint array_bool_or([aux2461_BOOL,aux773_BOOL,aux627_BOOL],true);
constraint array_bool_or([aux892_BOOL,aux860_BOOL,aux2463_BOOL],true);
constraint array_bool_or([aux893_BOOL,aux860_BOOL,aux2464_BOOL],true);
constraint array_bool_or([aux893_BOOL,aux866_BOOL,aux2465_BOOL],true);
constraint array_bool_or([aux892_BOOL,aux866_BOOL,aux2466_BOOL],true);
constraint array_bool_or([aux860_BOOL,aux682_BOOL,aux2468_BOOL],true);
constraint array_bool_or([aux866_BOOL,aux682_BOOL,aux2469_BOOL],true);
constraint array_bool_or([aux866_BOOL,aux525_BOOL,aux2470_BOOL],true);
constraint array_bool_or([aux860_BOOL,aux525_BOOL,aux2471_BOOL],true);
constraint array_bool_or([aux682_BOOL,aux959_BOOL,aux2473_BOOL],true);
constraint array_bool_or([aux525_BOOL,aux959_BOOL,aux2474_BOOL],true);
constraint array_bool_or([aux525_BOOL,aux481_BOOL,aux2475_BOOL],true);
constraint array_bool_or([aux682_BOOL,aux481_BOOL,aux2476_BOOL],true);
constraint array_bool_or([aux959_BOOL,aux1104_BOOL,aux2478_BOOL],true);
constraint array_bool_or([aux481_BOOL,aux1104_BOOL,aux2479_BOOL],true);
constraint array_bool_or([aux481_BOOL,aux632_BOOL,aux2480_BOOL],true);
constraint array_bool_or([aux959_BOOL,aux632_BOOL,aux2481_BOOL],true);
constraint array_bool_or([aux1104_BOOL,aux492_BOOL,aux2483_BOOL],true);
constraint array_bool_or([aux632_BOOL,aux492_BOOL,aux2484_BOOL],true);
constraint array_bool_or([aux632_BOOL,aux779_BOOL,aux2485_BOOL],true);
constraint array_bool_or([aux1104_BOOL,aux779_BOOL,aux2486_BOOL],true);
constraint array_bool_or([aux492_BOOL,aux643_BOOL,aux2488_BOOL],true);
constraint array_bool_or([aux779_BOOL,aux643_BOOL,aux2489_BOOL],true);
constraint array_bool_or([aux779_BOOL,aux927_BOOL,aux2490_BOOL],true);
constraint array_bool_or([aux492_BOOL,aux927_BOOL,aux2491_BOOL],true);
constraint array_bool_or([aux643_BOOL,aux793_BOOL,aux2493_BOOL],true);
constraint array_bool_or([aux927_BOOL,aux793_BOOL,aux2494_BOOL],true);
constraint array_bool_or([aux927_BOOL,aux1089_BOOL,aux2495_BOOL],true);
constraint array_bool_or([aux643_BOOL,aux1089_BOOL,aux2496_BOOL],true);
constraint array_bool_or([aux793_BOOL,aux945_BOOL,aux2498_BOOL],true);
constraint array_bool_or([aux1089_BOOL,aux945_BOOL,aux2499_BOOL],true);
constraint array_bool_or([aux1089_BOOL,aux465_BOOL,aux2500_BOOL],true);
constraint array_bool_or([aux793_BOOL,aux465_BOOL,aux2501_BOOL],true);
constraint array_bool_or([aux945_BOOL,aux471_BOOL,aux2503_BOOL],true);
constraint array_bool_or([aux465_BOOL,aux471_BOOL,aux2504_BOOL],true);
constraint array_bool_or([aux465_BOOL,aux756_BOOL,aux2505_BOOL],true);
constraint array_bool_or([aux945_BOOL,aux756_BOOL,aux2506_BOOL],true);
constraint array_bool_or([aux471_BOOL,aux603_BOOL,aux2508_BOOL],true);
constraint array_bool_or([aux756_BOOL,aux603_BOOL,aux2509_BOOL],true);
constraint array_bool_or([aux756_BOOL,aux911_BOOL,aux2510_BOOL],true);
constraint array_bool_or([aux471_BOOL,aux911_BOOL,aux2511_BOOL],true);
constraint array_bool_or([aux603_BOOL,aux768_BOOL,aux2513_BOOL],true);
constraint array_bool_or([aux911_BOOL,aux768_BOOL,aux2514_BOOL],true);
constraint array_bool_or([aux911_BOOL,aux1054_BOOL,aux2515_BOOL],true);
constraint array_bool_or([aux603_BOOL,aux1054_BOOL,aux2516_BOOL],true);
constraint array_bool_or([aux768_BOOL,aux920_BOOL,aux2518_BOOL],true);
constraint array_bool_or([aux1054_BOOL,aux920_BOOL,aux2519_BOOL],true);
constraint array_bool_or([aux1054_BOOL,aux447_BOOL,aux2520_BOOL],true);
constraint array_bool_or([aux768_BOOL,aux447_BOOL,aux2521_BOOL],true);
constraint array_bool_or([aux920_BOOL,aux1066_BOOL,aux2523_BOOL],true);
constraint array_bool_or([aux447_BOOL,aux1066_BOOL,aux2524_BOOL],true);
constraint array_bool_or([aux447_BOOL,aux598_BOOL,aux2525_BOOL],true);
constraint array_bool_or([aux920_BOOL,aux598_BOOL,aux2526_BOOL],true);
constraint array_bool_or([aux1066_BOOL,aux455_BOOL,aux2528_BOOL],true);
constraint array_bool_or([aux598_BOOL,aux455_BOOL,aux2529_BOOL],true);
constraint array_bool_or([aux598_BOOL,aux742_BOOL,aux2530_BOOL],true);
constraint array_bool_or([aux1066_BOOL,aux742_BOOL,aux2531_BOOL],true);
constraint array_bool_or([aux455_BOOL,aux609_BOOL,aux2533_BOOL],true);
constraint array_bool_or([aux742_BOOL,aux609_BOOL,aux2534_BOOL],true);
constraint array_bool_or([aux742_BOOL,aux896_BOOL,aux2535_BOOL],true);
constraint array_bool_or([aux455_BOOL,aux896_BOOL,aux2536_BOOL],true);
constraint array_bool_or([aux609_BOOL,aux450_BOOL,aux2538_BOOL],true);
constraint array_bool_or([aux896_BOOL,aux450_BOOL,aux2539_BOOL],true);
constraint array_bool_or([aux896_BOOL,aux1041_BOOL,aux2540_BOOL],true);
constraint array_bool_or([aux609_BOOL,aux1041_BOOL,aux2541_BOOL],true);
constraint array_bool_or([aux450_BOOL,aux789_BOOL,aux2543_BOOL],true);
constraint array_bool_or([aux1041_BOOL,aux789_BOOL,aux2544_BOOL],true);
constraint array_bool_or([aux1041_BOOL,aux796_BOOL,aux2545_BOOL],true);
constraint array_bool_or([aux450_BOOL,aux796_BOOL,aux2546_BOOL],true);
constraint array_bool_or([aux789_BOOL,aux891_BOOL,aux2548_BOOL],true);
constraint array_bool_or([aux796_BOOL,aux891_BOOL,aux2549_BOOL],true);
constraint array_bool_or([aux796_BOOL,aux890_BOOL,aux2550_BOOL],true);
constraint array_bool_or([aux789_BOOL,aux890_BOOL,aux2551_BOOL],true);
constraint array_bool_or([aux2553_BOOL,aux1000_BOOL,aux531_BOOL],true);
constraint array_bool_or([aux1003_BOOL,aux531_BOOL,aux2554_BOOL],true);
constraint array_bool_or([aux1003_BOOL,aux939_BOOL,aux2555_BOOL],true);
constraint array_bool_or([aux939_BOOL,aux1000_BOOL,aux2556_BOOL],true);
constraint array_bool_or([aux2558_BOOL,aux531_BOOL,aux1063_BOOL],true);
constraint array_bool_or([aux939_BOOL,aux1063_BOOL,aux2559_BOOL],true);
constraint array_bool_or([aux939_BOOL,aux407_BOOL,aux2560_BOOL],true);
constraint array_bool_or([aux407_BOOL,aux531_BOOL,aux2561_BOOL],true);
constraint array_bool_or([aux2563_BOOL,aux1063_BOOL,aux799_BOOL],true);
constraint array_bool_or([aux407_BOOL,aux799_BOOL,aux2564_BOOL],true);
constraint array_bool_or([aux407_BOOL,aux633_BOOL,aux2565_BOOL],true);
constraint array_bool_or([aux633_BOOL,aux1063_BOOL,aux2566_BOOL],true);
constraint array_bool_or([aux2568_BOOL,aux799_BOOL,aux695_BOOL],true);
constraint array_bool_or([aux633_BOOL,aux695_BOOL,aux2569_BOOL],true);
constraint array_bool_or([aux633_BOOL,aux535_BOOL,aux2570_BOOL],true);
constraint array_bool_or([aux535_BOOL,aux799_BOOL,aux2571_BOOL],true);
constraint array_bool_or([aux2573_BOOL,aux695_BOOL,aux969_BOOL],true);
constraint array_bool_or([aux535_BOOL,aux969_BOOL,aux2574_BOOL],true);
constraint array_bool_or([aux535_BOOL,aux818_BOOL,aux2575_BOOL],true);
constraint array_bool_or([aux818_BOOL,aux695_BOOL,aux2576_BOOL],true);
constraint array_bool_or([aux2578_BOOL,aux969_BOOL,aux878_BOOL],true);
constraint array_bool_or([aux818_BOOL,aux878_BOOL,aux2579_BOOL],true);
constraint array_bool_or([aux818_BOOL,aux723_BOOL,aux2580_BOOL],true);
constraint array_bool_or([aux723_BOOL,aux969_BOOL,aux2581_BOOL],true);
constraint array_bool_or([aux2583_BOOL,aux878_BOOL,aux404_BOOL],true);
constraint array_bool_or([aux723_BOOL,aux404_BOOL,aux2584_BOOL],true);
constraint array_bool_or([aux723_BOOL,aux1006_BOOL,aux2585_BOOL],true);
constraint array_bool_or([aux1006_BOOL,aux878_BOOL,aux2586_BOOL],true);
constraint array_bool_or([aux2588_BOOL,aux404_BOOL,aux1060_BOOL],true);
constraint array_bool_or([aux1006_BOOL,aux1060_BOOL,aux2589_BOOL],true);
constraint array_bool_or([aux1006_BOOL,aux908_BOOL,aux2590_BOOL],true);
constraint array_bool_or([aux908_BOOL,aux404_BOOL,aux2591_BOOL],true);
constraint array_bool_or([aux2593_BOOL,aux1060_BOOL,aux574_BOOL],true);
constraint array_bool_or([aux908_BOOL,aux574_BOOL,aux2594_BOOL],true);
constraint array_bool_or([aux908_BOOL,aux434_BOOL,aux2595_BOOL],true);
constraint array_bool_or([aux434_BOOL,aux1060_BOOL,aux2596_BOOL],true);
constraint array_bool_or([aux2598_BOOL,aux574_BOOL,aux475_BOOL],true);
constraint array_bool_or([aux434_BOOL,aux475_BOOL,aux2599_BOOL],true);
constraint array_bool_or([aux434_BOOL,aux1097_BOOL,aux2600_BOOL],true);
constraint array_bool_or([aux1097_BOOL,aux574_BOOL,aux2601_BOOL],true);
constraint array_bool_or([aux2603_BOOL,aux475_BOOL,aux764_BOOL],true);
constraint array_bool_or([aux1097_BOOL,aux764_BOOL,aux2604_BOOL],true);
constraint array_bool_or([aux1097_BOOL,aux605_BOOL,aux2605_BOOL],true);
constraint array_bool_or([aux605_BOOL,aux475_BOOL,aux2606_BOOL],true);
constraint array_bool_or([aux2608_BOOL,aux764_BOOL,aux654_BOOL],true);
constraint array_bool_or([aux605_BOOL,aux654_BOOL,aux2609_BOOL],true);
constraint array_bool_or([aux605_BOOL,aux504_BOOL,aux2610_BOOL],true);
constraint array_bool_or([aux504_BOOL,aux764_BOOL,aux2611_BOOL],true);
constraint array_bool_or([aux2613_BOOL,aux654_BOOL,aux942_BOOL],true);
constraint array_bool_or([aux504_BOOL,aux942_BOOL,aux2614_BOOL],true);
constraint array_bool_or([aux504_BOOL,aux798_BOOL,aux2615_BOOL],true);
constraint array_bool_or([aux798_BOOL,aux654_BOOL,aux2616_BOOL],true);
constraint array_bool_or([aux2618_BOOL,aux942_BOOL,aux644_BOOL],true);
constraint array_bool_or([aux798_BOOL,aux644_BOOL,aux2619_BOOL],true);
constraint array_bool_or([aux798_BOOL,aux694_BOOL,aux2620_BOOL],true);
constraint array_bool_or([aux694_BOOL,aux942_BOOL,aux2621_BOOL],true);
constraint array_bool_or([aux2623_BOOL,aux644_BOOL,aux547_BOOL],true);
constraint array_bool_or([aux694_BOOL,aux547_BOOL,aux2624_BOOL],true);
constraint array_bool_or([aux694_BOOL,aux968_BOOL,aux2625_BOOL],true);
constraint array_bool_or([aux968_BOOL,aux644_BOOL,aux2626_BOOL],true);
constraint array_bool_or([aux2628_BOOL,aux547_BOOL,aux655_BOOL],true);
constraint array_bool_or([aux968_BOOL,aux655_BOOL,aux2629_BOOL],true);
constraint array_bool_or([aux968_BOOL,aux765_BOOL,aux2630_BOOL],true);
constraint array_bool_or([aux765_BOOL,aux547_BOOL,aux2631_BOOL],true);
constraint array_bool_or([aux2633_BOOL,aux655_BOOL,aux726_BOOL],true);
constraint array_bool_or([aux765_BOOL,aux726_BOOL,aux2634_BOOL],true);
constraint array_bool_or([aux765_BOOL,aux394_BOOL,aux2635_BOOL],true);
constraint array_bool_or([aux394_BOOL,aux655_BOOL,aux2636_BOOL],true);
constraint array_bool_or([aux2638_BOOL,aux726_BOOL,aux1002_BOOL],true);
constraint array_bool_or([aux394_BOOL,aux1002_BOOL,aux2639_BOOL],true);
constraint array_bool_or([aux394_BOOL,aux1001_BOOL,aux2640_BOOL],true);
constraint array_bool_or([aux1001_BOOL,aux726_BOOL,aux2641_BOOL],true);
constraint array_bool_or([aux717_BOOL,aux790_BOOL,aux2643_BOOL],true);
constraint array_bool_or([aux718_BOOL,aux790_BOOL,aux2644_BOOL],true);
constraint array_bool_or([aux2645_BOOL,aux718_BOOL,aux1102_BOOL],true);
constraint array_bool_or([aux1102_BOOL,aux717_BOOL,aux2646_BOOL],true);
constraint array_bool_or([aux790_BOOL,aux498_BOOL,aux2648_BOOL],true);
constraint array_bool_or([aux1102_BOOL,aux498_BOOL,aux2649_BOOL],true);
constraint array_bool_or([aux2650_BOOL,aux1102_BOOL,aux792_BOOL],true);
constraint array_bool_or([aux792_BOOL,aux790_BOOL,aux2651_BOOL],true);
constraint array_bool_or([aux498_BOOL,aux437_BOOL,aux2653_BOOL],true);
constraint array_bool_or([aux792_BOOL,aux437_BOOL,aux2654_BOOL],true);
constraint array_bool_or([aux2655_BOOL,aux792_BOOL,aux637_BOOL],true);
constraint array_bool_or([aux637_BOOL,aux498_BOOL,aux2656_BOOL],true);
constraint array_bool_or([aux437_BOOL,aux777_BOOL,aux2658_BOOL],true);
constraint array_bool_or([aux637_BOOL,aux777_BOOL,aux2659_BOOL],true);
constraint array_bool_or([aux2660_BOOL,aux637_BOOL,aux1117_BOOL],true);
constraint array_bool_or([aux1117_BOOL,aux437_BOOL,aux2661_BOOL],true);
constraint array_bool_or([aux777_BOOL,aux494_BOOL,aux2663_BOOL],true);
constraint array_bool_or([aux1117_BOOL,aux494_BOOL,aux2664_BOOL],true);
constraint array_bool_or([aux2665_BOOL,aux1117_BOOL,aux453_BOOL],true);
constraint array_bool_or([aux453_BOOL,aux777_BOOL,aux2666_BOOL],true);
constraint array_bool_or([aux494_BOOL,aux586_BOOL,aux2668_BOOL],true);
constraint array_bool_or([aux453_BOOL,aux586_BOOL,aux2669_BOOL],true);
constraint array_bool_or([aux2670_BOOL,aux453_BOOL,aux938_BOOL],true);
constraint array_bool_or([aux938_BOOL,aux494_BOOL,aux2671_BOOL],true);
constraint array_bool_or([aux586_BOOL,aux1071_BOOL,aux2673_BOOL],true);
constraint array_bool_or([aux938_BOOL,aux1071_BOOL,aux2674_BOOL],true);
constraint array_bool_or([aux2675_BOOL,aux938_BOOL,aux1035_BOOL],true);
constraint array_bool_or([aux1035_BOOL,aux586_BOOL,aux2676_BOOL],true);
constraint array_bool_or([aux1071_BOOL,aux422_BOOL,aux2678_BOOL],true);
constraint array_bool_or([aux1035_BOOL,aux422_BOOL,aux2679_BOOL],true);
constraint array_bool_or([aux2680_BOOL,aux1035_BOOL,aux697_BOOL],true);
constraint array_bool_or([aux697_BOOL,aux1071_BOOL,aux2681_BOOL],true);
constraint array_bool_or([aux422_BOOL,aux888_BOOL,aux2683_BOOL],true);
constraint array_bool_or([aux697_BOOL,aux888_BOOL,aux2684_BOOL],true);
constraint array_bool_or([aux2685_BOOL,aux697_BOOL,aux800_BOOL],true);
constraint array_bool_or([aux800_BOOL,aux422_BOOL,aux2686_BOOL],true);
constraint array_bool_or([aux888_BOOL,aux946_BOOL,aux2688_BOOL],true);
constraint array_bool_or([aux800_BOOL,aux946_BOOL,aux2689_BOOL],true);
constraint array_bool_or([aux2690_BOOL,aux800_BOOL,aux518_BOOL],true);
constraint array_bool_or([aux518_BOOL,aux888_BOOL,aux2691_BOOL],true);
constraint array_bool_or([aux946_BOOL,aux650_BOOL,aux2693_BOOL],true);
constraint array_bool_or([aux518_BOOL,aux650_BOOL,aux2694_BOOL],true);
constraint array_bool_or([aux2695_BOOL,aux518_BOOL,aux618_BOOL],true);
constraint array_bool_or([aux618_BOOL,aux946_BOOL,aux2696_BOOL],true);
constraint array_bool_or([aux650_BOOL,aux754_BOOL,aux2698_BOOL],true);
constraint array_bool_or([aux618_BOOL,aux754_BOOL,aux2699_BOOL],true);
constraint array_bool_or([aux2700_BOOL,aux618_BOOL,aux1100_BOOL],true);
constraint array_bool_or([aux1100_BOOL,aux650_BOOL,aux2701_BOOL],true);
constraint array_bool_or([aux754_BOOL,aux478_BOOL,aux2703_BOOL],true);
constraint array_bool_or([aux1100_BOOL,aux478_BOOL,aux2704_BOOL],true);
constraint array_bool_or([aux2705_BOOL,aux1100_BOOL,aux436_BOOL],true);
constraint array_bool_or([aux436_BOOL,aux754_BOOL,aux2706_BOOL],true);
constraint array_bool_or([aux478_BOOL,aux568_BOOL,aux2708_BOOL],true);
constraint array_bool_or([aux436_BOOL,aux568_BOOL,aux2709_BOOL],true);
constraint array_bool_or([aux2710_BOOL,aux436_BOOL,aux776_BOOL],true);
constraint array_bool_or([aux776_BOOL,aux478_BOOL,aux2711_BOOL],true);
constraint array_bool_or([aux568_BOOL,aux1059_BOOL,aux2713_BOOL],true);
constraint array_bool_or([aux776_BOOL,aux1059_BOOL,aux2714_BOOL],true);
constraint array_bool_or([aux2715_BOOL,aux776_BOOL,aux493_BOOL],true);
constraint array_bool_or([aux493_BOOL,aux568_BOOL,aux2716_BOOL],true);
constraint array_bool_or([aux1059_BOOL,aux862_BOOL,aux2718_BOOL],true);
constraint array_bool_or([aux493_BOOL,aux862_BOOL,aux2719_BOOL],true);
constraint array_bool_or([aux2720_BOOL,aux493_BOOL,aux388_BOOL],true);
constraint array_bool_or([aux388_BOOL,aux1059_BOOL,aux2721_BOOL],true);
constraint array_bool_or([aux862_BOOL,aux594_BOOL,aux2723_BOOL],true);
constraint array_bool_or([aux388_BOOL,aux594_BOOL,aux2724_BOOL],true);
constraint array_bool_or([aux2725_BOOL,aux388_BOOL,aux900_BOOL],true);
constraint array_bool_or([aux900_BOOL,aux862_BOOL,aux2726_BOOL],true);
constraint array_bool_or([aux594_BOOL,aux716_BOOL,aux2728_BOOL],true);
constraint array_bool_or([aux900_BOOL,aux716_BOOL,aux2729_BOOL],true);
constraint array_bool_or([aux2730_BOOL,aux900_BOOL,aux715_BOOL],true);
constraint array_bool_or([aux715_BOOL,aux594_BOOL,aux2731_BOOL],true);
constraint array_bool_or([aux931_BOOL,aux463_BOOL,aux2733_BOOL],true);
constraint array_bool_or([aux932_BOOL,aux463_BOOL,aux2734_BOOL],true);
constraint array_bool_or([aux2735_BOOL,aux932_BOOL,aux470_BOOL],true);
constraint array_bool_or([aux931_BOOL,aux470_BOOL,aux2736_BOOL],true);
constraint array_bool_or([aux463_BOOL,aux930_BOOL,aux2738_BOOL],true);
constraint array_bool_or([aux470_BOOL,aux930_BOOL,aux2739_BOOL],true);
constraint array_bool_or([aux2740_BOOL,aux470_BOOL,aux724_BOOL],true);
constraint array_bool_or([aux463_BOOL,aux724_BOOL,aux2741_BOOL],true);
constraint array_bool_or([aux930_BOOL,aux989_BOOL,aux2743_BOOL],true);
constraint array_bool_or([aux724_BOOL,aux989_BOOL,aux2744_BOOL],true);
constraint array_bool_or([aux2745_BOOL,aux724_BOOL,aux703_BOOL],true);
constraint array_bool_or([aux930_BOOL,aux703_BOOL,aux2746_BOOL],true);
constraint array_bool_or([aux989_BOOL,aux480_BOOL,aux2748_BOOL],true);
constraint array_bool_or([aux703_BOOL,aux480_BOOL,aux2749_BOOL],true);
constraint array_bool_or([aux2750_BOOL,aux703_BOOL,aux566_BOOL],true);
constraint array_bool_or([aux989_BOOL,aux566_BOOL,aux2751_BOOL],true);
constraint array_bool_or([aux480_BOOL,aux720_BOOL,aux2753_BOOL],true);
constraint array_bool_or([aux566_BOOL,aux720_BOOL,aux2754_BOOL],true);
constraint array_bool_or([aux2755_BOOL,aux566_BOOL,aux783_BOOL],true);
constraint array_bool_or([aux480_BOOL,aux783_BOOL,aux2756_BOOL],true);
constraint array_bool_or([aux720_BOOL,aux914_BOOL,aux2758_BOOL],true);
constraint array_bool_or([aux783_BOOL,aux914_BOOL,aux2759_BOOL],true);
constraint array_bool_or([aux2760_BOOL,aux783_BOOL,aux1021_BOOL],true);
constraint array_bool_or([aux720_BOOL,aux1021_BOOL,aux2761_BOOL],true);
constraint array_bool_or([aux914_BOOL,aux797_BOOL,aux2763_BOOL],true);
constraint array_bool_or([aux1021_BOOL,aux797_BOOL,aux2764_BOOL],true);
constraint array_bool_or([aux2765_BOOL,aux1021_BOOL,aux499_BOOL],true);
constraint array_bool_or([aux914_BOOL,aux499_BOOL,aux2766_BOOL],true);
constraint array_bool_or([aux797_BOOL,aux998_BOOL,aux2768_BOOL],true);
constraint array_bool_or([aux499_BOOL,aux998_BOOL,aux2769_BOOL],true);
constraint array_bool_or([aux2770_BOOL,aux499_BOOL,aux709_BOOL],true);
constraint array_bool_or([aux797_BOOL,aux709_BOOL,aux2771_BOOL],true);
constraint array_bool_or([aux998_BOOL,aux748_BOOL,aux2773_BOOL],true);
constraint array_bool_or([aux709_BOOL,aux748_BOOL,aux2774_BOOL],true);
constraint array_bool_or([aux2775_BOOL,aux709_BOOL,aux835_BOOL],true);
constraint array_bool_or([aux998_BOOL,aux835_BOOL,aux2776_BOOL],true);
constraint array_bool_or([aux748_BOOL,aux561_BOOL,aux2778_BOOL],true);
constraint array_bool_or([aux835_BOOL,aux561_BOOL,aux2779_BOOL],true);
constraint array_bool_or([aux2780_BOOL,aux835_BOOL,aux1040_BOOL],true);
constraint array_bool_or([aux748_BOOL,aux1040_BOOL,aux2781_BOOL],true);
constraint array_bool_or([aux561_BOOL,aux804_BOOL,aux2783_BOOL],true);
constraint array_bool_or([aux1040_BOOL,aux804_BOOL,aux2784_BOOL],true);
constraint array_bool_or([aux2785_BOOL,aux1040_BOOL,aux523_BOOL],true);
constraint array_bool_or([aux561_BOOL,aux523_BOOL,aux2786_BOOL],true);
constraint array_bool_or([aux804_BOOL,aux1051_BOOL,aux2788_BOOL],true);
constraint array_bool_or([aux523_BOOL,aux1051_BOOL,aux2789_BOOL],true);
constraint array_bool_or([aux2790_BOOL,aux523_BOOL,aux398_BOOL],true);
constraint array_bool_or([aux804_BOOL,aux398_BOOL,aux2791_BOOL],true);
constraint array_bool_or([aux1051_BOOL,aux495_BOOL,aux2793_BOOL],true);
constraint array_bool_or([aux398_BOOL,aux495_BOOL,aux2794_BOOL],true);
constraint array_bool_or([aux2795_BOOL,aux398_BOOL,aux582_BOOL],true);
constraint array_bool_or([aux1051_BOOL,aux582_BOOL,aux2796_BOOL],true);
constraint array_bool_or([aux495_BOOL,aux732_BOOL,aux2798_BOOL],true);
constraint array_bool_or([aux582_BOOL,aux732_BOOL,aux2799_BOOL],true);
constraint array_bool_or([aux2800_BOOL,aux582_BOOL,aux844_BOOL],true);
constraint array_bool_or([aux495_BOOL,aux844_BOOL,aux2801_BOOL],true);
constraint array_bool_or([aux732_BOOL,aux590_BOOL,aux2803_BOOL],true);
constraint array_bool_or([aux844_BOOL,aux590_BOOL,aux2804_BOOL],true);
constraint array_bool_or([aux2805_BOOL,aux844_BOOL,aux1045_BOOL],true);
constraint array_bool_or([aux732_BOOL,aux1045_BOOL,aux2806_BOOL],true);
constraint array_bool_or([aux590_BOOL,aux411_BOOL,aux2808_BOOL],true);
constraint array_bool_or([aux1045_BOOL,aux411_BOOL,aux2809_BOOL],true);
constraint array_bool_or([aux2810_BOOL,aux1045_BOOL,aux941_BOOL],true);
constraint array_bool_or([aux590_BOOL,aux941_BOOL,aux2811_BOOL],true);
constraint array_bool_or([aux411_BOOL,aux533_BOOL,aux2813_BOOL],true);
constraint array_bool_or([aux941_BOOL,aux533_BOOL,aux2814_BOOL],true);
constraint array_bool_or([aux2815_BOOL,aux941_BOOL,aux953_BOOL],true);
constraint array_bool_or([aux411_BOOL,aux953_BOOL,aux2816_BOOL],true);
constraint array_bool_or([aux533_BOOL,aux934_BOOL,aux2818_BOOL],true);
constraint array_bool_or([aux953_BOOL,aux934_BOOL,aux2819_BOOL],true);
constraint array_bool_or([aux2820_BOOL,aux953_BOOL,aux933_BOOL],true);
constraint array_bool_or([aux533_BOOL,aux933_BOOL,aux2821_BOOL],true);
constraint array_bool_or([aux2823_BOOL,aux1015_BOOL,aux526_BOOL],true);
constraint array_bool_or([aux1014_BOOL,aux526_BOOL,aux2824_BOOL],true);
constraint array_bool_or([aux2825_BOOL,aux1014_BOOL,aux511_BOOL],true);
constraint array_bool_or([aux1015_BOOL,aux511_BOOL,aux2826_BOOL],true);
constraint array_bool_or([aux2828_BOOL,aux526_BOOL,aux562_BOOL],true);
constraint array_bool_or([aux511_BOOL,aux562_BOOL,aux2829_BOOL],true);
constraint array_bool_or([aux2830_BOOL,aux511_BOOL,aux403_BOOL],true);
constraint array_bool_or([aux526_BOOL,aux403_BOOL,aux2831_BOOL],true);
constraint array_bool_or([aux2833_BOOL,aux562_BOOL,aux395_BOOL],true);
constraint array_bool_or([aux403_BOOL,aux395_BOOL,aux2834_BOOL],true);
constraint array_bool_or([aux2835_BOOL,aux403_BOOL,aux847_BOOL],true);
constraint array_bool_or([aux562_BOOL,aux847_BOOL,aux2836_BOOL],true);
constraint array_bool_or([aux2838_BOOL,aux395_BOOL,aux721_BOOL],true);
constraint array_bool_or([aux847_BOOL,aux721_BOOL,aux2839_BOOL],true);
constraint array_bool_or([aux2840_BOOL,aux847_BOOL,aux815_BOOL],true);
constraint array_bool_or([aux395_BOOL,aux815_BOOL,aux2841_BOOL],true);
constraint array_bool_or([aux2843_BOOL,aux721_BOOL,aux856_BOOL],true);
constraint array_bool_or([aux815_BOOL,aux856_BOOL,aux2844_BOOL],true);
constraint array_bool_or([aux2845_BOOL,aux815_BOOL,aux965_BOOL],true);
constraint array_bool_or([aux721_BOOL,aux965_BOOL,aux2846_BOOL],true);
constraint array_bool_or([aux2848_BOOL,aux856_BOOL,aux827_BOOL],true);
constraint array_bool_or([aux965_BOOL,aux827_BOOL,aux2849_BOOL],true);
constraint array_bool_or([aux2850_BOOL,aux965_BOOL,aux530_BOOL],true);
constraint array_bool_or([aux856_BOOL,aux530_BOOL,aux2851_BOOL],true);
constraint array_bool_or([aux2853_BOOL,aux827_BOOL,aux983_BOOL],true);
constraint array_bool_or([aux530_BOOL,aux983_BOOL,aux2854_BOOL],true);
constraint array_bool_or([aux2855_BOOL,aux530_BOOL,aux689_BOOL],true);
constraint array_bool_or([aux827_BOOL,aux689_BOOL,aux2856_BOOL],true);
constraint array_bool_or([aux2858_BOOL,aux983_BOOL,aux538_BOOL],true);
constraint array_bool_or([aux689_BOOL,aux538_BOOL,aux2859_BOOL],true);
constraint array_bool_or([aux2860_BOOL,aux689_BOOL,aux853_BOOL],true);
constraint array_bool_or([aux983_BOOL,aux853_BOOL,aux2861_BOOL],true);
constraint array_bool_or([aux2863_BOOL,aux538_BOOL,aux648_BOOL],true);
constraint array_bool_or([aux853_BOOL,aux648_BOOL,aux2864_BOOL],true);
constraint array_bool_or([aux2865_BOOL,aux853_BOOL,aux1132_BOOL],true);
constraint array_bool_or([aux538_BOOL,aux1132_BOOL,aux2866_BOOL],true);
constraint array_bool_or([aux2868_BOOL,aux648_BOOL,aux795_BOOL],true);
constraint array_bool_or([aux1132_BOOL,aux795_BOOL,aux2869_BOOL],true);
constraint array_bool_or([aux2870_BOOL,aux1132_BOOL,aux516_BOOL],true);
constraint array_bool_or([aux648_BOOL,aux516_BOOL,aux2871_BOOL],true);
constraint array_bool_or([aux2873_BOOL,aux795_BOOL,aux944_BOOL],true);
constraint array_bool_or([aux516_BOOL,aux944_BOOL,aux2874_BOOL],true);
constraint array_bool_or([aux2875_BOOL,aux516_BOOL,aux669_BOOL],true);
constraint array_bool_or([aux795_BOOL,aux669_BOOL,aux2876_BOOL],true);
constraint array_bool_or([aux2878_BOOL,aux944_BOOL,aux527_BOOL],true);
constraint array_bool_or([aux669_BOOL,aux527_BOOL,aux2879_BOOL],true);
constraint array_bool_or([aux2880_BOOL,aux669_BOOL,aux619_BOOL],true);
constraint array_bool_or([aux944_BOOL,aux619_BOOL,aux2881_BOOL],true);
constraint array_bool_or([aux2883_BOOL,aux527_BOOL,aux684_BOOL],true);
constraint array_bool_or([aux619_BOOL,aux684_BOOL,aux2884_BOOL],true);
constraint array_bool_or([aux2885_BOOL,aux619_BOOL,aux785_BOOL],true);
constraint array_bool_or([aux527_BOOL,aux785_BOOL,aux2886_BOOL],true);
constraint array_bool_or([aux2888_BOOL,aux684_BOOL,aux630_BOOL],true);
constraint array_bool_or([aux785_BOOL,aux630_BOOL,aux2889_BOOL],true);
constraint array_bool_or([aux2890_BOOL,aux785_BOOL,aux1138_BOOL],true);
constraint array_bool_or([aux684_BOOL,aux1138_BOOL,aux2891_BOOL],true);
constraint array_bool_or([aux2893_BOOL,aux630_BOOL,aux786_BOOL],true);
constraint array_bool_or([aux1138_BOOL,aux786_BOOL,aux2894_BOOL],true);
constraint array_bool_or([aux2895_BOOL,aux1138_BOOL,aux500_BOOL],true);
constraint array_bool_or([aux630_BOOL,aux500_BOOL,aux2896_BOOL],true);
constraint array_bool_or([aux2898_BOOL,aux786_BOOL,aux497_BOOL],true);
constraint array_bool_or([aux500_BOOL,aux497_BOOL,aux2899_BOOL],true);
constraint array_bool_or([aux2900_BOOL,aux500_BOOL,aux1103_BOOL],true);
constraint array_bool_or([aux786_BOOL,aux1103_BOOL,aux2901_BOOL],true);
constraint array_bool_or([aux2903_BOOL,aux497_BOOL,aux1034_BOOL],true);
constraint array_bool_or([aux1103_BOOL,aux1034_BOOL,aux2904_BOOL],true);
constraint array_bool_or([aux2905_BOOL,aux1103_BOOL,aux1017_BOOL],true);
constraint array_bool_or([aux497_BOOL,aux1017_BOOL,aux2906_BOOL],true);
constraint array_bool_or([aux2908_BOOL,aux1034_BOOL,aux1011_BOOL],true);
constraint array_bool_or([aux1017_BOOL,aux1011_BOOL,aux2909_BOOL],true);
constraint array_bool_or([aux2910_BOOL,aux1017_BOOL,aux1012_BOOL],true);
constraint array_bool_or([aux1034_BOOL,aux1012_BOOL,aux2911_BOOL],true);
constraint array_bool_or([aux1084_BOOL,aux567_BOOL,aux2913_BOOL],true);
constraint array_bool_or([aux2914_BOOL,aux1081_BOOL,aux567_BOOL],true);
constraint array_bool_or([aux2915_BOOL,aux1081_BOOL,aux839_BOOL],true);
constraint array_bool_or([aux839_BOOL,aux1084_BOOL,aux2916_BOOL],true);
constraint array_bool_or([aux567_BOOL,aux581_BOOL,aux2918_BOOL],true);
constraint array_bool_or([aux2919_BOOL,aux839_BOOL,aux581_BOOL],true);
constraint array_bool_or([aux2920_BOOL,aux839_BOOL,aux488_BOOL],true);
constraint array_bool_or([aux2921_BOOL,aux488_BOOL,aux567_BOOL],true);
constraint array_bool_or([aux581_BOOL,aux926_BOOL,aux2923_BOOL],true);
constraint array_bool_or([aux2924_BOOL,aux488_BOOL,aux926_BOOL],true);
constraint array_bool_or([aux2925_BOOL,aux488_BOOL,aux775_BOOL],true);
constraint array_bool_or([aux2926_BOOL,aux775_BOOL,aux581_BOOL],true);
constraint array_bool_or([aux926_BOOL,aux1025_BOOL,aux2928_BOOL],true);
constraint array_bool_or([aux2929_BOOL,aux775_BOOL,aux1025_BOOL],true);
constraint array_bool_or([aux2930_BOOL,aux775_BOOL,aux507_BOOL],true);
constraint array_bool_or([aux2931_BOOL,aux507_BOOL,aux926_BOOL],true);
constraint array_bool_or([aux1025_BOOL,aux731_BOOL,aux2933_BOOL],true);
constraint array_bool_or([aux2934_BOOL,aux507_BOOL,aux731_BOOL],true);
constraint array_bool_or([aux2935_BOOL,aux507_BOOL,aux596_BOOL],true);
constraint array_bool_or([aux2936_BOOL,aux596_BOOL,aux1025_BOOL],true);
constraint array_bool_or([aux731_BOOL,aux845_BOOL,aux2938_BOOL],true);
constraint array_bool_or([aux2939_BOOL,aux596_BOOL,aux845_BOOL],true);
constraint array_bool_or([aux2940_BOOL,aux596_BOOL,aux1074_BOOL],true);
constraint array_bool_or([aux2941_BOOL,aux1074_BOOL,aux731_BOOL],true);
constraint array_bool_or([aux845_BOOL,aux539_BOOL,aux2943_BOOL],true);
constraint array_bool_or([aux2944_BOOL,aux1074_BOOL,aux539_BOOL],true);
constraint array_bool_or([aux2945_BOOL,aux1074_BOOL,aux707_BOOL],true);
constraint array_bool_or([aux2946_BOOL,aux707_BOOL,aux845_BOOL],true);
constraint array_bool_or([aux539_BOOL,aux639_BOOL,aux2948_BOOL],true);
constraint array_bool_or([aux2949_BOOL,aux707_BOOL,aux639_BOOL],true);
constraint array_bool_or([aux2950_BOOL,aux707_BOOL,aux802_BOOL],true);
constraint array_bool_or([aux2951_BOOL,aux802_BOOL,aux539_BOOL],true);
constraint array_bool_or([aux639_BOOL,aux1131_BOOL,aux2953_BOOL],true);
constraint array_bool_or([aux2954_BOOL,aux802_BOOL,aux1131_BOOL],true);
constraint array_bool_or([aux2955_BOOL,aux802_BOOL,aux510_BOOL],true);
constraint array_bool_or([aux2956_BOOL,aux510_BOOL,aux639_BOOL],true);
constraint array_bool_or([aux1131_BOOL,aux391_BOOL,aux2958_BOOL],true);
constraint array_bool_or([aux2959_BOOL,aux510_BOOL,aux391_BOOL],true);
constraint array_bool_or([aux2960_BOOL,aux510_BOOL,aux602_BOOL],true);
constraint array_bool_or([aux2961_BOOL,aux602_BOOL,aux1131_BOOL],true);
constraint array_bool_or([aux391_BOOL,aux850_BOOL,aux2963_BOOL],true);
constraint array_bool_or([aux2964_BOOL,aux602_BOOL,aux850_BOOL],true);
constraint array_bool_or([aux2965_BOOL,aux602_BOOL,aux1110_BOOL],true);
constraint array_bool_or([aux2966_BOOL,aux1110_BOOL,aux391_BOOL],true);
constraint array_bool_or([aux850_BOOL,aux940_BOOL,aux2968_BOOL],true);
constraint array_bool_or([aux2969_BOOL,aux1110_BOOL,aux940_BOOL],true);
constraint array_bool_or([aux2970_BOOL,aux1110_BOOL,aux432_BOOL],true);
constraint array_bool_or([aux2971_BOOL,aux432_BOOL,aux850_BOOL],true);
constraint array_bool_or([aux940_BOOL,aux674_BOOL,aux2973_BOOL],true);
constraint array_bool_or([aux2974_BOOL,aux432_BOOL,aux674_BOOL],true);
constraint array_bool_or([aux2975_BOOL,aux432_BOOL,aux925_BOOL],true);
constraint array_bool_or([aux2976_BOOL,aux925_BOOL,aux940_BOOL],true);
constraint array_bool_or([aux674_BOOL,aux763_BOOL,aux2978_BOOL],true);
constraint array_bool_or([aux2979_BOOL,aux925_BOOL,aux763_BOOL],true);
constraint array_bool_or([aux2980_BOOL,aux925_BOOL,aux1024_BOOL],true);
constraint array_bool_or([aux2981_BOOL,aux1024_BOOL,aux674_BOOL],true);
constraint array_bool_or([aux763_BOOL,aux496_BOOL,aux2983_BOOL],true);
constraint array_bool_or([aux2984_BOOL,aux1024_BOOL,aux496_BOOL],true);
constraint array_bool_or([aux2985_BOOL,aux1024_BOOL,aux730_BOOL],true);
constraint array_bool_or([aux2986_BOOL,aux730_BOOL,aux763_BOOL],true);
constraint array_bool_or([aux496_BOOL,aux509_BOOL,aux2988_BOOL],true);
constraint array_bool_or([aux2989_BOOL,aux730_BOOL,aux509_BOOL],true);
constraint array_bool_or([aux2990_BOOL,aux730_BOOL,aux807_BOOL],true);
constraint array_bool_or([aux2991_BOOL,aux807_BOOL,aux496_BOOL],true);
constraint array_bool_or([aux509_BOOL,aux399_BOOL,aux2993_BOOL],true);
constraint array_bool_or([aux2994_BOOL,aux807_BOOL,aux399_BOOL],true);
constraint array_bool_or([aux2995_BOOL,aux807_BOOL,aux647_BOOL],true);
constraint array_bool_or([aux2996_BOOL,aux647_BOOL,aux509_BOOL],true);
constraint array_bool_or([aux399_BOOL,aux1082_BOOL,aux2998_BOOL],true);
constraint array_bool_or([aux2999_BOOL,aux647_BOOL,aux1082_BOOL],true);
constraint array_bool_or([aux3000_BOOL,aux647_BOOL,aux1083_BOOL],true);
constraint array_bool_or([aux3001_BOOL,aux1083_BOOL,aux399_BOOL],true);
constraint bool_clause([aux457_BOOL,aux3002_BOOL],[]);
constraint bool_clause([aux456_BOOL,aux3003_BOOL],[]);
constraint bool_clause([aux1091_BOOL,aux3004_BOOL],[]);
constraint bool_clause([aux1092_BOOL,aux3005_BOOL],[]);
constraint bool_clause([aux714_BOOL,aux3006_BOOL],[]);
constraint bool_clause([aux711_BOOL,aux3007_BOOL],[]);
constraint bool_clause([aux992_BOOL,aux3008_BOOL],[]);
constraint bool_clause([aux991_BOOL,aux3009_BOOL],[]);
constraint bool_clause([aux1119_BOOL,aux3010_BOOL],[]);
constraint bool_clause([aux1120_BOOL,aux3011_BOOL],[]);
constraint bool_clause([aux612_BOOL,aux3012_BOOL],[]);
constraint bool_clause([aux613_BOOL,aux3013_BOOL],[]);
constraint bool_clause([aux576_BOOL,aux3014_BOOL],[]);
constraint bool_clause([aux577_BOOL,aux3015_BOOL],[]);
constraint bool_clause([aux551_BOOL,aux3016_BOOL],[]);
constraint bool_clause([aux549_BOOL,aux3017_BOOL],[]);
constraint bool_clause([aux977_BOOL,aux3018_BOOL],[]);
constraint bool_clause([aux976_BOOL,aux3019_BOOL],[]);
constraint bool_clause([aux1123_BOOL,aux3020_BOOL],[]);
constraint bool_clause([aux1124_BOOL,aux3021_BOOL],[]);
constraint bool_clause([aux1056_BOOL,aux3022_BOOL],[]);
constraint bool_clause([aux1055_BOOL,aux3023_BOOL],[]);
constraint bool_clause([aux659_BOOL,aux3024_BOOL],[]);
constraint bool_clause([aux661_BOOL,aux3025_BOOL],[]);
constraint bool_clause([aux1042_BOOL,aux3026_BOOL],[]);
constraint bool_clause([aux1043_BOOL,aux3027_BOOL],[]);
constraint bool_clause([aux627_BOOL,aux3028_BOOL],[]);
constraint bool_clause([aux626_BOOL,aux3029_BOOL],[]);
constraint bool_clause([aux890_BOOL,aux3030_BOOL],[]);
constraint bool_clause([aux891_BOOL,aux3031_BOOL],[]);
constraint bool_clause([aux1001_BOOL,aux3032_BOOL],[]);
constraint bool_clause([aux1002_BOOL,aux3033_BOOL],[]);
constraint bool_clause([aux715_BOOL,aux3034_BOOL],[]);
constraint bool_clause([aux716_BOOL,aux3035_BOOL],[]);
constraint bool_clause([aux933_BOOL,aux3036_BOOL],[]);
constraint bool_clause([aux934_BOOL,aux3037_BOOL],[]);
constraint bool_clause([aux1012_BOOL,aux3038_BOOL],[]);
constraint bool_clause([aux1011_BOOL,aux3039_BOOL],[]);
constraint bool_clause([aux1083_BOOL,aux3040_BOOL],[]);
constraint bool_clause([aux1082_BOOL,aux3041_BOOL],[]);

solve :: int_search([opponent_00001_00001, opponent_00001_00002, opponent_00001_00003, opponent_00001_00004, opponent_00001_00005, opponent_00001_00006, opponent_00001_00007, opponent_00001_00008, opponent_00001_00009, opponent_00001_00010, opponent_00001_00011, opponent_00001_00012, opponent_00001_00013, opponent_00001_00014, opponent_00001_00015, opponent_00001_00016, opponent_00001_00017, opponent_00001_00018, opponent_00001_00019, opponent_00002_00001, opponent_00002_00002, opponent_00002_00003, opponent_00002_00004, opponent_00002_00005, opponent_00002_00006, opponent_00002_00007, opponent_00002_00008, opponent_00002_00009, opponent_00002_00010, opponent_00002_00011, opponent_00002_00012, opponent_00002_00013, opponent_00002_00014, opponent_00002_00015, opponent_00002_00016, opponent_00002_00017, opponent_00002_00018, opponent_00002_00019, opponent_00003_00001, opponent_00003_00002, opponent_00003_00003, opponent_00003_00004, opponent_00003_00005, opponent_00003_00006, opponent_00003_00007, opponent_00003_00008, opponent_00003_00009, opponent_00003_00010, opponent_00003_00011, opponent_00003_00012, opponent_00003_00013, opponent_00003_00014, opponent_00003_00015, opponent_00003_00016, opponent_00003_00017, opponent_00003_00018, opponent_00003_00019, opponent_00004_00001, opponent_00004_00002, opponent_00004_00003, opponent_00004_00004, opponent_00004_00005, opponent_00004_00006, opponent_00004_00007, opponent_00004_00008, opponent_00004_00009, opponent_00004_00010, opponent_00004_00011, opponent_00004_00012, opponent_00004_00013, opponent_00004_00014, opponent_00004_00015, opponent_00004_00016, opponent_00004_00017, opponent_00004_00018, opponent_00004_00019, opponent_00005_00001, opponent_00005_00002, opponent_00005_00003, opponent_00005_00004, opponent_00005_00005, opponent_00005_00006, opponent_00005_00007, opponent_00005_00008, opponent_00005_00009, opponent_00005_00010, opponent_00005_00011, opponent_00005_00012, opponent_00005_00013, opponent_00005_00014, opponent_00005_00015, opponent_00005_00016, opponent_00005_00017, opponent_00005_00018, opponent_00005_00019, opponent_00006_00001, opponent_00006_00002, opponent_00006_00003, opponent_00006_00004, opponent_00006_00005, opponent_00006_00006, opponent_00006_00007, opponent_00006_00008, opponent_00006_00009, opponent_00006_00010, opponent_00006_00011, opponent_00006_00012, opponent_00006_00013, opponent_00006_00014, opponent_00006_00015, opponent_00006_00016, opponent_00006_00017, opponent_00006_00018, opponent_00006_00019, opponent_00007_00001, opponent_00007_00002, opponent_00007_00003, opponent_00007_00004, opponent_00007_00005, opponent_00007_00006, opponent_00007_00007, opponent_00007_00008, opponent_00007_00009, opponent_00007_00010, opponent_00007_00011, opponent_00007_00012, opponent_00007_00013, opponent_00007_00014, opponent_00007_00015, opponent_00007_00016, opponent_00007_00017, opponent_00007_00018, opponent_00007_00019, opponent_00008_00001, opponent_00008_00002, opponent_00008_00003, opponent_00008_00004, opponent_00008_00005, opponent_00008_00006, opponent_00008_00007, opponent_00008_00008, opponent_00008_00009, opponent_00008_00010, opponent_00008_00011, opponent_00008_00012, opponent_00008_00013, opponent_00008_00014, opponent_00008_00015, opponent_00008_00016, opponent_00008_00017, opponent_00008_00018, opponent_00008_00019, opponent_00009_00001, opponent_00009_00002, opponent_00009_00003, opponent_00009_00004, opponent_00009_00005, opponent_00009_00006, opponent_00009_00007, opponent_00009_00008, opponent_00009_00009, opponent_00009_00010, opponent_00009_00011, opponent_00009_00012, opponent_00009_00013, opponent_00009_00014, opponent_00009_00015, opponent_00009_00016, opponent_00009_00017, opponent_00009_00018, opponent_00009_00019, opponent_00010_00001, opponent_00010_00002, opponent_00010_00003, opponent_00010_00004, opponent_00010_00005, opponent_00010_00006, opponent_00010_00007, opponent_00010_00008, opponent_00010_00009, opponent_00010_00010, opponent_00010_00011, opponent_00010_00012, opponent_00010_00013, opponent_00010_00014, opponent_00010_00015, opponent_00010_00016, opponent_00010_00017, opponent_00010_00018, opponent_00010_00019, opponent_00011_00001, opponent_00011_00002, opponent_00011_00003, opponent_00011_00004, opponent_00011_00005, opponent_00011_00006, opponent_00011_00007, opponent_00011_00008, opponent_00011_00009, opponent_00011_00010, opponent_00011_00011, opponent_00011_00012, opponent_00011_00013, opponent_00011_00014, opponent_00011_00015, opponent_00011_00016, opponent_00011_00017, opponent_00011_00018, opponent_00011_00019, opponent_00012_00001, opponent_00012_00002, opponent_00012_00003, opponent_00012_00004, opponent_00012_00005, opponent_00012_00006, opponent_00012_00007, opponent_00012_00008, opponent_00012_00009, opponent_00012_00010, opponent_00012_00011, opponent_00012_00012, opponent_00012_00013, opponent_00012_00014, opponent_00012_00015, opponent_00012_00016, opponent_00012_00017, opponent_00012_00018, opponent_00012_00019, opponent_00013_00001, opponent_00013_00002, opponent_00013_00003, opponent_00013_00004, opponent_00013_00005, opponent_00013_00006, opponent_00013_00007, opponent_00013_00008, opponent_00013_00009, opponent_00013_00010, opponent_00013_00011, opponent_00013_00012, opponent_00013_00013, opponent_00013_00014, opponent_00013_00015, opponent_00013_00016, opponent_00013_00017, opponent_00013_00018, opponent_00013_00019, opponent_00014_00001, opponent_00014_00002, opponent_00014_00003, opponent_00014_00004, opponent_00014_00005, opponent_00014_00006, opponent_00014_00007, opponent_00014_00008, opponent_00014_00009, opponent_00014_00010, opponent_00014_00011, opponent_00014_00012, opponent_00014_00013, opponent_00014_00014, opponent_00014_00015, opponent_00014_00016, opponent_00014_00017, opponent_00014_00018, opponent_00014_00019, opponent_00015_00001, opponent_00015_00002, opponent_00015_00003, opponent_00015_00004, opponent_00015_00005, opponent_00015_00006, opponent_00015_00007, opponent_00015_00008, opponent_00015_00009, opponent_00015_00010, opponent_00015_00011, opponent_00015_00012, opponent_00015_00013, opponent_00015_00014, opponent_00015_00015, opponent_00015_00016, opponent_00015_00017, opponent_00015_00018, opponent_00015_00019, opponent_00016_00001, opponent_00016_00002, opponent_00016_00003, opponent_00016_00004, opponent_00016_00005, opponent_00016_00006, opponent_00016_00007, opponent_00016_00008, opponent_00016_00009, opponent_00016_00010, opponent_00016_00011, opponent_00016_00012, opponent_00016_00013, opponent_00016_00014, opponent_00016_00015, opponent_00016_00016, opponent_00016_00017, opponent_00016_00018, opponent_00016_00019, opponent_00017_00001, opponent_00017_00002, opponent_00017_00003, opponent_00017_00004, opponent_00017_00005, opponent_00017_00006, opponent_00017_00007, opponent_00017_00008, opponent_00017_00009, opponent_00017_00010, opponent_00017_00011, opponent_00017_00012, opponent_00017_00013, opponent_00017_00014, opponent_00017_00015, opponent_00017_00016, opponent_00017_00017, opponent_00017_00018, opponent_00017_00019, opponent_00018_00001, opponent_00018_00002, opponent_00018_00003, opponent_00018_00004, opponent_00018_00005, opponent_00018_00006, opponent_00018_00007, opponent_00018_00008, opponent_00018_00009, opponent_00018_00010, opponent_00018_00011, opponent_00018_00012, opponent_00018_00013, opponent_00018_00014, opponent_00018_00015, opponent_00018_00016, opponent_00018_00017, opponent_00018_00018, opponent_00018_00019, opponent_00019_00001, opponent_00019_00002, opponent_00019_00003, opponent_00019_00004, opponent_00019_00005, opponent_00019_00006, opponent_00019_00007, opponent_00019_00008, opponent_00019_00009, opponent_00019_00010, opponent_00019_00011, opponent_00019_00012, opponent_00019_00013, opponent_00019_00014, opponent_00019_00015, opponent_00019_00016, opponent_00019_00017, opponent_00019_00018, opponent_00019_00019, opponent_00020_00001, opponent_00020_00002, opponent_00020_00003, opponent_00020_00004, opponent_00020_00005, opponent_00020_00006, opponent_00020_00007, opponent_00020_00008, opponent_00020_00009, opponent_00020_00010, opponent_00020_00011, opponent_00020_00012, opponent_00020_00013, opponent_00020_00014, opponent_00020_00015, opponent_00020_00016, opponent_00020_00017, opponent_00020_00018, opponent_00020_00019, venue_00001_00001, venue_00001_00002, venue_00001_00003, venue_00001_00004, venue_00001_00005, venue_00001_00006, venue_00001_00007, venue_00001_00008, venue_00001_00009, venue_00001_00010, venue_00001_00011, venue_00001_00012, venue_00001_00013, venue_00001_00014, venue_00001_00015, venue_00001_00016, venue_00001_00017, venue_00001_00018, venue_00001_00019, venue_00002_00001, venue_00002_00002, venue_00002_00003, venue_00002_00004, venue_00002_00005, venue_00002_00006, venue_00002_00007, venue_00002_00008, venue_00002_00009, venue_00002_00010, venue_00002_00011, venue_00002_00012, venue_00002_00013, venue_00002_00014, venue_00002_00015, venue_00002_00016, venue_00002_00017, venue_00002_00018, venue_00002_00019, venue_00003_00001, venue_00003_00002, venue_00003_00003, venue_00003_00004, venue_00003_00005, venue_00003_00006, venue_00003_00007, venue_00003_00008, venue_00003_00009, venue_00003_00010, venue_00003_00011, venue_00003_00012, venue_00003_00013, venue_00003_00014, venue_00003_00015, venue_00003_00016, venue_00003_00017, venue_00003_00018, venue_00003_00019, venue_00004_00001, venue_00004_00002, venue_00004_00003, venue_00004_00004, venue_00004_00005, venue_00004_00006, venue_00004_00007, venue_00004_00008, venue_00004_00009, venue_00004_00010, venue_00004_00011, venue_00004_00012, venue_00004_00013, venue_00004_00014, venue_00004_00015, venue_00004_00016, venue_00004_00017, venue_00004_00018, venue_00004_00019, venue_00005_00001, venue_00005_00002, venue_00005_00003, venue_00005_00004, venue_00005_00005, venue_00005_00006, venue_00005_00007, venue_00005_00008, venue_00005_00009, venue_00005_00010, venue_00005_00011, venue_00005_00012, venue_00005_00013, venue_00005_00014, venue_00005_00015, venue_00005_00016, venue_00005_00017, venue_00005_00018, venue_00005_00019, venue_00006_00001, venue_00006_00002, venue_00006_00003, venue_00006_00004, venue_00006_00005, venue_00006_00006, venue_00006_00007, venue_00006_00008, venue_00006_00009, venue_00006_00010, venue_00006_00011, venue_00006_00012, venue_00006_00013, venue_00006_00014, venue_00006_00015, venue_00006_00016, venue_00006_00017, venue_00006_00018, venue_00006_00019, venue_00007_00001, venue_00007_00002, venue_00007_00003, venue_00007_00004, venue_00007_00005, venue_00007_00006, venue_00007_00007, venue_00007_00008, venue_00007_00009, venue_00007_00010, venue_00007_00011, venue_00007_00012, venue_00007_00013, venue_00007_00014, venue_00007_00015, venue_00007_00016, venue_00007_00017, venue_00007_00018, venue_00007_00019, venue_00008_00001, venue_00008_00002, venue_00008_00003, venue_00008_00004, venue_00008_00005, venue_00008_00006, venue_00008_00007, venue_00008_00008, venue_00008_00009, venue_00008_00010, venue_00008_00011, venue_00008_00012, venue_00008_00013, venue_00008_00014, venue_00008_00015, venue_00008_00016, venue_00008_00017, venue_00008_00018, venue_00008_00019, venue_00009_00001, venue_00009_00002, venue_00009_00003, venue_00009_00004, venue_00009_00005, venue_00009_00006, venue_00009_00007, venue_00009_00008, venue_00009_00009, venue_00009_00010, venue_00009_00011, venue_00009_00012, venue_00009_00013, venue_00009_00014, venue_00009_00015, venue_00009_00016, venue_00009_00017, venue_00009_00018, venue_00009_00019, venue_00010_00001, venue_00010_00002, venue_00010_00003, venue_00010_00004, venue_00010_00005, venue_00010_00006, venue_00010_00007, venue_00010_00008, venue_00010_00009, venue_00010_00010, venue_00010_00011, venue_00010_00012, venue_00010_00013, venue_00010_00014, venue_00010_00015, venue_00010_00016, venue_00010_00017, venue_00010_00018, venue_00010_00019, venue_00011_00001, venue_00011_00002, venue_00011_00003, venue_00011_00004, venue_00011_00005, venue_00011_00006, venue_00011_00007, venue_00011_00008, venue_00011_00009, venue_00011_00010, venue_00011_00011, venue_00011_00012, venue_00011_00013, venue_00011_00014, venue_00011_00015, venue_00011_00016, venue_00011_00017, venue_00011_00018, venue_00011_00019, venue_00012_00001, venue_00012_00002, venue_00012_00003, venue_00012_00004, venue_00012_00005, venue_00012_00006, venue_00012_00007, venue_00012_00008, venue_00012_00009, venue_00012_00010, venue_00012_00011, venue_00012_00012, venue_00012_00013, venue_00012_00014, venue_00012_00015, venue_00012_00016, venue_00012_00017, venue_00012_00018, venue_00012_00019, venue_00013_00001, venue_00013_00002, venue_00013_00003, venue_00013_00004, venue_00013_00005, venue_00013_00006, venue_00013_00007, venue_00013_00008, venue_00013_00009, venue_00013_00010, venue_00013_00011, venue_00013_00012, venue_00013_00013, venue_00013_00014, venue_00013_00015, venue_00013_00016, venue_00013_00017, venue_00013_00018, venue_00013_00019, venue_00014_00001, venue_00014_00002, venue_00014_00003, venue_00014_00004, venue_00014_00005, venue_00014_00006, venue_00014_00007, venue_00014_00008, venue_00014_00009, venue_00014_00010, venue_00014_00011, venue_00014_00012, venue_00014_00013, venue_00014_00014, venue_00014_00015, venue_00014_00016, venue_00014_00017, venue_00014_00018, venue_00014_00019, venue_00015_00001, venue_00015_00002, venue_00015_00003, venue_00015_00004, venue_00015_00005, venue_00015_00006, venue_00015_00007, venue_00015_00008, venue_00015_00009, venue_00015_00010, venue_00015_00011, venue_00015_00012, venue_00015_00013, venue_00015_00014, venue_00015_00015, venue_00015_00016, venue_00015_00017, venue_00015_00018, venue_00015_00019, venue_00016_00001, venue_00016_00002, venue_00016_00003, venue_00016_00004, venue_00016_00005, venue_00016_00006, venue_00016_00007, venue_00016_00008, venue_00016_00009, venue_00016_00010, venue_00016_00011, venue_00016_00012, venue_00016_00013, venue_00016_00014, venue_00016_00015, venue_00016_00016, venue_00016_00017, venue_00016_00018, venue_00016_00019, venue_00017_00001, venue_00017_00002, venue_00017_00003, venue_00017_00004, venue_00017_00005, venue_00017_00006, venue_00017_00007, venue_00017_00008, venue_00017_00009, venue_00017_00010, venue_00017_00011, venue_00017_00012, venue_00017_00013, venue_00017_00014, venue_00017_00015, venue_00017_00016, venue_00017_00017, venue_00017_00018, venue_00017_00019, venue_00018_00001, venue_00018_00002, venue_00018_00003, venue_00018_00004, venue_00018_00005, venue_00018_00006, venue_00018_00007, venue_00018_00008, venue_00018_00009, venue_00018_00010, venue_00018_00011, venue_00018_00012, venue_00018_00013, venue_00018_00014, venue_00018_00015, venue_00018_00016, venue_00018_00017, venue_00018_00018, venue_00018_00019, venue_00019_00001, venue_00019_00002, venue_00019_00003, venue_00019_00004, venue_00019_00005, venue_00019_00006, venue_00019_00007, venue_00019_00008, venue_00019_00009, venue_00019_00010, venue_00019_00011, venue_00019_00012, venue_00019_00013, venue_00019_00014, venue_00019_00015, venue_00019_00016, venue_00019_00017, venue_00019_00018, venue_00019_00019, venue_00020_00001, venue_00020_00002, venue_00020_00003, venue_00020_00004, venue_00020_00005, venue_00020_00006, venue_00020_00007, venue_00020_00008, venue_00020_00009, venue_00020_00010, venue_00020_00011, venue_00020_00012, venue_00020_00013, venue_00020_00014, venue_00020_00015, venue_00020_00016, venue_00020_00017, venue_00020_00018, venue_00020_00019, travel_00001_00001, travel_00001_00002, travel_00001_00003, travel_00001_00004, travel_00001_00005, travel_00001_00006, travel_00001_00007, travel_00001_00008, travel_00001_00009, travel_00001_00010, travel_00001_00011, travel_00001_00012, travel_00001_00013, travel_00001_00014, travel_00001_00015, travel_00001_00016, travel_00001_00017, travel_00001_00018, travel_00001_00019, travel_00001_00020, travel_00002_00001, travel_00002_00002, travel_00002_00003, travel_00002_00004, travel_00002_00005, travel_00002_00006, travel_00002_00007, travel_00002_00008, travel_00002_00009, travel_00002_00010, travel_00002_00011, travel_00002_00012, travel_00002_00013, travel_00002_00014, travel_00002_00015, travel_00002_00016, travel_00002_00017, travel_00002_00018, travel_00002_00019, travel_00002_00020, travel_00003_00001, travel_00003_00002, travel_00003_00003, travel_00003_00004, travel_00003_00005, travel_00003_00006, travel_00003_00007, travel_00003_00008, travel_00003_00009, travel_00003_00010, travel_00003_00011, travel_00003_00012, travel_00003_00013, travel_00003_00014, travel_00003_00015, travel_00003_00016, travel_00003_00017, travel_00003_00018, travel_00003_00019, travel_00003_00020, travel_00004_00001, travel_00004_00002, travel_00004_00003, travel_00004_00004, travel_00004_00005, travel_00004_00006, travel_00004_00007, travel_00004_00008, travel_00004_00009, travel_00004_00010, travel_00004_00011, travel_00004_00012, travel_00004_00013, travel_00004_00014, travel_00004_00015, travel_00004_00016, travel_00004_00017, travel_00004_00018, travel_00004_00019, travel_00004_00020, travel_00005_00001, travel_00005_00002, travel_00005_00003, travel_00005_00004, travel_00005_00005, travel_00005_00006, travel_00005_00007, travel_00005_00008, travel_00005_00009, travel_00005_00010, travel_00005_00011, travel_00005_00012, travel_00005_00013, travel_00005_00014, travel_00005_00015, travel_00005_00016, travel_00005_00017, travel_00005_00018, travel_00005_00019, travel_00005_00020, travel_00006_00001, travel_00006_00002, travel_00006_00003, travel_00006_00004, travel_00006_00005, travel_00006_00006, travel_00006_00007, travel_00006_00008, travel_00006_00009, travel_00006_00010, travel_00006_00011, travel_00006_00012, travel_00006_00013, travel_00006_00014, travel_00006_00015, travel_00006_00016, travel_00006_00017, travel_00006_00018, travel_00006_00019, travel_00006_00020, travel_00007_00001, travel_00007_00002, travel_00007_00003, travel_00007_00004, travel_00007_00005, travel_00007_00006, travel_00007_00007, travel_00007_00008, travel_00007_00009, travel_00007_00010, travel_00007_00011, travel_00007_00012, travel_00007_00013, travel_00007_00014, travel_00007_00015, travel_00007_00016, travel_00007_00017, travel_00007_00018, travel_00007_00019, travel_00007_00020, travel_00008_00001, travel_00008_00002, travel_00008_00003, travel_00008_00004, travel_00008_00005, travel_00008_00006, travel_00008_00007, travel_00008_00008, travel_00008_00009, travel_00008_00010, travel_00008_00011, travel_00008_00012, travel_00008_00013, travel_00008_00014, travel_00008_00015, travel_00008_00016, travel_00008_00017, travel_00008_00018, travel_00008_00019, travel_00008_00020, travel_00009_00001, travel_00009_00002, travel_00009_00003, travel_00009_00004, travel_00009_00005, travel_00009_00006, travel_00009_00007, travel_00009_00008, travel_00009_00009, travel_00009_00010, travel_00009_00011, travel_00009_00012, travel_00009_00013, travel_00009_00014, travel_00009_00015, travel_00009_00016, travel_00009_00017, travel_00009_00018, travel_00009_00019, travel_00009_00020, travel_00010_00001, travel_00010_00002, travel_00010_00003, travel_00010_00004, travel_00010_00005, travel_00010_00006, travel_00010_00007, travel_00010_00008, travel_00010_00009, travel_00010_00010, travel_00010_00011, travel_00010_00012, travel_00010_00013, travel_00010_00014, travel_00010_00015, travel_00010_00016, travel_00010_00017, travel_00010_00018, travel_00010_00019, travel_00010_00020, travel_00011_00001, travel_00011_00002, travel_00011_00003, travel_00011_00004, travel_00011_00005, travel_00011_00006, travel_00011_00007, travel_00011_00008, travel_00011_00009, travel_00011_00010, travel_00011_00011, travel_00011_00012, travel_00011_00013, travel_00011_00014, travel_00011_00015, travel_00011_00016, travel_00011_00017, travel_00011_00018, travel_00011_00019, travel_00011_00020, travel_00012_00001, travel_00012_00002, travel_00012_00003, travel_00012_00004, travel_00012_00005, travel_00012_00006, travel_00012_00007, travel_00012_00008, travel_00012_00009, travel_00012_00010, travel_00012_00011, travel_00012_00012, travel_00012_00013, travel_00012_00014, travel_00012_00015, travel_00012_00016, travel_00012_00017, travel_00012_00018, travel_00012_00019, travel_00012_00020, travel_00013_00001, travel_00013_00002, travel_00013_00003, travel_00013_00004, travel_00013_00005, travel_00013_00006, travel_00013_00007, travel_00013_00008, travel_00013_00009, travel_00013_00010, travel_00013_00011, travel_00013_00012, travel_00013_00013, travel_00013_00014, travel_00013_00015, travel_00013_00016, travel_00013_00017, travel_00013_00018, travel_00013_00019, travel_00013_00020, travel_00014_00001, travel_00014_00002, travel_00014_00003, travel_00014_00004, travel_00014_00005, travel_00014_00006, travel_00014_00007, travel_00014_00008, travel_00014_00009, travel_00014_00010, travel_00014_00011, travel_00014_00012, travel_00014_00013, travel_00014_00014, travel_00014_00015, travel_00014_00016, travel_00014_00017, travel_00014_00018, travel_00014_00019, travel_00014_00020, travel_00015_00001, travel_00015_00002, travel_00015_00003, travel_00015_00004, travel_00015_00005, travel_00015_00006, travel_00015_00007, travel_00015_00008, travel_00015_00009, travel_00015_00010, travel_00015_00011, travel_00015_00012, travel_00015_00013, travel_00015_00014, travel_00015_00015, travel_00015_00016, travel_00015_00017, travel_00015_00018, travel_00015_00019, travel_00015_00020, travel_00016_00001, travel_00016_00002, travel_00016_00003, travel_00016_00004, travel_00016_00005, travel_00016_00006, travel_00016_00007, travel_00016_00008, travel_00016_00009, travel_00016_00010, travel_00016_00011, travel_00016_00012, travel_00016_00013, travel_00016_00014, travel_00016_00015, travel_00016_00016, travel_00016_00017, travel_00016_00018, travel_00016_00019, travel_00016_00020, travel_00017_00001, travel_00017_00002, travel_00017_00003, travel_00017_00004, travel_00017_00005, travel_00017_00006, travel_00017_00007, travel_00017_00008, travel_00017_00009, travel_00017_00010, travel_00017_00011, travel_00017_00012, travel_00017_00013, travel_00017_00014, travel_00017_00015, travel_00017_00016, travel_00017_00017, travel_00017_00018, travel_00017_00019, travel_00017_00020, travel_00018_00001, travel_00018_00002, travel_00018_00003, travel_00018_00004, travel_00018_00005, travel_00018_00006, travel_00018_00007, travel_00018_00008, travel_00018_00009, travel_00018_00010, travel_00018_00011, travel_00018_00012, travel_00018_00013, travel_00018_00014, travel_00018_00015, travel_00018_00016, travel_00018_00017, travel_00018_00018, travel_00018_00019, travel_00018_00020, travel_00019_00001, travel_00019_00002, travel_00019_00003, travel_00019_00004, travel_00019_00005, travel_00019_00006, travel_00019_00007, travel_00019_00008, travel_00019_00009, travel_00019_00010, travel_00019_00011, travel_00019_00012, travel_00019_00013, travel_00019_00014, travel_00019_00015, travel_00019_00016, travel_00019_00017, travel_00019_00018, travel_00019_00019, travel_00019_00020, travel_00020_00001, travel_00020_00002, travel_00020_00003, travel_00020_00004, travel_00020_00005, travel_00020_00006, travel_00020_00007, travel_00020_00008, travel_00020_00009, travel_00020_00010, travel_00020_00011, travel_00020_00012, travel_00020_00013, travel_00020_00014, travel_00020_00015, travel_00020_00016, travel_00020_00017, travel_00020_00018, travel_00020_00019, travel_00020_00020], input_order, indomain_min, complete)
minimize objective;
