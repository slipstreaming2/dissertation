predicate gecode_global_cardinality(array[int] of var int: x, array[int] of int: cover, array[int] of var int: counts);
array [1..196] of int: aux0 = [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7];
var 2..13: opponent_00001_00001:: output_var ;
var 2..14: opponent_00001_00002:: output_var ;
var 2..14: opponent_00001_00003:: output_var ;
var 2..14: opponent_00001_00004:: output_var ;
var 2..14: opponent_00001_00005:: output_var ;
var 2..14: opponent_00001_00006:: output_var ;
var 2..14: opponent_00001_00007:: output_var ;
var 2..14: opponent_00001_00008:: output_var ;
var 2..14: opponent_00001_00009:: output_var ;
var 2..14: opponent_00001_00010:: output_var ;
var 2..14: opponent_00001_00011:: output_var ;
var 2..14: opponent_00001_00012:: output_var ;
var 3..14: opponent_00001_00013:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14}: opponent_00002_00001:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14}: opponent_00002_00002:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14}: opponent_00002_00003:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14}: opponent_00002_00004:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14}: opponent_00002_00005:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14}: opponent_00002_00006:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14}: opponent_00002_00007:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14}: opponent_00002_00008:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14}: opponent_00002_00009:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14}: opponent_00002_00010:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14}: opponent_00002_00011:: output_var ;
var {1,3,4,5,6,7,8,9,10,11,12,13,14}: opponent_00002_00012:: output_var ;
var 3..14: opponent_00002_00013:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14}: opponent_00003_00001:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14}: opponent_00003_00002:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14}: opponent_00003_00003:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14}: opponent_00003_00004:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14}: opponent_00003_00005:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14}: opponent_00003_00006:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14}: opponent_00003_00007:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14}: opponent_00003_00008:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14}: opponent_00003_00009:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14}: opponent_00003_00010:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14}: opponent_00003_00011:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14}: opponent_00003_00012:: output_var ;
var {1,2,4,5,6,7,8,9,10,11,12,13,14}: opponent_00003_00013:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14}: opponent_00004_00001:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14}: opponent_00004_00002:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14}: opponent_00004_00003:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14}: opponent_00004_00004:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14}: opponent_00004_00005:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14}: opponent_00004_00006:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14}: opponent_00004_00007:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14}: opponent_00004_00008:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14}: opponent_00004_00009:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14}: opponent_00004_00010:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14}: opponent_00004_00011:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14}: opponent_00004_00012:: output_var ;
var {1,2,3,5,6,7,8,9,10,11,12,13,14}: opponent_00004_00013:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14}: opponent_00005_00001:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14}: opponent_00005_00002:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14}: opponent_00005_00003:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14}: opponent_00005_00004:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14}: opponent_00005_00005:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14}: opponent_00005_00006:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14}: opponent_00005_00007:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14}: opponent_00005_00008:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14}: opponent_00005_00009:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14}: opponent_00005_00010:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14}: opponent_00005_00011:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14}: opponent_00005_00012:: output_var ;
var {1,2,3,4,6,7,8,9,10,11,12,13,14}: opponent_00005_00013:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14}: opponent_00006_00001:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14}: opponent_00006_00002:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14}: opponent_00006_00003:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14}: opponent_00006_00004:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14}: opponent_00006_00005:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14}: opponent_00006_00006:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14}: opponent_00006_00007:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14}: opponent_00006_00008:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14}: opponent_00006_00009:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14}: opponent_00006_00010:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14}: opponent_00006_00011:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14}: opponent_00006_00012:: output_var ;
var {1,2,3,4,5,7,8,9,10,11,12,13,14}: opponent_00006_00013:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14}: opponent_00007_00001:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14}: opponent_00007_00002:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14}: opponent_00007_00003:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14}: opponent_00007_00004:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14}: opponent_00007_00005:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14}: opponent_00007_00006:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14}: opponent_00007_00007:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14}: opponent_00007_00008:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14}: opponent_00007_00009:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14}: opponent_00007_00010:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14}: opponent_00007_00011:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14}: opponent_00007_00012:: output_var ;
var {1,2,3,4,5,6,8,9,10,11,12,13,14}: opponent_00007_00013:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14}: opponent_00008_00001:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14}: opponent_00008_00002:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14}: opponent_00008_00003:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14}: opponent_00008_00004:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14}: opponent_00008_00005:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14}: opponent_00008_00006:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14}: opponent_00008_00007:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14}: opponent_00008_00008:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14}: opponent_00008_00009:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14}: opponent_00008_00010:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14}: opponent_00008_00011:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14}: opponent_00008_00012:: output_var ;
var {1,2,3,4,5,6,7,9,10,11,12,13,14}: opponent_00008_00013:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14}: opponent_00009_00001:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14}: opponent_00009_00002:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14}: opponent_00009_00003:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14}: opponent_00009_00004:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14}: opponent_00009_00005:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14}: opponent_00009_00006:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14}: opponent_00009_00007:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14}: opponent_00009_00008:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14}: opponent_00009_00009:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14}: opponent_00009_00010:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14}: opponent_00009_00011:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14}: opponent_00009_00012:: output_var ;
var {1,2,3,4,5,6,7,8,10,11,12,13,14}: opponent_00009_00013:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14}: opponent_00010_00001:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14}: opponent_00010_00002:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14}: opponent_00010_00003:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14}: opponent_00010_00004:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14}: opponent_00010_00005:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14}: opponent_00010_00006:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14}: opponent_00010_00007:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14}: opponent_00010_00008:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14}: opponent_00010_00009:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14}: opponent_00010_00010:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14}: opponent_00010_00011:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14}: opponent_00010_00012:: output_var ;
var {1,2,3,4,5,6,7,8,9,11,12,13,14}: opponent_00010_00013:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14}: opponent_00011_00001:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14}: opponent_00011_00002:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14}: opponent_00011_00003:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14}: opponent_00011_00004:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14}: opponent_00011_00005:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14}: opponent_00011_00006:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14}: opponent_00011_00007:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14}: opponent_00011_00008:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14}: opponent_00011_00009:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14}: opponent_00011_00010:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14}: opponent_00011_00011:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14}: opponent_00011_00012:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,12,13,14}: opponent_00011_00013:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14}: opponent_00012_00001:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14}: opponent_00012_00002:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14}: opponent_00012_00003:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14}: opponent_00012_00004:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14}: opponent_00012_00005:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14}: opponent_00012_00006:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14}: opponent_00012_00007:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14}: opponent_00012_00008:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14}: opponent_00012_00009:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14}: opponent_00012_00010:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14}: opponent_00012_00011:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14}: opponent_00012_00012:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,13,14}: opponent_00012_00013:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14}: opponent_00013_00001:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14}: opponent_00013_00002:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14}: opponent_00013_00003:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14}: opponent_00013_00004:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14}: opponent_00013_00005:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14}: opponent_00013_00006:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14}: opponent_00013_00007:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14}: opponent_00013_00008:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14}: opponent_00013_00009:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14}: opponent_00013_00010:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14}: opponent_00013_00011:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14}: opponent_00013_00012:: output_var ;
var {1,2,3,4,5,6,7,8,9,10,11,12,14}: opponent_00013_00013:: output_var ;
var 2..13: opponent_00014_00001:: output_var ;
var 1..13: opponent_00014_00002:: output_var ;
var 1..13: opponent_00014_00003:: output_var ;
var 1..13: opponent_00014_00004:: output_var ;
var 1..13: opponent_00014_00005:: output_var ;
var 1..13: opponent_00014_00006:: output_var ;
var 1..13: opponent_00014_00007:: output_var ;
var 1..13: opponent_00014_00008:: output_var ;
var 1..13: opponent_00014_00009:: output_var ;
var 1..13: opponent_00014_00010:: output_var ;
var 1..13: opponent_00014_00011:: output_var ;
var 1..13: opponent_00014_00012:: output_var ;
var 1..13: opponent_00014_00013:: output_var ;
var 1..2: venue_00001_00001:: output_var ;
var 1..2: venue_00001_00002:: output_var ;
var 1..2: venue_00001_00003:: output_var ;
var 1..2: venue_00001_00004:: output_var ;
var 1..2: venue_00001_00005:: output_var ;
var 1..2: venue_00001_00006:: output_var ;
var 1..2: venue_00001_00007:: output_var ;
var 1..2: venue_00001_00008:: output_var ;
var 1..2: venue_00001_00009:: output_var ;
var 1..2: venue_00001_00010:: output_var ;
var 1..2: venue_00001_00011:: output_var ;
var 1..2: venue_00001_00012:: output_var ;
var 1..2: venue_00001_00013:: output_var ;
var 1..2: venue_00002_00001:: output_var ;
var 1..2: venue_00002_00002:: output_var ;
var 1..2: venue_00002_00003:: output_var ;
var 1..2: venue_00002_00004:: output_var ;
var 1..2: venue_00002_00005:: output_var ;
var 1..2: venue_00002_00006:: output_var ;
var 1..2: venue_00002_00007:: output_var ;
var 1..2: venue_00002_00008:: output_var ;
var 1..2: venue_00002_00009:: output_var ;
var 1..2: venue_00002_00010:: output_var ;
var 1..2: venue_00002_00011:: output_var ;
var 1..2: venue_00002_00012:: output_var ;
var 1..2: venue_00002_00013:: output_var ;
var 1..2: venue_00003_00001:: output_var ;
var 1..2: venue_00003_00002:: output_var ;
var 1..2: venue_00003_00003:: output_var ;
var 1..2: venue_00003_00004:: output_var ;
var 1..2: venue_00003_00005:: output_var ;
var 1..2: venue_00003_00006:: output_var ;
var 1..2: venue_00003_00007:: output_var ;
var 1..2: venue_00003_00008:: output_var ;
var 1..2: venue_00003_00009:: output_var ;
var 1..2: venue_00003_00010:: output_var ;
var 1..2: venue_00003_00011:: output_var ;
var 1..2: venue_00003_00012:: output_var ;
var 1..2: venue_00003_00013:: output_var ;
var 1..2: venue_00004_00001:: output_var ;
var 1..2: venue_00004_00002:: output_var ;
var 1..2: venue_00004_00003:: output_var ;
var 1..2: venue_00004_00004:: output_var ;
var 1..2: venue_00004_00005:: output_var ;
var 1..2: venue_00004_00006:: output_var ;
var 1..2: venue_00004_00007:: output_var ;
var 1..2: venue_00004_00008:: output_var ;
var 1..2: venue_00004_00009:: output_var ;
var 1..2: venue_00004_00010:: output_var ;
var 1..2: venue_00004_00011:: output_var ;
var 1..2: venue_00004_00012:: output_var ;
var 1..2: venue_00004_00013:: output_var ;
var 1..2: venue_00005_00001:: output_var ;
var 1..2: venue_00005_00002:: output_var ;
var 1..2: venue_00005_00003:: output_var ;
var 1..2: venue_00005_00004:: output_var ;
var 1..2: venue_00005_00005:: output_var ;
var 1..2: venue_00005_00006:: output_var ;
var 1..2: venue_00005_00007:: output_var ;
var 1..2: venue_00005_00008:: output_var ;
var 1..2: venue_00005_00009:: output_var ;
var 1..2: venue_00005_00010:: output_var ;
var 1..2: venue_00005_00011:: output_var ;
var 1..2: venue_00005_00012:: output_var ;
var 1..2: venue_00005_00013:: output_var ;
var 1..2: venue_00006_00001:: output_var ;
var 1..2: venue_00006_00002:: output_var ;
var 1..2: venue_00006_00003:: output_var ;
var 1..2: venue_00006_00004:: output_var ;
var 1..2: venue_00006_00005:: output_var ;
var 1..2: venue_00006_00006:: output_var ;
var 1..2: venue_00006_00007:: output_var ;
var 1..2: venue_00006_00008:: output_var ;
var 1..2: venue_00006_00009:: output_var ;
var 1..2: venue_00006_00010:: output_var ;
var 1..2: venue_00006_00011:: output_var ;
var 1..2: venue_00006_00012:: output_var ;
var 1..2: venue_00006_00013:: output_var ;
var 1..2: venue_00007_00001:: output_var ;
var 1..2: venue_00007_00002:: output_var ;
var 1..2: venue_00007_00003:: output_var ;
var 1..2: venue_00007_00004:: output_var ;
var 1..2: venue_00007_00005:: output_var ;
var 1..2: venue_00007_00006:: output_var ;
var 1..2: venue_00007_00007:: output_var ;
var 1..2: venue_00007_00008:: output_var ;
var 1..2: venue_00007_00009:: output_var ;
var 1..2: venue_00007_00010:: output_var ;
var 1..2: venue_00007_00011:: output_var ;
var 1..2: venue_00007_00012:: output_var ;
var 1..2: venue_00007_00013:: output_var ;
var 1..2: venue_00008_00001:: output_var ;
var 1..2: venue_00008_00002:: output_var ;
var 1..2: venue_00008_00003:: output_var ;
var 1..2: venue_00008_00004:: output_var ;
var 1..2: venue_00008_00005:: output_var ;
var 1..2: venue_00008_00006:: output_var ;
var 1..2: venue_00008_00007:: output_var ;
var 1..2: venue_00008_00008:: output_var ;
var 1..2: venue_00008_00009:: output_var ;
var 1..2: venue_00008_00010:: output_var ;
var 1..2: venue_00008_00011:: output_var ;
var 1..2: venue_00008_00012:: output_var ;
var 1..2: venue_00008_00013:: output_var ;
var 1..2: venue_00009_00001:: output_var ;
var 1..2: venue_00009_00002:: output_var ;
var 1..2: venue_00009_00003:: output_var ;
var 1..2: venue_00009_00004:: output_var ;
var 1..2: venue_00009_00005:: output_var ;
var 1..2: venue_00009_00006:: output_var ;
var 1..2: venue_00009_00007:: output_var ;
var 1..2: venue_00009_00008:: output_var ;
var 1..2: venue_00009_00009:: output_var ;
var 1..2: venue_00009_00010:: output_var ;
var 1..2: venue_00009_00011:: output_var ;
var 1..2: venue_00009_00012:: output_var ;
var 1..2: venue_00009_00013:: output_var ;
var 1..2: venue_00010_00001:: output_var ;
var 1..2: venue_00010_00002:: output_var ;
var 1..2: venue_00010_00003:: output_var ;
var 1..2: venue_00010_00004:: output_var ;
var 1..2: venue_00010_00005:: output_var ;
var 1..2: venue_00010_00006:: output_var ;
var 1..2: venue_00010_00007:: output_var ;
var 1..2: venue_00010_00008:: output_var ;
var 1..2: venue_00010_00009:: output_var ;
var 1..2: venue_00010_00010:: output_var ;
var 1..2: venue_00010_00011:: output_var ;
var 1..2: venue_00010_00012:: output_var ;
var 1..2: venue_00010_00013:: output_var ;
var 1..2: venue_00011_00001:: output_var ;
var 1..2: venue_00011_00002:: output_var ;
var 1..2: venue_00011_00003:: output_var ;
var 1..2: venue_00011_00004:: output_var ;
var 1..2: venue_00011_00005:: output_var ;
var 1..2: venue_00011_00006:: output_var ;
var 1..2: venue_00011_00007:: output_var ;
var 1..2: venue_00011_00008:: output_var ;
var 1..2: venue_00011_00009:: output_var ;
var 1..2: venue_00011_00010:: output_var ;
var 1..2: venue_00011_00011:: output_var ;
var 1..2: venue_00011_00012:: output_var ;
var 1..2: venue_00011_00013:: output_var ;
var 1..2: venue_00012_00001:: output_var ;
var 1..2: venue_00012_00002:: output_var ;
var 1..2: venue_00012_00003:: output_var ;
var 1..2: venue_00012_00004:: output_var ;
var 1..2: venue_00012_00005:: output_var ;
var 1..2: venue_00012_00006:: output_var ;
var 1..2: venue_00012_00007:: output_var ;
var 1..2: venue_00012_00008:: output_var ;
var 1..2: venue_00012_00009:: output_var ;
var 1..2: venue_00012_00010:: output_var ;
var 1..2: venue_00012_00011:: output_var ;
var 1..2: venue_00012_00012:: output_var ;
var 1..2: venue_00012_00013:: output_var ;
var 1..2: venue_00013_00001:: output_var ;
var 1..2: venue_00013_00002:: output_var ;
var 1..2: venue_00013_00003:: output_var ;
var 1..2: venue_00013_00004:: output_var ;
var 1..2: venue_00013_00005:: output_var ;
var 1..2: venue_00013_00006:: output_var ;
var 1..2: venue_00013_00007:: output_var ;
var 1..2: venue_00013_00008:: output_var ;
var 1..2: venue_00013_00009:: output_var ;
var 1..2: venue_00013_00010:: output_var ;
var 1..2: venue_00013_00011:: output_var ;
var 1..2: venue_00013_00012:: output_var ;
var 1..2: venue_00013_00013:: output_var ;
var 1..2: venue_00014_00001:: output_var ;
var 1..2: venue_00014_00002:: output_var ;
var 1..2: venue_00014_00003:: output_var ;
var 1..2: venue_00014_00004:: output_var ;
var 1..2: venue_00014_00005:: output_var ;
var 1..2: venue_00014_00006:: output_var ;
var 1..2: venue_00014_00007:: output_var ;
var 1..2: venue_00014_00008:: output_var ;
var 1..2: venue_00014_00009:: output_var ;
var 1..2: venue_00014_00010:: output_var ;
var 1..2: venue_00014_00011:: output_var ;
var 1..2: venue_00014_00012:: output_var ;
var 1..2: venue_00014_00013:: output_var ;
var 0..7: travel_00001_00001:: output_var ;
var 0..7: travel_00001_00002:: output_var ;
var 0..7: travel_00001_00003:: output_var ;
var 0..7: travel_00001_00004:: output_var ;
var 0..7: travel_00001_00005:: output_var ;
var 0..7: travel_00001_00006:: output_var ;
var 0..7: travel_00001_00007:: output_var ;
var 0..7: travel_00001_00008:: output_var ;
var 0..7: travel_00001_00009:: output_var ;
var 0..7: travel_00001_00010:: output_var ;
var 0..7: travel_00001_00011:: output_var ;
var 0..7: travel_00001_00012:: output_var ;
var 0..7: travel_00001_00013:: output_var ;
var 0..7: travel_00001_00014:: output_var ;
var 0..7: travel_00002_00001:: output_var ;
var 0..7: travel_00002_00002:: output_var ;
var 0..7: travel_00002_00003:: output_var ;
var 0..7: travel_00002_00004:: output_var ;
var 0..7: travel_00002_00005:: output_var ;
var 0..7: travel_00002_00006:: output_var ;
var 0..7: travel_00002_00007:: output_var ;
var 0..7: travel_00002_00008:: output_var ;
var 0..7: travel_00002_00009:: output_var ;
var 0..7: travel_00002_00010:: output_var ;
var 0..7: travel_00002_00011:: output_var ;
var 0..7: travel_00002_00012:: output_var ;
var 0..7: travel_00002_00013:: output_var ;
var 0..7: travel_00002_00014:: output_var ;
var 0..7: travel_00003_00001:: output_var ;
var 0..7: travel_00003_00002:: output_var ;
var 0..7: travel_00003_00003:: output_var ;
var 0..7: travel_00003_00004:: output_var ;
var 0..7: travel_00003_00005:: output_var ;
var 0..7: travel_00003_00006:: output_var ;
var 0..7: travel_00003_00007:: output_var ;
var 0..7: travel_00003_00008:: output_var ;
var 0..7: travel_00003_00009:: output_var ;
var 0..7: travel_00003_00010:: output_var ;
var 0..7: travel_00003_00011:: output_var ;
var 0..7: travel_00003_00012:: output_var ;
var 0..7: travel_00003_00013:: output_var ;
var 0..7: travel_00003_00014:: output_var ;
var 0..7: travel_00004_00001:: output_var ;
var 0..7: travel_00004_00002:: output_var ;
var 0..7: travel_00004_00003:: output_var ;
var 0..7: travel_00004_00004:: output_var ;
var 0..7: travel_00004_00005:: output_var ;
var 0..7: travel_00004_00006:: output_var ;
var 0..7: travel_00004_00007:: output_var ;
var 0..7: travel_00004_00008:: output_var ;
var 0..7: travel_00004_00009:: output_var ;
var 0..7: travel_00004_00010:: output_var ;
var 0..7: travel_00004_00011:: output_var ;
var 0..7: travel_00004_00012:: output_var ;
var 0..7: travel_00004_00013:: output_var ;
var 0..7: travel_00004_00014:: output_var ;
var 0..6: travel_00005_00001:: output_var ;
var 0..7: travel_00005_00002:: output_var ;
var 0..7: travel_00005_00003:: output_var ;
var 0..7: travel_00005_00004:: output_var ;
var 0..7: travel_00005_00005:: output_var ;
var 0..7: travel_00005_00006:: output_var ;
var 0..7: travel_00005_00007:: output_var ;
var 0..7: travel_00005_00008:: output_var ;
var 0..7: travel_00005_00009:: output_var ;
var 0..7: travel_00005_00010:: output_var ;
var 0..7: travel_00005_00011:: output_var ;
var 0..7: travel_00005_00012:: output_var ;
var 0..7: travel_00005_00013:: output_var ;
var 0..6: travel_00005_00014:: output_var ;
var 0..6: travel_00006_00001:: output_var ;
var 0..7: travel_00006_00002:: output_var ;
var 0..7: travel_00006_00003:: output_var ;
var 0..7: travel_00006_00004:: output_var ;
var 0..7: travel_00006_00005:: output_var ;
var 0..7: travel_00006_00006:: output_var ;
var 0..7: travel_00006_00007:: output_var ;
var 0..7: travel_00006_00008:: output_var ;
var 0..7: travel_00006_00009:: output_var ;
var 0..7: travel_00006_00010:: output_var ;
var 0..7: travel_00006_00011:: output_var ;
var 0..7: travel_00006_00012:: output_var ;
var 0..7: travel_00006_00013:: output_var ;
var 0..6: travel_00006_00014:: output_var ;
var 0..4: travel_00007_00001:: output_var ;
var 0..7: travel_00007_00002:: output_var ;
var 0..7: travel_00007_00003:: output_var ;
var 0..7: travel_00007_00004:: output_var ;
var 0..7: travel_00007_00005:: output_var ;
var 0..7: travel_00007_00006:: output_var ;
var 0..7: travel_00007_00007:: output_var ;
var 0..7: travel_00007_00008:: output_var ;
var 0..7: travel_00007_00009:: output_var ;
var 0..7: travel_00007_00010:: output_var ;
var 0..7: travel_00007_00011:: output_var ;
var 0..7: travel_00007_00012:: output_var ;
var 0..7: travel_00007_00013:: output_var ;
var 0..4: travel_00007_00014:: output_var ;
var 0..6: travel_00008_00001:: output_var ;
var 0..7: travel_00008_00002:: output_var ;
var 0..7: travel_00008_00003:: output_var ;
var 0..7: travel_00008_00004:: output_var ;
var 0..7: travel_00008_00005:: output_var ;
var 0..7: travel_00008_00006:: output_var ;
var 0..7: travel_00008_00007:: output_var ;
var 0..7: travel_00008_00008:: output_var ;
var 0..7: travel_00008_00009:: output_var ;
var 0..7: travel_00008_00010:: output_var ;
var 0..7: travel_00008_00011:: output_var ;
var 0..7: travel_00008_00012:: output_var ;
var 0..7: travel_00008_00013:: output_var ;
var 0..6: travel_00008_00014:: output_var ;
var 0..6: travel_00009_00001:: output_var ;
var 0..7: travel_00009_00002:: output_var ;
var 0..7: travel_00009_00003:: output_var ;
var 0..7: travel_00009_00004:: output_var ;
var 0..7: travel_00009_00005:: output_var ;
var 0..7: travel_00009_00006:: output_var ;
var 0..7: travel_00009_00007:: output_var ;
var 0..7: travel_00009_00008:: output_var ;
var 0..7: travel_00009_00009:: output_var ;
var 0..7: travel_00009_00010:: output_var ;
var 0..7: travel_00009_00011:: output_var ;
var 0..7: travel_00009_00012:: output_var ;
var 0..7: travel_00009_00013:: output_var ;
var 0..6: travel_00009_00014:: output_var ;
var 0..4: travel_00010_00001:: output_var ;
var 0..7: travel_00010_00002:: output_var ;
var 0..7: travel_00010_00003:: output_var ;
var 0..7: travel_00010_00004:: output_var ;
var 0..7: travel_00010_00005:: output_var ;
var 0..7: travel_00010_00006:: output_var ;
var 0..7: travel_00010_00007:: output_var ;
var 0..7: travel_00010_00008:: output_var ;
var 0..7: travel_00010_00009:: output_var ;
var 0..7: travel_00010_00010:: output_var ;
var 0..7: travel_00010_00011:: output_var ;
var 0..7: travel_00010_00012:: output_var ;
var 0..7: travel_00010_00013:: output_var ;
var 0..4: travel_00010_00014:: output_var ;
var 0..6: travel_00011_00001:: output_var ;
var 0..7: travel_00011_00002:: output_var ;
var 0..7: travel_00011_00003:: output_var ;
var 0..7: travel_00011_00004:: output_var ;
var 0..7: travel_00011_00005:: output_var ;
var 0..7: travel_00011_00006:: output_var ;
var 0..7: travel_00011_00007:: output_var ;
var 0..7: travel_00011_00008:: output_var ;
var 0..7: travel_00011_00009:: output_var ;
var 0..7: travel_00011_00010:: output_var ;
var 0..7: travel_00011_00011:: output_var ;
var 0..7: travel_00011_00012:: output_var ;
var 0..7: travel_00011_00013:: output_var ;
var 0..6: travel_00011_00014:: output_var ;
var 0..7: travel_00012_00001:: output_var ;
var 0..7: travel_00012_00002:: output_var ;
var 0..7: travel_00012_00003:: output_var ;
var 0..7: travel_00012_00004:: output_var ;
var 0..7: travel_00012_00005:: output_var ;
var 0..7: travel_00012_00006:: output_var ;
var 0..7: travel_00012_00007:: output_var ;
var 0..7: travel_00012_00008:: output_var ;
var 0..7: travel_00012_00009:: output_var ;
var 0..7: travel_00012_00010:: output_var ;
var 0..7: travel_00012_00011:: output_var ;
var 0..7: travel_00012_00012:: output_var ;
var 0..7: travel_00012_00013:: output_var ;
var 0..7: travel_00012_00014:: output_var ;
var 0..7: travel_00013_00001:: output_var ;
var 0..7: travel_00013_00002:: output_var ;
var 0..7: travel_00013_00003:: output_var ;
var 0..7: travel_00013_00004:: output_var ;
var 0..7: travel_00013_00005:: output_var ;
var 0..7: travel_00013_00006:: output_var ;
var 0..7: travel_00013_00007:: output_var ;
var 0..7: travel_00013_00008:: output_var ;
var 0..7: travel_00013_00009:: output_var ;
var 0..7: travel_00013_00010:: output_var ;
var 0..7: travel_00013_00011:: output_var ;
var 0..7: travel_00013_00012:: output_var ;
var 0..7: travel_00013_00013:: output_var ;
var 0..7: travel_00013_00014:: output_var ;
var 0..7: travel_00014_00001:: output_var ;
var 0..7: travel_00014_00002:: output_var ;
var 0..7: travel_00014_00003:: output_var ;
var 0..7: travel_00014_00004:: output_var ;
var 0..7: travel_00014_00005:: output_var ;
var 0..7: travel_00014_00006:: output_var ;
var 0..7: travel_00014_00007:: output_var ;
var 0..7: travel_00014_00008:: output_var ;
var 0..7: travel_00014_00009:: output_var ;
var 0..7: travel_00014_00010:: output_var ;
var 0..7: travel_00014_00011:: output_var ;
var 0..7: travel_00014_00012:: output_var ;
var 0..7: travel_00014_00013:: output_var ;
var 0..7: travel_00014_00014:: output_var ;
var 1..1343: objective:: output_var ;
var 1..7: aux1:: var_is_introduced ;
var 1..7: aux2:: var_is_introduced ;
var 1..7: aux3:: var_is_introduced ;
var 1..7: aux4:: var_is_introduced ;
var 1..7: aux5:: var_is_introduced ;
var 1..7: aux6:: var_is_introduced ;
var 1..7: aux7:: var_is_introduced ;
var 1..7: aux8:: var_is_introduced ;
var 1..7: aux9:: var_is_introduced ;
var 1..7: aux10:: var_is_introduced ;
var 1..7: aux11:: var_is_introduced ;
var 1..7: aux12:: var_is_introduced ;
var 1..7: aux13:: var_is_introduced ;
var 1..7: aux14:: var_is_introduced ;
var 1..7: aux15:: var_is_introduced ;
var 1..7: aux16:: var_is_introduced ;
var 1..7: aux17:: var_is_introduced ;
var 1..7: aux18:: var_is_introduced ;
var 1..7: aux19:: var_is_introduced ;
var 1..7: aux20:: var_is_introduced ;
var 1..7: aux21:: var_is_introduced ;
var 1..7: aux22:: var_is_introduced ;
var 1..7: aux23:: var_is_introduced ;
var 1..7: aux24:: var_is_introduced ;
var 1..7: aux25:: var_is_introduced ;
var 1..7: aux26:: var_is_introduced ;
var 1..7: aux27:: var_is_introduced ;
var 1..7: aux28:: var_is_introduced ;
var 1..7: aux29:: var_is_introduced ;
var 1..7: aux30:: var_is_introduced ;
var 1..7: aux31:: var_is_introduced ;
var 1..7: aux32:: var_is_introduced ;
var 1..7: aux33:: var_is_introduced ;
var 1..7: aux34:: var_is_introduced ;
var 1..7: aux35:: var_is_introduced ;
var 1..7: aux36:: var_is_introduced ;
var 1..7: aux37:: var_is_introduced ;
var 1..7: aux38:: var_is_introduced ;
var 1..7: aux39:: var_is_introduced ;
var 1..7: aux40:: var_is_introduced ;
var 1..7: aux41:: var_is_introduced ;
var 1..7: aux42:: var_is_introduced ;
var 1..7: aux43:: var_is_introduced ;
var 1..7: aux44:: var_is_introduced ;
var 1..7: aux45:: var_is_introduced ;
var 1..7: aux46:: var_is_introduced ;
var 1..7: aux47:: var_is_introduced ;
var 1..7: aux48:: var_is_introduced ;
var 1..7: aux49:: var_is_introduced ;
var 1..7: aux50:: var_is_introduced ;
var 1..7: aux51:: var_is_introduced ;
var 1..7: aux52:: var_is_introduced ;
var 1..7: aux53:: var_is_introduced ;
var 1..7: aux54:: var_is_introduced ;
var 1..7: aux55:: var_is_introduced ;
var 1..7: aux56:: var_is_introduced ;
var 1..7: aux57:: var_is_introduced ;
var 1..7: aux58:: var_is_introduced ;
var 1..7: aux59:: var_is_introduced ;
var 1..7: aux60:: var_is_introduced ;
var 1..7: aux61:: var_is_introduced ;
var 1..7: aux62:: var_is_introduced ;
var 1..7: aux63:: var_is_introduced ;
var 1..7: aux64:: var_is_introduced ;
var 1..7: aux65:: var_is_introduced ;
var 1..7: aux66:: var_is_introduced ;
var 1..7: aux67:: var_is_introduced ;
var 1..7: aux68:: var_is_introduced ;
var 1..7: aux69:: var_is_introduced ;
var 1..7: aux70:: var_is_introduced ;
var 1..7: aux71:: var_is_introduced ;
var 1..7: aux72:: var_is_introduced ;
var 1..7: aux73:: var_is_introduced ;
var 1..7: aux74:: var_is_introduced ;
var 1..7: aux75:: var_is_introduced ;
var 1..7: aux76:: var_is_introduced ;
var 1..7: aux77:: var_is_introduced ;
var 1..7: aux78:: var_is_introduced ;
var 1..7: aux79:: var_is_introduced ;
var 1..7: aux80:: var_is_introduced ;
var 1..7: aux81:: var_is_introduced ;
var 1..7: aux82:: var_is_introduced ;
var 1..7: aux83:: var_is_introduced ;
var 1..7: aux84:: var_is_introduced ;
var 1..7: aux85:: var_is_introduced ;
var 1..7: aux86:: var_is_introduced ;
var 1..7: aux87:: var_is_introduced ;
var 1..7: aux88:: var_is_introduced ;
var 1..7: aux89:: var_is_introduced ;
var 1..7: aux90:: var_is_introduced ;
var 1..7: aux91:: var_is_introduced ;
var 1..7: aux92:: var_is_introduced ;
var 1..7: aux93:: var_is_introduced ;
var 1..7: aux94:: var_is_introduced ;
var 1..7: aux95:: var_is_introduced ;
var 1..7: aux96:: var_is_introduced ;
var 1..7: aux97:: var_is_introduced ;
var 1..7: aux98:: var_is_introduced ;
var 1..7: aux99:: var_is_introduced ;
var 1..7: aux100:: var_is_introduced ;
var 1..7: aux101:: var_is_introduced ;
var 1..7: aux102:: var_is_introduced ;
var 1..7: aux103:: var_is_introduced ;
var 1..7: aux104:: var_is_introduced ;
var 1..7: aux105:: var_is_introduced ;
var 1..7: aux106:: var_is_introduced ;
var 1..7: aux107:: var_is_introduced ;
var 1..7: aux108:: var_is_introduced ;
var 1..7: aux109:: var_is_introduced ;
var 1..7: aux110:: var_is_introduced ;
var 1..7: aux111:: var_is_introduced ;
var 1..7: aux112:: var_is_introduced ;
var 1..7: aux113:: var_is_introduced ;
var 1..7: aux114:: var_is_introduced ;
var 1..7: aux115:: var_is_introduced ;
var 1..7: aux116:: var_is_introduced ;
var 1..7: aux117:: var_is_introduced ;
var 1..7: aux118:: var_is_introduced ;
var 1..7: aux119:: var_is_introduced ;
var 1..7: aux120:: var_is_introduced ;
var 1..7: aux121:: var_is_introduced ;
var 1..7: aux122:: var_is_introduced ;
var 1..7: aux123:: var_is_introduced ;
var 1..7: aux124:: var_is_introduced ;
var 1..7: aux125:: var_is_introduced ;
var 1..7: aux126:: var_is_introduced ;
var 1..7: aux127:: var_is_introduced ;
var 1..7: aux128:: var_is_introduced ;
var 1..7: aux129:: var_is_introduced ;
var 1..7: aux130:: var_is_introduced ;
var 1..7: aux131:: var_is_introduced ;
var 1..7: aux132:: var_is_introduced ;
var 1..7: aux133:: var_is_introduced ;
var 1..7: aux134:: var_is_introduced ;
var 1..7: aux135:: var_is_introduced ;
var 1..7: aux136:: var_is_introduced ;
var 1..7: aux137:: var_is_introduced ;
var 1..7: aux138:: var_is_introduced ;
var 1..7: aux139:: var_is_introduced ;
var 1..7: aux140:: var_is_introduced ;
var 1..7: aux141:: var_is_introduced ;
var 1..7: aux142:: var_is_introduced ;
var 1..7: aux143:: var_is_introduced ;
var 1..7: aux144:: var_is_introduced ;
var 1..7: aux145:: var_is_introduced ;
var 1..7: aux146:: var_is_introduced ;
var 1..7: aux147:: var_is_introduced ;
var 1..7: aux148:: var_is_introduced ;
var 1..7: aux149:: var_is_introduced ;
var 1..7: aux150:: var_is_introduced ;
var 1..7: aux151:: var_is_introduced ;
var 1..7: aux152:: var_is_introduced ;
var 1..7: aux153:: var_is_introduced ;
var 1..7: aux154:: var_is_introduced ;
var 1..7: aux155:: var_is_introduced ;
var 1..7: aux156:: var_is_introduced ;
var 1..7: aux157:: var_is_introduced ;
var 1..7: aux158:: var_is_introduced ;
var 1..7: aux159:: var_is_introduced ;
var 1..7: aux160:: var_is_introduced ;
var 1..7: aux161:: var_is_introduced ;
var 1..7: aux162:: var_is_introduced ;
var 1..7: aux163:: var_is_introduced ;
var 1..7: aux164:: var_is_introduced ;
var 1..7: aux165:: var_is_introduced ;
var 1..7: aux166:: var_is_introduced ;
var 1..7: aux167:: var_is_introduced ;
var 1..7: aux168:: var_is_introduced ;
var 1..7: aux169:: var_is_introduced ;
var 1..7: aux170:: var_is_introduced ;
var 1..7: aux171:: var_is_introduced ;
var 1..7: aux172:: var_is_introduced ;
var 1..7: aux173:: var_is_introduced ;
var 1..7: aux174:: var_is_introduced ;
var 1..7: aux175:: var_is_introduced ;
var 1..7: aux176:: var_is_introduced ;
var 1..7: aux177:: var_is_introduced ;
var 1..7: aux178:: var_is_introduced ;
var 1..7: aux179:: var_is_introduced ;
var 1..7: aux180:: var_is_introduced ;
var 1..7: aux181:: var_is_introduced ;
var 1..7: aux182:: var_is_introduced ;
var bool: aux183_BOOL:: var_is_introduced ;
var bool: aux184_BOOL:: var_is_introduced ;
var bool: aux185_BOOL:: var_is_introduced ;
var bool: aux186_BOOL:: var_is_introduced ;
var bool: aux187_BOOL:: var_is_introduced ;
var bool: aux188_BOOL:: var_is_introduced ;
var bool: aux189_BOOL:: var_is_introduced ;
var bool: aux190_BOOL:: var_is_introduced ;
var bool: aux191_BOOL:: var_is_introduced ;
var bool: aux192_BOOL:: var_is_introduced ;
var bool: aux193_BOOL:: var_is_introduced ;
var bool: aux194_BOOL:: var_is_introduced ;
var bool: aux195_BOOL:: var_is_introduced ;
var bool: aux196_BOOL:: var_is_introduced ;
var bool: aux197_BOOL:: var_is_introduced ;
var bool: aux198_BOOL:: var_is_introduced ;
var bool: aux199_BOOL:: var_is_introduced ;
var bool: aux200_BOOL:: var_is_introduced ;
var bool: aux201_BOOL:: var_is_introduced ;
var bool: aux202_BOOL:: var_is_introduced ;
var bool: aux203_BOOL:: var_is_introduced ;
var bool: aux204_BOOL:: var_is_introduced ;
var bool: aux205_BOOL:: var_is_introduced ;
var bool: aux206_BOOL:: var_is_introduced ;
var bool: aux207_BOOL:: var_is_introduced ;
var bool: aux208_BOOL:: var_is_introduced ;
var bool: aux209_BOOL:: var_is_introduced ;
var bool: aux210_BOOL:: var_is_introduced ;
var bool: aux211_BOOL:: var_is_introduced ;
var bool: aux212_BOOL:: var_is_introduced ;
var bool: aux213_BOOL:: var_is_introduced ;
var bool: aux214_BOOL:: var_is_introduced ;
var bool: aux215_BOOL:: var_is_introduced ;
var bool: aux216_BOOL:: var_is_introduced ;
var bool: aux217_BOOL:: var_is_introduced ;
var bool: aux218_BOOL:: var_is_introduced ;
var bool: aux219_BOOL:: var_is_introduced ;
var bool: aux220_BOOL:: var_is_introduced ;
var bool: aux221_BOOL:: var_is_introduced ;
var bool: aux222_BOOL:: var_is_introduced ;
var bool: aux223_BOOL:: var_is_introduced ;
var bool: aux224_BOOL:: var_is_introduced ;
var bool: aux225_BOOL:: var_is_introduced ;
var bool: aux226_BOOL:: var_is_introduced ;
var bool: aux227_BOOL:: var_is_introduced ;
var bool: aux228_BOOL:: var_is_introduced ;
var bool: aux229_BOOL:: var_is_introduced ;
var bool: aux230_BOOL:: var_is_introduced ;
var bool: aux231_BOOL:: var_is_introduced ;
var bool: aux232_BOOL:: var_is_introduced ;
var bool: aux233_BOOL:: var_is_introduced ;
var bool: aux234_BOOL:: var_is_introduced ;
var bool: aux235_BOOL:: var_is_introduced ;
var bool: aux236_BOOL:: var_is_introduced ;
var bool: aux237_BOOL:: var_is_introduced ;
var bool: aux238_BOOL:: var_is_introduced ;
var bool: aux239_BOOL:: var_is_introduced ;
var bool: aux240_BOOL:: var_is_introduced ;
var bool: aux241_BOOL:: var_is_introduced ;
var bool: aux242_BOOL:: var_is_introduced ;
var bool: aux243_BOOL:: var_is_introduced ;
var bool: aux244_BOOL:: var_is_introduced ;
var bool: aux245_BOOL:: var_is_introduced ;
var bool: aux246_BOOL:: var_is_introduced ;
var bool: aux247_BOOL:: var_is_introduced ;
var bool: aux248_BOOL:: var_is_introduced ;
var bool: aux249_BOOL:: var_is_introduced ;
var bool: aux250_BOOL:: var_is_introduced ;
var bool: aux251_BOOL:: var_is_introduced ;
var bool: aux252_BOOL:: var_is_introduced ;
var bool: aux253_BOOL:: var_is_introduced ;
var bool: aux254_BOOL:: var_is_introduced ;
var bool: aux255_BOOL:: var_is_introduced ;
var bool: aux256_BOOL:: var_is_introduced ;
var bool: aux257_BOOL:: var_is_introduced ;
var bool: aux258_BOOL:: var_is_introduced ;
var bool: aux259_BOOL:: var_is_introduced ;
var bool: aux260_BOOL:: var_is_introduced ;
var bool: aux261_BOOL:: var_is_introduced ;
var bool: aux262_BOOL:: var_is_introduced ;
var bool: aux263_BOOL:: var_is_introduced ;
var bool: aux264_BOOL:: var_is_introduced ;
var bool: aux265_BOOL:: var_is_introduced ;
var bool: aux266_BOOL:: var_is_introduced ;
var bool: aux267_BOOL:: var_is_introduced ;
var bool: aux268_BOOL:: var_is_introduced ;
var bool: aux269_BOOL:: var_is_introduced ;
var bool: aux270_BOOL:: var_is_introduced ;
var bool: aux271_BOOL:: var_is_introduced ;
var bool: aux272_BOOL:: var_is_introduced ;
var bool: aux273_BOOL:: var_is_introduced ;
var bool: aux274_BOOL:: var_is_introduced ;
var bool: aux275_BOOL:: var_is_introduced ;
var bool: aux276_BOOL:: var_is_introduced ;
var bool: aux277_BOOL:: var_is_introduced ;
var bool: aux278_BOOL:: var_is_introduced ;
var bool: aux279_BOOL:: var_is_introduced ;
var bool: aux280_BOOL:: var_is_introduced ;
var bool: aux281_BOOL:: var_is_introduced ;
var bool: aux282_BOOL:: var_is_introduced ;
var bool: aux283_BOOL:: var_is_introduced ;
var bool: aux284_BOOL:: var_is_introduced ;
var bool: aux285_BOOL:: var_is_introduced ;
var bool: aux286_BOOL:: var_is_introduced ;
var bool: aux287_BOOL:: var_is_introduced ;
var bool: aux288_BOOL:: var_is_introduced ;
var bool: aux289_BOOL:: var_is_introduced ;
var bool: aux290_BOOL:: var_is_introduced ;
var bool: aux291_BOOL:: var_is_introduced ;
var bool: aux292_BOOL:: var_is_introduced ;
var bool: aux293_BOOL:: var_is_introduced ;
var bool: aux294_BOOL:: var_is_introduced ;
var bool: aux295_BOOL:: var_is_introduced ;
var bool: aux296_BOOL:: var_is_introduced ;
var bool: aux297_BOOL:: var_is_introduced ;
var bool: aux298_BOOL:: var_is_introduced ;
var bool: aux299_BOOL:: var_is_introduced ;
var bool: aux300_BOOL:: var_is_introduced ;
var bool: aux301_BOOL:: var_is_introduced ;
var bool: aux302_BOOL:: var_is_introduced ;
var bool: aux303_BOOL:: var_is_introduced ;
var bool: aux304_BOOL:: var_is_introduced ;
var bool: aux305_BOOL:: var_is_introduced ;
var bool: aux306_BOOL:: var_is_introduced ;
var bool: aux307_BOOL:: var_is_introduced ;
var bool: aux308_BOOL:: var_is_introduced ;
var bool: aux309_BOOL:: var_is_introduced ;
var bool: aux310_BOOL:: var_is_introduced ;
var bool: aux311_BOOL:: var_is_introduced ;
var bool: aux312_BOOL:: var_is_introduced ;
var bool: aux313_BOOL:: var_is_introduced ;
var bool: aux314_BOOL:: var_is_introduced ;
var bool: aux315_BOOL:: var_is_introduced ;
var bool: aux316_BOOL:: var_is_introduced ;
var bool: aux317_BOOL:: var_is_introduced ;
var bool: aux318_BOOL:: var_is_introduced ;
var bool: aux319_BOOL:: var_is_introduced ;
var bool: aux320_BOOL:: var_is_introduced ;
var bool: aux321_BOOL:: var_is_introduced ;
var bool: aux322_BOOL:: var_is_introduced ;
var bool: aux323_BOOL:: var_is_introduced ;
var bool: aux324_BOOL:: var_is_introduced ;
var bool: aux325_BOOL:: var_is_introduced ;
var bool: aux326_BOOL:: var_is_introduced ;
var bool: aux327_BOOL:: var_is_introduced ;
var bool: aux328_BOOL:: var_is_introduced ;
var bool: aux329_BOOL:: var_is_introduced ;
var bool: aux330_BOOL:: var_is_introduced ;
var bool: aux331_BOOL:: var_is_introduced ;
var bool: aux332_BOOL:: var_is_introduced ;
var bool: aux333_BOOL:: var_is_introduced ;
var bool: aux334_BOOL:: var_is_introduced ;
var bool: aux335_BOOL:: var_is_introduced ;
var bool: aux336_BOOL:: var_is_introduced ;
var bool: aux337_BOOL:: var_is_introduced ;
var bool: aux338_BOOL:: var_is_introduced ;
var bool: aux339_BOOL:: var_is_introduced ;
var bool: aux340_BOOL:: var_is_introduced ;
var bool: aux341_BOOL:: var_is_introduced ;
var bool: aux342_BOOL:: var_is_introduced ;
var bool: aux343_BOOL:: var_is_introduced ;
var bool: aux344_BOOL:: var_is_introduced ;
var bool: aux345_BOOL:: var_is_introduced ;
var bool: aux346_BOOL:: var_is_introduced ;
var bool: aux347_BOOL:: var_is_introduced ;
var bool: aux348_BOOL:: var_is_introduced ;
var bool: aux349_BOOL:: var_is_introduced ;
var bool: aux350_BOOL:: var_is_introduced ;
var bool: aux351_BOOL:: var_is_introduced ;
var bool: aux352_BOOL:: var_is_introduced ;
var bool: aux353_BOOL:: var_is_introduced ;
var bool: aux354_BOOL:: var_is_introduced ;
var bool: aux355_BOOL:: var_is_introduced ;
var bool: aux356_BOOL:: var_is_introduced ;
var bool: aux357_BOOL:: var_is_introduced ;
var bool: aux358_BOOL:: var_is_introduced ;
var bool: aux359_BOOL:: var_is_introduced ;
var bool: aux360_BOOL:: var_is_introduced ;
var bool: aux361_BOOL:: var_is_introduced ;
var bool: aux362_BOOL:: var_is_introduced ;
var bool: aux363_BOOL:: var_is_introduced ;
var bool: aux364_BOOL:: var_is_introduced ;
var bool: aux365_BOOL:: var_is_introduced ;
var bool: aux366_BOOL:: var_is_introduced ;
var bool: aux367_BOOL:: var_is_introduced ;
var bool: aux368_BOOL:: var_is_introduced ;
var bool: aux369_BOOL:: var_is_introduced ;
var bool: aux370_BOOL:: var_is_introduced ;
var bool: aux371_BOOL:: var_is_introduced ;
var bool: aux372_BOOL:: var_is_introduced ;
var bool: aux373_BOOL:: var_is_introduced ;
var bool: aux374_BOOL:: var_is_introduced ;
var bool: aux375_BOOL:: var_is_introduced ;
var bool: aux376_BOOL:: var_is_introduced ;
var bool: aux377_BOOL:: var_is_introduced ;
var bool: aux378_BOOL:: var_is_introduced ;
var bool: aux379_BOOL:: var_is_introduced ;
var bool: aux380_BOOL:: var_is_introduced ;
var bool: aux381_BOOL:: var_is_introduced ;
var bool: aux382_BOOL:: var_is_introduced ;
var bool: aux383_BOOL:: var_is_introduced ;
var bool: aux384_BOOL:: var_is_introduced ;
var bool: aux385_BOOL:: var_is_introduced ;
var bool: aux386_BOOL:: var_is_introduced ;
var bool: aux387_BOOL:: var_is_introduced ;
var bool: aux388_BOOL:: var_is_introduced ;
var bool: aux389_BOOL:: var_is_introduced ;
var bool: aux390_BOOL:: var_is_introduced ;
var bool: aux391_BOOL:: var_is_introduced ;
var bool: aux392_BOOL:: var_is_introduced ;
var bool: aux393_BOOL:: var_is_introduced ;
var bool: aux394_BOOL:: var_is_introduced ;
var bool: aux395_BOOL:: var_is_introduced ;
var bool: aux396_BOOL:: var_is_introduced ;
var bool: aux397_BOOL:: var_is_introduced ;
var bool: aux398_BOOL:: var_is_introduced ;
var bool: aux399_BOOL:: var_is_introduced ;
var bool: aux400_BOOL:: var_is_introduced ;
var bool: aux401_BOOL:: var_is_introduced ;
var bool: aux402_BOOL:: var_is_introduced ;
var bool: aux403_BOOL:: var_is_introduced ;
var bool: aux404_BOOL:: var_is_introduced ;
var bool: aux405_BOOL:: var_is_introduced ;
var bool: aux406_BOOL:: var_is_introduced ;
var bool: aux407_BOOL:: var_is_introduced ;
var bool: aux408_BOOL:: var_is_introduced ;
var bool: aux409_BOOL:: var_is_introduced ;
var bool: aux410_BOOL:: var_is_introduced ;
var bool: aux411_BOOL:: var_is_introduced ;
var bool: aux412_BOOL:: var_is_introduced ;
var bool: aux413_BOOL:: var_is_introduced ;
var bool: aux414_BOOL:: var_is_introduced ;
var bool: aux415_BOOL:: var_is_introduced ;
var bool: aux416_BOOL:: var_is_introduced ;
var bool: aux417_BOOL:: var_is_introduced ;
var bool: aux418_BOOL:: var_is_introduced ;
var bool: aux419_BOOL:: var_is_introduced ;
var bool: aux420_BOOL:: var_is_introduced ;
var bool: aux421_BOOL:: var_is_introduced ;
var bool: aux422_BOOL:: var_is_introduced ;
var bool: aux423_BOOL:: var_is_introduced ;
var bool: aux424_BOOL:: var_is_introduced ;
var bool: aux425_BOOL:: var_is_introduced ;
var bool: aux426_BOOL:: var_is_introduced ;
var bool: aux427_BOOL:: var_is_introduced ;
var bool: aux428_BOOL:: var_is_introduced ;
var bool: aux429_BOOL:: var_is_introduced ;
var bool: aux430_BOOL:: var_is_introduced ;
var bool: aux431_BOOL:: var_is_introduced ;
var bool: aux432_BOOL:: var_is_introduced ;
var bool: aux433_BOOL:: var_is_introduced ;
var bool: aux434_BOOL:: var_is_introduced ;
var bool: aux435_BOOL:: var_is_introduced ;
var bool: aux436_BOOL:: var_is_introduced ;
var bool: aux437_BOOL:: var_is_introduced ;
var bool: aux438_BOOL:: var_is_introduced ;
var bool: aux439_BOOL:: var_is_introduced ;
var bool: aux440_BOOL:: var_is_introduced ;
var bool: aux441_BOOL:: var_is_introduced ;
var bool: aux442_BOOL:: var_is_introduced ;
var bool: aux443_BOOL:: var_is_introduced ;
var bool: aux444_BOOL:: var_is_introduced ;
var bool: aux445_BOOL:: var_is_introduced ;
var bool: aux446_BOOL:: var_is_introduced ;
var bool: aux447_BOOL:: var_is_introduced ;
var bool: aux448_BOOL:: var_is_introduced ;
var bool: aux449_BOOL:: var_is_introduced ;
var bool: aux450_BOOL:: var_is_introduced ;
var bool: aux451_BOOL:: var_is_introduced ;
var bool: aux452_BOOL:: var_is_introduced ;
var bool: aux453_BOOL:: var_is_introduced ;
var bool: aux454_BOOL:: var_is_introduced ;
var bool: aux455_BOOL:: var_is_introduced ;
var bool: aux456_BOOL:: var_is_introduced ;
var bool: aux457_BOOL:: var_is_introduced ;
var bool: aux458_BOOL:: var_is_introduced ;
var bool: aux459_BOOL:: var_is_introduced ;
var bool: aux460_BOOL:: var_is_introduced ;
var bool: aux461_BOOL:: var_is_introduced ;
var bool: aux462_BOOL:: var_is_introduced ;
var bool: aux463_BOOL:: var_is_introduced ;
var bool: aux464_BOOL:: var_is_introduced ;
var bool: aux465_BOOL:: var_is_introduced ;
var bool: aux466_BOOL:: var_is_introduced ;
var bool: aux467_BOOL:: var_is_introduced ;
var bool: aux468_BOOL:: var_is_introduced ;
var bool: aux469_BOOL:: var_is_introduced ;
var bool: aux470_BOOL:: var_is_introduced ;
var bool: aux471_BOOL:: var_is_introduced ;
var bool: aux472_BOOL:: var_is_introduced ;
var bool: aux473_BOOL:: var_is_introduced ;
var bool: aux474_BOOL:: var_is_introduced ;
var bool: aux475_BOOL:: var_is_introduced ;
var bool: aux476_BOOL:: var_is_introduced ;
var bool: aux477_BOOL:: var_is_introduced ;
var bool: aux478_BOOL:: var_is_introduced ;
var bool: aux479_BOOL:: var_is_introduced ;
var bool: aux480_BOOL:: var_is_introduced ;
var bool: aux481_BOOL:: var_is_introduced ;
var bool: aux482_BOOL:: var_is_introduced ;
var bool: aux483_BOOL:: var_is_introduced ;
var bool: aux484_BOOL:: var_is_introduced ;
var bool: aux485_BOOL:: var_is_introduced ;
var bool: aux486_BOOL:: var_is_introduced ;
var bool: aux487_BOOL:: var_is_introduced ;
var bool: aux488_BOOL:: var_is_introduced ;
var bool: aux489_BOOL:: var_is_introduced ;
var bool: aux490_BOOL:: var_is_introduced ;
var bool: aux491_BOOL:: var_is_introduced ;
var bool: aux492_BOOL:: var_is_introduced ;
var bool: aux493_BOOL:: var_is_introduced ;
var bool: aux494_BOOL:: var_is_introduced ;
var bool: aux495_BOOL:: var_is_introduced ;
var bool: aux496_BOOL:: var_is_introduced ;
var bool: aux497_BOOL:: var_is_introduced ;
var bool: aux498_BOOL:: var_is_introduced ;
var bool: aux499_BOOL:: var_is_introduced ;
var bool: aux500_BOOL:: var_is_introduced ;
var bool: aux501_BOOL:: var_is_introduced ;
var bool: aux502_BOOL:: var_is_introduced ;
var bool: aux503_BOOL:: var_is_introduced ;
var bool: aux504_BOOL:: var_is_introduced ;
var bool: aux505_BOOL:: var_is_introduced ;
var bool: aux506_BOOL:: var_is_introduced ;
var bool: aux507_BOOL:: var_is_introduced ;
var bool: aux508_BOOL:: var_is_introduced ;
var bool: aux509_BOOL:: var_is_introduced ;
var bool: aux510_BOOL:: var_is_introduced ;
var bool: aux511_BOOL:: var_is_introduced ;
var bool: aux512_BOOL:: var_is_introduced ;
var bool: aux513_BOOL:: var_is_introduced ;
var bool: aux514_BOOL:: var_is_introduced ;
var bool: aux515_BOOL:: var_is_introduced ;
var bool: aux516_BOOL:: var_is_introduced ;
var bool: aux517_BOOL:: var_is_introduced ;
var bool: aux518_BOOL:: var_is_introduced ;
var bool: aux519_BOOL:: var_is_introduced ;
var bool: aux520_BOOL:: var_is_introduced ;
var bool: aux521_BOOL:: var_is_introduced ;
var bool: aux522_BOOL:: var_is_introduced ;
var bool: aux523_BOOL:: var_is_introduced ;
var bool: aux524_BOOL:: var_is_introduced ;
var bool: aux525_BOOL:: var_is_introduced ;
var bool: aux526_BOOL:: var_is_introduced ;
var bool: aux527_BOOL:: var_is_introduced ;
var bool: aux528_BOOL:: var_is_introduced ;
var bool: aux529_BOOL:: var_is_introduced ;
var bool: aux530_BOOL:: var_is_introduced ;
var bool: aux531_BOOL:: var_is_introduced ;
var bool: aux532_BOOL:: var_is_introduced ;
var bool: aux533_BOOL:: var_is_introduced ;
var bool: aux534_BOOL:: var_is_introduced ;
var bool: aux535_BOOL:: var_is_introduced ;
var bool: aux536_BOOL:: var_is_introduced ;
var bool: aux537_BOOL:: var_is_introduced ;
var bool: aux538_BOOL:: var_is_introduced ;
var bool: aux539_BOOL:: var_is_introduced ;
var bool: aux540_BOOL:: var_is_introduced ;
var bool: aux541_BOOL:: var_is_introduced ;
var bool: aux542_BOOL:: var_is_introduced ;
var bool: aux543_BOOL:: var_is_introduced ;
var bool: aux544_BOOL:: var_is_introduced ;
var bool: aux545_BOOL:: var_is_introduced ;
var bool: aux546_BOOL:: var_is_introduced ;
var 1..12: aux547:: var_is_introduced ;
var 1..12: aux548:: var_is_introduced ;
var 1..13: aux549:: var_is_introduced ;
var 1..13: aux550:: var_is_introduced ;
var 1..13: aux551:: var_is_introduced ;
var 1..13: aux552:: var_is_introduced ;
var 1..13: aux553:: var_is_introduced ;
var 1..13: aux554:: var_is_introduced ;
var 1..13: aux555:: var_is_introduced ;
var 1..13: aux556:: var_is_introduced ;
var 1..12: aux557:: var_is_introduced ;
var 1..12: aux558:: var_is_introduced ;
var 1..13: aux559:: var_is_introduced ;
var 1..13: aux560:: var_is_introduced ;
var 1..13: aux561:: var_is_introduced ;
var bool: aux562_BOOL:: var_is_introduced ;
var bool: aux563_BOOL:: var_is_introduced ;
var bool: aux564_BOOL:: var_is_introduced ;
var bool: aux565_BOOL:: var_is_introduced ;
var bool: aux566_BOOL:: var_is_introduced ;
var bool: aux567_BOOL:: var_is_introduced ;
var bool: aux568_BOOL:: var_is_introduced ;
var bool: aux569_BOOL:: var_is_introduced ;
var bool: aux570_BOOL:: var_is_introduced ;
var bool: aux571_BOOL:: var_is_introduced ;
var bool: aux572_BOOL:: var_is_introduced ;
var bool: aux573_BOOL:: var_is_introduced ;
var bool: aux574_BOOL:: var_is_introduced ;
var bool: aux575_BOOL:: var_is_introduced ;
var bool: aux576_BOOL:: var_is_introduced ;
var bool: aux577_BOOL:: var_is_introduced ;
var bool: aux578_BOOL:: var_is_introduced ;
var bool: aux579_BOOL:: var_is_introduced ;
var bool: aux580_BOOL:: var_is_introduced ;
var bool: aux581_BOOL:: var_is_introduced ;
var bool: aux582_BOOL:: var_is_introduced ;
var bool: aux583_BOOL:: var_is_introduced ;
var bool: aux584_BOOL:: var_is_introduced ;
var bool: aux585_BOOL:: var_is_introduced ;
var bool: aux586_BOOL:: var_is_introduced ;
var bool: aux587_BOOL:: var_is_introduced ;
var bool: aux588_BOOL:: var_is_introduced ;
var bool: aux589_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165}: aux590:: var_is_introduced ;
var bool: aux591_BOOL:: var_is_introduced ;
var bool: aux592_BOOL:: var_is_introduced ;
var bool: aux593_BOOL:: var_is_introduced ;
var bool: aux594_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux595:: var_is_introduced ;
var bool: aux596_BOOL:: var_is_introduced ;
var bool: aux597_BOOL:: var_is_introduced ;
var bool: aux598_BOOL:: var_is_introduced ;
var bool: aux599_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux600:: var_is_introduced ;
var bool: aux601_BOOL:: var_is_introduced ;
var bool: aux602_BOOL:: var_is_introduced ;
var bool: aux603_BOOL:: var_is_introduced ;
var bool: aux604_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux605:: var_is_introduced ;
var bool: aux606_BOOL:: var_is_introduced ;
var bool: aux607_BOOL:: var_is_introduced ;
var bool: aux608_BOOL:: var_is_introduced ;
var bool: aux609_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux610:: var_is_introduced ;
var bool: aux611_BOOL:: var_is_introduced ;
var bool: aux612_BOOL:: var_is_introduced ;
var bool: aux613_BOOL:: var_is_introduced ;
var bool: aux614_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux615:: var_is_introduced ;
var bool: aux616_BOOL:: var_is_introduced ;
var bool: aux617_BOOL:: var_is_introduced ;
var bool: aux618_BOOL:: var_is_introduced ;
var bool: aux619_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux620:: var_is_introduced ;
var bool: aux621_BOOL:: var_is_introduced ;
var bool: aux622_BOOL:: var_is_introduced ;
var bool: aux623_BOOL:: var_is_introduced ;
var bool: aux624_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux625:: var_is_introduced ;
var bool: aux626_BOOL:: var_is_introduced ;
var bool: aux627_BOOL:: var_is_introduced ;
var bool: aux628_BOOL:: var_is_introduced ;
var bool: aux629_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux630:: var_is_introduced ;
var bool: aux631_BOOL:: var_is_introduced ;
var bool: aux632_BOOL:: var_is_introduced ;
var bool: aux633_BOOL:: var_is_introduced ;
var bool: aux634_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux635:: var_is_introduced ;
var bool: aux636_BOOL:: var_is_introduced ;
var bool: aux637_BOOL:: var_is_introduced ;
var bool: aux638_BOOL:: var_is_introduced ;
var bool: aux639_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux640:: var_is_introduced ;
var bool: aux641_BOOL:: var_is_introduced ;
var bool: aux642_BOOL:: var_is_introduced ;
var bool: aux643_BOOL:: var_is_introduced ;
var bool: aux644_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,127,128,129,130,131,132,133,134,135,136,137,138,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,172,173,174,175,176,177,178,179}: aux645:: var_is_introduced ;
var bool: aux646_BOOL:: var_is_introduced ;
var bool: aux647_BOOL:: var_is_introduced ;
var bool: aux648_BOOL:: var_is_introduced ;
var bool: aux649_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,29,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195}: aux650:: var_is_introduced ;
var bool: aux651_BOOL:: var_is_introduced ;
var bool: aux652_BOOL:: var_is_introduced ;
var bool: aux653_BOOL:: var_is_introduced ;
var bool: aux654_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,29,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195}: aux655:: var_is_introduced ;
var bool: aux656_BOOL:: var_is_introduced ;
var bool: aux657_BOOL:: var_is_introduced ;
var bool: aux658_BOOL:: var_is_introduced ;
var bool: aux659_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,29,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195}: aux660:: var_is_introduced ;
var bool: aux661_BOOL:: var_is_introduced ;
var bool: aux662_BOOL:: var_is_introduced ;
var bool: aux663_BOOL:: var_is_introduced ;
var bool: aux664_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,29,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195}: aux665:: var_is_introduced ;
var bool: aux666_BOOL:: var_is_introduced ;
var bool: aux667_BOOL:: var_is_introduced ;
var bool: aux668_BOOL:: var_is_introduced ;
var bool: aux669_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,29,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195}: aux670:: var_is_introduced ;
var bool: aux671_BOOL:: var_is_introduced ;
var bool: aux672_BOOL:: var_is_introduced ;
var bool: aux673_BOOL:: var_is_introduced ;
var bool: aux674_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,29,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195}: aux675:: var_is_introduced ;
var bool: aux676_BOOL:: var_is_introduced ;
var bool: aux677_BOOL:: var_is_introduced ;
var bool: aux678_BOOL:: var_is_introduced ;
var bool: aux679_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,29,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195}: aux680:: var_is_introduced ;
var bool: aux681_BOOL:: var_is_introduced ;
var bool: aux682_BOOL:: var_is_introduced ;
var bool: aux683_BOOL:: var_is_introduced ;
var bool: aux684_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,29,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195}: aux685:: var_is_introduced ;
var bool: aux686_BOOL:: var_is_introduced ;
var bool: aux687_BOOL:: var_is_introduced ;
var bool: aux688_BOOL:: var_is_introduced ;
var bool: aux689_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,29,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195}: aux690:: var_is_introduced ;
var bool: aux691_BOOL:: var_is_introduced ;
var bool: aux692_BOOL:: var_is_introduced ;
var bool: aux693_BOOL:: var_is_introduced ;
var bool: aux694_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,29,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195}: aux695:: var_is_introduced ;
var bool: aux696_BOOL:: var_is_introduced ;
var bool: aux697_BOOL:: var_is_introduced ;
var bool: aux698_BOOL:: var_is_introduced ;
var bool: aux699_BOOL:: var_is_introduced ;
var {3,4,5,6,7,8,9,10,11,12,13,14,29,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,194,195}: aux700:: var_is_introduced ;
var bool: aux701_BOOL:: var_is_introduced ;
var bool: aux702_BOOL:: var_is_introduced ;
var bool: aux703_BOOL:: var_is_introduced ;
var bool: aux704_BOOL:: var_is_introduced ;
var {1,2,3,4,5,6,7,8,9,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,85,86,87,88,89,90,91,92,93,94,95,96,99,100,101,102,103,104,105,106,107,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,127,128,129,130,131,132,133,134,135,136,137,138,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,172,173,174,175,176,177,178,179,180,183,184,185,186,187,188,189,190,191,192,193,194}: aux705:: var_is_introduced ;
var bool: aux706_BOOL:: var_is_introduced ;
var bool: aux707_BOOL:: var_is_introduced ;
var bool: aux708_BOOL:: var_is_introduced ;
var bool: aux709_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195}: aux710:: var_is_introduced ;
var bool: aux711_BOOL:: var_is_introduced ;
var bool: aux712_BOOL:: var_is_introduced ;
var bool: aux713_BOOL:: var_is_introduced ;
var bool: aux714_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195}: aux715:: var_is_introduced ;
var bool: aux716_BOOL:: var_is_introduced ;
var bool: aux717_BOOL:: var_is_introduced ;
var bool: aux718_BOOL:: var_is_introduced ;
var bool: aux719_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195}: aux720:: var_is_introduced ;
var bool: aux721_BOOL:: var_is_introduced ;
var bool: aux722_BOOL:: var_is_introduced ;
var bool: aux723_BOOL:: var_is_introduced ;
var bool: aux724_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195}: aux725:: var_is_introduced ;
var bool: aux726_BOOL:: var_is_introduced ;
var bool: aux727_BOOL:: var_is_introduced ;
var bool: aux728_BOOL:: var_is_introduced ;
var bool: aux729_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195}: aux730:: var_is_introduced ;
var bool: aux731_BOOL:: var_is_introduced ;
var bool: aux732_BOOL:: var_is_introduced ;
var bool: aux733_BOOL:: var_is_introduced ;
var bool: aux734_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195}: aux735:: var_is_introduced ;
var bool: aux736_BOOL:: var_is_introduced ;
var bool: aux737_BOOL:: var_is_introduced ;
var bool: aux738_BOOL:: var_is_introduced ;
var bool: aux739_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195}: aux740:: var_is_introduced ;
var bool: aux741_BOOL:: var_is_introduced ;
var bool: aux742_BOOL:: var_is_introduced ;
var bool: aux743_BOOL:: var_is_introduced ;
var bool: aux744_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195}: aux745:: var_is_introduced ;
var bool: aux746_BOOL:: var_is_introduced ;
var bool: aux747_BOOL:: var_is_introduced ;
var bool: aux748_BOOL:: var_is_introduced ;
var bool: aux749_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195}: aux750:: var_is_introduced ;
var bool: aux751_BOOL:: var_is_introduced ;
var bool: aux752_BOOL:: var_is_introduced ;
var bool: aux753_BOOL:: var_is_introduced ;
var bool: aux754_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195}: aux755:: var_is_introduced ;
var bool: aux756_BOOL:: var_is_introduced ;
var bool: aux757_BOOL:: var_is_introduced ;
var bool: aux758_BOOL:: var_is_introduced ;
var bool: aux759_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195}: aux760:: var_is_introduced ;
var bool: aux761_BOOL:: var_is_introduced ;
var bool: aux762_BOOL:: var_is_introduced ;
var bool: aux763_BOOL:: var_is_introduced ;
var bool: aux764_BOOL:: var_is_introduced ;
var {2,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,193,194,195}: aux765:: var_is_introduced ;
var bool: aux766_BOOL:: var_is_introduced ;
var bool: aux767_BOOL:: var_is_introduced ;
var bool: aux768_BOOL:: var_is_introduced ;
var bool: aux769_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195}: aux770:: var_is_introduced ;
var bool: aux771_BOOL:: var_is_introduced ;
var bool: aux772_BOOL:: var_is_introduced ;
var bool: aux773_BOOL:: var_is_introduced ;
var bool: aux774_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195}: aux775:: var_is_introduced ;
var bool: aux776_BOOL:: var_is_introduced ;
var bool: aux777_BOOL:: var_is_introduced ;
var bool: aux778_BOOL:: var_is_introduced ;
var bool: aux779_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195}: aux780:: var_is_introduced ;
var bool: aux781_BOOL:: var_is_introduced ;
var bool: aux782_BOOL:: var_is_introduced ;
var bool: aux783_BOOL:: var_is_introduced ;
var bool: aux784_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195}: aux785:: var_is_introduced ;
var bool: aux786_BOOL:: var_is_introduced ;
var bool: aux787_BOOL:: var_is_introduced ;
var bool: aux788_BOOL:: var_is_introduced ;
var bool: aux789_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195}: aux790:: var_is_introduced ;
var bool: aux791_BOOL:: var_is_introduced ;
var bool: aux792_BOOL:: var_is_introduced ;
var bool: aux793_BOOL:: var_is_introduced ;
var bool: aux794_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195}: aux795:: var_is_introduced ;
var bool: aux796_BOOL:: var_is_introduced ;
var bool: aux797_BOOL:: var_is_introduced ;
var bool: aux798_BOOL:: var_is_introduced ;
var bool: aux799_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195}: aux800:: var_is_introduced ;
var bool: aux801_BOOL:: var_is_introduced ;
var bool: aux802_BOOL:: var_is_introduced ;
var bool: aux803_BOOL:: var_is_introduced ;
var bool: aux804_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195}: aux805:: var_is_introduced ;
var bool: aux806_BOOL:: var_is_introduced ;
var bool: aux807_BOOL:: var_is_introduced ;
var bool: aux808_BOOL:: var_is_introduced ;
var bool: aux809_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195}: aux810:: var_is_introduced ;
var bool: aux811_BOOL:: var_is_introduced ;
var bool: aux812_BOOL:: var_is_introduced ;
var bool: aux813_BOOL:: var_is_introduced ;
var bool: aux814_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195}: aux815:: var_is_introduced ;
var bool: aux816_BOOL:: var_is_introduced ;
var bool: aux817_BOOL:: var_is_introduced ;
var bool: aux818_BOOL:: var_is_introduced ;
var bool: aux819_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195}: aux820:: var_is_introduced ;
var bool: aux821_BOOL:: var_is_introduced ;
var bool: aux822_BOOL:: var_is_introduced ;
var bool: aux823_BOOL:: var_is_introduced ;
var bool: aux824_BOOL:: var_is_introduced ;
var {2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,194,195}: aux825:: var_is_introduced ;
var bool: aux826_BOOL:: var_is_introduced ;
var bool: aux827_BOOL:: var_is_introduced ;
var bool: aux828_BOOL:: var_is_introduced ;
var bool: aux829_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195}: aux830:: var_is_introduced ;
var bool: aux831_BOOL:: var_is_introduced ;
var bool: aux832_BOOL:: var_is_introduced ;
var bool: aux833_BOOL:: var_is_introduced ;
var bool: aux834_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195}: aux835:: var_is_introduced ;
var bool: aux836_BOOL:: var_is_introduced ;
var bool: aux837_BOOL:: var_is_introduced ;
var bool: aux838_BOOL:: var_is_introduced ;
var bool: aux839_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195}: aux840:: var_is_introduced ;
var bool: aux841_BOOL:: var_is_introduced ;
var bool: aux842_BOOL:: var_is_introduced ;
var bool: aux843_BOOL:: var_is_introduced ;
var bool: aux844_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195}: aux845:: var_is_introduced ;
var bool: aux846_BOOL:: var_is_introduced ;
var bool: aux847_BOOL:: var_is_introduced ;
var bool: aux848_BOOL:: var_is_introduced ;
var bool: aux849_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195}: aux850:: var_is_introduced ;
var bool: aux851_BOOL:: var_is_introduced ;
var bool: aux852_BOOL:: var_is_introduced ;
var bool: aux853_BOOL:: var_is_introduced ;
var bool: aux854_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195}: aux855:: var_is_introduced ;
var bool: aux856_BOOL:: var_is_introduced ;
var bool: aux857_BOOL:: var_is_introduced ;
var bool: aux858_BOOL:: var_is_introduced ;
var bool: aux859_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195}: aux860:: var_is_introduced ;
var bool: aux861_BOOL:: var_is_introduced ;
var bool: aux862_BOOL:: var_is_introduced ;
var bool: aux863_BOOL:: var_is_introduced ;
var bool: aux864_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195}: aux865:: var_is_introduced ;
var bool: aux866_BOOL:: var_is_introduced ;
var bool: aux867_BOOL:: var_is_introduced ;
var bool: aux868_BOOL:: var_is_introduced ;
var bool: aux869_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195}: aux870:: var_is_introduced ;
var bool: aux871_BOOL:: var_is_introduced ;
var bool: aux872_BOOL:: var_is_introduced ;
var bool: aux873_BOOL:: var_is_introduced ;
var bool: aux874_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195}: aux875:: var_is_introduced ;
var bool: aux876_BOOL:: var_is_introduced ;
var bool: aux877_BOOL:: var_is_introduced ;
var bool: aux878_BOOL:: var_is_introduced ;
var bool: aux879_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195}: aux880:: var_is_introduced ;
var bool: aux881_BOOL:: var_is_introduced ;
var bool: aux882_BOOL:: var_is_introduced ;
var bool: aux883_BOOL:: var_is_introduced ;
var bool: aux884_BOOL:: var_is_introduced ;
var {2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,55,56,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,188,189,190,191,192,193,194,195}: aux885:: var_is_introduced ;
var bool: aux886_BOOL:: var_is_introduced ;
var bool: aux887_BOOL:: var_is_introduced ;
var bool: aux888_BOOL:: var_is_introduced ;
var bool: aux889_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195}: aux890:: var_is_introduced ;
var bool: aux891_BOOL:: var_is_introduced ;
var bool: aux892_BOOL:: var_is_introduced ;
var bool: aux893_BOOL:: var_is_introduced ;
var bool: aux894_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195}: aux895:: var_is_introduced ;
var bool: aux896_BOOL:: var_is_introduced ;
var bool: aux897_BOOL:: var_is_introduced ;
var bool: aux898_BOOL:: var_is_introduced ;
var bool: aux899_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195}: aux900:: var_is_introduced ;
var bool: aux901_BOOL:: var_is_introduced ;
var bool: aux902_BOOL:: var_is_introduced ;
var bool: aux903_BOOL:: var_is_introduced ;
var bool: aux904_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195}: aux905:: var_is_introduced ;
var bool: aux906_BOOL:: var_is_introduced ;
var bool: aux907_BOOL:: var_is_introduced ;
var bool: aux908_BOOL:: var_is_introduced ;
var bool: aux909_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195}: aux910:: var_is_introduced ;
var bool: aux911_BOOL:: var_is_introduced ;
var bool: aux912_BOOL:: var_is_introduced ;
var bool: aux913_BOOL:: var_is_introduced ;
var bool: aux914_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195}: aux915:: var_is_introduced ;
var bool: aux916_BOOL:: var_is_introduced ;
var bool: aux917_BOOL:: var_is_introduced ;
var bool: aux918_BOOL:: var_is_introduced ;
var bool: aux919_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195}: aux920:: var_is_introduced ;
var bool: aux921_BOOL:: var_is_introduced ;
var bool: aux922_BOOL:: var_is_introduced ;
var bool: aux923_BOOL:: var_is_introduced ;
var bool: aux924_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195}: aux925:: var_is_introduced ;
var bool: aux926_BOOL:: var_is_introduced ;
var bool: aux927_BOOL:: var_is_introduced ;
var bool: aux928_BOOL:: var_is_introduced ;
var bool: aux929_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195}: aux930:: var_is_introduced ;
var bool: aux931_BOOL:: var_is_introduced ;
var bool: aux932_BOOL:: var_is_introduced ;
var bool: aux933_BOOL:: var_is_introduced ;
var bool: aux934_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195}: aux935:: var_is_introduced ;
var bool: aux936_BOOL:: var_is_introduced ;
var bool: aux937_BOOL:: var_is_introduced ;
var bool: aux938_BOOL:: var_is_introduced ;
var bool: aux939_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195}: aux940:: var_is_introduced ;
var bool: aux941_BOOL:: var_is_introduced ;
var bool: aux942_BOOL:: var_is_introduced ;
var bool: aux943_BOOL:: var_is_introduced ;
var bool: aux944_BOOL:: var_is_introduced ;
var {2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195}: aux945:: var_is_introduced ;
var bool: aux946_BOOL:: var_is_introduced ;
var bool: aux947_BOOL:: var_is_introduced ;
var bool: aux948_BOOL:: var_is_introduced ;
var bool: aux949_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195}: aux950:: var_is_introduced ;
var bool: aux951_BOOL:: var_is_introduced ;
var bool: aux952_BOOL:: var_is_introduced ;
var bool: aux953_BOOL:: var_is_introduced ;
var bool: aux954_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195}: aux955:: var_is_introduced ;
var bool: aux956_BOOL:: var_is_introduced ;
var bool: aux957_BOOL:: var_is_introduced ;
var bool: aux958_BOOL:: var_is_introduced ;
var bool: aux959_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195}: aux960:: var_is_introduced ;
var bool: aux961_BOOL:: var_is_introduced ;
var bool: aux962_BOOL:: var_is_introduced ;
var bool: aux963_BOOL:: var_is_introduced ;
var bool: aux964_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195}: aux965:: var_is_introduced ;
var bool: aux966_BOOL:: var_is_introduced ;
var bool: aux967_BOOL:: var_is_introduced ;
var bool: aux968_BOOL:: var_is_introduced ;
var bool: aux969_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195}: aux970:: var_is_introduced ;
var bool: aux971_BOOL:: var_is_introduced ;
var bool: aux972_BOOL:: var_is_introduced ;
var bool: aux973_BOOL:: var_is_introduced ;
var bool: aux974_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195}: aux975:: var_is_introduced ;
var bool: aux976_BOOL:: var_is_introduced ;
var bool: aux977_BOOL:: var_is_introduced ;
var bool: aux978_BOOL:: var_is_introduced ;
var bool: aux979_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195}: aux980:: var_is_introduced ;
var bool: aux981_BOOL:: var_is_introduced ;
var bool: aux982_BOOL:: var_is_introduced ;
var bool: aux983_BOOL:: var_is_introduced ;
var bool: aux984_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195}: aux985:: var_is_introduced ;
var bool: aux986_BOOL:: var_is_introduced ;
var bool: aux987_BOOL:: var_is_introduced ;
var bool: aux988_BOOL:: var_is_introduced ;
var bool: aux989_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195}: aux990:: var_is_introduced ;
var bool: aux991_BOOL:: var_is_introduced ;
var bool: aux992_BOOL:: var_is_introduced ;
var bool: aux993_BOOL:: var_is_introduced ;
var bool: aux994_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195}: aux995:: var_is_introduced ;
var bool: aux996_BOOL:: var_is_introduced ;
var bool: aux997_BOOL:: var_is_introduced ;
var bool: aux998_BOOL:: var_is_introduced ;
var bool: aux999_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195}: aux1000:: var_is_introduced ;
var bool: aux1001_BOOL:: var_is_introduced ;
var bool: aux1002_BOOL:: var_is_introduced ;
var bool: aux1003_BOOL:: var_is_introduced ;
var bool: aux1004_BOOL:: var_is_introduced ;
var {2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,176,177,178,179,180,181,182,183,184,185,186,187,188,190,191,192,193,194,195}: aux1005:: var_is_introduced ;
var bool: aux1006_BOOL:: var_is_introduced ;
var bool: aux1007_BOOL:: var_is_introduced ;
var bool: aux1008_BOOL:: var_is_introduced ;
var bool: aux1009_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195}: aux1010:: var_is_introduced ;
var bool: aux1011_BOOL:: var_is_introduced ;
var bool: aux1012_BOOL:: var_is_introduced ;
var bool: aux1013_BOOL:: var_is_introduced ;
var bool: aux1014_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195}: aux1015:: var_is_introduced ;
var bool: aux1016_BOOL:: var_is_introduced ;
var bool: aux1017_BOOL:: var_is_introduced ;
var bool: aux1018_BOOL:: var_is_introduced ;
var bool: aux1019_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195}: aux1020:: var_is_introduced ;
var bool: aux1021_BOOL:: var_is_introduced ;
var bool: aux1022_BOOL:: var_is_introduced ;
var bool: aux1023_BOOL:: var_is_introduced ;
var bool: aux1024_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195}: aux1025:: var_is_introduced ;
var bool: aux1026_BOOL:: var_is_introduced ;
var bool: aux1027_BOOL:: var_is_introduced ;
var bool: aux1028_BOOL:: var_is_introduced ;
var bool: aux1029_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195}: aux1030:: var_is_introduced ;
var bool: aux1031_BOOL:: var_is_introduced ;
var bool: aux1032_BOOL:: var_is_introduced ;
var bool: aux1033_BOOL:: var_is_introduced ;
var bool: aux1034_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195}: aux1035:: var_is_introduced ;
var bool: aux1036_BOOL:: var_is_introduced ;
var bool: aux1037_BOOL:: var_is_introduced ;
var bool: aux1038_BOOL:: var_is_introduced ;
var bool: aux1039_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195}: aux1040:: var_is_introduced ;
var bool: aux1041_BOOL:: var_is_introduced ;
var bool: aux1042_BOOL:: var_is_introduced ;
var bool: aux1043_BOOL:: var_is_introduced ;
var bool: aux1044_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195}: aux1045:: var_is_introduced ;
var bool: aux1046_BOOL:: var_is_introduced ;
var bool: aux1047_BOOL:: var_is_introduced ;
var bool: aux1048_BOOL:: var_is_introduced ;
var bool: aux1049_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195}: aux1050:: var_is_introduced ;
var bool: aux1051_BOOL:: var_is_introduced ;
var bool: aux1052_BOOL:: var_is_introduced ;
var bool: aux1053_BOOL:: var_is_introduced ;
var bool: aux1054_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195}: aux1055:: var_is_introduced ;
var bool: aux1056_BOOL:: var_is_introduced ;
var bool: aux1057_BOOL:: var_is_introduced ;
var bool: aux1058_BOOL:: var_is_introduced ;
var bool: aux1059_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195}: aux1060:: var_is_introduced ;
var bool: aux1061_BOOL:: var_is_introduced ;
var bool: aux1062_BOOL:: var_is_introduced ;
var bool: aux1063_BOOL:: var_is_introduced ;
var bool: aux1064_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195}: aux1065:: var_is_introduced ;
var bool: aux1066_BOOL:: var_is_introduced ;
var bool: aux1067_BOOL:: var_is_introduced ;
var bool: aux1068_BOOL:: var_is_introduced ;
var bool: aux1069_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195}: aux1070:: var_is_introduced ;
var bool: aux1071_BOOL:: var_is_introduced ;
var bool: aux1072_BOOL:: var_is_introduced ;
var bool: aux1073_BOOL:: var_is_introduced ;
var bool: aux1074_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195}: aux1075:: var_is_introduced ;
var bool: aux1076_BOOL:: var_is_introduced ;
var bool: aux1077_BOOL:: var_is_introduced ;
var bool: aux1078_BOOL:: var_is_introduced ;
var bool: aux1079_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195}: aux1080:: var_is_introduced ;
var bool: aux1081_BOOL:: var_is_introduced ;
var bool: aux1082_BOOL:: var_is_introduced ;
var bool: aux1083_BOOL:: var_is_introduced ;
var bool: aux1084_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195}: aux1085:: var_is_introduced ;
var bool: aux1086_BOOL:: var_is_introduced ;
var bool: aux1087_BOOL:: var_is_introduced ;
var bool: aux1088_BOOL:: var_is_introduced ;
var bool: aux1089_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195}: aux1090:: var_is_introduced ;
var bool: aux1091_BOOL:: var_is_introduced ;
var bool: aux1092_BOOL:: var_is_introduced ;
var bool: aux1093_BOOL:: var_is_introduced ;
var bool: aux1094_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195}: aux1095:: var_is_introduced ;
var bool: aux1096_BOOL:: var_is_introduced ;
var bool: aux1097_BOOL:: var_is_introduced ;
var bool: aux1098_BOOL:: var_is_introduced ;
var bool: aux1099_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195}: aux1100:: var_is_introduced ;
var bool: aux1101_BOOL:: var_is_introduced ;
var bool: aux1102_BOOL:: var_is_introduced ;
var bool: aux1103_BOOL:: var_is_introduced ;
var bool: aux1104_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195}: aux1105:: var_is_introduced ;
var bool: aux1106_BOOL:: var_is_introduced ;
var bool: aux1107_BOOL:: var_is_introduced ;
var bool: aux1108_BOOL:: var_is_introduced ;
var bool: aux1109_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195}: aux1110:: var_is_introduced ;
var bool: aux1111_BOOL:: var_is_introduced ;
var bool: aux1112_BOOL:: var_is_introduced ;
var bool: aux1113_BOOL:: var_is_introduced ;
var bool: aux1114_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195}: aux1115:: var_is_introduced ;
var bool: aux1116_BOOL:: var_is_introduced ;
var bool: aux1117_BOOL:: var_is_introduced ;
var bool: aux1118_BOOL:: var_is_introduced ;
var bool: aux1119_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195}: aux1120:: var_is_introduced ;
var bool: aux1121_BOOL:: var_is_introduced ;
var bool: aux1122_BOOL:: var_is_introduced ;
var bool: aux1123_BOOL:: var_is_introduced ;
var bool: aux1124_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,181,182,183,184,185,186,187,188,189,190,192,193,194,195}: aux1125:: var_is_introduced ;
var bool: aux1126_BOOL:: var_is_introduced ;
var bool: aux1127_BOOL:: var_is_introduced ;
var bool: aux1128_BOOL:: var_is_introduced ;
var bool: aux1129_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195}: aux1130:: var_is_introduced ;
var bool: aux1131_BOOL:: var_is_introduced ;
var bool: aux1132_BOOL:: var_is_introduced ;
var bool: aux1133_BOOL:: var_is_introduced ;
var bool: aux1134_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195}: aux1135:: var_is_introduced ;
var bool: aux1136_BOOL:: var_is_introduced ;
var bool: aux1137_BOOL:: var_is_introduced ;
var bool: aux1138_BOOL:: var_is_introduced ;
var bool: aux1139_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195}: aux1140:: var_is_introduced ;
var bool: aux1141_BOOL:: var_is_introduced ;
var bool: aux1142_BOOL:: var_is_introduced ;
var bool: aux1143_BOOL:: var_is_introduced ;
var bool: aux1144_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195}: aux1145:: var_is_introduced ;
var bool: aux1146_BOOL:: var_is_introduced ;
var bool: aux1147_BOOL:: var_is_introduced ;
var bool: aux1148_BOOL:: var_is_introduced ;
var bool: aux1149_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195}: aux1150:: var_is_introduced ;
var bool: aux1151_BOOL:: var_is_introduced ;
var bool: aux1152_BOOL:: var_is_introduced ;
var bool: aux1153_BOOL:: var_is_introduced ;
var bool: aux1154_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195}: aux1155:: var_is_introduced ;
var bool: aux1156_BOOL:: var_is_introduced ;
var bool: aux1157_BOOL:: var_is_introduced ;
var bool: aux1158_BOOL:: var_is_introduced ;
var bool: aux1159_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195}: aux1160:: var_is_introduced ;
var bool: aux1161_BOOL:: var_is_introduced ;
var bool: aux1162_BOOL:: var_is_introduced ;
var bool: aux1163_BOOL:: var_is_introduced ;
var bool: aux1164_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195}: aux1165:: var_is_introduced ;
var bool: aux1166_BOOL:: var_is_introduced ;
var bool: aux1167_BOOL:: var_is_introduced ;
var bool: aux1168_BOOL:: var_is_introduced ;
var bool: aux1169_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195}: aux1170:: var_is_introduced ;
var bool: aux1171_BOOL:: var_is_introduced ;
var bool: aux1172_BOOL:: var_is_introduced ;
var bool: aux1173_BOOL:: var_is_introduced ;
var bool: aux1174_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195}: aux1175:: var_is_introduced ;
var bool: aux1176_BOOL:: var_is_introduced ;
var bool: aux1177_BOOL:: var_is_introduced ;
var bool: aux1178_BOOL:: var_is_introduced ;
var bool: aux1179_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195}: aux1180:: var_is_introduced ;
var bool: aux1181_BOOL:: var_is_introduced ;
var bool: aux1182_BOOL:: var_is_introduced ;
var bool: aux1183_BOOL:: var_is_introduced ;
var bool: aux1184_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,141,142,143,144,145,146,147,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,186,187,188,189,190,191,193,194,195}: aux1185:: var_is_introduced ;
var bool: aux1186_BOOL:: var_is_introduced ;
var bool: aux1187_BOOL:: var_is_introduced ;
var bool: aux1188_BOOL:: var_is_introduced ;
var bool: aux1189_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195}: aux1190:: var_is_introduced ;
var bool: aux1191_BOOL:: var_is_introduced ;
var bool: aux1192_BOOL:: var_is_introduced ;
var bool: aux1193_BOOL:: var_is_introduced ;
var bool: aux1194_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195}: aux1195:: var_is_introduced ;
var bool: aux1196_BOOL:: var_is_introduced ;
var bool: aux1197_BOOL:: var_is_introduced ;
var bool: aux1198_BOOL:: var_is_introduced ;
var bool: aux1199_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195}: aux1200:: var_is_introduced ;
var bool: aux1201_BOOL:: var_is_introduced ;
var bool: aux1202_BOOL:: var_is_introduced ;
var bool: aux1203_BOOL:: var_is_introduced ;
var bool: aux1204_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195}: aux1205:: var_is_introduced ;
var bool: aux1206_BOOL:: var_is_introduced ;
var bool: aux1207_BOOL:: var_is_introduced ;
var bool: aux1208_BOOL:: var_is_introduced ;
var bool: aux1209_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195}: aux1210:: var_is_introduced ;
var bool: aux1211_BOOL:: var_is_introduced ;
var bool: aux1212_BOOL:: var_is_introduced ;
var bool: aux1213_BOOL:: var_is_introduced ;
var bool: aux1214_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195}: aux1215:: var_is_introduced ;
var bool: aux1216_BOOL:: var_is_introduced ;
var bool: aux1217_BOOL:: var_is_introduced ;
var bool: aux1218_BOOL:: var_is_introduced ;
var bool: aux1219_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195}: aux1220:: var_is_introduced ;
var bool: aux1221_BOOL:: var_is_introduced ;
var bool: aux1222_BOOL:: var_is_introduced ;
var bool: aux1223_BOOL:: var_is_introduced ;
var bool: aux1224_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195}: aux1225:: var_is_introduced ;
var bool: aux1226_BOOL:: var_is_introduced ;
var bool: aux1227_BOOL:: var_is_introduced ;
var bool: aux1228_BOOL:: var_is_introduced ;
var bool: aux1229_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195}: aux1230:: var_is_introduced ;
var bool: aux1231_BOOL:: var_is_introduced ;
var bool: aux1232_BOOL:: var_is_introduced ;
var bool: aux1233_BOOL:: var_is_introduced ;
var bool: aux1234_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195}: aux1235:: var_is_introduced ;
var bool: aux1236_BOOL:: var_is_introduced ;
var bool: aux1237_BOOL:: var_is_introduced ;
var bool: aux1238_BOOL:: var_is_introduced ;
var bool: aux1239_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195}: aux1240:: var_is_introduced ;
var bool: aux1241_BOOL:: var_is_introduced ;
var bool: aux1242_BOOL:: var_is_introduced ;
var bool: aux1243_BOOL:: var_is_introduced ;
var bool: aux1244_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,138,139,140,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,192,194,195}: aux1245:: var_is_introduced ;
var bool: aux1246_BOOL:: var_is_introduced ;
var bool: aux1247_BOOL:: var_is_introduced ;
var bool: aux1248_BOOL:: var_is_introduced ;
var bool: aux1249_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,195}: aux1250:: var_is_introduced ;
var bool: aux1251_BOOL:: var_is_introduced ;
var bool: aux1252_BOOL:: var_is_introduced ;
var bool: aux1253_BOOL:: var_is_introduced ;
var bool: aux1254_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,195}: aux1255:: var_is_introduced ;
var bool: aux1256_BOOL:: var_is_introduced ;
var bool: aux1257_BOOL:: var_is_introduced ;
var bool: aux1258_BOOL:: var_is_introduced ;
var bool: aux1259_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,195}: aux1260:: var_is_introduced ;
var bool: aux1261_BOOL:: var_is_introduced ;
var bool: aux1262_BOOL:: var_is_introduced ;
var bool: aux1263_BOOL:: var_is_introduced ;
var bool: aux1264_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,195}: aux1265:: var_is_introduced ;
var bool: aux1266_BOOL:: var_is_introduced ;
var bool: aux1267_BOOL:: var_is_introduced ;
var bool: aux1268_BOOL:: var_is_introduced ;
var bool: aux1269_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,195}: aux1270:: var_is_introduced ;
var bool: aux1271_BOOL:: var_is_introduced ;
var bool: aux1272_BOOL:: var_is_introduced ;
var bool: aux1273_BOOL:: var_is_introduced ;
var bool: aux1274_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,195}: aux1275:: var_is_introduced ;
var bool: aux1276_BOOL:: var_is_introduced ;
var bool: aux1277_BOOL:: var_is_introduced ;
var bool: aux1278_BOOL:: var_is_introduced ;
var bool: aux1279_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,195}: aux1280:: var_is_introduced ;
var bool: aux1281_BOOL:: var_is_introduced ;
var bool: aux1282_BOOL:: var_is_introduced ;
var bool: aux1283_BOOL:: var_is_introduced ;
var bool: aux1284_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,195}: aux1285:: var_is_introduced ;
var bool: aux1286_BOOL:: var_is_introduced ;
var bool: aux1287_BOOL:: var_is_introduced ;
var bool: aux1288_BOOL:: var_is_introduced ;
var bool: aux1289_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,195}: aux1290:: var_is_introduced ;
var bool: aux1291_BOOL:: var_is_introduced ;
var bool: aux1292_BOOL:: var_is_introduced ;
var bool: aux1293_BOOL:: var_is_introduced ;
var bool: aux1294_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,195}: aux1295:: var_is_introduced ;
var bool: aux1296_BOOL:: var_is_introduced ;
var bool: aux1297_BOOL:: var_is_introduced ;
var bool: aux1298_BOOL:: var_is_introduced ;
var bool: aux1299_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,195}: aux1300:: var_is_introduced ;
var bool: aux1301_BOOL:: var_is_introduced ;
var bool: aux1302_BOOL:: var_is_introduced ;
var bool: aux1303_BOOL:: var_is_introduced ;
var bool: aux1304_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,169,170,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,195}: aux1305:: var_is_introduced ;
var bool: aux1306_BOOL:: var_is_introduced ;
var bool: aux1307_BOOL:: var_is_introduced ;
var bool: aux1308_BOOL:: var_is_introduced ;
var bool: aux1309_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,168,183,184,185,186,187,188,189,190,191,192,193,194}: aux1310:: var_is_introduced ;
var bool: aux1311_BOOL:: var_is_introduced ;
var bool: aux1312_BOOL:: var_is_introduced ;
var bool: aux1313_BOOL:: var_is_introduced ;
var bool: aux1314_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,168,183,184,185,186,187,188,189,190,191,192,193,194}: aux1315:: var_is_introduced ;
var bool: aux1316_BOOL:: var_is_introduced ;
var bool: aux1317_BOOL:: var_is_introduced ;
var bool: aux1318_BOOL:: var_is_introduced ;
var bool: aux1319_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,168,183,184,185,186,187,188,189,190,191,192,193,194}: aux1320:: var_is_introduced ;
var bool: aux1321_BOOL:: var_is_introduced ;
var bool: aux1322_BOOL:: var_is_introduced ;
var bool: aux1323_BOOL:: var_is_introduced ;
var bool: aux1324_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,168,183,184,185,186,187,188,189,190,191,192,193,194}: aux1325:: var_is_introduced ;
var bool: aux1326_BOOL:: var_is_introduced ;
var bool: aux1327_BOOL:: var_is_introduced ;
var bool: aux1328_BOOL:: var_is_introduced ;
var bool: aux1329_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,168,183,184,185,186,187,188,189,190,191,192,193,194}: aux1330:: var_is_introduced ;
var bool: aux1331_BOOL:: var_is_introduced ;
var bool: aux1332_BOOL:: var_is_introduced ;
var bool: aux1333_BOOL:: var_is_introduced ;
var bool: aux1334_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,168,183,184,185,186,187,188,189,190,191,192,193,194}: aux1335:: var_is_introduced ;
var bool: aux1336_BOOL:: var_is_introduced ;
var bool: aux1337_BOOL:: var_is_introduced ;
var bool: aux1338_BOOL:: var_is_introduced ;
var bool: aux1339_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,168,183,184,185,186,187,188,189,190,191,192,193,194}: aux1340:: var_is_introduced ;
var bool: aux1341_BOOL:: var_is_introduced ;
var bool: aux1342_BOOL:: var_is_introduced ;
var bool: aux1343_BOOL:: var_is_introduced ;
var bool: aux1344_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,168,183,184,185,186,187,188,189,190,191,192,193,194}: aux1345:: var_is_introduced ;
var bool: aux1346_BOOL:: var_is_introduced ;
var bool: aux1347_BOOL:: var_is_introduced ;
var bool: aux1348_BOOL:: var_is_introduced ;
var bool: aux1349_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,168,183,184,185,186,187,188,189,190,191,192,193,194}: aux1350:: var_is_introduced ;
var bool: aux1351_BOOL:: var_is_introduced ;
var bool: aux1352_BOOL:: var_is_introduced ;
var bool: aux1353_BOOL:: var_is_introduced ;
var bool: aux1354_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,168,183,184,185,186,187,188,189,190,191,192,193,194}: aux1355:: var_is_introduced ;
var bool: aux1356_BOOL:: var_is_introduced ;
var bool: aux1357_BOOL:: var_is_introduced ;
var bool: aux1358_BOOL:: var_is_introduced ;
var bool: aux1359_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,168,183,184,185,186,187,188,189,190,191,192,193,194}: aux1360:: var_is_introduced ;
var bool: aux1361_BOOL:: var_is_introduced ;
var bool: aux1362_BOOL:: var_is_introduced ;
var bool: aux1363_BOOL:: var_is_introduced ;
var bool: aux1364_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,158,159,160,161,162,163,164,165,166,168,183,184,185,186,187,188,189,190,191,192,193,194}: aux1365:: var_is_introduced ;
var bool: aux1366_BOOL:: var_is_introduced ;
var bool: aux1367_BOOL:: var_is_introduced ;
var bool: aux1368_BOOL:: var_is_introduced ;
var bool: aux1369_BOOL:: var_is_introduced ;
var {1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167}: aux1370:: var_is_introduced ;
var bool: aux1371_BOOL:: var_is_introduced ;
var bool: aux1372_BOOL:: var_is_introduced ;
var bool: aux1373_BOOL:: var_is_introduced ;
var bool: aux1374_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux1375:: var_is_introduced ;
var bool: aux1376_BOOL:: var_is_introduced ;
var bool: aux1377_BOOL:: var_is_introduced ;
var bool: aux1378_BOOL:: var_is_introduced ;
var bool: aux1379_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux1380:: var_is_introduced ;
var bool: aux1381_BOOL:: var_is_introduced ;
var bool: aux1382_BOOL:: var_is_introduced ;
var bool: aux1383_BOOL:: var_is_introduced ;
var bool: aux1384_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux1385:: var_is_introduced ;
var bool: aux1386_BOOL:: var_is_introduced ;
var bool: aux1387_BOOL:: var_is_introduced ;
var bool: aux1388_BOOL:: var_is_introduced ;
var bool: aux1389_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux1390:: var_is_introduced ;
var bool: aux1391_BOOL:: var_is_introduced ;
var bool: aux1392_BOOL:: var_is_introduced ;
var bool: aux1393_BOOL:: var_is_introduced ;
var bool: aux1394_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux1395:: var_is_introduced ;
var bool: aux1396_BOOL:: var_is_introduced ;
var bool: aux1397_BOOL:: var_is_introduced ;
var bool: aux1398_BOOL:: var_is_introduced ;
var bool: aux1399_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux1400:: var_is_introduced ;
var bool: aux1401_BOOL:: var_is_introduced ;
var bool: aux1402_BOOL:: var_is_introduced ;
var bool: aux1403_BOOL:: var_is_introduced ;
var bool: aux1404_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux1405:: var_is_introduced ;
var bool: aux1406_BOOL:: var_is_introduced ;
var bool: aux1407_BOOL:: var_is_introduced ;
var bool: aux1408_BOOL:: var_is_introduced ;
var bool: aux1409_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux1410:: var_is_introduced ;
var bool: aux1411_BOOL:: var_is_introduced ;
var bool: aux1412_BOOL:: var_is_introduced ;
var bool: aux1413_BOOL:: var_is_introduced ;
var bool: aux1414_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux1415:: var_is_introduced ;
var bool: aux1416_BOOL:: var_is_introduced ;
var bool: aux1417_BOOL:: var_is_introduced ;
var bool: aux1418_BOOL:: var_is_introduced ;
var bool: aux1419_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux1420:: var_is_introduced ;
var bool: aux1421_BOOL:: var_is_introduced ;
var bool: aux1422_BOOL:: var_is_introduced ;
var bool: aux1423_BOOL:: var_is_introduced ;
var bool: aux1424_BOOL:: var_is_introduced ;
var {2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180}: aux1425:: var_is_introduced ;
var bool: aux1426_BOOL:: var_is_introduced ;
var bool: aux1427_BOOL:: var_is_introduced ;
var bool: aux1428_BOOL:: var_is_introduced ;
var bool: aux1429_BOOL:: var_is_introduced ;
var bool: aux1430_BOOL:: var_is_introduced ;
var bool: aux1431_BOOL:: var_is_introduced ;
var bool: aux1432_BOOL:: var_is_introduced ;
var bool: aux1433_BOOL:: var_is_introduced ;
var bool: aux1434_BOOL:: var_is_introduced ;
var bool: aux1435_BOOL:: var_is_introduced ;
var bool: aux1436_BOOL:: var_is_introduced ;
var bool: aux1437_BOOL:: var_is_introduced ;
var bool: aux1438_BOOL:: var_is_introduced ;
var bool: aux1439_BOOL:: var_is_introduced ;
var bool: aux1440_BOOL:: var_is_introduced ;
var bool: aux1441_BOOL:: var_is_introduced ;
var bool: aux1442_BOOL:: var_is_introduced ;
var bool: aux1443_BOOL:: var_is_introduced ;
var bool: aux1444_BOOL:: var_is_introduced ;
var bool: aux1445_BOOL:: var_is_introduced ;
var bool: aux1446_BOOL:: var_is_introduced ;
var bool: aux1447_BOOL:: var_is_introduced ;
var bool: aux1448_BOOL:: var_is_introduced ;
var bool: aux1449_BOOL:: var_is_introduced ;
var bool: aux1450_BOOL:: var_is_introduced ;
var bool: aux1451_BOOL:: var_is_introduced ;
var bool: aux1452_BOOL:: var_is_introduced ;
var bool: aux1453_BOOL:: var_is_introduced ;
var bool: aux1454_BOOL:: var_is_introduced ;
var bool: aux1455_BOOL:: var_is_introduced ;
var bool: aux1456_BOOL:: var_is_introduced ;
var bool: aux1457_BOOL:: var_is_introduced ;
var 0..7: aux1458:: var_is_introduced ;
var 0..7: aux1459:: var_is_introduced ;
var 0..7: aux1460:: var_is_introduced ;
var 0..7: aux1461:: var_is_introduced ;
var 0..7: aux1462:: var_is_introduced ;
var 0..7: aux1463:: var_is_introduced ;
var 0..7: aux1464:: var_is_introduced ;
var 0..7: aux1465:: var_is_introduced ;
var 0..7: aux1466:: var_is_introduced ;
var 0..7: aux1467:: var_is_introduced ;
var 0..7: aux1468:: var_is_introduced ;
var 0..7: aux1469:: var_is_introduced ;
var 0..7: aux1470:: var_is_introduced ;
var 0..7: aux1471:: var_is_introduced ;
var 0..7: aux1472:: var_is_introduced ;
var 0..7: aux1473:: var_is_introduced ;
var 0..7: aux1474:: var_is_introduced ;
var 0..7: aux1475:: var_is_introduced ;
var 0..7: aux1476:: var_is_introduced ;
var 0..7: aux1477:: var_is_introduced ;
var 0..7: aux1478:: var_is_introduced ;
var 0..7: aux1479:: var_is_introduced ;
var 0..7: aux1480:: var_is_introduced ;
var 0..7: aux1481:: var_is_introduced ;
var 0..7: aux1482:: var_is_introduced ;
var 0..7: aux1483:: var_is_introduced ;
var 0..7: aux1484:: var_is_introduced ;
var 0..7: aux1485:: var_is_introduced ;
var 0..7: aux1486:: var_is_introduced ;
var 0..7: aux1487:: var_is_introduced ;
var 0..7: aux1488:: var_is_introduced ;
var 0..7: aux1489:: var_is_introduced ;
var 0..7: aux1490:: var_is_introduced ;
var 0..7: aux1491:: var_is_introduced ;
var 0..7: aux1492:: var_is_introduced ;
var 0..7: aux1493:: var_is_introduced ;
var 0..7: aux1494:: var_is_introduced ;
var 0..7: aux1495:: var_is_introduced ;
var 0..7: aux1496:: var_is_introduced ;
var 0..7: aux1497:: var_is_introduced ;
var 0..7: aux1498:: var_is_introduced ;
var 0..7: aux1499:: var_is_introduced ;
var 0..7: aux1500:: var_is_introduced ;
var 0..7: aux1501:: var_is_introduced ;
var 0..7: aux1502:: var_is_introduced ;
var 0..7: aux1503:: var_is_introduced ;
var 0..7: aux1504:: var_is_introduced ;
var 0..7: aux1505:: var_is_introduced ;
var 0..7: aux1506:: var_is_introduced ;
var 0..7: aux1507:: var_is_introduced ;
var 0..7: aux1508:: var_is_introduced ;
var 0..7: aux1509:: var_is_introduced ;
var 0..7: aux1510:: var_is_introduced ;
var 0..7: aux1511:: var_is_introduced ;
var 0..7: aux1512:: var_is_introduced ;
var 0..7: aux1513:: var_is_introduced ;
var 0..7: aux1514:: var_is_introduced ;
var 0..7: aux1515:: var_is_introduced ;
var 0..7: aux1516:: var_is_introduced ;
var 0..7: aux1517:: var_is_introduced ;
var 0..7: aux1518:: var_is_introduced ;
var 0..7: aux1519:: var_is_introduced ;
var 0..7: aux1520:: var_is_introduced ;
var 0..7: aux1521:: var_is_introduced ;
var 0..7: aux1522:: var_is_introduced ;
var 0..7: aux1523:: var_is_introduced ;
var 0..7: aux1524:: var_is_introduced ;
var 0..7: aux1525:: var_is_introduced ;
var 0..7: aux1526:: var_is_introduced ;
var 0..7: aux1527:: var_is_introduced ;
var 0..7: aux1528:: var_is_introduced ;
var 0..7: aux1529:: var_is_introduced ;
var 0..7: aux1530:: var_is_introduced ;
var 0..7: aux1531:: var_is_introduced ;
var 0..7: aux1532:: var_is_introduced ;
var 0..7: aux1533:: var_is_introduced ;
var 0..7: aux1534:: var_is_introduced ;
var 0..7: aux1535:: var_is_introduced ;
var 0..7: aux1536:: var_is_introduced ;
var 0..7: aux1537:: var_is_introduced ;
var 0..7: aux1538:: var_is_introduced ;
var 0..7: aux1539:: var_is_introduced ;
var 0..7: aux1540:: var_is_introduced ;
var 0..7: aux1541:: var_is_introduced ;
var 0..7: aux1542:: var_is_introduced ;
var 0..7: aux1543:: var_is_introduced ;
var 0..7: aux1544:: var_is_introduced ;
var 0..7: aux1545:: var_is_introduced ;
var 0..7: aux1546:: var_is_introduced ;
var 0..7: aux1547:: var_is_introduced ;
var 0..7: aux1548:: var_is_introduced ;
var 0..7: aux1549:: var_is_introduced ;
var 0..7: aux1550:: var_is_introduced ;
var 0..7: aux1551:: var_is_introduced ;
var 0..7: aux1552:: var_is_introduced ;
var 0..7: aux1553:: var_is_introduced ;
var 0..7: aux1554:: var_is_introduced ;
var 0..7: aux1555:: var_is_introduced ;
var 0..7: aux1556:: var_is_introduced ;
var 0..7: aux1557:: var_is_introduced ;
var 0..7: aux1558:: var_is_introduced ;
var 0..7: aux1559:: var_is_introduced ;
var 0..7: aux1560:: var_is_introduced ;
var 0..7: aux1561:: var_is_introduced ;
var 0..7: aux1562:: var_is_introduced ;
var 0..7: aux1563:: var_is_introduced ;
var 0..7: aux1564:: var_is_introduced ;
var 0..7: aux1565:: var_is_introduced ;
var 0..7: aux1566:: var_is_introduced ;
var 0..7: aux1567:: var_is_introduced ;
var 0..7: aux1568:: var_is_introduced ;
var 0..7: aux1569:: var_is_introduced ;
var 0..7: aux1570:: var_is_introduced ;
var 0..7: aux1571:: var_is_introduced ;
var 0..7: aux1572:: var_is_introduced ;
var 0..7: aux1573:: var_is_introduced ;
var 0..7: aux1574:: var_is_introduced ;
var 0..7: aux1575:: var_is_introduced ;
var 0..7: aux1576:: var_is_introduced ;
var 0..7: aux1577:: var_is_introduced ;
var 0..7: aux1578:: var_is_introduced ;
var 0..7: aux1579:: var_is_introduced ;
var 0..7: aux1580:: var_is_introduced ;
var 0..7: aux1581:: var_is_introduced ;
var 0..7: aux1582:: var_is_introduced ;
var 0..7: aux1583:: var_is_introduced ;
var 0..7: aux1584:: var_is_introduced ;
var 0..7: aux1585:: var_is_introduced ;
var 0..7: aux1586:: var_is_introduced ;
var 0..7: aux1587:: var_is_introduced ;
var 0..7: aux1588:: var_is_introduced ;
var 0..7: aux1589:: var_is_introduced ;
var 0..7: aux1590:: var_is_introduced ;
var 0..7: aux1591:: var_is_introduced ;
var 0..7: aux1592:: var_is_introduced ;
var 0..7: aux1593:: var_is_introduced ;
var 0..7: aux1594:: var_is_introduced ;
var 0..7: aux1595:: var_is_introduced ;
var 0..7: aux1596:: var_is_introduced ;
var 0..7: aux1597:: var_is_introduced ;
var 0..7: aux1598:: var_is_introduced ;
var 0..7: aux1599:: var_is_introduced ;
var 0..7: aux1600:: var_is_introduced ;
var 0..7: aux1601:: var_is_introduced ;
var 0..7: aux1602:: var_is_introduced ;
var 0..7: aux1603:: var_is_introduced ;
var 0..7: aux1604:: var_is_introduced ;
var 0..7: aux1605:: var_is_introduced ;
var 0..7: aux1606:: var_is_introduced ;
var 0..7: aux1607:: var_is_introduced ;
var 0..7: aux1608:: var_is_introduced ;
var 0..7: aux1609:: var_is_introduced ;
var 0..7: aux1610:: var_is_introduced ;
var 0..7: aux1611:: var_is_introduced ;
var 0..7: aux1612:: var_is_introduced ;
var 0..7: aux1613:: var_is_introduced ;
var 0..7: aux1614:: var_is_introduced ;
var 0..7: aux1615:: var_is_introduced ;
var 0..7: aux1616:: var_is_introduced ;
var 0..7: aux1617:: var_is_introduced ;
var 0..7: aux1618:: var_is_introduced ;
var 0..7: aux1619:: var_is_introduced ;
var 0..7: aux1620:: var_is_introduced ;
var 0..7: aux1621:: var_is_introduced ;
var 0..7: aux1622:: var_is_introduced ;
var 0..7: aux1623:: var_is_introduced ;
var 0..7: aux1624:: var_is_introduced ;
var 0..7: aux1625:: var_is_introduced ;
constraint array_var_int_element(aux590, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1458);
constraint array_var_int_element(aux595, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1459);
constraint array_var_int_element(aux600, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1460);
constraint array_var_int_element(aux605, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1461);
constraint array_var_int_element(aux610, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1462);
constraint array_var_int_element(aux615, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1463);
constraint array_var_int_element(aux620, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1464);
constraint array_var_int_element(aux625, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1465);
constraint array_var_int_element(aux630, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1466);
constraint array_var_int_element(aux635, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1467);
constraint array_var_int_element(aux640, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1468);
constraint array_var_int_element(aux645, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1469);
constraint array_var_int_element(aux650, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1470);
constraint array_var_int_element(aux655, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1471);
constraint array_var_int_element(aux660, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1472);
constraint array_var_int_element(aux665, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1473);
constraint array_var_int_element(aux670, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1474);
constraint array_var_int_element(aux675, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1475);
constraint array_var_int_element(aux680, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1476);
constraint array_var_int_element(aux685, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1477);
constraint array_var_int_element(aux690, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1478);
constraint array_var_int_element(aux695, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1479);
constraint array_var_int_element(aux700, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1480);
constraint array_var_int_element(aux705, [2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0], aux1481);
constraint array_var_int_element(aux710, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1482);
constraint array_var_int_element(aux715, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1483);
constraint array_var_int_element(aux720, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1484);
constraint array_var_int_element(aux725, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1485);
constraint array_var_int_element(aux730, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1486);
constraint array_var_int_element(aux735, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1487);
constraint array_var_int_element(aux740, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1488);
constraint array_var_int_element(aux745, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1489);
constraint array_var_int_element(aux750, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1490);
constraint array_var_int_element(aux755, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1491);
constraint array_var_int_element(aux760, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1492);
constraint array_var_int_element(aux765, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1493);
constraint array_var_int_element(aux770, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1494);
constraint array_var_int_element(aux775, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1495);
constraint array_var_int_element(aux780, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1496);
constraint array_var_int_element(aux785, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1497);
constraint array_var_int_element(aux790, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1498);
constraint array_var_int_element(aux795, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1499);
constraint array_var_int_element(aux800, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1500);
constraint array_var_int_element(aux805, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1501);
constraint array_var_int_element(aux810, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1502);
constraint array_var_int_element(aux815, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1503);
constraint array_var_int_element(aux820, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1504);
constraint array_var_int_element(aux825, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1505);
constraint array_var_int_element(aux830, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1506);
constraint array_var_int_element(aux835, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1507);
constraint array_var_int_element(aux840, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1508);
constraint array_var_int_element(aux845, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1509);
constraint array_var_int_element(aux850, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1510);
constraint array_var_int_element(aux855, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1511);
constraint array_var_int_element(aux860, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1512);
constraint array_var_int_element(aux865, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1513);
constraint array_var_int_element(aux870, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1514);
constraint array_var_int_element(aux875, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1515);
constraint array_var_int_element(aux880, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1516);
constraint array_var_int_element(aux885, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1517);
constraint array_var_int_element(aux890, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1518);
constraint array_var_int_element(aux895, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1519);
constraint array_var_int_element(aux900, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1520);
constraint array_var_int_element(aux905, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1521);
constraint array_var_int_element(aux910, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1522);
constraint array_var_int_element(aux915, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1523);
constraint array_var_int_element(aux920, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1524);
constraint array_var_int_element(aux925, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1525);
constraint array_var_int_element(aux930, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1526);
constraint array_var_int_element(aux935, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1527);
constraint array_var_int_element(aux940, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1528);
constraint array_var_int_element(aux945, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1529);
constraint array_var_int_element(aux950, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1530);
constraint array_var_int_element(aux955, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1531);
constraint array_var_int_element(aux960, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1532);
constraint array_var_int_element(aux965, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1533);
constraint array_var_int_element(aux970, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1534);
constraint array_var_int_element(aux975, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1535);
constraint array_var_int_element(aux980, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1536);
constraint array_var_int_element(aux985, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1537);
constraint array_var_int_element(aux990, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1538);
constraint array_var_int_element(aux995, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1539);
constraint array_var_int_element(aux1000, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1540);
constraint array_var_int_element(aux1005, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1541);
constraint array_var_int_element(aux1010, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1542);
constraint array_var_int_element(aux1015, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1543);
constraint array_var_int_element(aux1020, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1544);
constraint array_var_int_element(aux1025, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1545);
constraint array_var_int_element(aux1030, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1546);
constraint array_var_int_element(aux1035, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1547);
constraint array_var_int_element(aux1040, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1548);
constraint array_var_int_element(aux1045, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1549);
constraint array_var_int_element(aux1050, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1550);
constraint array_var_int_element(aux1055, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1551);
constraint array_var_int_element(aux1060, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1552);
constraint array_var_int_element(aux1065, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1553);
constraint array_var_int_element(aux1070, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1554);
constraint array_var_int_element(aux1075, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1555);
constraint array_var_int_element(aux1080, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1556);
constraint array_var_int_element(aux1085, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1557);
constraint array_var_int_element(aux1090, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1558);
constraint array_var_int_element(aux1095, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1559);
constraint array_var_int_element(aux1100, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1560);
constraint array_var_int_element(aux1105, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1561);
constraint array_var_int_element(aux1110, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1562);
constraint array_var_int_element(aux1115, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1563);
constraint array_var_int_element(aux1120, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1564);
constraint array_var_int_element(aux1125, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1565);
constraint array_var_int_element(aux1130, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1566);
constraint array_var_int_element(aux1135, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1567);
constraint array_var_int_element(aux1140, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1568);
constraint array_var_int_element(aux1145, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1569);
constraint array_var_int_element(aux1150, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1570);
constraint array_var_int_element(aux1155, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1571);
constraint array_var_int_element(aux1160, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1572);
constraint array_var_int_element(aux1165, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1573);
constraint array_var_int_element(aux1170, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1574);
constraint array_var_int_element(aux1175, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1575);
constraint array_var_int_element(aux1180, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1576);
constraint array_var_int_element(aux1185, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1577);
constraint array_var_int_element(aux1190, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1578);
constraint array_var_int_element(aux1195, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1579);
constraint array_var_int_element(aux1200, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1580);
constraint array_var_int_element(aux1205, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1581);
constraint array_var_int_element(aux1210, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1582);
constraint array_var_int_element(aux1215, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1583);
constraint array_var_int_element(aux1220, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1584);
constraint array_var_int_element(aux1225, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1585);
constraint array_var_int_element(aux1230, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1586);
constraint array_var_int_element(aux1235, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1587);
constraint array_var_int_element(aux1240, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1588);
constraint array_var_int_element(aux1245, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1589);
constraint array_var_int_element(aux1250, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1590);
constraint array_var_int_element(aux1255, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1591);
constraint array_var_int_element(aux1260, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1592);
constraint array_var_int_element(aux1265, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1593);
constraint array_var_int_element(aux1270, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1594);
constraint array_var_int_element(aux1275, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1595);
constraint array_var_int_element(aux1280, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1596);
constraint array_var_int_element(aux1285, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1597);
constraint array_var_int_element(aux1290, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1598);
constraint array_var_int_element(aux1295, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1599);
constraint array_var_int_element(aux1300, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1600);
constraint array_var_int_element(aux1305, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1601);
constraint array_var_int_element(aux1310, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux1602);
constraint array_var_int_element(aux1315, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux1603);
constraint array_var_int_element(aux1320, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux1604);
constraint array_var_int_element(aux1325, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux1605);
constraint array_var_int_element(aux1330, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux1606);
constraint array_var_int_element(aux1335, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux1607);
constraint array_var_int_element(aux1340, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux1608);
constraint array_var_int_element(aux1345, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux1609);
constraint array_var_int_element(aux1350, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux1610);
constraint array_var_int_element(aux1355, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux1611);
constraint array_var_int_element(aux1360, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux1612);
constraint array_var_int_element(aux1365, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux1613);
constraint array_var_int_element(aux1370, [1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0], aux1614);
constraint array_var_int_element(aux1375, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1615);
constraint array_var_int_element(aux1380, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1616);
constraint array_var_int_element(aux1385, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1617);
constraint array_var_int_element(aux1390, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1618);
constraint array_var_int_element(aux1395, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1619);
constraint array_var_int_element(aux1400, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1620);
constraint array_var_int_element(aux1405, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1621);
constraint array_var_int_element(aux1410, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1622);
constraint array_var_int_element(aux1415, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1623);
constraint array_var_int_element(aux1420, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1624);
constraint array_var_int_element(aux1425, [0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1625);
constraint int_eq_reif(0,travel_00001_00001,aux562_BOOL);
constraint int_eq_reif(aux12,travel_00001_00001,aux563_BOOL);
constraint int_eq_reif(0,travel_00002_00001,aux564_BOOL);
constraint int_eq_reif(aux56,travel_00002_00001,aux565_BOOL);
constraint int_eq_reif(travel_00003_00001,0,aux566_BOOL);
constraint int_eq_reif(travel_00003_00001,aux45,aux567_BOOL);
constraint int_eq_reif(travel_00004_00001,0,aux568_BOOL);
constraint int_eq_reif(aux27,travel_00004_00001,aux569_BOOL);
constraint int_eq_reif(0,travel_00005_00001,aux570_BOOL);
constraint int_eq_reif(travel_00005_00001,aux18,aux571_BOOL);
constraint int_eq_reif(0,travel_00006_00001,aux572_BOOL);
constraint int_eq_reif(aux169,travel_00006_00001,aux573_BOOL);
constraint int_eq_reif(0,travel_00007_00001,aux574_BOOL);
constraint int_eq_reif(aux66,travel_00007_00001,aux575_BOOL);
constraint int_eq_reif(travel_00008_00001,0,aux576_BOOL);
constraint int_eq_reif(travel_00008_00001,aux144,aux577_BOOL);
constraint int_eq_reif(travel_00009_00001,0,aux578_BOOL);
constraint int_eq_reif(aux119,travel_00009_00001,aux579_BOOL);
constraint int_eq_reif(0,travel_00010_00001,aux580_BOOL);
constraint int_eq_reif(aux138,travel_00010_00001,aux581_BOOL);
constraint int_eq_reif(travel_00011_00001,0,aux582_BOOL);
constraint int_eq_reif(travel_00011_00001,aux113,aux583_BOOL);
constraint int_eq_reif(travel_00012_00001,0,aux584_BOOL);
constraint int_eq_reif(travel_00012_00001,aux103,aux585_BOOL);
constraint int_eq_reif(0,travel_00013_00001,aux586_BOOL);
constraint int_eq_reif(aux87,travel_00013_00001,aux587_BOOL);
constraint int_eq_reif(0,travel_00014_00001,aux588_BOOL);
constraint int_eq_reif(aux13,travel_00014_00001,aux589_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00001_00001,opponent_00001_00002,aux590,-29],0);
constraint int_eq_reif(aux1458,travel_00001_00002,aux591_BOOL);
constraint int_eq_reif(aux4,travel_00001_00002,aux592_BOOL);
constraint int_eq_reif(0,travel_00001_00002,aux593_BOOL);
constraint int_eq_reif(aux12,travel_00001_00002,aux594_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00001_00002,opponent_00001_00003,aux595,-29],0);
constraint int_eq_reif(aux1459,travel_00001_00003,aux596_BOOL);
constraint int_eq_reif(aux8,travel_00001_00003,aux597_BOOL);
constraint int_eq_reif(0,travel_00001_00003,aux598_BOOL);
constraint int_eq_reif(aux4,travel_00001_00003,aux599_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00001_00003,opponent_00001_00004,aux600,-29],0);
constraint int_eq_reif(aux1460,travel_00001_00004,aux601_BOOL);
constraint int_eq_reif(aux7,travel_00001_00004,aux602_BOOL);
constraint int_eq_reif(0,travel_00001_00004,aux603_BOOL);
constraint int_eq_reif(aux8,travel_00001_00004,aux604_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00001_00004,opponent_00001_00005,aux605,-29],0);
constraint int_eq_reif(aux1461,travel_00001_00005,aux606_BOOL);
constraint int_eq_reif(aux11,travel_00001_00005,aux607_BOOL);
constraint int_eq_reif(0,travel_00001_00005,aux608_BOOL);
constraint int_eq_reif(aux7,travel_00001_00005,aux609_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00001_00005,opponent_00001_00006,aux610,-29],0);
constraint int_eq_reif(aux1462,travel_00001_00006,aux611_BOOL);
constraint int_eq_reif(aux10,travel_00001_00006,aux612_BOOL);
constraint int_eq_reif(0,travel_00001_00006,aux613_BOOL);
constraint int_eq_reif(aux11,travel_00001_00006,aux614_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00001_00006,opponent_00001_00007,aux615,-29],0);
constraint int_eq_reif(aux1463,travel_00001_00007,aux616_BOOL);
constraint int_eq_reif(aux9,travel_00001_00007,aux617_BOOL);
constraint int_eq_reif(0,travel_00001_00007,aux618_BOOL);
constraint int_eq_reif(aux10,travel_00001_00007,aux619_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00001_00007,opponent_00001_00008,aux620,-29],0);
constraint int_eq_reif(aux1464,travel_00001_00008,aux621_BOOL);
constraint int_eq_reif(aux6,travel_00001_00008,aux622_BOOL);
constraint int_eq_reif(0,travel_00001_00008,aux623_BOOL);
constraint int_eq_reif(aux9,travel_00001_00008,aux624_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00001_00008,opponent_00001_00009,aux625,-29],0);
constraint int_eq_reif(aux1465,travel_00001_00009,aux626_BOOL);
constraint int_eq_reif(aux5,travel_00001_00009,aux627_BOOL);
constraint int_eq_reif(0,travel_00001_00009,aux628_BOOL);
constraint int_eq_reif(aux6,travel_00001_00009,aux629_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00001_00009,opponent_00001_00010,aux630,-29],0);
constraint int_eq_reif(aux1466,travel_00001_00010,aux631_BOOL);
constraint int_eq_reif(aux3,travel_00001_00010,aux632_BOOL);
constraint int_eq_reif(0,travel_00001_00010,aux633_BOOL);
constraint int_eq_reif(aux5,travel_00001_00010,aux634_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00001_00010,opponent_00001_00011,aux635,-29],0);
constraint int_eq_reif(aux1467,travel_00001_00011,aux636_BOOL);
constraint int_eq_reif(aux1,travel_00001_00011,aux637_BOOL);
constraint int_eq_reif(0,travel_00001_00011,aux638_BOOL);
constraint int_eq_reif(aux3,travel_00001_00011,aux639_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00001_00011,opponent_00001_00012,aux640,-29],0);
constraint int_eq_reif(aux1468,travel_00001_00012,aux641_BOOL);
constraint int_eq_reif(aux2,travel_00001_00012,aux642_BOOL);
constraint int_eq_reif(0,travel_00001_00012,aux643_BOOL);
constraint int_eq_reif(aux1,travel_00001_00012,aux644_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00001_00012,opponent_00001_00013,aux645,-30],0);
constraint int_eq_reif(aux1469,travel_00001_00013,aux646_BOOL);
constraint int_eq_reif(aux170,travel_00001_00013,aux647_BOOL);
constraint int_eq_reif(0,travel_00001_00013,aux648_BOOL);
constraint int_eq_reif(aux2,travel_00001_00013,aux649_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux650,opponent_00002_00001,opponent_00002_00002,-14],0);
constraint int_eq_reif(aux1470,travel_00002_00002,aux651_BOOL);
constraint int_eq_reif(aux54,travel_00002_00002,aux652_BOOL);
constraint int_eq_reif(0,travel_00002_00002,aux653_BOOL);
constraint int_eq_reif(aux56,travel_00002_00002,aux654_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux655,opponent_00002_00002,opponent_00002_00003,-14],0);
constraint int_eq_reif(aux1471,travel_00002_00003,aux656_BOOL);
constraint int_eq_reif(aux53,travel_00002_00003,aux657_BOOL);
constraint int_eq_reif(0,travel_00002_00003,aux658_BOOL);
constraint int_eq_reif(aux54,travel_00002_00003,aux659_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux660,opponent_00002_00003,opponent_00002_00004,-14],0);
constraint int_eq_reif(aux1472,travel_00002_00004,aux661_BOOL);
constraint int_eq_reif(aux59,travel_00002_00004,aux662_BOOL);
constraint int_eq_reif(0,travel_00002_00004,aux663_BOOL);
constraint int_eq_reif(aux53,travel_00002_00004,aux664_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux665,opponent_00002_00004,opponent_00002_00005,-14],0);
constraint int_eq_reif(aux1473,travel_00002_00005,aux666_BOOL);
constraint int_eq_reif(aux58,travel_00002_00005,aux667_BOOL);
constraint int_eq_reif(0,travel_00002_00005,aux668_BOOL);
constraint int_eq_reif(aux59,travel_00002_00005,aux669_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux670,opponent_00002_00005,opponent_00002_00006,-14],0);
constraint int_eq_reif(aux1474,travel_00002_00006,aux671_BOOL);
constraint int_eq_reif(aux55,travel_00002_00006,aux672_BOOL);
constraint int_eq_reif(0,travel_00002_00006,aux673_BOOL);
constraint int_eq_reif(aux58,travel_00002_00006,aux674_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux675,opponent_00002_00006,opponent_00002_00007,-14],0);
constraint int_eq_reif(aux1475,travel_00002_00007,aux676_BOOL);
constraint int_eq_reif(aux57,travel_00002_00007,aux677_BOOL);
constraint int_eq_reif(0,travel_00002_00007,aux678_BOOL);
constraint int_eq_reif(aux55,travel_00002_00007,aux679_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux680,opponent_00002_00007,opponent_00002_00008,-14],0);
constraint int_eq_reif(aux1476,travel_00002_00008,aux681_BOOL);
constraint int_eq_reif(aux63,travel_00002_00008,aux682_BOOL);
constraint int_eq_reif(0,travel_00002_00008,aux683_BOOL);
constraint int_eq_reif(aux57,travel_00002_00008,aux684_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux685,opponent_00002_00008,opponent_00002_00009,-14],0);
constraint int_eq_reif(aux1477,travel_00002_00009,aux686_BOOL);
constraint int_eq_reif(aux64,travel_00002_00009,aux687_BOOL);
constraint int_eq_reif(0,travel_00002_00009,aux688_BOOL);
constraint int_eq_reif(aux63,travel_00002_00009,aux689_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux690,opponent_00002_00009,opponent_00002_00010,-14],0);
constraint int_eq_reif(aux1478,travel_00002_00010,aux691_BOOL);
constraint int_eq_reif(aux62,travel_00002_00010,aux692_BOOL);
constraint int_eq_reif(0,travel_00002_00010,aux693_BOOL);
constraint int_eq_reif(aux64,travel_00002_00010,aux694_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux695,opponent_00002_00010,opponent_00002_00011,-14],0);
constraint int_eq_reif(aux1479,travel_00002_00011,aux696_BOOL);
constraint int_eq_reif(aux60,travel_00002_00011,aux697_BOOL);
constraint int_eq_reif(0,travel_00002_00011,aux698_BOOL);
constraint int_eq_reif(aux62,travel_00002_00011,aux699_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux700,opponent_00002_00011,opponent_00002_00012,-14],0);
constraint int_eq_reif(aux1480,travel_00002_00012,aux701_BOOL);
constraint int_eq_reif(aux61,travel_00002_00012,aux702_BOOL);
constraint int_eq_reif(0,travel_00002_00012,aux703_BOOL);
constraint int_eq_reif(aux60,travel_00002_00012,aux704_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux705,opponent_00002_00012,opponent_00002_00013,-16],0);
constraint int_eq_reif(aux1481,travel_00002_00013,aux706_BOOL);
constraint int_eq_reif(aux65,travel_00002_00013,aux707_BOOL);
constraint int_eq_reif(0,travel_00002_00013,aux708_BOOL);
constraint int_eq_reif(aux61,travel_00002_00013,aux709_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux710,opponent_00003_00001,opponent_00003_00002,-14],0);
constraint int_eq_reif(aux1482,travel_00003_00002,aux711_BOOL);
constraint int_eq_reif(travel_00003_00002,aux46,aux712_BOOL);
constraint int_eq_reif(travel_00003_00002,0,aux713_BOOL);
constraint int_eq_reif(travel_00003_00002,aux45,aux714_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux715,opponent_00003_00002,opponent_00003_00003,-14],0);
constraint int_eq_reif(aux1483,travel_00003_00003,aux716_BOOL);
constraint int_eq_reif(travel_00003_00003,aux47,aux717_BOOL);
constraint int_eq_reif(travel_00003_00003,0,aux718_BOOL);
constraint int_eq_reif(travel_00003_00003,aux46,aux719_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux720,opponent_00003_00003,opponent_00003_00004,-14],0);
constraint int_eq_reif(aux1484,travel_00003_00004,aux721_BOOL);
constraint int_eq_reif(travel_00003_00004,aux48,aux722_BOOL);
constraint int_eq_reif(travel_00003_00004,0,aux723_BOOL);
constraint int_eq_reif(travel_00003_00004,aux47,aux724_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux725,opponent_00003_00004,opponent_00003_00005,-14],0);
constraint int_eq_reif(aux1485,travel_00003_00005,aux726_BOOL);
constraint int_eq_reif(travel_00003_00005,aux49,aux727_BOOL);
constraint int_eq_reif(travel_00003_00005,0,aux728_BOOL);
constraint int_eq_reif(travel_00003_00005,aux48,aux729_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux730,opponent_00003_00005,opponent_00003_00006,-14],0);
constraint int_eq_reif(aux1486,travel_00003_00006,aux731_BOOL);
constraint int_eq_reif(travel_00003_00006,aux50,aux732_BOOL);
constraint int_eq_reif(travel_00003_00006,0,aux733_BOOL);
constraint int_eq_reif(travel_00003_00006,aux49,aux734_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux735,opponent_00003_00006,opponent_00003_00007,-14],0);
constraint int_eq_reif(aux1487,travel_00003_00007,aux736_BOOL);
constraint int_eq_reif(travel_00003_00007,aux52,aux737_BOOL);
constraint int_eq_reif(travel_00003_00007,0,aux738_BOOL);
constraint int_eq_reif(travel_00003_00007,aux50,aux739_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux740,opponent_00003_00007,opponent_00003_00008,-14],0);
constraint int_eq_reif(aux1488,travel_00003_00008,aux741_BOOL);
constraint int_eq_reif(travel_00003_00008,aux51,aux742_BOOL);
constraint int_eq_reif(travel_00003_00008,0,aux743_BOOL);
constraint int_eq_reif(travel_00003_00008,aux52,aux744_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux745,opponent_00003_00008,opponent_00003_00009,-14],0);
constraint int_eq_reif(aux1489,travel_00003_00009,aux746_BOOL);
constraint int_eq_reif(travel_00003_00009,aux40,aux747_BOOL);
constraint int_eq_reif(travel_00003_00009,0,aux748_BOOL);
constraint int_eq_reif(travel_00003_00009,aux51,aux749_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux750,opponent_00003_00009,opponent_00003_00010,-14],0);
constraint int_eq_reif(aux1490,travel_00003_00010,aux751_BOOL);
constraint int_eq_reif(travel_00003_00010,aux42,aux752_BOOL);
constraint int_eq_reif(travel_00003_00010,0,aux753_BOOL);
constraint int_eq_reif(travel_00003_00010,aux40,aux754_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux755,opponent_00003_00010,opponent_00003_00011,-14],0);
constraint int_eq_reif(aux1491,travel_00003_00011,aux756_BOOL);
constraint int_eq_reif(travel_00003_00011,aux41,aux757_BOOL);
constraint int_eq_reif(travel_00003_00011,0,aux758_BOOL);
constraint int_eq_reif(travel_00003_00011,aux42,aux759_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux760,opponent_00003_00011,opponent_00003_00012,-14],0);
constraint int_eq_reif(aux1492,travel_00003_00012,aux761_BOOL);
constraint int_eq_reif(travel_00003_00012,aux44,aux762_BOOL);
constraint int_eq_reif(travel_00003_00012,0,aux763_BOOL);
constraint int_eq_reif(travel_00003_00012,aux41,aux764_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux765,opponent_00003_00012,opponent_00003_00013,-14],0);
constraint int_eq_reif(aux1493,travel_00003_00013,aux766_BOOL);
constraint int_eq_reif(travel_00003_00013,aux43,aux767_BOOL);
constraint int_eq_reif(travel_00003_00013,0,aux768_BOOL);
constraint int_eq_reif(travel_00003_00013,aux44,aux769_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux770,-14,opponent_00004_00001,opponent_00004_00002],0);
constraint int_eq_reif(aux1494,travel_00004_00002,aux771_BOOL);
constraint int_eq_reif(aux31,travel_00004_00002,aux772_BOOL);
constraint int_eq_reif(travel_00004_00002,0,aux773_BOOL);
constraint int_eq_reif(aux27,travel_00004_00002,aux774_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux775,-14,opponent_00004_00002,opponent_00004_00003],0);
constraint int_eq_reif(aux1495,travel_00004_00003,aux776_BOOL);
constraint int_eq_reif(aux30,travel_00004_00003,aux777_BOOL);
constraint int_eq_reif(travel_00004_00003,0,aux778_BOOL);
constraint int_eq_reif(aux31,travel_00004_00003,aux779_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux780,-14,opponent_00004_00003,opponent_00004_00004],0);
constraint int_eq_reif(aux1496,travel_00004_00004,aux781_BOOL);
constraint int_eq_reif(aux28,travel_00004_00004,aux782_BOOL);
constraint int_eq_reif(travel_00004_00004,0,aux783_BOOL);
constraint int_eq_reif(aux30,travel_00004_00004,aux784_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux785,-14,opponent_00004_00004,opponent_00004_00005],0);
constraint int_eq_reif(aux1497,travel_00004_00005,aux786_BOOL);
constraint int_eq_reif(aux29,travel_00004_00005,aux787_BOOL);
constraint int_eq_reif(travel_00004_00005,0,aux788_BOOL);
constraint int_eq_reif(aux28,travel_00004_00005,aux789_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux790,-14,opponent_00004_00005,opponent_00004_00006],0);
constraint int_eq_reif(aux1498,travel_00004_00006,aux791_BOOL);
constraint int_eq_reif(aux32,travel_00004_00006,aux792_BOOL);
constraint int_eq_reif(travel_00004_00006,0,aux793_BOOL);
constraint int_eq_reif(aux29,travel_00004_00006,aux794_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux795,-14,opponent_00004_00006,opponent_00004_00007],0);
constraint int_eq_reif(aux1499,travel_00004_00007,aux796_BOOL);
constraint int_eq_reif(aux33,travel_00004_00007,aux797_BOOL);
constraint int_eq_reif(travel_00004_00007,0,aux798_BOOL);
constraint int_eq_reif(aux32,travel_00004_00007,aux799_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux800,-14,opponent_00004_00007,opponent_00004_00008],0);
constraint int_eq_reif(aux1500,travel_00004_00008,aux801_BOOL);
constraint int_eq_reif(aux34,travel_00004_00008,aux802_BOOL);
constraint int_eq_reif(travel_00004_00008,0,aux803_BOOL);
constraint int_eq_reif(aux33,travel_00004_00008,aux804_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux805,-14,opponent_00004_00008,opponent_00004_00009],0);
constraint int_eq_reif(aux1501,travel_00004_00009,aux806_BOOL);
constraint int_eq_reif(aux35,travel_00004_00009,aux807_BOOL);
constraint int_eq_reif(travel_00004_00009,0,aux808_BOOL);
constraint int_eq_reif(aux34,travel_00004_00009,aux809_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux810,-14,opponent_00004_00009,opponent_00004_00010],0);
constraint int_eq_reif(aux1502,travel_00004_00010,aux811_BOOL);
constraint int_eq_reif(aux37,travel_00004_00010,aux812_BOOL);
constraint int_eq_reif(travel_00004_00010,0,aux813_BOOL);
constraint int_eq_reif(aux35,travel_00004_00010,aux814_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux815,-14,opponent_00004_00010,opponent_00004_00011],0);
constraint int_eq_reif(aux1503,travel_00004_00011,aux816_BOOL);
constraint int_eq_reif(aux38,travel_00004_00011,aux817_BOOL);
constraint int_eq_reif(travel_00004_00011,0,aux818_BOOL);
constraint int_eq_reif(aux37,travel_00004_00011,aux819_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux820,-14,opponent_00004_00011,opponent_00004_00012],0);
constraint int_eq_reif(aux1504,travel_00004_00012,aux821_BOOL);
constraint int_eq_reif(aux39,travel_00004_00012,aux822_BOOL);
constraint int_eq_reif(travel_00004_00012,0,aux823_BOOL);
constraint int_eq_reif(aux38,travel_00004_00012,aux824_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux825,-14,opponent_00004_00012,opponent_00004_00013],0);
constraint int_eq_reif(aux1505,travel_00004_00013,aux826_BOOL);
constraint int_eq_reif(aux36,travel_00004_00013,aux827_BOOL);
constraint int_eq_reif(travel_00004_00013,0,aux828_BOOL);
constraint int_eq_reif(aux39,travel_00004_00013,aux829_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux830,-14,opponent_00005_00001,opponent_00005_00002],0);
constraint int_eq_reif(aux1506,travel_00005_00002,aux831_BOOL);
constraint int_eq_reif(travel_00005_00002,aux19,aux832_BOOL);
constraint int_eq_reif(0,travel_00005_00002,aux833_BOOL);
constraint int_eq_reif(travel_00005_00002,aux18,aux834_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux835,-14,opponent_00005_00002,opponent_00005_00003],0);
constraint int_eq_reif(aux1507,travel_00005_00003,aux836_BOOL);
constraint int_eq_reif(travel_00005_00003,aux14,aux837_BOOL);
constraint int_eq_reif(0,travel_00005_00003,aux838_BOOL);
constraint int_eq_reif(travel_00005_00003,aux19,aux839_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux840,-14,opponent_00005_00003,opponent_00005_00004],0);
constraint int_eq_reif(aux1508,travel_00005_00004,aux841_BOOL);
constraint int_eq_reif(travel_00005_00004,aux15,aux842_BOOL);
constraint int_eq_reif(0,travel_00005_00004,aux843_BOOL);
constraint int_eq_reif(travel_00005_00004,aux14,aux844_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux845,-14,opponent_00005_00004,opponent_00005_00005],0);
constraint int_eq_reif(aux1509,travel_00005_00005,aux846_BOOL);
constraint int_eq_reif(travel_00005_00005,aux17,aux847_BOOL);
constraint int_eq_reif(0,travel_00005_00005,aux848_BOOL);
constraint int_eq_reif(travel_00005_00005,aux15,aux849_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux850,-14,opponent_00005_00005,opponent_00005_00006],0);
constraint int_eq_reif(aux1510,travel_00005_00006,aux851_BOOL);
constraint int_eq_reif(travel_00005_00006,aux16,aux852_BOOL);
constraint int_eq_reif(0,travel_00005_00006,aux853_BOOL);
constraint int_eq_reif(travel_00005_00006,aux17,aux854_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux855,-14,opponent_00005_00006,opponent_00005_00007],0);
constraint int_eq_reif(aux1511,travel_00005_00007,aux856_BOOL);
constraint int_eq_reif(travel_00005_00007,aux21,aux857_BOOL);
constraint int_eq_reif(0,travel_00005_00007,aux858_BOOL);
constraint int_eq_reif(travel_00005_00007,aux16,aux859_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux860,-14,opponent_00005_00007,opponent_00005_00008],0);
constraint int_eq_reif(aux1512,travel_00005_00008,aux861_BOOL);
constraint int_eq_reif(travel_00005_00008,aux20,aux862_BOOL);
constraint int_eq_reif(0,travel_00005_00008,aux863_BOOL);
constraint int_eq_reif(travel_00005_00008,aux21,aux864_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux865,-14,opponent_00005_00008,opponent_00005_00009],0);
constraint int_eq_reif(aux1513,travel_00005_00009,aux866_BOOL);
constraint int_eq_reif(travel_00005_00009,aux22,aux867_BOOL);
constraint int_eq_reif(0,travel_00005_00009,aux868_BOOL);
constraint int_eq_reif(travel_00005_00009,aux20,aux869_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux870,-14,opponent_00005_00009,opponent_00005_00010],0);
constraint int_eq_reif(aux1514,travel_00005_00010,aux871_BOOL);
constraint int_eq_reif(travel_00005_00010,aux24,aux872_BOOL);
constraint int_eq_reif(0,travel_00005_00010,aux873_BOOL);
constraint int_eq_reif(travel_00005_00010,aux22,aux874_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux875,-14,opponent_00005_00010,opponent_00005_00011],0);
constraint int_eq_reif(aux1515,travel_00005_00011,aux876_BOOL);
constraint int_eq_reif(travel_00005_00011,aux23,aux877_BOOL);
constraint int_eq_reif(0,travel_00005_00011,aux878_BOOL);
constraint int_eq_reif(travel_00005_00011,aux24,aux879_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux880,-14,opponent_00005_00011,opponent_00005_00012],0);
constraint int_eq_reif(aux1516,travel_00005_00012,aux881_BOOL);
constraint int_eq_reif(travel_00005_00012,aux26,aux882_BOOL);
constraint int_eq_reif(0,travel_00005_00012,aux883_BOOL);
constraint int_eq_reif(travel_00005_00012,aux23,aux884_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux885,-14,opponent_00005_00012,opponent_00005_00013],0);
constraint int_eq_reif(aux1517,travel_00005_00013,aux886_BOOL);
constraint int_eq_reif(travel_00005_00013,aux25,aux887_BOOL);
constraint int_eq_reif(0,travel_00005_00013,aux888_BOOL);
constraint int_eq_reif(travel_00005_00013,aux26,aux889_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00006_00001,opponent_00006_00002,aux890,-14],0);
constraint int_eq_reif(aux1518,travel_00006_00002,aux891_BOOL);
constraint int_eq_reif(aux167,travel_00006_00002,aux892_BOOL);
constraint int_eq_reif(0,travel_00006_00002,aux893_BOOL);
constraint int_eq_reif(aux169,travel_00006_00002,aux894_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00006_00002,opponent_00006_00003,aux895,-14],0);
constraint int_eq_reif(aux1519,travel_00006_00003,aux896_BOOL);
constraint int_eq_reif(aux168,travel_00006_00003,aux897_BOOL);
constraint int_eq_reif(0,travel_00006_00003,aux898_BOOL);
constraint int_eq_reif(aux167,travel_00006_00003,aux899_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00006_00003,opponent_00006_00004,aux900,-14],0);
constraint int_eq_reif(aux1520,travel_00006_00004,aux901_BOOL);
constraint int_eq_reif(aux159,travel_00006_00004,aux902_BOOL);
constraint int_eq_reif(0,travel_00006_00004,aux903_BOOL);
constraint int_eq_reif(aux168,travel_00006_00004,aux904_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00006_00004,opponent_00006_00005,aux905,-14],0);
constraint int_eq_reif(aux1521,travel_00006_00005,aux906_BOOL);
constraint int_eq_reif(aux160,travel_00006_00005,aux907_BOOL);
constraint int_eq_reif(0,travel_00006_00005,aux908_BOOL);
constraint int_eq_reif(aux159,travel_00006_00005,aux909_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00006_00005,opponent_00006_00006,aux910,-14],0);
constraint int_eq_reif(aux1522,travel_00006_00006,aux911_BOOL);
constraint int_eq_reif(aux161,travel_00006_00006,aux912_BOOL);
constraint int_eq_reif(0,travel_00006_00006,aux913_BOOL);
constraint int_eq_reif(aux160,travel_00006_00006,aux914_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00006_00006,opponent_00006_00007,aux915,-14],0);
constraint int_eq_reif(aux1523,travel_00006_00007,aux916_BOOL);
constraint int_eq_reif(aux162,travel_00006_00007,aux917_BOOL);
constraint int_eq_reif(0,travel_00006_00007,aux918_BOOL);
constraint int_eq_reif(aux161,travel_00006_00007,aux919_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00006_00007,opponent_00006_00008,aux920,-14],0);
constraint int_eq_reif(aux1524,travel_00006_00008,aux921_BOOL);
constraint int_eq_reif(aux157,travel_00006_00008,aux922_BOOL);
constraint int_eq_reif(0,travel_00006_00008,aux923_BOOL);
constraint int_eq_reif(aux162,travel_00006_00008,aux924_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00006_00008,opponent_00006_00009,aux925,-14],0);
constraint int_eq_reif(aux1525,travel_00006_00009,aux926_BOOL);
constraint int_eq_reif(aux158,travel_00006_00009,aux927_BOOL);
constraint int_eq_reif(0,travel_00006_00009,aux928_BOOL);
constraint int_eq_reif(aux157,travel_00006_00009,aux929_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00006_00009,opponent_00006_00010,aux930,-14],0);
constraint int_eq_reif(aux1526,travel_00006_00010,aux931_BOOL);
constraint int_eq_reif(aux166,travel_00006_00010,aux932_BOOL);
constraint int_eq_reif(0,travel_00006_00010,aux933_BOOL);
constraint int_eq_reif(aux158,travel_00006_00010,aux934_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00006_00010,opponent_00006_00011,aux935,-14],0);
constraint int_eq_reif(aux1527,travel_00006_00011,aux936_BOOL);
constraint int_eq_reif(aux163,travel_00006_00011,aux937_BOOL);
constraint int_eq_reif(0,travel_00006_00011,aux938_BOOL);
constraint int_eq_reif(aux166,travel_00006_00011,aux939_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00006_00011,opponent_00006_00012,aux940,-14],0);
constraint int_eq_reif(aux1528,travel_00006_00012,aux941_BOOL);
constraint int_eq_reif(aux164,travel_00006_00012,aux942_BOOL);
constraint int_eq_reif(0,travel_00006_00012,aux943_BOOL);
constraint int_eq_reif(aux163,travel_00006_00012,aux944_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00006_00012,opponent_00006_00013,aux945,-14],0);
constraint int_eq_reif(aux1529,travel_00006_00013,aux946_BOOL);
constraint int_eq_reif(aux165,travel_00006_00013,aux947_BOOL);
constraint int_eq_reif(0,travel_00006_00013,aux948_BOOL);
constraint int_eq_reif(aux164,travel_00006_00013,aux949_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux950,opponent_00007_00001,opponent_00007_00002,-14],0);
constraint int_eq_reif(aux1530,travel_00007_00002,aux951_BOOL);
constraint int_eq_reif(aux67,travel_00007_00002,aux952_BOOL);
constraint int_eq_reif(0,travel_00007_00002,aux953_BOOL);
constraint int_eq_reif(aux66,travel_00007_00002,aux954_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux955,opponent_00007_00002,opponent_00007_00003,-14],0);
constraint int_eq_reif(aux1531,travel_00007_00003,aux956_BOOL);
constraint int_eq_reif(aux69,travel_00007_00003,aux957_BOOL);
constraint int_eq_reif(0,travel_00007_00003,aux958_BOOL);
constraint int_eq_reif(aux67,travel_00007_00003,aux959_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux960,opponent_00007_00003,opponent_00007_00004,-14],0);
constraint int_eq_reif(aux1532,travel_00007_00004,aux961_BOOL);
constraint int_eq_reif(aux68,travel_00007_00004,aux962_BOOL);
constraint int_eq_reif(0,travel_00007_00004,aux963_BOOL);
constraint int_eq_reif(aux69,travel_00007_00004,aux964_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux965,opponent_00007_00004,opponent_00007_00005,-14],0);
constraint int_eq_reif(aux1533,travel_00007_00005,aux966_BOOL);
constraint int_eq_reif(aux71,travel_00007_00005,aux967_BOOL);
constraint int_eq_reif(0,travel_00007_00005,aux968_BOOL);
constraint int_eq_reif(aux68,travel_00007_00005,aux969_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux970,opponent_00007_00005,opponent_00007_00006,-14],0);
constraint int_eq_reif(aux1534,travel_00007_00006,aux971_BOOL);
constraint int_eq_reif(aux70,travel_00007_00006,aux972_BOOL);
constraint int_eq_reif(0,travel_00007_00006,aux973_BOOL);
constraint int_eq_reif(aux71,travel_00007_00006,aux974_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux975,opponent_00007_00006,opponent_00007_00007,-14],0);
constraint int_eq_reif(aux1535,travel_00007_00007,aux976_BOOL);
constraint int_eq_reif(aux73,travel_00007_00007,aux977_BOOL);
constraint int_eq_reif(0,travel_00007_00007,aux978_BOOL);
constraint int_eq_reif(aux70,travel_00007_00007,aux979_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux980,opponent_00007_00007,opponent_00007_00008,-14],0);
constraint int_eq_reif(aux1536,travel_00007_00008,aux981_BOOL);
constraint int_eq_reif(aux72,travel_00007_00008,aux982_BOOL);
constraint int_eq_reif(0,travel_00007_00008,aux983_BOOL);
constraint int_eq_reif(aux73,travel_00007_00008,aux984_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux985,opponent_00007_00008,opponent_00007_00009,-14],0);
constraint int_eq_reif(aux1537,travel_00007_00009,aux986_BOOL);
constraint int_eq_reif(aux74,travel_00007_00009,aux987_BOOL);
constraint int_eq_reif(0,travel_00007_00009,aux988_BOOL);
constraint int_eq_reif(aux72,travel_00007_00009,aux989_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux990,opponent_00007_00009,opponent_00007_00010,-14],0);
constraint int_eq_reif(aux1538,travel_00007_00010,aux991_BOOL);
constraint int_eq_reif(aux76,travel_00007_00010,aux992_BOOL);
constraint int_eq_reif(0,travel_00007_00010,aux993_BOOL);
constraint int_eq_reif(aux74,travel_00007_00010,aux994_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux995,opponent_00007_00010,opponent_00007_00011,-14],0);
constraint int_eq_reif(aux1539,travel_00007_00011,aux996_BOOL);
constraint int_eq_reif(aux75,travel_00007_00011,aux997_BOOL);
constraint int_eq_reif(0,travel_00007_00011,aux998_BOOL);
constraint int_eq_reif(aux76,travel_00007_00011,aux999_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00007_00011,opponent_00007_00012,aux1000,-14],0);
constraint int_eq_reif(aux1540,travel_00007_00012,aux1001_BOOL);
constraint int_eq_reif(aux78,travel_00007_00012,aux1002_BOOL);
constraint int_eq_reif(0,travel_00007_00012,aux1003_BOOL);
constraint int_eq_reif(aux75,travel_00007_00012,aux1004_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00007_00012,opponent_00007_00013,aux1005,-14],0);
constraint int_eq_reif(aux1541,travel_00007_00013,aux1006_BOOL);
constraint int_eq_reif(aux77,travel_00007_00013,aux1007_BOOL);
constraint int_eq_reif(0,travel_00007_00013,aux1008_BOOL);
constraint int_eq_reif(aux78,travel_00007_00013,aux1009_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1010,opponent_00008_00001,opponent_00008_00002,-14],0);
constraint int_eq_reif(aux1542,travel_00008_00002,aux1011_BOOL);
constraint int_eq_reif(travel_00008_00002,aux152,aux1012_BOOL);
constraint int_eq_reif(travel_00008_00002,0,aux1013_BOOL);
constraint int_eq_reif(travel_00008_00002,aux144,aux1014_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1015,opponent_00008_00002,opponent_00008_00003,-14],0);
constraint int_eq_reif(aux1543,travel_00008_00003,aux1016_BOOL);
constraint int_eq_reif(travel_00008_00003,aux153,aux1017_BOOL);
constraint int_eq_reif(travel_00008_00003,0,aux1018_BOOL);
constraint int_eq_reif(travel_00008_00003,aux152,aux1019_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1020,opponent_00008_00003,opponent_00008_00004,-14],0);
constraint int_eq_reif(aux1544,travel_00008_00004,aux1021_BOOL);
constraint int_eq_reif(travel_00008_00004,aux154,aux1022_BOOL);
constraint int_eq_reif(travel_00008_00004,0,aux1023_BOOL);
constraint int_eq_reif(travel_00008_00004,aux153,aux1024_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1025,opponent_00008_00004,opponent_00008_00005,-14],0);
constraint int_eq_reif(aux1545,travel_00008_00005,aux1026_BOOL);
constraint int_eq_reif(travel_00008_00005,aux155,aux1027_BOOL);
constraint int_eq_reif(travel_00008_00005,0,aux1028_BOOL);
constraint int_eq_reif(travel_00008_00005,aux154,aux1029_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1030,opponent_00008_00005,opponent_00008_00006,-14],0);
constraint int_eq_reif(aux1546,travel_00008_00006,aux1031_BOOL);
constraint int_eq_reif(travel_00008_00006,aux148,aux1032_BOOL);
constraint int_eq_reif(travel_00008_00006,0,aux1033_BOOL);
constraint int_eq_reif(travel_00008_00006,aux155,aux1034_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1035,opponent_00008_00006,opponent_00008_00007,-14],0);
constraint int_eq_reif(aux1547,travel_00008_00007,aux1036_BOOL);
constraint int_eq_reif(travel_00008_00007,aux149,aux1037_BOOL);
constraint int_eq_reif(travel_00008_00007,0,aux1038_BOOL);
constraint int_eq_reif(travel_00008_00007,aux148,aux1039_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1040,opponent_00008_00007,opponent_00008_00008,-14],0);
constraint int_eq_reif(aux1548,travel_00008_00008,aux1041_BOOL);
constraint int_eq_reif(travel_00008_00008,aux150,aux1042_BOOL);
constraint int_eq_reif(travel_00008_00008,0,aux1043_BOOL);
constraint int_eq_reif(travel_00008_00008,aux149,aux1044_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1045,opponent_00008_00008,opponent_00008_00009,-14],0);
constraint int_eq_reif(aux1549,travel_00008_00009,aux1046_BOOL);
constraint int_eq_reif(travel_00008_00009,aux151,aux1047_BOOL);
constraint int_eq_reif(travel_00008_00009,0,aux1048_BOOL);
constraint int_eq_reif(travel_00008_00009,aux150,aux1049_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1050,opponent_00008_00009,opponent_00008_00010,-14],0);
constraint int_eq_reif(aux1550,travel_00008_00010,aux1051_BOOL);
constraint int_eq_reif(travel_00008_00010,aux145,aux1052_BOOL);
constraint int_eq_reif(travel_00008_00010,0,aux1053_BOOL);
constraint int_eq_reif(travel_00008_00010,aux151,aux1054_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1055,opponent_00008_00010,opponent_00008_00011,-14],0);
constraint int_eq_reif(aux1551,travel_00008_00011,aux1056_BOOL);
constraint int_eq_reif(travel_00008_00011,aux147,aux1057_BOOL);
constraint int_eq_reif(travel_00008_00011,0,aux1058_BOOL);
constraint int_eq_reif(travel_00008_00011,aux145,aux1059_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1060,opponent_00008_00011,opponent_00008_00012,-14],0);
constraint int_eq_reif(aux1552,travel_00008_00012,aux1061_BOOL);
constraint int_eq_reif(travel_00008_00012,aux146,aux1062_BOOL);
constraint int_eq_reif(travel_00008_00012,0,aux1063_BOOL);
constraint int_eq_reif(travel_00008_00012,aux147,aux1064_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1065,opponent_00008_00012,opponent_00008_00013,-14],0);
constraint int_eq_reif(aux1553,travel_00008_00013,aux1066_BOOL);
constraint int_eq_reif(travel_00008_00013,aux156,aux1067_BOOL);
constraint int_eq_reif(travel_00008_00013,0,aux1068_BOOL);
constraint int_eq_reif(travel_00008_00013,aux146,aux1069_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1070,-14,opponent_00009_00001,opponent_00009_00002],0);
constraint int_eq_reif(aux1554,travel_00009_00002,aux1071_BOOL);
constraint int_eq_reif(aux118,travel_00009_00002,aux1072_BOOL);
constraint int_eq_reif(travel_00009_00002,0,aux1073_BOOL);
constraint int_eq_reif(aux119,travel_00009_00002,aux1074_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1075,-14,opponent_00009_00002,opponent_00009_00003],0);
constraint int_eq_reif(aux1555,travel_00009_00003,aux1076_BOOL);
constraint int_eq_reif(aux121,travel_00009_00003,aux1077_BOOL);
constraint int_eq_reif(travel_00009_00003,0,aux1078_BOOL);
constraint int_eq_reif(aux118,travel_00009_00003,aux1079_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1080,-14,opponent_00009_00003,opponent_00009_00004],0);
constraint int_eq_reif(aux1556,travel_00009_00004,aux1081_BOOL);
constraint int_eq_reif(aux120,travel_00009_00004,aux1082_BOOL);
constraint int_eq_reif(travel_00009_00004,0,aux1083_BOOL);
constraint int_eq_reif(aux121,travel_00009_00004,aux1084_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1085,-14,opponent_00009_00004,opponent_00009_00005],0);
constraint int_eq_reif(aux1557,travel_00009_00005,aux1086_BOOL);
constraint int_eq_reif(aux123,travel_00009_00005,aux1087_BOOL);
constraint int_eq_reif(travel_00009_00005,0,aux1088_BOOL);
constraint int_eq_reif(aux120,travel_00009_00005,aux1089_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1090,-14,opponent_00009_00005,opponent_00009_00006],0);
constraint int_eq_reif(aux1558,travel_00009_00006,aux1091_BOOL);
constraint int_eq_reif(aux122,travel_00009_00006,aux1092_BOOL);
constraint int_eq_reif(travel_00009_00006,0,aux1093_BOOL);
constraint int_eq_reif(aux123,travel_00009_00006,aux1094_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1095,-14,opponent_00009_00006,opponent_00009_00007],0);
constraint int_eq_reif(aux1559,travel_00009_00007,aux1096_BOOL);
constraint int_eq_reif(aux125,travel_00009_00007,aux1097_BOOL);
constraint int_eq_reif(travel_00009_00007,0,aux1098_BOOL);
constraint int_eq_reif(aux122,travel_00009_00007,aux1099_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1100,-14,opponent_00009_00007,opponent_00009_00008],0);
constraint int_eq_reif(aux1560,travel_00009_00008,aux1101_BOOL);
constraint int_eq_reif(aux124,travel_00009_00008,aux1102_BOOL);
constraint int_eq_reif(travel_00009_00008,0,aux1103_BOOL);
constraint int_eq_reif(aux125,travel_00009_00008,aux1104_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1105,-14,opponent_00009_00008,opponent_00009_00009],0);
constraint int_eq_reif(aux1561,travel_00009_00009,aux1106_BOOL);
constraint int_eq_reif(aux126,travel_00009_00009,aux1107_BOOL);
constraint int_eq_reif(travel_00009_00009,0,aux1108_BOOL);
constraint int_eq_reif(aux124,travel_00009_00009,aux1109_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1110,-14,opponent_00009_00009,opponent_00009_00010],0);
constraint int_eq_reif(aux1562,travel_00009_00010,aux1111_BOOL);
constraint int_eq_reif(aux130,travel_00009_00010,aux1112_BOOL);
constraint int_eq_reif(travel_00009_00010,0,aux1113_BOOL);
constraint int_eq_reif(aux126,travel_00009_00010,aux1114_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1115,-14,opponent_00009_00010,opponent_00009_00011],0);
constraint int_eq_reif(aux1563,travel_00009_00011,aux1116_BOOL);
constraint int_eq_reif(aux128,travel_00009_00011,aux1117_BOOL);
constraint int_eq_reif(travel_00009_00011,0,aux1118_BOOL);
constraint int_eq_reif(aux130,travel_00009_00011,aux1119_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1120,-14,opponent_00009_00011,opponent_00009_00012],0);
constraint int_eq_reif(aux1564,travel_00009_00012,aux1121_BOOL);
constraint int_eq_reif(aux127,travel_00009_00012,aux1122_BOOL);
constraint int_eq_reif(travel_00009_00012,0,aux1123_BOOL);
constraint int_eq_reif(aux128,travel_00009_00012,aux1124_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1125,-14,opponent_00009_00012,opponent_00009_00013],0);
constraint int_eq_reif(aux1565,travel_00009_00013,aux1126_BOOL);
constraint int_eq_reif(aux129,travel_00009_00013,aux1127_BOOL);
constraint int_eq_reif(travel_00009_00013,0,aux1128_BOOL);
constraint int_eq_reif(aux127,travel_00009_00013,aux1129_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00010_00001,opponent_00010_00002,aux1130,-14],0);
constraint int_eq_reif(aux1566,travel_00010_00002,aux1131_BOOL);
constraint int_eq_reif(aux139,travel_00010_00002,aux1132_BOOL);
constraint int_eq_reif(0,travel_00010_00002,aux1133_BOOL);
constraint int_eq_reif(aux138,travel_00010_00002,aux1134_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00010_00002,opponent_00010_00003,aux1135,-14],0);
constraint int_eq_reif(aux1567,travel_00010_00003,aux1136_BOOL);
constraint int_eq_reif(aux133,travel_00010_00003,aux1137_BOOL);
constraint int_eq_reif(0,travel_00010_00003,aux1138_BOOL);
constraint int_eq_reif(aux139,travel_00010_00003,aux1139_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00010_00003,opponent_00010_00004,aux1140,-14],0);
constraint int_eq_reif(aux1568,travel_00010_00004,aux1141_BOOL);
constraint int_eq_reif(aux134,travel_00010_00004,aux1142_BOOL);
constraint int_eq_reif(0,travel_00010_00004,aux1143_BOOL);
constraint int_eq_reif(aux133,travel_00010_00004,aux1144_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00010_00004,opponent_00010_00005,aux1145,-14],0);
constraint int_eq_reif(aux1569,travel_00010_00005,aux1146_BOOL);
constraint int_eq_reif(aux131,travel_00010_00005,aux1147_BOOL);
constraint int_eq_reif(0,travel_00010_00005,aux1148_BOOL);
constraint int_eq_reif(aux134,travel_00010_00005,aux1149_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00010_00005,opponent_00010_00006,aux1150,-14],0);
constraint int_eq_reif(aux1570,travel_00010_00006,aux1151_BOOL);
constraint int_eq_reif(aux132,travel_00010_00006,aux1152_BOOL);
constraint int_eq_reif(0,travel_00010_00006,aux1153_BOOL);
constraint int_eq_reif(aux131,travel_00010_00006,aux1154_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00010_00006,opponent_00010_00007,aux1155,-14],0);
constraint int_eq_reif(aux1571,travel_00010_00007,aux1156_BOOL);
constraint int_eq_reif(aux136,travel_00010_00007,aux1157_BOOL);
constraint int_eq_reif(0,travel_00010_00007,aux1158_BOOL);
constraint int_eq_reif(aux132,travel_00010_00007,aux1159_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00010_00007,opponent_00010_00008,aux1160,-14],0);
constraint int_eq_reif(aux1572,travel_00010_00008,aux1161_BOOL);
constraint int_eq_reif(aux137,travel_00010_00008,aux1162_BOOL);
constraint int_eq_reif(0,travel_00010_00008,aux1163_BOOL);
constraint int_eq_reif(aux136,travel_00010_00008,aux1164_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00010_00008,opponent_00010_00009,aux1165,-14],0);
constraint int_eq_reif(aux1573,travel_00010_00009,aux1166_BOOL);
constraint int_eq_reif(aux135,travel_00010_00009,aux1167_BOOL);
constraint int_eq_reif(0,travel_00010_00009,aux1168_BOOL);
constraint int_eq_reif(aux137,travel_00010_00009,aux1169_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00010_00009,opponent_00010_00010,aux1170,-14],0);
constraint int_eq_reif(aux1574,travel_00010_00010,aux1171_BOOL);
constraint int_eq_reif(aux143,travel_00010_00010,aux1172_BOOL);
constraint int_eq_reif(0,travel_00010_00010,aux1173_BOOL);
constraint int_eq_reif(aux135,travel_00010_00010,aux1174_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00010_00010,opponent_00010_00011,aux1175,-14],0);
constraint int_eq_reif(aux1575,travel_00010_00011,aux1176_BOOL);
constraint int_eq_reif(aux142,travel_00010_00011,aux1177_BOOL);
constraint int_eq_reif(0,travel_00010_00011,aux1178_BOOL);
constraint int_eq_reif(aux143,travel_00010_00011,aux1179_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00010_00011,opponent_00010_00012,aux1180,-14],0);
constraint int_eq_reif(aux1576,travel_00010_00012,aux1181_BOOL);
constraint int_eq_reif(aux141,travel_00010_00012,aux1182_BOOL);
constraint int_eq_reif(0,travel_00010_00012,aux1183_BOOL);
constraint int_eq_reif(aux142,travel_00010_00012,aux1184_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00010_00012,opponent_00010_00013,aux1185,-14],0);
constraint int_eq_reif(aux1577,travel_00010_00013,aux1186_BOOL);
constraint int_eq_reif(aux140,travel_00010_00013,aux1187_BOOL);
constraint int_eq_reif(0,travel_00010_00013,aux1188_BOOL);
constraint int_eq_reif(aux141,travel_00010_00013,aux1189_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1190,opponent_00011_00001,opponent_00011_00002,-14],0);
constraint int_eq_reif(aux1578,travel_00011_00002,aux1191_BOOL);
constraint int_eq_reif(travel_00011_00002,aux112,aux1192_BOOL);
constraint int_eq_reif(travel_00011_00002,0,aux1193_BOOL);
constraint int_eq_reif(travel_00011_00002,aux113,aux1194_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1195,opponent_00011_00002,opponent_00011_00003,-14],0);
constraint int_eq_reif(aux1579,travel_00011_00003,aux1196_BOOL);
constraint int_eq_reif(travel_00011_00003,aux111,aux1197_BOOL);
constraint int_eq_reif(travel_00011_00003,0,aux1198_BOOL);
constraint int_eq_reif(travel_00011_00003,aux112,aux1199_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1200,opponent_00011_00003,opponent_00011_00004,-14],0);
constraint int_eq_reif(aux1580,travel_00011_00004,aux1201_BOOL);
constraint int_eq_reif(travel_00011_00004,aux108,aux1202_BOOL);
constraint int_eq_reif(travel_00011_00004,0,aux1203_BOOL);
constraint int_eq_reif(travel_00011_00004,aux111,aux1204_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1205,opponent_00011_00004,opponent_00011_00005,-14],0);
constraint int_eq_reif(aux1581,travel_00011_00005,aux1206_BOOL);
constraint int_eq_reif(travel_00011_00005,aux107,aux1207_BOOL);
constraint int_eq_reif(travel_00011_00005,0,aux1208_BOOL);
constraint int_eq_reif(travel_00011_00005,aux108,aux1209_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1210,opponent_00011_00005,opponent_00011_00006,-14],0);
constraint int_eq_reif(aux1582,travel_00011_00006,aux1211_BOOL);
constraint int_eq_reif(travel_00011_00006,aux106,aux1212_BOOL);
constraint int_eq_reif(travel_00011_00006,0,aux1213_BOOL);
constraint int_eq_reif(travel_00011_00006,aux107,aux1214_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1215,opponent_00011_00006,opponent_00011_00007,-14],0);
constraint int_eq_reif(aux1583,travel_00011_00007,aux1216_BOOL);
constraint int_eq_reif(travel_00011_00007,aux105,aux1217_BOOL);
constraint int_eq_reif(travel_00011_00007,0,aux1218_BOOL);
constraint int_eq_reif(travel_00011_00007,aux106,aux1219_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1220,opponent_00011_00007,opponent_00011_00008,-14],0);
constraint int_eq_reif(aux1584,travel_00011_00008,aux1221_BOOL);
constraint int_eq_reif(travel_00011_00008,aux110,aux1222_BOOL);
constraint int_eq_reif(travel_00011_00008,0,aux1223_BOOL);
constraint int_eq_reif(travel_00011_00008,aux105,aux1224_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1225,opponent_00011_00008,opponent_00011_00009,-14],0);
constraint int_eq_reif(aux1585,travel_00011_00009,aux1226_BOOL);
constraint int_eq_reif(travel_00011_00009,aux109,aux1227_BOOL);
constraint int_eq_reif(travel_00011_00009,0,aux1228_BOOL);
constraint int_eq_reif(travel_00011_00009,aux110,aux1229_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1230,opponent_00011_00009,opponent_00011_00010,-14],0);
constraint int_eq_reif(aux1586,travel_00011_00010,aux1231_BOOL);
constraint int_eq_reif(travel_00011_00010,aux117,aux1232_BOOL);
constraint int_eq_reif(travel_00011_00010,0,aux1233_BOOL);
constraint int_eq_reif(travel_00011_00010,aux109,aux1234_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1235,opponent_00011_00010,opponent_00011_00011,-14],0);
constraint int_eq_reif(aux1587,travel_00011_00011,aux1236_BOOL);
constraint int_eq_reif(travel_00011_00011,aux114,aux1237_BOOL);
constraint int_eq_reif(travel_00011_00011,0,aux1238_BOOL);
constraint int_eq_reif(travel_00011_00011,aux117,aux1239_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1240,opponent_00011_00011,opponent_00011_00012,-14],0);
constraint int_eq_reif(aux1588,travel_00011_00012,aux1241_BOOL);
constraint int_eq_reif(travel_00011_00012,aux115,aux1242_BOOL);
constraint int_eq_reif(travel_00011_00012,0,aux1243_BOOL);
constraint int_eq_reif(travel_00011_00012,aux114,aux1244_BOOL);
constraint int_lin_eq([-1,14,1,1],[aux1245,opponent_00011_00012,opponent_00011_00013,-14],0);
constraint int_eq_reif(aux1589,travel_00011_00013,aux1246_BOOL);
constraint int_eq_reif(travel_00011_00013,aux116,aux1247_BOOL);
constraint int_eq_reif(travel_00011_00013,0,aux1248_BOOL);
constraint int_eq_reif(travel_00011_00013,aux115,aux1249_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1250,-14,opponent_00012_00001,opponent_00012_00002],0);
constraint int_eq_reif(aux1590,travel_00012_00002,aux1251_BOOL);
constraint int_eq_reif(travel_00012_00002,aux104,aux1252_BOOL);
constraint int_eq_reif(travel_00012_00002,0,aux1253_BOOL);
constraint int_eq_reif(travel_00012_00002,aux103,aux1254_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1255,-14,opponent_00012_00002,opponent_00012_00003],0);
constraint int_eq_reif(aux1591,travel_00012_00003,aux1256_BOOL);
constraint int_eq_reif(travel_00012_00003,aux101,aux1257_BOOL);
constraint int_eq_reif(travel_00012_00003,0,aux1258_BOOL);
constraint int_eq_reif(travel_00012_00003,aux104,aux1259_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1260,-14,opponent_00012_00003,opponent_00012_00004],0);
constraint int_eq_reif(aux1592,travel_00012_00004,aux1261_BOOL);
constraint int_eq_reif(travel_00012_00004,aux102,aux1262_BOOL);
constraint int_eq_reif(travel_00012_00004,0,aux1263_BOOL);
constraint int_eq_reif(travel_00012_00004,aux101,aux1264_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1265,-14,opponent_00012_00004,opponent_00012_00005],0);
constraint int_eq_reif(aux1593,travel_00012_00005,aux1266_BOOL);
constraint int_eq_reif(travel_00012_00005,aux99,aux1267_BOOL);
constraint int_eq_reif(travel_00012_00005,0,aux1268_BOOL);
constraint int_eq_reif(travel_00012_00005,aux102,aux1269_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1270,-14,opponent_00012_00005,opponent_00012_00006],0);
constraint int_eq_reif(aux1594,travel_00012_00006,aux1271_BOOL);
constraint int_eq_reif(travel_00012_00006,aux100,aux1272_BOOL);
constraint int_eq_reif(travel_00012_00006,0,aux1273_BOOL);
constraint int_eq_reif(travel_00012_00006,aux99,aux1274_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1275,-14,opponent_00012_00006,opponent_00012_00007],0);
constraint int_eq_reif(aux1595,travel_00012_00007,aux1276_BOOL);
constraint int_eq_reif(travel_00012_00007,aux98,aux1277_BOOL);
constraint int_eq_reif(travel_00012_00007,0,aux1278_BOOL);
constraint int_eq_reif(travel_00012_00007,aux100,aux1279_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1280,-14,opponent_00012_00007,opponent_00012_00008],0);
constraint int_eq_reif(aux1596,travel_00012_00008,aux1281_BOOL);
constraint int_eq_reif(travel_00012_00008,aux97,aux1282_BOOL);
constraint int_eq_reif(travel_00012_00008,0,aux1283_BOOL);
constraint int_eq_reif(travel_00012_00008,aux98,aux1284_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1285,-14,opponent_00012_00008,opponent_00012_00009],0);
constraint int_eq_reif(aux1597,travel_00012_00009,aux1286_BOOL);
constraint int_eq_reif(travel_00012_00009,aux96,aux1287_BOOL);
constraint int_eq_reif(travel_00012_00009,0,aux1288_BOOL);
constraint int_eq_reif(travel_00012_00009,aux97,aux1289_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1290,-14,opponent_00012_00009,opponent_00012_00010],0);
constraint int_eq_reif(aux1598,travel_00012_00010,aux1291_BOOL);
constraint int_eq_reif(travel_00012_00010,aux95,aux1292_BOOL);
constraint int_eq_reif(travel_00012_00010,0,aux1293_BOOL);
constraint int_eq_reif(travel_00012_00010,aux96,aux1294_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1295,-14,opponent_00012_00010,opponent_00012_00011],0);
constraint int_eq_reif(aux1599,travel_00012_00011,aux1296_BOOL);
constraint int_eq_reif(travel_00012_00011,aux94,aux1297_BOOL);
constraint int_eq_reif(travel_00012_00011,0,aux1298_BOOL);
constraint int_eq_reif(travel_00012_00011,aux95,aux1299_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1300,-14,opponent_00012_00011,opponent_00012_00012],0);
constraint int_eq_reif(aux1600,travel_00012_00012,aux1301_BOOL);
constraint int_eq_reif(travel_00012_00012,aux93,aux1302_BOOL);
constraint int_eq_reif(travel_00012_00012,0,aux1303_BOOL);
constraint int_eq_reif(travel_00012_00012,aux94,aux1304_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1305,-14,opponent_00012_00012,opponent_00012_00013],0);
constraint int_eq_reif(aux1601,travel_00012_00013,aux1306_BOOL);
constraint int_eq_reif(travel_00012_00013,aux92,aux1307_BOOL);
constraint int_eq_reif(travel_00012_00013,0,aux1308_BOOL);
constraint int_eq_reif(travel_00012_00013,aux93,aux1309_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1310,-14,opponent_00013_00001,opponent_00013_00002],0);
constraint int_eq_reif(aux1602,travel_00013_00002,aux1311_BOOL);
constraint int_eq_reif(aux84,travel_00013_00002,aux1312_BOOL);
constraint int_eq_reif(0,travel_00013_00002,aux1313_BOOL);
constraint int_eq_reif(aux87,travel_00013_00002,aux1314_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1315,-14,opponent_00013_00002,opponent_00013_00003],0);
constraint int_eq_reif(aux1603,travel_00013_00003,aux1316_BOOL);
constraint int_eq_reif(aux82,travel_00013_00003,aux1317_BOOL);
constraint int_eq_reif(0,travel_00013_00003,aux1318_BOOL);
constraint int_eq_reif(aux84,travel_00013_00003,aux1319_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1320,-14,opponent_00013_00003,opponent_00013_00004],0);
constraint int_eq_reif(aux1604,travel_00013_00004,aux1321_BOOL);
constraint int_eq_reif(aux80,travel_00013_00004,aux1322_BOOL);
constraint int_eq_reif(0,travel_00013_00004,aux1323_BOOL);
constraint int_eq_reif(aux82,travel_00013_00004,aux1324_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1325,-14,opponent_00013_00004,opponent_00013_00005],0);
constraint int_eq_reif(aux1605,travel_00013_00005,aux1326_BOOL);
constraint int_eq_reif(aux79,travel_00013_00005,aux1327_BOOL);
constraint int_eq_reif(0,travel_00013_00005,aux1328_BOOL);
constraint int_eq_reif(aux80,travel_00013_00005,aux1329_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1330,-14,opponent_00013_00005,opponent_00013_00006],0);
constraint int_eq_reif(aux1606,travel_00013_00006,aux1331_BOOL);
constraint int_eq_reif(aux86,travel_00013_00006,aux1332_BOOL);
constraint int_eq_reif(0,travel_00013_00006,aux1333_BOOL);
constraint int_eq_reif(aux79,travel_00013_00006,aux1334_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1335,-14,opponent_00013_00006,opponent_00013_00007],0);
constraint int_eq_reif(aux1607,travel_00013_00007,aux1336_BOOL);
constraint int_eq_reif(aux85,travel_00013_00007,aux1337_BOOL);
constraint int_eq_reif(0,travel_00013_00007,aux1338_BOOL);
constraint int_eq_reif(aux86,travel_00013_00007,aux1339_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1340,-14,opponent_00013_00007,opponent_00013_00008],0);
constraint int_eq_reif(aux1608,travel_00013_00008,aux1341_BOOL);
constraint int_eq_reif(aux81,travel_00013_00008,aux1342_BOOL);
constraint int_eq_reif(0,travel_00013_00008,aux1343_BOOL);
constraint int_eq_reif(aux85,travel_00013_00008,aux1344_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1345,-14,opponent_00013_00008,opponent_00013_00009],0);
constraint int_eq_reif(aux1609,travel_00013_00009,aux1346_BOOL);
constraint int_eq_reif(aux83,travel_00013_00009,aux1347_BOOL);
constraint int_eq_reif(0,travel_00013_00009,aux1348_BOOL);
constraint int_eq_reif(aux81,travel_00013_00009,aux1349_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1350,-14,opponent_00013_00009,opponent_00013_00010],0);
constraint int_eq_reif(aux1610,travel_00013_00010,aux1351_BOOL);
constraint int_eq_reif(aux89,travel_00013_00010,aux1352_BOOL);
constraint int_eq_reif(0,travel_00013_00010,aux1353_BOOL);
constraint int_eq_reif(aux83,travel_00013_00010,aux1354_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1355,-14,opponent_00013_00010,opponent_00013_00011],0);
constraint int_eq_reif(aux1611,travel_00013_00011,aux1356_BOOL);
constraint int_eq_reif(aux90,travel_00013_00011,aux1357_BOOL);
constraint int_eq_reif(0,travel_00013_00011,aux1358_BOOL);
constraint int_eq_reif(aux89,travel_00013_00011,aux1359_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1360,-14,opponent_00013_00011,opponent_00013_00012],0);
constraint int_eq_reif(aux1612,travel_00013_00012,aux1361_BOOL);
constraint int_eq_reif(aux91,travel_00013_00012,aux1362_BOOL);
constraint int_eq_reif(0,travel_00013_00012,aux1363_BOOL);
constraint int_eq_reif(aux90,travel_00013_00012,aux1364_BOOL);
constraint int_lin_eq([-1,1,14,1],[aux1365,-14,opponent_00013_00012,opponent_00013_00013],0);
constraint int_eq_reif(aux1613,travel_00013_00013,aux1366_BOOL);
constraint int_eq_reif(aux88,travel_00013_00013,aux1367_BOOL);
constraint int_eq_reif(0,travel_00013_00013,aux1368_BOOL);
constraint int_eq_reif(aux91,travel_00013_00013,aux1369_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00014_00001,opponent_00014_00002,aux1370,-28],0);
constraint int_eq_reif(aux1614,travel_00014_00002,aux1371_BOOL);
constraint int_eq_reif(aux174,travel_00014_00002,aux1372_BOOL);
constraint int_eq_reif(0,travel_00014_00002,aux1373_BOOL);
constraint int_eq_reif(aux13,travel_00014_00002,aux1374_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00014_00002,opponent_00014_00003,aux1375,-14],0);
constraint int_eq_reif(aux1615,travel_00014_00003,aux1376_BOOL);
constraint int_eq_reif(aux173,travel_00014_00003,aux1377_BOOL);
constraint int_eq_reif(0,travel_00014_00003,aux1378_BOOL);
constraint int_eq_reif(aux174,travel_00014_00003,aux1379_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00014_00003,opponent_00014_00004,aux1380,-14],0);
constraint int_eq_reif(aux1616,travel_00014_00004,aux1381_BOOL);
constraint int_eq_reif(aux171,travel_00014_00004,aux1382_BOOL);
constraint int_eq_reif(0,travel_00014_00004,aux1383_BOOL);
constraint int_eq_reif(aux173,travel_00014_00004,aux1384_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00014_00004,opponent_00014_00005,aux1385,-14],0);
constraint int_eq_reif(aux1617,travel_00014_00005,aux1386_BOOL);
constraint int_eq_reif(aux172,travel_00014_00005,aux1387_BOOL);
constraint int_eq_reif(0,travel_00014_00005,aux1388_BOOL);
constraint int_eq_reif(aux171,travel_00014_00005,aux1389_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00014_00005,opponent_00014_00006,aux1390,-14],0);
constraint int_eq_reif(aux1618,travel_00014_00006,aux1391_BOOL);
constraint int_eq_reif(aux179,travel_00014_00006,aux1392_BOOL);
constraint int_eq_reif(0,travel_00014_00006,aux1393_BOOL);
constraint int_eq_reif(aux172,travel_00014_00006,aux1394_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00014_00006,opponent_00014_00007,aux1395,-14],0);
constraint int_eq_reif(aux1619,travel_00014_00007,aux1396_BOOL);
constraint int_eq_reif(aux180,travel_00014_00007,aux1397_BOOL);
constraint int_eq_reif(0,travel_00014_00007,aux1398_BOOL);
constraint int_eq_reif(aux179,travel_00014_00007,aux1399_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00014_00007,opponent_00014_00008,aux1400,-14],0);
constraint int_eq_reif(aux1620,travel_00014_00008,aux1401_BOOL);
constraint int_eq_reif(aux181,travel_00014_00008,aux1402_BOOL);
constraint int_eq_reif(0,travel_00014_00008,aux1403_BOOL);
constraint int_eq_reif(aux180,travel_00014_00008,aux1404_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00014_00008,opponent_00014_00009,aux1405,-14],0);
constraint int_eq_reif(aux1621,travel_00014_00009,aux1406_BOOL);
constraint int_eq_reif(aux182,travel_00014_00009,aux1407_BOOL);
constraint int_eq_reif(0,travel_00014_00009,aux1408_BOOL);
constraint int_eq_reif(aux181,travel_00014_00009,aux1409_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00014_00009,opponent_00014_00010,aux1410,-14],0);
constraint int_eq_reif(aux1622,travel_00014_00010,aux1411_BOOL);
constraint int_eq_reif(aux176,travel_00014_00010,aux1412_BOOL);
constraint int_eq_reif(0,travel_00014_00010,aux1413_BOOL);
constraint int_eq_reif(aux182,travel_00014_00010,aux1414_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00014_00010,opponent_00014_00011,aux1415,-14],0);
constraint int_eq_reif(aux1623,travel_00014_00011,aux1416_BOOL);
constraint int_eq_reif(aux177,travel_00014_00011,aux1417_BOOL);
constraint int_eq_reif(0,travel_00014_00011,aux1418_BOOL);
constraint int_eq_reif(aux176,travel_00014_00011,aux1419_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00014_00011,opponent_00014_00012,aux1420,-14],0);
constraint int_eq_reif(aux1624,travel_00014_00012,aux1421_BOOL);
constraint int_eq_reif(aux178,travel_00014_00012,aux1422_BOOL);
constraint int_eq_reif(0,travel_00014_00012,aux1423_BOOL);
constraint int_eq_reif(aux177,travel_00014_00012,aux1424_BOOL);
constraint int_lin_eq([14,1,-1,1],[opponent_00014_00012,opponent_00014_00013,aux1425,-14],0);
constraint int_eq_reif(aux1625,travel_00014_00013,aux1426_BOOL);
constraint int_eq_reif(aux175,travel_00014_00013,aux1427_BOOL);
constraint int_eq_reif(0,travel_00014_00013,aux1428_BOOL);
constraint int_eq_reif(aux178,travel_00014_00013,aux1429_BOOL);
constraint int_eq_reif(0,travel_00001_00014,aux1430_BOOL);
constraint int_eq_reif(aux170,travel_00001_00014,aux1431_BOOL);
constraint int_eq_reif(0,travel_00002_00014,aux1432_BOOL);
constraint int_eq_reif(aux65,travel_00002_00014,aux1433_BOOL);
constraint int_eq_reif(travel_00003_00014,0,aux1434_BOOL);
constraint int_eq_reif(travel_00003_00014,aux43,aux1435_BOOL);
constraint int_eq_reif(travel_00004_00014,0,aux1436_BOOL);
constraint int_eq_reif(aux36,travel_00004_00014,aux1437_BOOL);
constraint int_eq_reif(0,travel_00005_00014,aux1438_BOOL);
constraint int_eq_reif(travel_00005_00014,aux25,aux1439_BOOL);
constraint int_eq_reif(0,travel_00006_00014,aux1440_BOOL);
constraint int_eq_reif(aux165,travel_00006_00014,aux1441_BOOL);
constraint int_eq_reif(0,travel_00007_00014,aux1442_BOOL);
constraint int_eq_reif(aux77,travel_00007_00014,aux1443_BOOL);
constraint int_eq_reif(travel_00008_00014,0,aux1444_BOOL);
constraint int_eq_reif(travel_00008_00014,aux156,aux1445_BOOL);
constraint int_eq_reif(travel_00009_00014,0,aux1446_BOOL);
constraint int_eq_reif(aux129,travel_00009_00014,aux1447_BOOL);
constraint int_eq_reif(0,travel_00010_00014,aux1448_BOOL);
constraint int_eq_reif(aux140,travel_00010_00014,aux1449_BOOL);
constraint int_eq_reif(travel_00011_00014,0,aux1450_BOOL);
constraint int_eq_reif(travel_00011_00014,aux116,aux1451_BOOL);
constraint int_eq_reif(travel_00012_00014,0,aux1452_BOOL);
constraint int_eq_reif(travel_00012_00014,aux92,aux1453_BOOL);
constraint int_eq_reif(0,travel_00013_00014,aux1454_BOOL);
constraint int_eq_reif(aux88,travel_00013_00014,aux1455_BOOL);
constraint int_eq_reif(0,travel_00014_00014,aux1456_BOOL);
constraint int_eq_reif(aux175,travel_00014_00014,aux1457_BOOL);
constraint array_var_int_element(aux561, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux1);
constraint array_var_int_element(aux559, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux2);
constraint array_var_int_element(aux560, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux3);
constraint array_var_int_element(aux556, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux4);
constraint array_var_int_element(aux551, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux5);
constraint array_var_int_element(aux549, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux6);
constraint array_var_int_element(aux552, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux7);
constraint array_var_int_element(aux553, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux8);
constraint array_var_int_element(aux550, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux9);
constraint array_var_int_element(aux554, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux10);
constraint array_var_int_element(aux555, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux11);
constraint array_var_int_element(aux557, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux12);
constraint array_var_int_element(aux547, [2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux13);
constraint array_var_int_element(opponent_00005_00003, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5], aux14);
constraint array_var_int_element(opponent_00005_00004, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5], aux15);
constraint array_var_int_element(opponent_00005_00006, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5], aux16);
constraint array_var_int_element(opponent_00005_00005, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5], aux17);
constraint array_var_int_element(opponent_00005_00001, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5], aux18);
constraint array_var_int_element(opponent_00005_00002, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5], aux19);
constraint array_var_int_element(opponent_00005_00008, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5], aux20);
constraint array_var_int_element(opponent_00005_00007, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5], aux21);
constraint array_var_int_element(opponent_00005_00009, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5], aux22);
constraint array_var_int_element(opponent_00005_00011, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5], aux23);
constraint array_var_int_element(opponent_00005_00010, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5], aux24);
constraint array_var_int_element(opponent_00005_00013, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5], aux25);
constraint array_var_int_element(opponent_00005_00012, [4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5], aux26);
constraint array_var_int_element(opponent_00004_00001, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4], aux27);
constraint array_var_int_element(opponent_00004_00004, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4], aux28);
constraint array_var_int_element(opponent_00004_00005, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4], aux29);
constraint array_var_int_element(opponent_00004_00003, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4], aux30);
constraint array_var_int_element(opponent_00004_00002, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4], aux31);
constraint array_var_int_element(opponent_00004_00006, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4], aux32);
constraint array_var_int_element(opponent_00004_00007, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4], aux33);
constraint array_var_int_element(opponent_00004_00008, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4], aux34);
constraint array_var_int_element(opponent_00004_00009, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4], aux35);
constraint array_var_int_element(opponent_00004_00013, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4], aux36);
constraint array_var_int_element(opponent_00004_00010, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4], aux37);
constraint array_var_int_element(opponent_00004_00011, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4], aux38);
constraint array_var_int_element(opponent_00004_00012, [3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4], aux39);
constraint array_var_int_element(opponent_00003_00009, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3], aux40);
constraint array_var_int_element(opponent_00003_00011, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3], aux41);
constraint array_var_int_element(opponent_00003_00010, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3], aux42);
constraint array_var_int_element(opponent_00003_00013, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3], aux43);
constraint array_var_int_element(opponent_00003_00012, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3], aux44);
constraint array_var_int_element(opponent_00003_00001, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3], aux45);
constraint array_var_int_element(opponent_00003_00002, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3], aux46);
constraint array_var_int_element(opponent_00003_00003, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3], aux47);
constraint array_var_int_element(opponent_00003_00004, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3], aux48);
constraint array_var_int_element(opponent_00003_00005, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3], aux49);
constraint array_var_int_element(opponent_00003_00006, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3], aux50);
constraint array_var_int_element(opponent_00003_00008, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3], aux51);
constraint array_var_int_element(opponent_00003_00007, [2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3], aux52);
constraint array_var_int_element(opponent_00002_00003, [1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux53);
constraint array_var_int_element(opponent_00002_00002, [1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux54);
constraint array_var_int_element(opponent_00002_00006, [1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux55);
constraint array_var_int_element(opponent_00002_00001, [1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux56);
constraint array_var_int_element(opponent_00002_00007, [1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux57);
constraint array_var_int_element(opponent_00002_00005, [1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux58);
constraint array_var_int_element(opponent_00002_00004, [1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux59);
constraint array_var_int_element(opponent_00002_00011, [1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux60);
constraint array_var_int_element(opponent_00002_00012, [1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux61);
constraint array_var_int_element(opponent_00002_00010, [1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux62);
constraint array_var_int_element(opponent_00002_00008, [1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux63);
constraint array_var_int_element(opponent_00002_00009, [1, 0, 1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux64);
constraint array_var_int_element(aux548, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2], aux65);
constraint array_var_int_element(opponent_00007_00001, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux66);
constraint array_var_int_element(opponent_00007_00002, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux67);
constraint array_var_int_element(opponent_00007_00004, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux68);
constraint array_var_int_element(opponent_00007_00003, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux69);
constraint array_var_int_element(opponent_00007_00006, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux70);
constraint array_var_int_element(opponent_00007_00005, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux71);
constraint array_var_int_element(opponent_00007_00008, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux72);
constraint array_var_int_element(opponent_00007_00007, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux73);
constraint array_var_int_element(opponent_00007_00009, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux74);
constraint array_var_int_element(opponent_00007_00011, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux75);
constraint array_var_int_element(opponent_00007_00010, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux76);
constraint array_var_int_element(opponent_00007_00013, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux77);
constraint array_var_int_element(opponent_00007_00012, [6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7], aux78);
constraint array_var_int_element(opponent_00013_00005, [2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux79);
constraint array_var_int_element(opponent_00013_00004, [2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux80);
constraint array_var_int_element(opponent_00013_00008, [2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux81);
constraint array_var_int_element(opponent_00013_00003, [2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux82);
constraint array_var_int_element(opponent_00013_00009, [2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux83);
constraint array_var_int_element(opponent_00013_00002, [2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux84);
constraint array_var_int_element(opponent_00013_00007, [2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux85);
constraint array_var_int_element(opponent_00013_00006, [2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux86);
constraint array_var_int_element(opponent_00013_00001, [2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux87);
constraint array_var_int_element(opponent_00013_00013, [2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux88);
constraint array_var_int_element(opponent_00013_00010, [2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux89);
constraint array_var_int_element(opponent_00013_00011, [2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux90);
constraint array_var_int_element(opponent_00013_00012, [2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1], aux91);
constraint array_var_int_element(opponent_00012_00013, [3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux92);
constraint array_var_int_element(opponent_00012_00012, [3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux93);
constraint array_var_int_element(opponent_00012_00011, [3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux94);
constraint array_var_int_element(opponent_00012_00010, [3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux95);
constraint array_var_int_element(opponent_00012_00009, [3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux96);
constraint array_var_int_element(opponent_00012_00008, [3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux97);
constraint array_var_int_element(opponent_00012_00007, [3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux98);
constraint array_var_int_element(opponent_00012_00005, [3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux99);
constraint array_var_int_element(opponent_00012_00006, [3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux100);
constraint array_var_int_element(opponent_00012_00003, [3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux101);
constraint array_var_int_element(opponent_00012_00004, [3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux102);
constraint array_var_int_element(opponent_00012_00001, [3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux103);
constraint array_var_int_element(opponent_00012_00002, [3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2], aux104);
constraint array_var_int_element(opponent_00011_00007, [4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux105);
constraint array_var_int_element(opponent_00011_00006, [4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux106);
constraint array_var_int_element(opponent_00011_00005, [4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux107);
constraint array_var_int_element(opponent_00011_00004, [4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux108);
constraint array_var_int_element(opponent_00011_00009, [4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux109);
constraint array_var_int_element(opponent_00011_00008, [4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux110);
constraint array_var_int_element(opponent_00011_00003, [4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux111);
constraint array_var_int_element(opponent_00011_00002, [4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux112);
constraint array_var_int_element(opponent_00011_00001, [4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux113);
constraint array_var_int_element(opponent_00011_00011, [4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux114);
constraint array_var_int_element(opponent_00011_00012, [4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux115);
constraint array_var_int_element(opponent_00011_00013, [4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux116);
constraint array_var_int_element(opponent_00011_00010, [4, 5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3], aux117);
constraint array_var_int_element(opponent_00009_00002, [6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux118);
constraint array_var_int_element(opponent_00009_00001, [6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux119);
constraint array_var_int_element(opponent_00009_00004, [6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux120);
constraint array_var_int_element(opponent_00009_00003, [6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux121);
constraint array_var_int_element(opponent_00009_00006, [6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux122);
constraint array_var_int_element(opponent_00009_00005, [6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux123);
constraint array_var_int_element(opponent_00009_00008, [6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux124);
constraint array_var_int_element(opponent_00009_00007, [6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux125);
constraint array_var_int_element(opponent_00009_00009, [6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux126);
constraint array_var_int_element(opponent_00009_00012, [6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux127);
constraint array_var_int_element(opponent_00009_00011, [6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux128);
constraint array_var_int_element(opponent_00009_00013, [6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux129);
constraint array_var_int_element(opponent_00009_00010, [6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5], aux130);
constraint array_var_int_element(opponent_00010_00005, [5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux131);
constraint array_var_int_element(opponent_00010_00006, [5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux132);
constraint array_var_int_element(opponent_00010_00003, [5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux133);
constraint array_var_int_element(opponent_00010_00004, [5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux134);
constraint array_var_int_element(opponent_00010_00009, [5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux135);
constraint array_var_int_element(opponent_00010_00007, [5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux136);
constraint array_var_int_element(opponent_00010_00008, [5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux137);
constraint array_var_int_element(opponent_00010_00001, [5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux138);
constraint array_var_int_element(opponent_00010_00002, [5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux139);
constraint array_var_int_element(opponent_00010_00013, [5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux140);
constraint array_var_int_element(opponent_00010_00012, [5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux141);
constraint array_var_int_element(opponent_00010_00011, [5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux142);
constraint array_var_int_element(opponent_00010_00010, [5, 6, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4], aux143);
constraint array_var_int_element(opponent_00008_00001, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux144);
constraint array_var_int_element(opponent_00008_00010, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux145);
constraint array_var_int_element(opponent_00008_00012, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux146);
constraint array_var_int_element(opponent_00008_00011, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux147);
constraint array_var_int_element(opponent_00008_00006, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux148);
constraint array_var_int_element(opponent_00008_00007, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux149);
constraint array_var_int_element(opponent_00008_00008, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux150);
constraint array_var_int_element(opponent_00008_00009, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux151);
constraint array_var_int_element(opponent_00008_00002, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux152);
constraint array_var_int_element(opponent_00008_00003, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux153);
constraint array_var_int_element(opponent_00008_00004, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux154);
constraint array_var_int_element(opponent_00008_00005, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux155);
constraint array_var_int_element(opponent_00008_00013, [7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6], aux156);
constraint array_var_int_element(opponent_00006_00008, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6], aux157);
constraint array_var_int_element(opponent_00006_00009, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6], aux158);
constraint array_var_int_element(opponent_00006_00004, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6], aux159);
constraint array_var_int_element(opponent_00006_00005, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6], aux160);
constraint array_var_int_element(opponent_00006_00006, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6], aux161);
constraint array_var_int_element(opponent_00006_00007, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6], aux162);
constraint array_var_int_element(opponent_00006_00011, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6], aux163);
constraint array_var_int_element(opponent_00006_00012, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6], aux164);
constraint array_var_int_element(opponent_00006_00013, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6], aux165);
constraint array_var_int_element(opponent_00006_00010, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6], aux166);
constraint array_var_int_element(opponent_00006_00002, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6], aux167);
constraint array_var_int_element(opponent_00006_00003, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6], aux168);
constraint array_var_int_element(opponent_00006_00001, [5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 6], aux169);
constraint array_var_int_element(aux558, [2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux170);
constraint array_var_int_element(opponent_00014_00004, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux171);
constraint array_var_int_element(opponent_00014_00005, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux172);
constraint array_var_int_element(opponent_00014_00003, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux173);
constraint array_var_int_element(opponent_00014_00002, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux174);
constraint array_var_int_element(opponent_00014_00013, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux175);
constraint array_var_int_element(opponent_00014_00010, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux176);
constraint array_var_int_element(opponent_00014_00011, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux177);
constraint array_var_int_element(opponent_00014_00012, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux178);
constraint array_var_int_element(opponent_00014_00006, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux179);
constraint array_var_int_element(opponent_00014_00007, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux180);
constraint array_var_int_element(opponent_00014_00008, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux181);
constraint array_var_int_element(opponent_00014_00009, [1, 2, 3, 4, 5, 6, 7, 6, 5, 4, 3, 2, 1], aux182);
constraint int_ne_reif(venue_00010_00008,2,aux183_BOOL);
constraint int_ne_reif(2,venue_00004_00012,aux184_BOOL);
constraint int_ne_reif(2,venue_00003_00007,aux185_BOOL);
constraint int_ne_reif(1,venue_00011_00002,aux186_BOOL);
constraint int_ne_reif(venue_00002_00006,1,aux187_BOOL);
constraint int_ne_reif(1,venue_00008_00012,aux188_BOOL);
constraint int_ne_reif(2,venue_00008_00002,aux189_BOOL);
constraint int_ne_reif(1,venue_00011_00008,aux190_BOOL);
constraint int_ne_reif(2,venue_00004_00008,aux191_BOOL);
constraint int_ne_reif(1,venue_00012_00009,aux192_BOOL);
constraint int_ne_reif(1,venue_00008_00006,aux193_BOOL);
constraint int_ne_reif(venue_00006_00005,1,aux194_BOOL);
constraint int_ne_reif(2,venue_00012_00012,aux195_BOOL);
constraint int_ne_reif(venue_00002_00002,2,aux196_BOOL);
constraint int_ne_reif(venue_00007_00005,2,aux197_BOOL);
constraint int_ne_reif(venue_00002_00002,1,aux198_BOOL);
constraint int_ne_reif(venue_00010_00006,1,aux199_BOOL);
constraint int_ne_reif(venue_00001_00002,1,aux200_BOOL);
constraint int_ne_reif(1,venue_00008_00003,aux201_BOOL);
constraint int_ne_reif(venue_00001_00002,2,aux202_BOOL);
constraint int_ne_reif(venue_00002_00008,2,aux203_BOOL);
constraint int_ne_reif(1,venue_00009_00007,aux204_BOOL);
constraint int_ne_reif(2,venue_00012_00007,aux205_BOOL);
constraint int_ne_reif(venue_00007_00008,1,aux206_BOOL);
constraint int_ne_reif(venue_00013_00008,2,aux207_BOOL);
constraint int_ne_reif(2,venue_00009_00005,aux208_BOOL);
constraint int_ne_reif(1,venue_00003_00004,aux209_BOOL);
constraint int_ne_reif(venue_00010_00010,1,aux210_BOOL);
constraint int_ne_reif(2,venue_00011_00006,aux211_BOOL);
constraint int_ne_reif(1,venue_00004_00010,aux212_BOOL);
constraint int_ne_reif(2,venue_00008_00009,aux213_BOOL);
constraint int_ne_reif(venue_00006_00012,2,aux214_BOOL);
constraint int_ne_reif(venue_00002_00010,1,aux215_BOOL);
constraint int_ne_reif(venue_00006_00012,1,aux216_BOOL);
constraint int_ne_reif(venue_00001_00013,2,aux217_BOOL);
constraint int_ne_reif(venue_00001_00013,1,aux218_BOOL);
constraint int_ne_reif(venue_00001_00001,1,aux219_BOOL);
constraint int_ne_reif(venue_00001_00001,2,aux220_BOOL);
constraint int_ne_reif(venue_00005_00012,1,aux221_BOOL);
constraint int_ne_reif(1,venue_00012_00006,aux222_BOOL);
constraint int_ne_reif(venue_00010_00012,1,aux223_BOOL);
constraint int_ne_reif(venue_00013_00010,1,aux224_BOOL);
constraint int_ne_reif(1,venue_00008_00009,aux225_BOOL);
constraint int_ne_reif(1,venue_00004_00003,aux226_BOOL);
constraint int_ne_reif(1,venue_00009_00004,aux227_BOOL);
constraint int_ne_reif(2,venue_00009_00003,aux228_BOOL);
constraint int_ne_reif(venue_00010_00012,2,aux229_BOOL);
constraint int_ne_reif(1,venue_00012_00003,aux230_BOOL);
constraint int_ne_reif(1,venue_00011_00005,aux231_BOOL);
constraint int_ne_reif(venue_00001_00005,2,aux232_BOOL);
constraint int_ne_reif(2,venue_00012_00004,aux233_BOOL);
constraint int_ne_reif(venue_00001_00008,1,aux234_BOOL);
constraint int_ne_reif(venue_00013_00006,1,aux235_BOOL);
constraint int_ne_reif(venue_00005_00008,2,aux236_BOOL);
constraint int_ne_reif(venue_00002_00003,2,aux237_BOOL);
constraint int_ne_reif(venue_00002_00007,2,aux238_BOOL);
constraint int_ne_reif(venue_00010_00007,2,aux239_BOOL);
constraint int_ne_reif(2,venue_00012_00009,aux240_BOOL);
constraint int_ne_reif(venue_00005_00006,1,aux241_BOOL);
constraint int_ne_reif(1,venue_00004_00007,aux242_BOOL);
constraint int_ne_reif(venue_00006_00007,2,aux243_BOOL);
constraint int_ne_reif(venue_00002_00005,1,aux244_BOOL);
constraint int_ne_reif(2,venue_00008_00004,aux245_BOOL);
constraint int_ne_reif(1,venue_00003_00002,aux246_BOOL);
constraint int_ne_reif(venue_00014_00005,1,aux247_BOOL);
constraint int_ne_reif(1,venue_00003_00009,aux248_BOOL);
constraint int_ne_reif(venue_00005_00012,2,aux249_BOOL);
constraint int_ne_reif(2,venue_00009_00010,aux250_BOOL);
constraint int_ne_reif(2,venue_00004_00005,aux251_BOOL);
constraint int_ne_reif(venue_00005_00010,1,aux252_BOOL);
constraint int_ne_reif(venue_00010_00005,1,aux253_BOOL);
constraint int_ne_reif(venue_00007_00004,2,aux254_BOOL);
constraint int_ne_reif(venue_00014_00007,2,aux255_BOOL);
constraint int_ne_reif(2,venue_00003_00003,aux256_BOOL);
constraint int_ne_reif(2,venue_00008_00013,aux257_BOOL);
constraint int_ne_reif(1,venue_00008_00001,aux258_BOOL);
constraint int_ne_reif(2,venue_00008_00001,aux259_BOOL);
constraint int_ne_reif(1,venue_00008_00013,aux260_BOOL);
constraint int_ne_reif(2,venue_00004_00006,aux261_BOOL);
constraint int_ne_reif(1,venue_00008_00008,aux262_BOOL);
constraint int_ne_reif(2,venue_00009_00012,aux263_BOOL);
constraint int_ne_reif(1,venue_00011_00010,aux264_BOOL);
constraint int_ne_reif(1,venue_00009_00005,aux265_BOOL);
constraint int_ne_reif(venue_00013_00011,1,aux266_BOOL);
constraint int_ne_reif(venue_00014_00008,2,aux267_BOOL);
constraint int_ne_reif(2,venue_00003_00009,aux268_BOOL);
constraint int_ne_reif(1,venue_00012_00007,aux269_BOOL);
constraint int_ne_reif(2,venue_00004_00003,aux270_BOOL);
constraint int_ne_reif(venue_00005_00007,2,aux271_BOOL);
constraint int_ne_reif(2,venue_00012_00003,aux272_BOOL);
constraint int_ne_reif(1,venue_00009_00011,aux273_BOOL);
constraint int_ne_reif(venue_00007_00013,1,aux274_BOOL);
constraint int_ne_reif(venue_00007_00013,2,aux275_BOOL);
constraint int_ne_reif(venue_00007_00001,1,aux276_BOOL);
constraint int_ne_reif(venue_00007_00001,2,aux277_BOOL);
constraint int_ne_reif(venue_00013_00003,1,aux278_BOOL);
constraint int_ne_reif(venue_00005_00005,1,aux279_BOOL);
constraint int_ne_reif(1,venue_00003_00012,aux280_BOOL);
constraint int_ne_reif(2,venue_00003_00002,aux281_BOOL);
constraint int_ne_reif(venue_00014_00003,1,aux282_BOOL);
constraint int_ne_reif(2,venue_00012_00005,aux283_BOOL);
constraint int_ne_reif(venue_00014_00006,1,aux284_BOOL);
constraint int_ne_reif(2,venue_00011_00003,aux285_BOOL);
constraint int_ne_reif(venue_00001_00008,2,aux286_BOOL);
constraint int_ne_reif(venue_00014_00012,2,aux287_BOOL);
constraint int_ne_reif(venue_00014_00010,1,aux288_BOOL);
constraint int_ne_reif(1,venue_00003_00006,aux289_BOOL);
constraint int_ne_reif(venue_00002_00007,1,aux290_BOOL);
constraint int_ne_reif(venue_00001_00011,2,aux291_BOOL);
constraint int_ne_reif(venue_00014_00012,1,aux292_BOOL);
constraint int_ne_reif(2,venue_00012_00010,aux293_BOOL);
constraint int_ne_reif(venue_00006_00013,2,aux294_BOOL);
constraint int_ne_reif(venue_00006_00013,1,aux295_BOOL);
constraint int_ne_reif(venue_00006_00001,1,aux296_BOOL);
constraint int_ne_reif(venue_00006_00001,2,aux297_BOOL);
constraint int_ne_reif(2,venue_00011_00008,aux298_BOOL);
constraint int_ne_reif(1,venue_00004_00008,aux299_BOOL);
constraint int_ne_reif(1,venue_00004_00012,aux300_BOOL);
constraint int_ne_reif(2,venue_00004_00002,aux301_BOOL);
constraint int_ne_reif(1,venue_00011_00012,aux302_BOOL);
constraint int_ne_reif(2,venue_00011_00002,aux303_BOOL);
constraint int_ne_reif(venue_00014_00011,1,aux304_BOOL);
constraint int_ne_reif(venue_00014_00013,2,aux305_BOOL);
constraint int_ne_reif(venue_00014_00013,1,aux306_BOOL);
constraint int_ne_reif(venue_00014_00001,1,aux307_BOOL);
constraint int_ne_reif(venue_00014_00001,2,aux308_BOOL);
constraint int_ne_reif(venue_00007_00006,2,aux309_BOOL);
constraint int_ne_reif(venue_00002_00004,2,aux310_BOOL);
constraint int_ne_reif(2,venue_00003_00004,aux311_BOOL);
constraint int_ne_reif(venue_00002_00009,2,aux312_BOOL);
constraint int_ne_reif(venue_00007_00004,1,aux313_BOOL);
constraint int_ne_reif(1,venue_00012_00012,aux314_BOOL);
constraint int_ne_reif(2,venue_00012_00002,aux315_BOOL);
constraint int_ne_reif(venue_00007_00009,1,aux316_BOOL);
constraint int_ne_reif(venue_00013_00009,2,aux317_BOOL);
constraint int_ne_reif(1,venue_00011_00007,aux318_BOOL);
constraint int_ne_reif(venue_00007_00010,2,aux319_BOOL);
constraint int_ne_reif(1,venue_00012_00001,aux320_BOOL);
constraint int_ne_reif(1,venue_00012_00013,aux321_BOOL);
constraint int_ne_reif(2,venue_00012_00001,aux322_BOOL);
constraint int_ne_reif(2,venue_00012_00013,aux323_BOOL);
constraint int_ne_reif(venue_00010_00003,2,aux324_BOOL);
constraint int_ne_reif(venue_00006_00006,2,aux325_BOOL);
constraint int_ne_reif(2,venue_00003_00006,aux326_BOOL);
constraint int_ne_reif(venue_00013_00004,2,aux327_BOOL);
constraint int_ne_reif(venue_00001_00003,2,aux328_BOOL);
constraint int_ne_reif(2,venue_00011_00005,aux329_BOOL);
constraint int_ne_reif(venue_00010_00004,1,aux330_BOOL);
constraint int_ne_reif(1,venue_00009_00010,aux331_BOOL);
constraint int_ne_reif(venue_00010_00006,2,aux332_BOOL);
constraint int_ne_reif(venue_00006_00010,2,aux333_BOOL);
constraint int_ne_reif(2,venue_00009_00008,aux334_BOOL);
constraint int_ne_reif(venue_00010_00010,2,aux335_BOOL);
constraint int_ne_reif(1,venue_00004_00005,aux336_BOOL);
constraint int_ne_reif(venue_00005_00003,2,aux337_BOOL);
constraint int_ne_reif(2,venue_00004_00011,aux338_BOOL);
constraint int_ne_reif(venue_00010_00009,1,aux339_BOOL);
constraint int_ne_reif(2,venue_00008_00012,aux340_BOOL);
constraint int_ne_reif(2,venue_00003_00013,aux341_BOOL);
constraint int_ne_reif(1,venue_00003_00001,aux342_BOOL);
constraint int_ne_reif(1,venue_00003_00013,aux343_BOOL);
constraint int_ne_reif(2,venue_00003_00001,aux344_BOOL);
constraint int_ne_reif(venue_00010_00011,2,aux345_BOOL);
constraint int_ne_reif(2,venue_00012_00011,aux346_BOOL);
constraint int_ne_reif(venue_00001_00004,2,aux347_BOOL);
constraint int_ne_reif(venue_00007_00012,2,aux348_BOOL);
constraint int_ne_reif(venue_00006_00004,1,aux349_BOOL);
constraint int_ne_reif(venue_00001_00009,2,aux350_BOOL);
constraint int_ne_reif(2,venue_00008_00006,aux351_BOOL);
constraint int_ne_reif(venue_00007_00012,1,aux352_BOOL);
constraint int_ne_reif(venue_00006_00009,1,aux353_BOOL);
constraint int_ne_reif(1,venue_00012_00004,aux354_BOOL);
constraint int_ne_reif(1,venue_00008_00011,aux355_BOOL);
constraint int_ne_reif(venue_00005_00011,2,aux356_BOOL);
constraint int_ne_reif(venue_00013_00007,1,aux357_BOOL);
constraint int_ne_reif(venue_00013_00012,2,aux358_BOOL);
constraint int_ne_reif(venue_00001_00007,1,aux359_BOOL);
constraint int_ne_reif(venue_00013_00012,1,aux360_BOOL);
constraint int_ne_reif(venue_00001_00007,2,aux361_BOOL);
constraint int_ne_reif(venue_00007_00010,1,aux362_BOOL);
constraint int_ne_reif(venue_00005_00010,2,aux363_BOOL);
constraint int_ne_reif(1,venue_00008_00010,aux364_BOOL);
constraint int_ne_reif(venue_00013_00002,2,aux365_BOOL);
constraint int_ne_reif(venue_00013_00010,2,aux366_BOOL);
constraint int_ne_reif(venue_00013_00003,2,aux367_BOOL);
constraint int_ne_reif(venue_00001_00005,1,aux368_BOOL);
constraint int_ne_reif(venue_00013_00004,1,aux369_BOOL);
constraint int_ne_reif(1,venue_00009_00003,aux370_BOOL);
constraint int_ne_reif(venue_00013_00009,1,aux371_BOOL);
constraint int_ne_reif(venue_00013_00006,2,aux372_BOOL);
constraint int_ne_reif(venue_00005_00003,1,aux373_BOOL);
constraint int_ne_reif(2,venue_00012_00008,aux374_BOOL);
constraint int_ne_reif(venue_00014_00009,2,aux375_BOOL);
constraint int_ne_reif(2,venue_00011_00011,aux376_BOOL);
constraint int_ne_reif(venue_00006_00007,1,aux377_BOOL);
constraint int_ne_reif(2,venue_00011_00010,aux378_BOOL);
constraint int_ne_reif(1,venue_00004_00006,aux379_BOOL);
constraint int_ne_reif(venue_00013_00011,2,aux380_BOOL);
constraint int_ne_reif(venue_00014_00003,2,aux381_BOOL);
constraint int_ne_reif(venue_00006_00003,1,aux382_BOOL);
constraint int_ne_reif(2,venue_00003_00012,aux383_BOOL);
constraint int_ne_reif(venue_00005_00006,2,aux384_BOOL);
constraint int_ne_reif(venue_00002_00005,2,aux385_BOOL);
constraint int_ne_reif(venue_00007_00002,2,aux386_BOOL);
constraint int_ne_reif(2,venue_00003_00011,aux387_BOOL);
constraint int_ne_reif(venue_00014_00004,2,aux388_BOOL);
constraint int_ne_reif(1,venue_00012_00002,aux389_BOOL);
constraint int_ne_reif(venue_00010_00003,1,aux390_BOOL);
constraint int_ne_reif(venue_00007_00002,1,aux391_BOOL);
constraint int_ne_reif(2,venue_00008_00005,aux392_BOOL);
constraint int_ne_reif(venue_00010_00005,2,aux393_BOOL);
constraint int_ne_reif(venue_00005_00004,1,aux394_BOOL);
constraint int_ne_reif(venue_00014_00007,1,aux395_BOOL);
constraint int_ne_reif(venue_00013_00002,1,aux396_BOOL);
constraint int_ne_reif(2,venue_00011_00012,aux397_BOOL);
constraint int_ne_reif(venue_00005_00009,1,aux398_BOOL);
constraint int_ne_reif(1,venue_00003_00008,aux399_BOOL);
constraint int_ne_reif(venue_00006_00004,2,aux400_BOOL);
constraint int_ne_reif(2,venue_00004_00004,aux401_BOOL);
constraint int_ne_reif(venue_00007_00003,1,aux402_BOOL);
constraint int_ne_reif(venue_00014_00011,2,aux403_BOOL);
constraint int_ne_reif(venue_00006_00009,2,aux404_BOOL);
constraint int_ne_reif(2,venue_00009_00009,aux405_BOOL);
constraint int_ne_reif(1,venue_00012_00005,aux406_BOOL);
constraint int_ne_reif(1,venue_00011_00003,aux407_BOOL);
constraint int_ne_reif(2,venue_00003_00008,aux408_BOOL);
constraint int_ne_reif(venue_00006_00008,1,aux409_BOOL);
constraint int_ne_reif(1,venue_00011_00009,aux410_BOOL);
constraint int_ne_reif(venue_00014_00008,1,aux411_BOOL);
constraint int_ne_reif(venue_00007_00007,2,aux412_BOOL);
constraint int_ne_reif(2,venue_00004_00009,aux413_BOOL);
constraint int_ne_reif(1,venue_00008_00005,aux414_BOOL);
constraint int_ne_reif(1,venue_00012_00010,aux415_BOOL);
constraint int_ne_reif(venue_00014_00005,2,aux416_BOOL);
constraint int_ne_reif(venue_00010_00008,1,aux417_BOOL);
constraint int_ne_reif(1,venue_00003_00003,aux418_BOOL);
constraint int_ne_reif(venue_00007_00005,1,aux419_BOOL);
constraint int_ne_reif(venue_00007_00011,1,aux420_BOOL);
constraint int_ne_reif(venue_00005_00005,2,aux421_BOOL);
constraint int_ne_reif(venue_00001_00011,1,aux422_BOOL);
constraint int_ne_reif(venue_00006_00005,2,aux423_BOOL);
constraint int_ne_reif(venue_00001_00012,2,aux424_BOOL);
constraint int_ne_reif(venue_00010_00011,1,aux425_BOOL);
constraint int_ne_reif(venue_00002_00008,1,aux426_BOOL);
constraint int_ne_reif(1,venue_00009_00008,aux427_BOOL);
constraint int_ne_reif(1,venue_00004_00002,aux428_BOOL);
constraint int_ne_reif(venue_00005_00008,1,aux429_BOOL);
constraint int_ne_reif(venue_00001_00012,1,aux430_BOOL);
constraint int_ne_reif(venue_00006_00003,2,aux431_BOOL);
constraint int_ne_reif(venue_00013_00008,1,aux432_BOOL);
constraint int_ne_reif(1,venue_00003_00005,aux433_BOOL);
constraint int_ne_reif(venue_00014_00002,1,aux434_BOOL);
constraint int_ne_reif(2,venue_00009_00006,aux435_BOOL);
constraint int_ne_reif(venue_00001_00006,1,aux436_BOOL);
constraint int_ne_reif(venue_00005_00011,1,aux437_BOOL);
constraint int_ne_reif(2,venue_00008_00008,aux438_BOOL);
constraint int_ne_reif(venue_00014_00002,2,aux439_BOOL);
constraint int_ne_reif(2,venue_00011_00007,aux440_BOOL);
constraint int_ne_reif(1,venue_00011_00004,aux441_BOOL);
constraint int_ne_reif(venue_00006_00011,2,aux442_BOOL);
constraint int_ne_reif(venue_00013_00005,2,aux443_BOOL);
constraint int_ne_reif(1,venue_00009_00012,aux444_BOOL);
constraint int_ne_reif(2,venue_00009_00002,aux445_BOOL);
constraint int_ne_reif(venue_00001_00010,1,aux446_BOOL);
constraint int_ne_reif(venue_00001_00003,1,aux447_BOOL);
constraint int_ne_reif(venue_00007_00009,2,aux448_BOOL);
constraint int_ne_reif(venue_00006_00008,2,aux449_BOOL);
constraint int_ne_reif(1,venue_00011_00006,aux450_BOOL);
constraint int_ne_reif(2,venue_00004_00010,aux451_BOOL);
constraint int_ne_reif(venue_00007_00007,1,aux452_BOOL);
constraint int_ne_reif(2,venue_00003_00005,aux453_BOOL);
constraint int_ne_reif(venue_00010_00002,2,aux454_BOOL);
constraint int_ne_reif(venue_00010_00002,1,aux455_BOOL);
constraint int_ne_reif(venue_00006_00006,1,aux456_BOOL);
constraint int_ne_reif(1,venue_00008_00002,aux457_BOOL);
constraint int_ne_reif(venue_00010_00004,2,aux458_BOOL);
constraint int_ne_reif(1,venue_00008_00004,aux459_BOOL);
constraint int_ne_reif(1,venue_00009_00009,aux460_BOOL);
constraint int_ne_reif(2,venue_00011_00004,aux461_BOOL);
constraint int_ne_reif(2,venue_00009_00013,aux462_BOOL);
constraint int_ne_reif(1,venue_00009_00013,aux463_BOOL);
constraint int_ne_reif(2,venue_00009_00001,aux464_BOOL);
constraint int_ne_reif(1,venue_00009_00001,aux465_BOOL);
constraint int_ne_reif(venue_00002_00011,2,aux466_BOOL);
constraint int_ne_reif(1,venue_00004_00004,aux467_BOOL);
constraint int_ne_reif(1,venue_00004_00001,aux468_BOOL);
constraint int_ne_reif(2,venue_00004_00013,aux469_BOOL);
constraint int_ne_reif(2,venue_00004_00001,aux470_BOOL);
constraint int_ne_reif(1,venue_00004_00013,aux471_BOOL);
constraint int_ne_reif(venue_00006_00010,1,aux472_BOOL);
constraint int_ne_reif(2,venue_00009_00007,aux473_BOOL);
constraint int_ne_reif(1,venue_00004_00011,aux474_BOOL);
constraint int_ne_reif(venue_00010_00007,1,aux475_BOOL);
constraint int_ne_reif(1,venue_00012_00011,aux476_BOOL);
constraint int_ne_reif(2,venue_00008_00007,aux477_BOOL);
constraint int_ne_reif(venue_00010_00009,2,aux478_BOOL);
constraint int_ne_reif(venue_00001_00006,2,aux479_BOOL);
constraint int_ne_reif(venue_00013_00005,1,aux480_BOOL);
constraint int_ne_reif(venue_00001_00004,1,aux481_BOOL);
constraint int_ne_reif(venue_00001_00009,1,aux482_BOOL);
constraint int_ne_reif(venue_00005_00002,2,aux483_BOOL);
constraint int_ne_reif(venue_00013_00007,2,aux484_BOOL);
constraint int_ne_reif(venue_00001_00010,2,aux485_BOOL);
constraint int_ne_reif(1,venue_00003_00010,aux486_BOOL);
constraint int_ne_reif(2,venue_00008_00011,aux487_BOOL);
constraint int_ne_reif(venue_00005_00002,1,aux488_BOOL);
constraint int_ne_reif(1,venue_00009_00006,aux489_BOOL);
constraint int_ne_reif(venue_00013_00013,2,aux490_BOOL);
constraint int_ne_reif(venue_00013_00013,1,aux491_BOOL);
constraint int_ne_reif(2,venue_00004_00007,aux492_BOOL);
constraint int_ne_reif(1,venue_00012_00008,aux493_BOOL);
constraint int_ne_reif(venue_00013_00001,2,aux494_BOOL);
constraint int_ne_reif(venue_00013_00001,1,aux495_BOOL);
constraint int_ne_reif(venue_00005_00007,1,aux496_BOOL);
constraint int_ne_reif(2,venue_00003_00010,aux497_BOOL);
constraint int_ne_reif(venue_00002_00006,2,aux498_BOOL);
constraint int_ne_reif(2,venue_00011_00013,aux499_BOOL);
constraint int_ne_reif(1,venue_00011_00013,aux500_BOOL);
constraint int_ne_reif(2,venue_00011_00001,aux501_BOOL);
constraint int_ne_reif(1,venue_00011_00001,aux502_BOOL);
constraint int_ne_reif(1,venue_00008_00007,aux503_BOOL);
constraint int_ne_reif(venue_00014_00006,2,aux504_BOOL);
constraint int_ne_reif(venue_00007_00003,2,aux505_BOOL);
constraint int_ne_reif(venue_00002_00012,1,aux506_BOOL);
constraint int_ne_reif(venue_00002_00012,2,aux507_BOOL);
constraint int_ne_reif(2,venue_00012_00006,aux508_BOOL);
constraint int_ne_reif(2,venue_00008_00003,aux509_BOOL);
constraint int_ne_reif(venue_00006_00011,1,aux510_BOOL);
constraint int_ne_reif(1,venue_00003_00007,aux511_BOOL);
constraint int_ne_reif(venue_00014_00010,2,aux512_BOOL);
constraint int_ne_reif(venue_00002_00013,1,aux513_BOOL);
constraint int_ne_reif(venue_00002_00013,2,aux514_BOOL);
constraint int_ne_reif(venue_00002_00001,2,aux515_BOOL);
constraint int_ne_reif(venue_00002_00001,1,aux516_BOOL);
constraint int_ne_reif(2,venue_00011_00009,aux517_BOOL);
constraint int_ne_reif(venue_00007_00011,2,aux518_BOOL);
constraint int_ne_reif(venue_00007_00008,2,aux519_BOOL);
constraint int_ne_reif(1,venue_00011_00011,aux520_BOOL);
constraint int_ne_reif(1,venue_00009_00002,aux521_BOOL);
constraint int_ne_reif(venue_00014_00004,1,aux522_BOOL);
constraint int_ne_reif(venue_00002_00011,1,aux523_BOOL);
constraint int_ne_reif(venue_00014_00009,1,aux524_BOOL);
constraint int_ne_reif(2,venue_00009_00004,aux525_BOOL);
constraint int_ne_reif(2,venue_00009_00011,aux526_BOOL);
constraint int_ne_reif(1,venue_00003_00011,aux527_BOOL);
constraint int_ne_reif(venue_00007_00006,1,aux528_BOOL);
constraint int_ne_reif(1,venue_00004_00009,aux529_BOOL);
constraint int_ne_reif(2,venue_00008_00010,aux530_BOOL);
constraint int_ne_reif(venue_00002_00004,1,aux531_BOOL);
constraint int_ne_reif(venue_00002_00003,1,aux532_BOOL);
constraint int_ne_reif(venue_00005_00013,2,aux533_BOOL);
constraint int_ne_reif(venue_00005_00013,1,aux534_BOOL);
constraint int_ne_reif(venue_00005_00001,2,aux535_BOOL);
constraint int_ne_reif(venue_00005_00001,1,aux536_BOOL);
constraint int_ne_reif(venue_00010_00013,2,aux537_BOOL);
constraint int_ne_reif(venue_00010_00013,1,aux538_BOOL);
constraint int_ne_reif(venue_00010_00001,2,aux539_BOOL);
constraint int_ne_reif(venue_00010_00001,1,aux540_BOOL);
constraint int_ne_reif(venue_00006_00002,2,aux541_BOOL);
constraint int_ne_reif(venue_00002_00009,1,aux542_BOOL);
constraint int_ne_reif(venue_00005_00004,2,aux543_BOOL);
constraint int_ne_reif(venue_00006_00002,1,aux544_BOOL);
constraint int_ne_reif(venue_00005_00009,2,aux545_BOOL);
constraint int_ne_reif(venue_00002_00010,2,aux546_BOOL);
constraint int_lin_eq([1,-1,1],[opponent_00014_00001,aux547,-1],0);
constraint int_lin_eq([-1,1,1],[aux548,opponent_00002_00013,-2],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00008,aux549,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00007,aux550,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00009,aux551,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00004,aux552,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00003,aux553,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00006,aux554,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00005,aux555,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00002,aux556,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00001,aux557,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00013,aux558,-2],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00012,aux559,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00010,aux560,-1],0);
constraint int_lin_eq([1,-1,1],[opponent_00001_00011,aux561,-1],0);
constraint all_different_int([opponent_00001_00001, opponent_00001_00002, opponent_00001_00003, opponent_00001_00004, opponent_00001_00005, opponent_00001_00006, opponent_00001_00007, opponent_00001_00008, opponent_00001_00009, opponent_00001_00010, opponent_00001_00011, opponent_00001_00012, opponent_00001_00013])::domain;
constraint int_lin_eq([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[travel_00011_00001,travel_00011_00002,travel_00011_00003,travel_00011_00004,travel_00011_00005,travel_00011_00006,travel_00011_00007,travel_00011_00008,travel_00011_00009,travel_00011_00010,travel_00011_00011,travel_00011_00012,travel_00011_00013,travel_00011_00014,travel_00003_00001,travel_00003_00002,travel_00003_00003,travel_00003_00004,travel_00003_00005,travel_00003_00006,travel_00003_00007,travel_00003_00008,travel_00003_00009,travel_00003_00010,travel_00003_00011,travel_00003_00012,travel_00003_00013,travel_00003_00014,objective,travel_00008_00001,travel_00008_00002,travel_00008_00003,travel_00008_00004,travel_00008_00005,travel_00008_00006,travel_00008_00007,travel_00008_00008,travel_00008_00009,travel_00008_00010,travel_00008_00011,travel_00008_00012,travel_00008_00013,travel_00008_00014,travel_00012_00001,travel_00012_00002,travel_00012_00003,travel_00012_00004,travel_00012_00005,travel_00012_00006,travel_00012_00007,travel_00012_00008,travel_00012_00009,travel_00012_00010,travel_00012_00011,travel_00012_00012,travel_00012_00013,travel_00012_00014,travel_00004_00001,travel_00004_00002,travel_00004_00003,travel_00004_00004,travel_00004_00005,travel_00004_00006,travel_00004_00007,travel_00004_00008,travel_00004_00009,travel_00004_00010,travel_00004_00011,travel_00004_00012,travel_00004_00013,travel_00004_00014,travel_00009_00001,travel_00009_00002,travel_00009_00003,travel_00009_00004,travel_00009_00005,travel_00009_00006,travel_00009_00007,travel_00009_00008,travel_00009_00009,travel_00009_00010,travel_00009_00011,travel_00009_00012,travel_00009_00013,travel_00009_00014,travel_00013_00001,travel_00013_00002,travel_00013_00003,travel_00013_00004,travel_00013_00005,travel_00013_00006,travel_00013_00007,travel_00013_00008,travel_00013_00009,travel_00013_00010,travel_00013_00011,travel_00013_00012,travel_00013_00013,travel_00013_00014,travel_00005_00001,travel_00005_00002,travel_00005_00003,travel_00005_00004,travel_00005_00005,travel_00005_00006,travel_00005_00007,travel_00005_00008,travel_00005_00009,travel_00005_00010,travel_00005_00011,travel_00005_00012,travel_00005_00013,travel_00005_00014,travel_00001_00001,travel_00001_00002,travel_00001_00003,travel_00001_00004,travel_00001_00005,travel_00001_00006,travel_00001_00007,travel_00001_00008,travel_00001_00009,travel_00001_00010,travel_00001_00011,travel_00001_00012,travel_00001_00013,travel_00001_00014,travel_00014_00001,travel_00014_00002,travel_00014_00003,travel_00014_00004,travel_00014_00005,travel_00014_00006,travel_00014_00007,travel_00014_00008,travel_00014_00009,travel_00014_00010,travel_00014_00011,travel_00014_00012,travel_00014_00013,travel_00014_00014,travel_00006_00001,travel_00006_00002,travel_00006_00003,travel_00006_00004,travel_00006_00005,travel_00006_00006,travel_00006_00007,travel_00006_00008,travel_00006_00009,travel_00006_00010,travel_00006_00011,travel_00006_00012,travel_00006_00013,travel_00006_00014,travel_00010_00001,travel_00010_00002,travel_00010_00003,travel_00010_00004,travel_00010_00005,travel_00010_00006,travel_00010_00007,travel_00010_00008,travel_00010_00009,travel_00010_00010,travel_00010_00011,travel_00010_00012,travel_00010_00013,travel_00010_00014,travel_00002_00001,travel_00002_00002,travel_00002_00003,travel_00002_00004,travel_00002_00005,travel_00002_00006,travel_00002_00007,travel_00002_00008,travel_00002_00009,travel_00002_00010,travel_00002_00011,travel_00002_00012,travel_00002_00013,travel_00002_00014,travel_00007_00001,travel_00007_00002,travel_00007_00003,travel_00007_00004,travel_00007_00005,travel_00007_00006,travel_00007_00007,travel_00007_00008,travel_00007_00009,travel_00007_00010,travel_00007_00011,travel_00007_00012,travel_00007_00013,travel_00007_00014],0);
constraint int_lt(opponent_00001_00001,opponent_00001_00013);
constraint array_var_int_element(aux557, [2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1], venue_00001_00001);
constraint array_var_int_element(aux556, [2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1], venue_00001_00002);
constraint array_var_int_element(aux553, [2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1], venue_00001_00003);
constraint array_var_int_element(aux552, [2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1], venue_00001_00004);
constraint array_var_int_element(aux555, [2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1], venue_00001_00005);
constraint array_var_int_element(aux554, [2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1], venue_00001_00006);
constraint array_var_int_element(aux550, [2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1], venue_00001_00007);
constraint array_var_int_element(aux549, [2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1], venue_00001_00008);
constraint array_var_int_element(aux551, [2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1], venue_00001_00009);
constraint array_var_int_element(aux560, [2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1], venue_00001_00010);
constraint array_var_int_element(aux561, [2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1], venue_00001_00011);
constraint array_var_int_element(aux559, [2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1], venue_00001_00012);
constraint array_var_int_element(aux558, [1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1], venue_00001_00013);
constraint array_var_int_element(opponent_00002_00001, [1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2], venue_00002_00001);
constraint array_var_int_element(opponent_00002_00002, [1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2], venue_00002_00002);
constraint array_var_int_element(opponent_00002_00003, [1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2], venue_00002_00003);
constraint array_var_int_element(opponent_00002_00004, [1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2], venue_00002_00004);
constraint array_var_int_element(opponent_00002_00005, [1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2], venue_00002_00005);
constraint array_var_int_element(opponent_00002_00006, [1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2], venue_00002_00006);
constraint array_var_int_element(opponent_00002_00007, [1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2], venue_00002_00007);
constraint array_var_int_element(opponent_00002_00008, [1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2], venue_00002_00008);
constraint array_var_int_element(opponent_00002_00009, [1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2], venue_00002_00009);
constraint array_var_int_element(opponent_00002_00010, [1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2], venue_00002_00010);
constraint array_var_int_element(opponent_00002_00011, [1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2], venue_00002_00011);
constraint array_var_int_element(opponent_00002_00012, [1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2], venue_00002_00012);
constraint array_var_int_element(aux548, [2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2], venue_00002_00013);
constraint array_var_int_element(opponent_00003_00001, [2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1], venue_00003_00001);
constraint array_var_int_element(opponent_00003_00002, [2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1], venue_00003_00002);
constraint array_var_int_element(opponent_00003_00003, [2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1], venue_00003_00003);
constraint array_var_int_element(opponent_00003_00004, [2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1], venue_00003_00004);
constraint array_var_int_element(opponent_00003_00005, [2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1], venue_00003_00005);
constraint array_var_int_element(opponent_00003_00006, [2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1], venue_00003_00006);
constraint array_var_int_element(opponent_00003_00007, [2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1], venue_00003_00007);
constraint array_var_int_element(opponent_00003_00008, [2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1], venue_00003_00008);
constraint array_var_int_element(opponent_00003_00009, [2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1], venue_00003_00009);
constraint array_var_int_element(opponent_00003_00010, [2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1], venue_00003_00010);
constraint array_var_int_element(opponent_00003_00011, [2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1], venue_00003_00011);
constraint array_var_int_element(opponent_00003_00012, [2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1], venue_00003_00012);
constraint array_var_int_element(opponent_00003_00013, [2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1], venue_00003_00013);
constraint array_var_int_element(opponent_00004_00001, [1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2], venue_00004_00001);
constraint array_var_int_element(opponent_00004_00002, [1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2], venue_00004_00002);
constraint array_var_int_element(opponent_00004_00003, [1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2], venue_00004_00003);
constraint array_var_int_element(opponent_00004_00004, [1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2], venue_00004_00004);
constraint array_var_int_element(opponent_00004_00005, [1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2], venue_00004_00005);
constraint array_var_int_element(opponent_00004_00006, [1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2], venue_00004_00006);
constraint array_var_int_element(opponent_00004_00007, [1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2], venue_00004_00007);
constraint array_var_int_element(opponent_00004_00008, [1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2], venue_00004_00008);
constraint array_var_int_element(opponent_00004_00009, [1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2], venue_00004_00009);
constraint array_var_int_element(opponent_00004_00010, [1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2], venue_00004_00010);
constraint array_var_int_element(opponent_00004_00011, [1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2], venue_00004_00011);
constraint array_var_int_element(opponent_00004_00012, [1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2], venue_00004_00012);
constraint array_var_int_element(opponent_00004_00013, [1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2], venue_00004_00013);
constraint array_var_int_element(opponent_00005_00001, [2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2], venue_00005_00001);
constraint array_var_int_element(opponent_00005_00002, [2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2], venue_00005_00002);
constraint array_var_int_element(opponent_00005_00003, [2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2], venue_00005_00003);
constraint array_var_int_element(opponent_00005_00004, [2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2], venue_00005_00004);
constraint array_var_int_element(opponent_00005_00005, [2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2], venue_00005_00005);
constraint array_var_int_element(opponent_00005_00006, [2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2], venue_00005_00006);
constraint array_var_int_element(opponent_00005_00007, [2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2], venue_00005_00007);
constraint array_var_int_element(opponent_00005_00008, [2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2], venue_00005_00008);
constraint array_var_int_element(opponent_00005_00009, [2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2], venue_00005_00009);
constraint array_var_int_element(opponent_00005_00010, [2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2], venue_00005_00010);
constraint array_var_int_element(opponent_00005_00011, [2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2], venue_00005_00011);
constraint array_var_int_element(opponent_00005_00012, [2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2], venue_00005_00012);
constraint array_var_int_element(opponent_00005_00013, [2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2], venue_00005_00013);
constraint array_var_int_element(opponent_00006_00001, [2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2], venue_00006_00001);
constraint array_var_int_element(opponent_00006_00002, [2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2], venue_00006_00002);
constraint array_var_int_element(opponent_00006_00003, [2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2], venue_00006_00003);
constraint array_var_int_element(opponent_00006_00004, [2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2], venue_00006_00004);
constraint array_var_int_element(opponent_00006_00005, [2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2], venue_00006_00005);
constraint array_var_int_element(opponent_00006_00006, [2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2], venue_00006_00006);
constraint array_var_int_element(opponent_00006_00007, [2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2], venue_00006_00007);
constraint array_var_int_element(opponent_00006_00008, [2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2], venue_00006_00008);
constraint array_var_int_element(opponent_00006_00009, [2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2], venue_00006_00009);
constraint array_var_int_element(opponent_00006_00010, [2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2], venue_00006_00010);
constraint array_var_int_element(opponent_00006_00011, [2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2], venue_00006_00011);
constraint array_var_int_element(opponent_00006_00012, [2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2], venue_00006_00012);
constraint array_var_int_element(opponent_00006_00013, [2, 2, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2], venue_00006_00013);
constraint array_var_int_element(opponent_00007_00001, [1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1], venue_00007_00001);
constraint array_var_int_element(opponent_00007_00002, [1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1], venue_00007_00002);
constraint array_var_int_element(opponent_00007_00003, [1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1], venue_00007_00003);
constraint array_var_int_element(opponent_00007_00004, [1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1], venue_00007_00004);
constraint array_var_int_element(opponent_00007_00005, [1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1], venue_00007_00005);
constraint array_var_int_element(opponent_00007_00006, [1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1], venue_00007_00006);
constraint array_var_int_element(opponent_00007_00007, [1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1], venue_00007_00007);
constraint array_var_int_element(opponent_00007_00008, [1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1], venue_00007_00008);
constraint array_var_int_element(opponent_00007_00009, [1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1], venue_00007_00009);
constraint array_var_int_element(opponent_00007_00010, [1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1], venue_00007_00010);
constraint array_var_int_element(opponent_00007_00011, [1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1], venue_00007_00011);
constraint array_var_int_element(opponent_00007_00012, [1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1], venue_00007_00012);
constraint array_var_int_element(opponent_00007_00013, [1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1], venue_00007_00013);
constraint array_var_int_element(opponent_00008_00001, [1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1], venue_00008_00001);
constraint array_var_int_element(opponent_00008_00002, [1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1], venue_00008_00002);
constraint array_var_int_element(opponent_00008_00003, [1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1], venue_00008_00003);
constraint array_var_int_element(opponent_00008_00004, [1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1], venue_00008_00004);
constraint array_var_int_element(opponent_00008_00005, [1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1], venue_00008_00005);
constraint array_var_int_element(opponent_00008_00006, [1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1], venue_00008_00006);
constraint array_var_int_element(opponent_00008_00007, [1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1], venue_00008_00007);
constraint array_var_int_element(opponent_00008_00008, [1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1], venue_00008_00008);
constraint array_var_int_element(opponent_00008_00009, [1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1], venue_00008_00009);
constraint array_var_int_element(opponent_00008_00010, [1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1], venue_00008_00010);
constraint array_var_int_element(opponent_00008_00011, [1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1], venue_00008_00011);
constraint array_var_int_element(opponent_00008_00012, [1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1], venue_00008_00012);
constraint array_var_int_element(opponent_00008_00013, [1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1], venue_00008_00013);
constraint array_var_int_element(opponent_00009_00001, [1, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1], venue_00009_00001);
constraint array_var_int_element(opponent_00009_00002, [1, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1], venue_00009_00002);
constraint array_var_int_element(opponent_00009_00003, [1, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1], venue_00009_00003);
constraint array_var_int_element(opponent_00009_00004, [1, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1], venue_00009_00004);
constraint array_var_int_element(opponent_00009_00005, [1, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1], venue_00009_00005);
constraint array_var_int_element(opponent_00009_00006, [1, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1], venue_00009_00006);
constraint array_var_int_element(opponent_00009_00007, [1, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1], venue_00009_00007);
constraint array_var_int_element(opponent_00009_00008, [1, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1], venue_00009_00008);
constraint array_var_int_element(opponent_00009_00009, [1, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1], venue_00009_00009);
constraint array_var_int_element(opponent_00009_00010, [1, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1], venue_00009_00010);
constraint array_var_int_element(opponent_00009_00011, [1, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1], venue_00009_00011);
constraint array_var_int_element(opponent_00009_00012, [1, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1], venue_00009_00012);
constraint array_var_int_element(opponent_00009_00013, [1, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1], venue_00009_00013);
constraint array_var_int_element(opponent_00010_00001, [1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1], venue_00010_00001);
constraint array_var_int_element(opponent_00010_00002, [1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1], venue_00010_00002);
constraint array_var_int_element(opponent_00010_00003, [1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1], venue_00010_00003);
constraint array_var_int_element(opponent_00010_00004, [1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1], venue_00010_00004);
constraint array_var_int_element(opponent_00010_00005, [1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1], venue_00010_00005);
constraint array_var_int_element(opponent_00010_00006, [1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1], venue_00010_00006);
constraint array_var_int_element(opponent_00010_00007, [1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1], venue_00010_00007);
constraint array_var_int_element(opponent_00010_00008, [1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1], venue_00010_00008);
constraint array_var_int_element(opponent_00010_00009, [1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1], venue_00010_00009);
constraint array_var_int_element(opponent_00010_00010, [1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1], venue_00010_00010);
constraint array_var_int_element(opponent_00010_00011, [1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1], venue_00010_00011);
constraint array_var_int_element(opponent_00010_00012, [1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1], venue_00010_00012);
constraint array_var_int_element(opponent_00010_00013, [1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1], venue_00010_00013);
constraint array_var_int_element(opponent_00011_00001, [1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1], venue_00011_00001);
constraint array_var_int_element(opponent_00011_00002, [1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1], venue_00011_00002);
constraint array_var_int_element(opponent_00011_00003, [1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1], venue_00011_00003);
constraint array_var_int_element(opponent_00011_00004, [1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1], venue_00011_00004);
constraint array_var_int_element(opponent_00011_00005, [1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1], venue_00011_00005);
constraint array_var_int_element(opponent_00011_00006, [1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1], venue_00011_00006);
constraint array_var_int_element(opponent_00011_00007, [1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1], venue_00011_00007);
constraint array_var_int_element(opponent_00011_00008, [1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1], venue_00011_00008);
constraint array_var_int_element(opponent_00011_00009, [1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1], venue_00011_00009);
constraint array_var_int_element(opponent_00011_00010, [1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1], venue_00011_00010);
constraint array_var_int_element(opponent_00011_00011, [1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1], venue_00011_00011);
constraint array_var_int_element(opponent_00011_00012, [1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1], venue_00011_00012);
constraint array_var_int_element(opponent_00011_00013, [1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1], venue_00011_00013);
constraint array_var_int_element(opponent_00012_00001, [1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2], venue_00012_00001);
constraint array_var_int_element(opponent_00012_00002, [1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2], venue_00012_00002);
constraint array_var_int_element(opponent_00012_00003, [1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2], venue_00012_00003);
constraint array_var_int_element(opponent_00012_00004, [1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2], venue_00012_00004);
constraint array_var_int_element(opponent_00012_00005, [1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2], venue_00012_00005);
constraint array_var_int_element(opponent_00012_00006, [1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2], venue_00012_00006);
constraint array_var_int_element(opponent_00012_00007, [1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2], venue_00012_00007);
constraint array_var_int_element(opponent_00012_00008, [1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2], venue_00012_00008);
constraint array_var_int_element(opponent_00012_00009, [1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2], venue_00012_00009);
constraint array_var_int_element(opponent_00012_00010, [1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2], venue_00012_00010);
constraint array_var_int_element(opponent_00012_00011, [1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2], venue_00012_00011);
constraint array_var_int_element(opponent_00012_00012, [1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2], venue_00012_00012);
constraint array_var_int_element(opponent_00012_00013, [1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2], venue_00012_00013);
constraint array_var_int_element(opponent_00013_00001, [2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1], venue_00013_00001);
constraint array_var_int_element(opponent_00013_00002, [2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1], venue_00013_00002);
constraint array_var_int_element(opponent_00013_00003, [2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1], venue_00013_00003);
constraint array_var_int_element(opponent_00013_00004, [2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1], venue_00013_00004);
constraint array_var_int_element(opponent_00013_00005, [2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1], venue_00013_00005);
constraint array_var_int_element(opponent_00013_00006, [2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1], venue_00013_00006);
constraint array_var_int_element(opponent_00013_00007, [2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1], venue_00013_00007);
constraint array_var_int_element(opponent_00013_00008, [2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1], venue_00013_00008);
constraint array_var_int_element(opponent_00013_00009, [2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1], venue_00013_00009);
constraint array_var_int_element(opponent_00013_00010, [2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1], venue_00013_00010);
constraint array_var_int_element(opponent_00013_00011, [2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1], venue_00013_00011);
constraint array_var_int_element(opponent_00013_00012, [2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1], venue_00013_00012);
constraint array_var_int_element(opponent_00013_00013, [2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1], venue_00013_00013);
constraint array_var_int_element(aux547, [1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2], venue_00014_00001);
constraint array_var_int_element(opponent_00014_00002, [2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2], venue_00014_00002);
constraint array_var_int_element(opponent_00014_00003, [2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2], venue_00014_00003);
constraint array_var_int_element(opponent_00014_00004, [2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2], venue_00014_00004);
constraint array_var_int_element(opponent_00014_00005, [2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2], venue_00014_00005);
constraint array_var_int_element(opponent_00014_00006, [2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2], venue_00014_00006);
constraint array_var_int_element(opponent_00014_00007, [2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2], venue_00014_00007);
constraint array_var_int_element(opponent_00014_00008, [2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2], venue_00014_00008);
constraint array_var_int_element(opponent_00014_00009, [2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2], venue_00014_00009);
constraint array_var_int_element(opponent_00014_00010, [2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2], venue_00014_00010);
constraint array_var_int_element(opponent_00014_00011, [2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2], venue_00014_00011);
constraint array_var_int_element(opponent_00014_00012, [2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2], venue_00014_00012);
constraint array_var_int_element(opponent_00014_00013, [2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2], venue_00014_00013);
constraint array_var_int_element(aux557, [opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001], 1);
constraint array_var_int_element(aux556, [opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002], 1);
constraint array_var_int_element(aux553, [opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003], 1);
constraint array_var_int_element(aux552, [opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004], 1);
constraint array_var_int_element(aux555, [opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005], 1);
constraint array_var_int_element(aux554, [opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006], 1);
constraint array_var_int_element(aux550, [opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007], 1);
constraint array_var_int_element(aux549, [opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008], 1);
constraint array_var_int_element(aux551, [opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009], 1);
constraint array_var_int_element(aux560, [opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010], 1);
constraint array_var_int_element(aux561, [opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011], 1);
constraint array_var_int_element(aux559, [opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012], 1);
constraint array_var_int_element(aux558, [opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013], 1);
constraint array_var_int_element(opponent_00002_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001], 2);
constraint array_var_int_element(opponent_00002_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002], 2);
constraint array_var_int_element(opponent_00002_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003], 2);
constraint array_var_int_element(opponent_00002_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004], 2);
constraint array_var_int_element(opponent_00002_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005], 2);
constraint array_var_int_element(opponent_00002_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006], 2);
constraint array_var_int_element(opponent_00002_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007], 2);
constraint array_var_int_element(opponent_00002_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008], 2);
constraint array_var_int_element(opponent_00002_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009], 2);
constraint array_var_int_element(opponent_00002_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010], 2);
constraint array_var_int_element(opponent_00002_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011], 2);
constraint array_var_int_element(opponent_00002_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012], 2);
constraint array_var_int_element(aux548, [opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013], 2);
constraint array_var_int_element(opponent_00003_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001], 3);
constraint array_var_int_element(opponent_00003_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002], 3);
constraint array_var_int_element(opponent_00003_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003], 3);
constraint array_var_int_element(opponent_00003_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004], 3);
constraint array_var_int_element(opponent_00003_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005], 3);
constraint array_var_int_element(opponent_00003_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006], 3);
constraint array_var_int_element(opponent_00003_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007], 3);
constraint array_var_int_element(opponent_00003_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008], 3);
constraint array_var_int_element(opponent_00003_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009], 3);
constraint array_var_int_element(opponent_00003_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010], 3);
constraint array_var_int_element(opponent_00003_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011], 3);
constraint array_var_int_element(opponent_00003_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012], 3);
constraint array_var_int_element(opponent_00003_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013], 3);
constraint array_var_int_element(opponent_00004_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001], 4);
constraint array_var_int_element(opponent_00004_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002], 4);
constraint array_var_int_element(opponent_00004_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003], 4);
constraint array_var_int_element(opponent_00004_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004], 4);
constraint array_var_int_element(opponent_00004_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005], 4);
constraint array_var_int_element(opponent_00004_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006], 4);
constraint array_var_int_element(opponent_00004_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007], 4);
constraint array_var_int_element(opponent_00004_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008], 4);
constraint array_var_int_element(opponent_00004_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009], 4);
constraint array_var_int_element(opponent_00004_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010], 4);
constraint array_var_int_element(opponent_00004_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011], 4);
constraint array_var_int_element(opponent_00004_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012], 4);
constraint array_var_int_element(opponent_00004_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013], 4);
constraint array_var_int_element(opponent_00005_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001], 5);
constraint array_var_int_element(opponent_00005_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002], 5);
constraint array_var_int_element(opponent_00005_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003], 5);
constraint array_var_int_element(opponent_00005_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004], 5);
constraint array_var_int_element(opponent_00005_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005], 5);
constraint array_var_int_element(opponent_00005_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006], 5);
constraint array_var_int_element(opponent_00005_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007], 5);
constraint array_var_int_element(opponent_00005_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008], 5);
constraint array_var_int_element(opponent_00005_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009], 5);
constraint array_var_int_element(opponent_00005_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010], 5);
constraint array_var_int_element(opponent_00005_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011], 5);
constraint array_var_int_element(opponent_00005_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012], 5);
constraint array_var_int_element(opponent_00005_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013], 5);
constraint array_var_int_element(opponent_00006_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001], 6);
constraint array_var_int_element(opponent_00006_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002], 6);
constraint array_var_int_element(opponent_00006_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003], 6);
constraint array_var_int_element(opponent_00006_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004], 6);
constraint array_var_int_element(opponent_00006_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005], 6);
constraint array_var_int_element(opponent_00006_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006], 6);
constraint array_var_int_element(opponent_00006_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007], 6);
constraint array_var_int_element(opponent_00006_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008], 6);
constraint array_var_int_element(opponent_00006_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009], 6);
constraint array_var_int_element(opponent_00006_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010], 6);
constraint array_var_int_element(opponent_00006_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011], 6);
constraint array_var_int_element(opponent_00006_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012], 6);
constraint array_var_int_element(opponent_00006_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013], 6);
constraint array_var_int_element(opponent_00007_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001], 7);
constraint array_var_int_element(opponent_00007_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002], 7);
constraint array_var_int_element(opponent_00007_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003], 7);
constraint array_var_int_element(opponent_00007_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004], 7);
constraint array_var_int_element(opponent_00007_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005], 7);
constraint array_var_int_element(opponent_00007_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006], 7);
constraint array_var_int_element(opponent_00007_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007], 7);
constraint array_var_int_element(opponent_00007_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008], 7);
constraint array_var_int_element(opponent_00007_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009], 7);
constraint array_var_int_element(opponent_00007_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010], 7);
constraint array_var_int_element(opponent_00007_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011], 7);
constraint array_var_int_element(opponent_00007_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012], 7);
constraint array_var_int_element(opponent_00007_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013], 7);
constraint array_var_int_element(opponent_00008_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001], 8);
constraint array_var_int_element(opponent_00008_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002], 8);
constraint array_var_int_element(opponent_00008_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003], 8);
constraint array_var_int_element(opponent_00008_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004], 8);
constraint array_var_int_element(opponent_00008_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005], 8);
constraint array_var_int_element(opponent_00008_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006], 8);
constraint array_var_int_element(opponent_00008_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007], 8);
constraint array_var_int_element(opponent_00008_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008], 8);
constraint array_var_int_element(opponent_00008_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009], 8);
constraint array_var_int_element(opponent_00008_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010], 8);
constraint array_var_int_element(opponent_00008_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011], 8);
constraint array_var_int_element(opponent_00008_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012], 8);
constraint array_var_int_element(opponent_00008_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013], 8);
constraint array_var_int_element(opponent_00009_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001], 9);
constraint array_var_int_element(opponent_00009_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002], 9);
constraint array_var_int_element(opponent_00009_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003], 9);
constraint array_var_int_element(opponent_00009_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004], 9);
constraint array_var_int_element(opponent_00009_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005], 9);
constraint array_var_int_element(opponent_00009_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006], 9);
constraint array_var_int_element(opponent_00009_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007], 9);
constraint array_var_int_element(opponent_00009_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008], 9);
constraint array_var_int_element(opponent_00009_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009], 9);
constraint array_var_int_element(opponent_00009_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010], 9);
constraint array_var_int_element(opponent_00009_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011], 9);
constraint array_var_int_element(opponent_00009_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012], 9);
constraint array_var_int_element(opponent_00009_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013], 9);
constraint array_var_int_element(opponent_00010_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001], 10);
constraint array_var_int_element(opponent_00010_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002], 10);
constraint array_var_int_element(opponent_00010_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003], 10);
constraint array_var_int_element(opponent_00010_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004], 10);
constraint array_var_int_element(opponent_00010_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005], 10);
constraint array_var_int_element(opponent_00010_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006], 10);
constraint array_var_int_element(opponent_00010_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007], 10);
constraint array_var_int_element(opponent_00010_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008], 10);
constraint array_var_int_element(opponent_00010_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009], 10);
constraint array_var_int_element(opponent_00010_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010], 10);
constraint array_var_int_element(opponent_00010_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011], 10);
constraint array_var_int_element(opponent_00010_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012], 10);
constraint array_var_int_element(opponent_00010_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013], 10);
constraint array_var_int_element(opponent_00011_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001], 11);
constraint array_var_int_element(opponent_00011_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002], 11);
constraint array_var_int_element(opponent_00011_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003], 11);
constraint array_var_int_element(opponent_00011_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004], 11);
constraint array_var_int_element(opponent_00011_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005], 11);
constraint array_var_int_element(opponent_00011_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006], 11);
constraint array_var_int_element(opponent_00011_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007], 11);
constraint array_var_int_element(opponent_00011_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008], 11);
constraint array_var_int_element(opponent_00011_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009], 11);
constraint array_var_int_element(opponent_00011_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010], 11);
constraint array_var_int_element(opponent_00011_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011], 11);
constraint array_var_int_element(opponent_00011_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012], 11);
constraint array_var_int_element(opponent_00011_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013], 11);
constraint array_var_int_element(opponent_00012_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001], 12);
constraint array_var_int_element(opponent_00012_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002], 12);
constraint array_var_int_element(opponent_00012_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003], 12);
constraint array_var_int_element(opponent_00012_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004], 12);
constraint array_var_int_element(opponent_00012_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005], 12);
constraint array_var_int_element(opponent_00012_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006], 12);
constraint array_var_int_element(opponent_00012_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007], 12);
constraint array_var_int_element(opponent_00012_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008], 12);
constraint array_var_int_element(opponent_00012_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009], 12);
constraint array_var_int_element(opponent_00012_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010], 12);
constraint array_var_int_element(opponent_00012_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011], 12);
constraint array_var_int_element(opponent_00012_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012], 12);
constraint array_var_int_element(opponent_00012_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013], 12);
constraint array_var_int_element(opponent_00013_00001, [opponent_00001_00001, opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001, opponent_00014_00001], 13);
constraint array_var_int_element(opponent_00013_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002, opponent_00014_00002], 13);
constraint array_var_int_element(opponent_00013_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003, opponent_00014_00003], 13);
constraint array_var_int_element(opponent_00013_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004, opponent_00014_00004], 13);
constraint array_var_int_element(opponent_00013_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005, opponent_00014_00005], 13);
constraint array_var_int_element(opponent_00013_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006, opponent_00014_00006], 13);
constraint array_var_int_element(opponent_00013_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007, opponent_00014_00007], 13);
constraint array_var_int_element(opponent_00013_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008, opponent_00014_00008], 13);
constraint array_var_int_element(opponent_00013_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009, opponent_00014_00009], 13);
constraint array_var_int_element(opponent_00013_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010, opponent_00014_00010], 13);
constraint array_var_int_element(opponent_00013_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011, opponent_00014_00011], 13);
constraint array_var_int_element(opponent_00013_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012, opponent_00014_00012], 13);
constraint array_var_int_element(opponent_00013_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013, opponent_00014_00013], 13);
constraint array_var_int_element(aux547, [opponent_00002_00001, opponent_00003_00001, opponent_00004_00001, opponent_00005_00001, opponent_00006_00001, opponent_00007_00001, opponent_00008_00001, opponent_00009_00001, opponent_00010_00001, opponent_00011_00001, opponent_00012_00001, opponent_00013_00001], 14);
constraint array_var_int_element(opponent_00014_00002, [opponent_00001_00002, opponent_00002_00002, opponent_00003_00002, opponent_00004_00002, opponent_00005_00002, opponent_00006_00002, opponent_00007_00002, opponent_00008_00002, opponent_00009_00002, opponent_00010_00002, opponent_00011_00002, opponent_00012_00002, opponent_00013_00002], 14);
constraint array_var_int_element(opponent_00014_00003, [opponent_00001_00003, opponent_00002_00003, opponent_00003_00003, opponent_00004_00003, opponent_00005_00003, opponent_00006_00003, opponent_00007_00003, opponent_00008_00003, opponent_00009_00003, opponent_00010_00003, opponent_00011_00003, opponent_00012_00003, opponent_00013_00003], 14);
constraint array_var_int_element(opponent_00014_00004, [opponent_00001_00004, opponent_00002_00004, opponent_00003_00004, opponent_00004_00004, opponent_00005_00004, opponent_00006_00004, opponent_00007_00004, opponent_00008_00004, opponent_00009_00004, opponent_00010_00004, opponent_00011_00004, opponent_00012_00004, opponent_00013_00004], 14);
constraint array_var_int_element(opponent_00014_00005, [opponent_00001_00005, opponent_00002_00005, opponent_00003_00005, opponent_00004_00005, opponent_00005_00005, opponent_00006_00005, opponent_00007_00005, opponent_00008_00005, opponent_00009_00005, opponent_00010_00005, opponent_00011_00005, opponent_00012_00005, opponent_00013_00005], 14);
constraint array_var_int_element(opponent_00014_00006, [opponent_00001_00006, opponent_00002_00006, opponent_00003_00006, opponent_00004_00006, opponent_00005_00006, opponent_00006_00006, opponent_00007_00006, opponent_00008_00006, opponent_00009_00006, opponent_00010_00006, opponent_00011_00006, opponent_00012_00006, opponent_00013_00006], 14);
constraint array_var_int_element(opponent_00014_00007, [opponent_00001_00007, opponent_00002_00007, opponent_00003_00007, opponent_00004_00007, opponent_00005_00007, opponent_00006_00007, opponent_00007_00007, opponent_00008_00007, opponent_00009_00007, opponent_00010_00007, opponent_00011_00007, opponent_00012_00007, opponent_00013_00007], 14);
constraint array_var_int_element(opponent_00014_00008, [opponent_00001_00008, opponent_00002_00008, opponent_00003_00008, opponent_00004_00008, opponent_00005_00008, opponent_00006_00008, opponent_00007_00008, opponent_00008_00008, opponent_00009_00008, opponent_00010_00008, opponent_00011_00008, opponent_00012_00008, opponent_00013_00008], 14);
constraint array_var_int_element(opponent_00014_00009, [opponent_00001_00009, opponent_00002_00009, opponent_00003_00009, opponent_00004_00009, opponent_00005_00009, opponent_00006_00009, opponent_00007_00009, opponent_00008_00009, opponent_00009_00009, opponent_00010_00009, opponent_00011_00009, opponent_00012_00009, opponent_00013_00009], 14);
constraint array_var_int_element(opponent_00014_00010, [opponent_00001_00010, opponent_00002_00010, opponent_00003_00010, opponent_00004_00010, opponent_00005_00010, opponent_00006_00010, opponent_00007_00010, opponent_00008_00010, opponent_00009_00010, opponent_00010_00010, opponent_00011_00010, opponent_00012_00010, opponent_00013_00010], 14);
constraint array_var_int_element(opponent_00014_00011, [opponent_00001_00011, opponent_00002_00011, opponent_00003_00011, opponent_00004_00011, opponent_00005_00011, opponent_00006_00011, opponent_00007_00011, opponent_00008_00011, opponent_00009_00011, opponent_00010_00011, opponent_00011_00011, opponent_00012_00011, opponent_00013_00011], 14);
constraint array_var_int_element(opponent_00014_00012, [opponent_00001_00012, opponent_00002_00012, opponent_00003_00012, opponent_00004_00012, opponent_00005_00012, opponent_00006_00012, opponent_00007_00012, opponent_00008_00012, opponent_00009_00012, opponent_00010_00012, opponent_00011_00012, opponent_00012_00012, opponent_00013_00012], 14);
constraint array_var_int_element(opponent_00014_00013, [opponent_00001_00013, opponent_00002_00013, opponent_00003_00013, opponent_00004_00013, opponent_00005_00013, opponent_00006_00013, opponent_00007_00013, opponent_00008_00013, opponent_00009_00013, opponent_00010_00013, opponent_00011_00013, opponent_00012_00013, opponent_00013_00013], 14);
constraint all_different_int([opponent_00002_00001, opponent_00002_00002, opponent_00002_00003, opponent_00002_00004, opponent_00002_00005, opponent_00002_00006, opponent_00002_00007, opponent_00002_00008, opponent_00002_00009, opponent_00002_00010, opponent_00002_00011, opponent_00002_00012, opponent_00002_00013])::domain;
constraint all_different_int([opponent_00003_00001, opponent_00003_00002, opponent_00003_00003, opponent_00003_00004, opponent_00003_00005, opponent_00003_00006, opponent_00003_00007, opponent_00003_00008, opponent_00003_00009, opponent_00003_00010, opponent_00003_00011, opponent_00003_00012, opponent_00003_00013])::domain;
constraint all_different_int([opponent_00004_00001, opponent_00004_00002, opponent_00004_00003, opponent_00004_00004, opponent_00004_00005, opponent_00004_00006, opponent_00004_00007, opponent_00004_00008, opponent_00004_00009, opponent_00004_00010, opponent_00004_00011, opponent_00004_00012, opponent_00004_00013])::domain;
constraint all_different_int([opponent_00005_00001, opponent_00005_00002, opponent_00005_00003, opponent_00005_00004, opponent_00005_00005, opponent_00005_00006, opponent_00005_00007, opponent_00005_00008, opponent_00005_00009, opponent_00005_00010, opponent_00005_00011, opponent_00005_00012, opponent_00005_00013])::domain;
constraint all_different_int([opponent_00006_00001, opponent_00006_00002, opponent_00006_00003, opponent_00006_00004, opponent_00006_00005, opponent_00006_00006, opponent_00006_00007, opponent_00006_00008, opponent_00006_00009, opponent_00006_00010, opponent_00006_00011, opponent_00006_00012, opponent_00006_00013])::domain;
constraint all_different_int([opponent_00007_00001, opponent_00007_00002, opponent_00007_00003, opponent_00007_00004, opponent_00007_00005, opponent_00007_00006, opponent_00007_00007, opponent_00007_00008, opponent_00007_00009, opponent_00007_00010, opponent_00007_00011, opponent_00007_00012, opponent_00007_00013])::domain;
constraint all_different_int([opponent_00008_00001, opponent_00008_00002, opponent_00008_00003, opponent_00008_00004, opponent_00008_00005, opponent_00008_00006, opponent_00008_00007, opponent_00008_00008, opponent_00008_00009, opponent_00008_00010, opponent_00008_00011, opponent_00008_00012, opponent_00008_00013])::domain;
constraint all_different_int([opponent_00009_00001, opponent_00009_00002, opponent_00009_00003, opponent_00009_00004, opponent_00009_00005, opponent_00009_00006, opponent_00009_00007, opponent_00009_00008, opponent_00009_00009, opponent_00009_00010, opponent_00009_00011, opponent_00009_00012, opponent_00009_00013])::domain;
constraint all_different_int([opponent_00010_00001, opponent_00010_00002, opponent_00010_00003, opponent_00010_00004, opponent_00010_00005, opponent_00010_00006, opponent_00010_00007, opponent_00010_00008, opponent_00010_00009, opponent_00010_00010, opponent_00010_00011, opponent_00010_00012, opponent_00010_00013])::domain;
constraint all_different_int([opponent_00011_00001, opponent_00011_00002, opponent_00011_00003, opponent_00011_00004, opponent_00011_00005, opponent_00011_00006, opponent_00011_00007, opponent_00011_00008, opponent_00011_00009, opponent_00011_00010, opponent_00011_00011, opponent_00011_00012, opponent_00011_00013])::domain;
constraint all_different_int([opponent_00012_00001, opponent_00012_00002, opponent_00012_00003, opponent_00012_00004, opponent_00012_00005, opponent_00012_00006, opponent_00012_00007, opponent_00012_00008, opponent_00012_00009, opponent_00012_00010, opponent_00012_00011, opponent_00012_00012, opponent_00012_00013])::domain;
constraint all_different_int([opponent_00013_00001, opponent_00013_00002, opponent_00013_00003, opponent_00013_00004, opponent_00013_00005, opponent_00013_00006, opponent_00013_00007, opponent_00013_00008, opponent_00013_00009, opponent_00013_00010, opponent_00013_00011, opponent_00013_00012, opponent_00013_00013])::domain;
constraint all_different_int([opponent_00014_00001, opponent_00014_00002, opponent_00014_00003, opponent_00014_00004, opponent_00014_00005, opponent_00014_00006, opponent_00014_00007, opponent_00014_00008, opponent_00014_00009, opponent_00014_00010, opponent_00014_00011, opponent_00014_00012, opponent_00014_00013])::domain;
constraint all_different_int([opponent_00001_00001, opponent_00014_00001, opponent_00006_00001, opponent_00010_00001, opponent_00002_00001, opponent_00007_00001, opponent_00011_00001, opponent_00003_00001, opponent_00008_00001, opponent_00012_00001, opponent_00004_00001, opponent_00009_00001, opponent_00013_00001, opponent_00005_00001])::domain;
constraint all_different_int([opponent_00001_00002, opponent_00014_00002, opponent_00006_00002, opponent_00010_00002, opponent_00002_00002, opponent_00007_00002, opponent_00011_00002, opponent_00003_00002, opponent_00008_00002, opponent_00012_00002, opponent_00004_00002, opponent_00009_00002, opponent_00013_00002, opponent_00005_00002])::domain;
constraint all_different_int([opponent_00001_00003, opponent_00014_00003, opponent_00006_00003, opponent_00010_00003, opponent_00002_00003, opponent_00007_00003, opponent_00011_00003, opponent_00003_00003, opponent_00008_00003, opponent_00012_00003, opponent_00004_00003, opponent_00009_00003, opponent_00013_00003, opponent_00005_00003])::domain;
constraint all_different_int([opponent_00001_00004, opponent_00014_00004, opponent_00006_00004, opponent_00010_00004, opponent_00002_00004, opponent_00007_00004, opponent_00011_00004, opponent_00003_00004, opponent_00008_00004, opponent_00012_00004, opponent_00004_00004, opponent_00009_00004, opponent_00013_00004, opponent_00005_00004])::domain;
constraint all_different_int([opponent_00001_00005, opponent_00014_00005, opponent_00006_00005, opponent_00010_00005, opponent_00002_00005, opponent_00007_00005, opponent_00011_00005, opponent_00003_00005, opponent_00008_00005, opponent_00012_00005, opponent_00004_00005, opponent_00009_00005, opponent_00013_00005, opponent_00005_00005])::domain;
constraint all_different_int([opponent_00001_00006, opponent_00014_00006, opponent_00006_00006, opponent_00010_00006, opponent_00002_00006, opponent_00007_00006, opponent_00011_00006, opponent_00003_00006, opponent_00008_00006, opponent_00012_00006, opponent_00004_00006, opponent_00009_00006, opponent_00013_00006, opponent_00005_00006])::domain;
constraint all_different_int([opponent_00001_00007, opponent_00014_00007, opponent_00006_00007, opponent_00010_00007, opponent_00002_00007, opponent_00007_00007, opponent_00011_00007, opponent_00003_00007, opponent_00008_00007, opponent_00012_00007, opponent_00004_00007, opponent_00009_00007, opponent_00013_00007, opponent_00005_00007])::domain;
constraint all_different_int([opponent_00001_00008, opponent_00014_00008, opponent_00006_00008, opponent_00010_00008, opponent_00002_00008, opponent_00007_00008, opponent_00011_00008, opponent_00003_00008, opponent_00008_00008, opponent_00012_00008, opponent_00004_00008, opponent_00009_00008, opponent_00013_00008, opponent_00005_00008])::domain;
constraint all_different_int([opponent_00001_00009, opponent_00014_00009, opponent_00006_00009, opponent_00010_00009, opponent_00002_00009, opponent_00007_00009, opponent_00011_00009, opponent_00003_00009, opponent_00008_00009, opponent_00012_00009, opponent_00004_00009, opponent_00009_00009, opponent_00013_00009, opponent_00005_00009])::domain;
constraint all_different_int([opponent_00001_00010, opponent_00014_00010, opponent_00006_00010, opponent_00010_00010, opponent_00002_00010, opponent_00007_00010, opponent_00011_00010, opponent_00003_00010, opponent_00008_00010, opponent_00012_00010, opponent_00004_00010, opponent_00009_00010, opponent_00013_00010, opponent_00005_00010])::domain;
constraint all_different_int([opponent_00001_00011, opponent_00014_00011, opponent_00006_00011, opponent_00010_00011, opponent_00002_00011, opponent_00007_00011, opponent_00011_00011, opponent_00003_00011, opponent_00008_00011, opponent_00012_00011, opponent_00004_00011, opponent_00009_00011, opponent_00013_00011, opponent_00005_00011])::domain;
constraint all_different_int([opponent_00001_00012, opponent_00014_00012, opponent_00006_00012, opponent_00010_00012, opponent_00002_00012, opponent_00007_00012, opponent_00011_00012, opponent_00003_00012, opponent_00008_00012, opponent_00012_00012, opponent_00004_00012, opponent_00009_00012, opponent_00013_00012, opponent_00005_00012])::domain;
constraint all_different_int([opponent_00001_00013, opponent_00014_00013, opponent_00006_00013, opponent_00010_00013, opponent_00002_00013, opponent_00007_00013, opponent_00011_00013, opponent_00003_00013, opponent_00008_00013, opponent_00012_00013, opponent_00004_00013, opponent_00009_00013, opponent_00013_00013, opponent_00005_00013])::domain;
constraint array_bool_or([aux219_BOOL,aux200_BOOL,aux447_BOOL,aux481_BOOL],true);
constraint array_bool_or([aux200_BOOL,aux447_BOOL,aux481_BOOL,aux368_BOOL],true);
constraint array_bool_or([aux447_BOOL,aux481_BOOL,aux368_BOOL,aux436_BOOL],true);
constraint array_bool_or([aux481_BOOL,aux368_BOOL,aux436_BOOL,aux359_BOOL],true);
constraint array_bool_or([aux368_BOOL,aux436_BOOL,aux359_BOOL,aux234_BOOL],true);
constraint array_bool_or([aux436_BOOL,aux359_BOOL,aux234_BOOL,aux482_BOOL],true);
constraint array_bool_or([aux359_BOOL,aux234_BOOL,aux482_BOOL,aux446_BOOL],true);
constraint array_bool_or([aux234_BOOL,aux482_BOOL,aux446_BOOL,aux422_BOOL],true);
constraint array_bool_or([aux482_BOOL,aux446_BOOL,aux422_BOOL,aux430_BOOL],true);
constraint array_bool_or([aux446_BOOL,aux422_BOOL,aux430_BOOL,aux218_BOOL],true);
constraint array_bool_or([aux220_BOOL,aux202_BOOL,aux328_BOOL,aux347_BOOL],true);
constraint array_bool_or([aux202_BOOL,aux328_BOOL,aux347_BOOL,aux232_BOOL],true);
constraint array_bool_or([aux328_BOOL,aux347_BOOL,aux232_BOOL,aux479_BOOL],true);
constraint array_bool_or([aux347_BOOL,aux232_BOOL,aux479_BOOL,aux361_BOOL],true);
constraint array_bool_or([aux232_BOOL,aux479_BOOL,aux361_BOOL,aux286_BOOL],true);
constraint array_bool_or([aux479_BOOL,aux361_BOOL,aux286_BOOL,aux350_BOOL],true);
constraint array_bool_or([aux361_BOOL,aux286_BOOL,aux350_BOOL,aux485_BOOL],true);
constraint array_bool_or([aux286_BOOL,aux350_BOOL,aux485_BOOL,aux291_BOOL],true);
constraint array_bool_or([aux350_BOOL,aux485_BOOL,aux291_BOOL,aux424_BOOL],true);
constraint array_bool_or([aux485_BOOL,aux291_BOOL,aux424_BOOL,aux217_BOOL],true);
constraint array_bool_or([aux516_BOOL,aux198_BOOL,aux532_BOOL,aux531_BOOL],true);
constraint array_bool_or([aux198_BOOL,aux532_BOOL,aux531_BOOL,aux244_BOOL],true);
constraint array_bool_or([aux532_BOOL,aux531_BOOL,aux244_BOOL,aux187_BOOL],true);
constraint array_bool_or([aux531_BOOL,aux244_BOOL,aux187_BOOL,aux290_BOOL],true);
constraint array_bool_or([aux244_BOOL,aux187_BOOL,aux290_BOOL,aux426_BOOL],true);
constraint array_bool_or([aux187_BOOL,aux290_BOOL,aux426_BOOL,aux542_BOOL],true);
constraint array_bool_or([aux290_BOOL,aux426_BOOL,aux542_BOOL,aux215_BOOL],true);
constraint array_bool_or([aux426_BOOL,aux542_BOOL,aux215_BOOL,aux523_BOOL],true);
constraint array_bool_or([aux542_BOOL,aux215_BOOL,aux523_BOOL,aux506_BOOL],true);
constraint array_bool_or([aux215_BOOL,aux523_BOOL,aux506_BOOL,aux513_BOOL],true);
constraint array_bool_or([aux515_BOOL,aux196_BOOL,aux237_BOOL,aux310_BOOL],true);
constraint array_bool_or([aux196_BOOL,aux237_BOOL,aux310_BOOL,aux385_BOOL],true);
constraint array_bool_or([aux237_BOOL,aux310_BOOL,aux385_BOOL,aux498_BOOL],true);
constraint array_bool_or([aux310_BOOL,aux385_BOOL,aux498_BOOL,aux238_BOOL],true);
constraint array_bool_or([aux385_BOOL,aux498_BOOL,aux238_BOOL,aux203_BOOL],true);
constraint array_bool_or([aux498_BOOL,aux238_BOOL,aux203_BOOL,aux312_BOOL],true);
constraint array_bool_or([aux238_BOOL,aux203_BOOL,aux312_BOOL,aux546_BOOL],true);
constraint array_bool_or([aux203_BOOL,aux312_BOOL,aux546_BOOL,aux466_BOOL],true);
constraint array_bool_or([aux312_BOOL,aux546_BOOL,aux466_BOOL,aux507_BOOL],true);
constraint array_bool_or([aux546_BOOL,aux466_BOOL,aux507_BOOL,aux514_BOOL],true);
constraint array_bool_or([aux342_BOOL,aux246_BOOL,aux418_BOOL,aux209_BOOL],true);
constraint array_bool_or([aux246_BOOL,aux418_BOOL,aux209_BOOL,aux433_BOOL],true);
constraint array_bool_or([aux418_BOOL,aux209_BOOL,aux433_BOOL,aux289_BOOL],true);
constraint array_bool_or([aux209_BOOL,aux433_BOOL,aux289_BOOL,aux511_BOOL],true);
constraint array_bool_or([aux433_BOOL,aux289_BOOL,aux511_BOOL,aux399_BOOL],true);
constraint array_bool_or([aux289_BOOL,aux511_BOOL,aux399_BOOL,aux248_BOOL],true);
constraint array_bool_or([aux511_BOOL,aux399_BOOL,aux248_BOOL,aux486_BOOL],true);
constraint array_bool_or([aux399_BOOL,aux248_BOOL,aux486_BOOL,aux527_BOOL],true);
constraint array_bool_or([aux248_BOOL,aux486_BOOL,aux527_BOOL,aux280_BOOL],true);
constraint array_bool_or([aux486_BOOL,aux527_BOOL,aux280_BOOL,aux343_BOOL],true);
constraint array_bool_or([aux344_BOOL,aux281_BOOL,aux256_BOOL,aux311_BOOL],true);
constraint array_bool_or([aux281_BOOL,aux256_BOOL,aux311_BOOL,aux453_BOOL],true);
constraint array_bool_or([aux256_BOOL,aux311_BOOL,aux453_BOOL,aux326_BOOL],true);
constraint array_bool_or([aux311_BOOL,aux453_BOOL,aux326_BOOL,aux185_BOOL],true);
constraint array_bool_or([aux453_BOOL,aux326_BOOL,aux185_BOOL,aux408_BOOL],true);
constraint array_bool_or([aux326_BOOL,aux185_BOOL,aux408_BOOL,aux268_BOOL],true);
constraint array_bool_or([aux185_BOOL,aux408_BOOL,aux268_BOOL,aux497_BOOL],true);
constraint array_bool_or([aux408_BOOL,aux268_BOOL,aux497_BOOL,aux387_BOOL],true);
constraint array_bool_or([aux268_BOOL,aux497_BOOL,aux387_BOOL,aux383_BOOL],true);
constraint array_bool_or([aux497_BOOL,aux387_BOOL,aux383_BOOL,aux341_BOOL],true);
constraint array_bool_or([aux468_BOOL,aux428_BOOL,aux226_BOOL,aux467_BOOL],true);
constraint array_bool_or([aux428_BOOL,aux226_BOOL,aux467_BOOL,aux336_BOOL],true);
constraint array_bool_or([aux226_BOOL,aux467_BOOL,aux336_BOOL,aux379_BOOL],true);
constraint array_bool_or([aux467_BOOL,aux336_BOOL,aux379_BOOL,aux242_BOOL],true);
constraint array_bool_or([aux336_BOOL,aux379_BOOL,aux242_BOOL,aux299_BOOL],true);
constraint array_bool_or([aux379_BOOL,aux242_BOOL,aux299_BOOL,aux529_BOOL],true);
constraint array_bool_or([aux242_BOOL,aux299_BOOL,aux529_BOOL,aux212_BOOL],true);
constraint array_bool_or([aux299_BOOL,aux529_BOOL,aux212_BOOL,aux474_BOOL],true);
constraint array_bool_or([aux529_BOOL,aux212_BOOL,aux474_BOOL,aux300_BOOL],true);
constraint array_bool_or([aux212_BOOL,aux474_BOOL,aux300_BOOL,aux471_BOOL],true);
constraint array_bool_or([aux470_BOOL,aux301_BOOL,aux270_BOOL,aux401_BOOL],true);
constraint array_bool_or([aux301_BOOL,aux270_BOOL,aux401_BOOL,aux251_BOOL],true);
constraint array_bool_or([aux270_BOOL,aux401_BOOL,aux251_BOOL,aux261_BOOL],true);
constraint array_bool_or([aux401_BOOL,aux251_BOOL,aux261_BOOL,aux492_BOOL],true);
constraint array_bool_or([aux251_BOOL,aux261_BOOL,aux492_BOOL,aux191_BOOL],true);
constraint array_bool_or([aux261_BOOL,aux492_BOOL,aux191_BOOL,aux413_BOOL],true);
constraint array_bool_or([aux492_BOOL,aux191_BOOL,aux413_BOOL,aux451_BOOL],true);
constraint array_bool_or([aux191_BOOL,aux413_BOOL,aux451_BOOL,aux338_BOOL],true);
constraint array_bool_or([aux413_BOOL,aux451_BOOL,aux338_BOOL,aux184_BOOL],true);
constraint array_bool_or([aux451_BOOL,aux338_BOOL,aux184_BOOL,aux469_BOOL],true);
constraint array_bool_or([aux536_BOOL,aux488_BOOL,aux373_BOOL,aux394_BOOL],true);
constraint array_bool_or([aux488_BOOL,aux373_BOOL,aux394_BOOL,aux279_BOOL],true);
constraint array_bool_or([aux373_BOOL,aux394_BOOL,aux279_BOOL,aux241_BOOL],true);
constraint array_bool_or([aux394_BOOL,aux279_BOOL,aux241_BOOL,aux496_BOOL],true);
constraint array_bool_or([aux279_BOOL,aux241_BOOL,aux496_BOOL,aux429_BOOL],true);
constraint array_bool_or([aux241_BOOL,aux496_BOOL,aux429_BOOL,aux398_BOOL],true);
constraint array_bool_or([aux496_BOOL,aux429_BOOL,aux398_BOOL,aux252_BOOL],true);
constraint array_bool_or([aux429_BOOL,aux398_BOOL,aux252_BOOL,aux437_BOOL],true);
constraint array_bool_or([aux398_BOOL,aux252_BOOL,aux437_BOOL,aux221_BOOL],true);
constraint array_bool_or([aux252_BOOL,aux437_BOOL,aux221_BOOL,aux534_BOOL],true);
constraint array_bool_or([aux535_BOOL,aux483_BOOL,aux337_BOOL,aux543_BOOL],true);
constraint array_bool_or([aux483_BOOL,aux337_BOOL,aux543_BOOL,aux421_BOOL],true);
constraint array_bool_or([aux337_BOOL,aux543_BOOL,aux421_BOOL,aux384_BOOL],true);
constraint array_bool_or([aux543_BOOL,aux421_BOOL,aux384_BOOL,aux271_BOOL],true);
constraint array_bool_or([aux421_BOOL,aux384_BOOL,aux271_BOOL,aux236_BOOL],true);
constraint array_bool_or([aux384_BOOL,aux271_BOOL,aux236_BOOL,aux545_BOOL],true);
constraint array_bool_or([aux271_BOOL,aux236_BOOL,aux545_BOOL,aux363_BOOL],true);
constraint array_bool_or([aux236_BOOL,aux545_BOOL,aux363_BOOL,aux356_BOOL],true);
constraint array_bool_or([aux545_BOOL,aux363_BOOL,aux356_BOOL,aux249_BOOL],true);
constraint array_bool_or([aux363_BOOL,aux356_BOOL,aux249_BOOL,aux533_BOOL],true);
constraint array_bool_or([aux296_BOOL,aux544_BOOL,aux382_BOOL,aux349_BOOL],true);
constraint array_bool_or([aux544_BOOL,aux382_BOOL,aux349_BOOL,aux194_BOOL],true);
constraint array_bool_or([aux382_BOOL,aux349_BOOL,aux194_BOOL,aux456_BOOL],true);
constraint array_bool_or([aux349_BOOL,aux194_BOOL,aux456_BOOL,aux377_BOOL],true);
constraint array_bool_or([aux194_BOOL,aux456_BOOL,aux377_BOOL,aux409_BOOL],true);
constraint array_bool_or([aux456_BOOL,aux377_BOOL,aux409_BOOL,aux353_BOOL],true);
constraint array_bool_or([aux377_BOOL,aux409_BOOL,aux353_BOOL,aux472_BOOL],true);
constraint array_bool_or([aux409_BOOL,aux353_BOOL,aux472_BOOL,aux510_BOOL],true);
constraint array_bool_or([aux353_BOOL,aux472_BOOL,aux510_BOOL,aux216_BOOL],true);
constraint array_bool_or([aux472_BOOL,aux510_BOOL,aux216_BOOL,aux295_BOOL],true);
constraint array_bool_or([aux297_BOOL,aux541_BOOL,aux431_BOOL,aux400_BOOL],true);
constraint array_bool_or([aux541_BOOL,aux431_BOOL,aux400_BOOL,aux423_BOOL],true);
constraint array_bool_or([aux431_BOOL,aux400_BOOL,aux423_BOOL,aux325_BOOL],true);
constraint array_bool_or([aux400_BOOL,aux423_BOOL,aux325_BOOL,aux243_BOOL],true);
constraint array_bool_or([aux423_BOOL,aux325_BOOL,aux243_BOOL,aux449_BOOL],true);
constraint array_bool_or([aux325_BOOL,aux243_BOOL,aux449_BOOL,aux404_BOOL],true);
constraint array_bool_or([aux243_BOOL,aux449_BOOL,aux404_BOOL,aux333_BOOL],true);
constraint array_bool_or([aux449_BOOL,aux404_BOOL,aux333_BOOL,aux442_BOOL],true);
constraint array_bool_or([aux404_BOOL,aux333_BOOL,aux442_BOOL,aux214_BOOL],true);
constraint array_bool_or([aux333_BOOL,aux442_BOOL,aux214_BOOL,aux294_BOOL],true);
constraint array_bool_or([aux276_BOOL,aux391_BOOL,aux402_BOOL,aux313_BOOL],true);
constraint array_bool_or([aux391_BOOL,aux402_BOOL,aux313_BOOL,aux419_BOOL],true);
constraint array_bool_or([aux402_BOOL,aux313_BOOL,aux419_BOOL,aux528_BOOL],true);
constraint array_bool_or([aux313_BOOL,aux419_BOOL,aux528_BOOL,aux452_BOOL],true);
constraint array_bool_or([aux419_BOOL,aux528_BOOL,aux452_BOOL,aux206_BOOL],true);
constraint array_bool_or([aux528_BOOL,aux452_BOOL,aux206_BOOL,aux316_BOOL],true);
constraint array_bool_or([aux452_BOOL,aux206_BOOL,aux316_BOOL,aux362_BOOL],true);
constraint array_bool_or([aux206_BOOL,aux316_BOOL,aux362_BOOL,aux420_BOOL],true);
constraint array_bool_or([aux316_BOOL,aux362_BOOL,aux420_BOOL,aux352_BOOL],true);
constraint array_bool_or([aux362_BOOL,aux420_BOOL,aux352_BOOL,aux274_BOOL],true);
constraint array_bool_or([aux277_BOOL,aux386_BOOL,aux505_BOOL,aux254_BOOL],true);
constraint array_bool_or([aux386_BOOL,aux505_BOOL,aux254_BOOL,aux197_BOOL],true);
constraint array_bool_or([aux505_BOOL,aux254_BOOL,aux197_BOOL,aux309_BOOL],true);
constraint array_bool_or([aux254_BOOL,aux197_BOOL,aux309_BOOL,aux412_BOOL],true);
constraint array_bool_or([aux197_BOOL,aux309_BOOL,aux412_BOOL,aux519_BOOL],true);
constraint array_bool_or([aux309_BOOL,aux412_BOOL,aux519_BOOL,aux448_BOOL],true);
constraint array_bool_or([aux412_BOOL,aux519_BOOL,aux448_BOOL,aux319_BOOL],true);
constraint array_bool_or([aux519_BOOL,aux448_BOOL,aux319_BOOL,aux518_BOOL],true);
constraint array_bool_or([aux448_BOOL,aux319_BOOL,aux518_BOOL,aux348_BOOL],true);
constraint array_bool_or([aux319_BOOL,aux518_BOOL,aux348_BOOL,aux275_BOOL],true);
constraint array_bool_or([aux258_BOOL,aux457_BOOL,aux201_BOOL,aux459_BOOL],true);
constraint array_bool_or([aux457_BOOL,aux201_BOOL,aux459_BOOL,aux414_BOOL],true);
constraint array_bool_or([aux201_BOOL,aux459_BOOL,aux414_BOOL,aux193_BOOL],true);
constraint array_bool_or([aux459_BOOL,aux414_BOOL,aux193_BOOL,aux503_BOOL],true);
constraint array_bool_or([aux414_BOOL,aux193_BOOL,aux503_BOOL,aux262_BOOL],true);
constraint array_bool_or([aux193_BOOL,aux503_BOOL,aux262_BOOL,aux225_BOOL],true);
constraint array_bool_or([aux503_BOOL,aux262_BOOL,aux225_BOOL,aux364_BOOL],true);
constraint array_bool_or([aux262_BOOL,aux225_BOOL,aux364_BOOL,aux355_BOOL],true);
constraint array_bool_or([aux225_BOOL,aux364_BOOL,aux355_BOOL,aux188_BOOL],true);
constraint array_bool_or([aux364_BOOL,aux355_BOOL,aux188_BOOL,aux260_BOOL],true);
constraint array_bool_or([aux259_BOOL,aux189_BOOL,aux509_BOOL,aux245_BOOL],true);
constraint array_bool_or([aux189_BOOL,aux509_BOOL,aux245_BOOL,aux392_BOOL],true);
constraint array_bool_or([aux509_BOOL,aux245_BOOL,aux392_BOOL,aux351_BOOL],true);
constraint array_bool_or([aux245_BOOL,aux392_BOOL,aux351_BOOL,aux477_BOOL],true);
constraint array_bool_or([aux392_BOOL,aux351_BOOL,aux477_BOOL,aux438_BOOL],true);
constraint array_bool_or([aux351_BOOL,aux477_BOOL,aux438_BOOL,aux213_BOOL],true);
constraint array_bool_or([aux477_BOOL,aux438_BOOL,aux213_BOOL,aux530_BOOL],true);
constraint array_bool_or([aux438_BOOL,aux213_BOOL,aux530_BOOL,aux487_BOOL],true);
constraint array_bool_or([aux213_BOOL,aux530_BOOL,aux487_BOOL,aux340_BOOL],true);
constraint array_bool_or([aux530_BOOL,aux487_BOOL,aux340_BOOL,aux257_BOOL],true);
constraint array_bool_or([aux465_BOOL,aux521_BOOL,aux370_BOOL,aux227_BOOL],true);
constraint array_bool_or([aux521_BOOL,aux370_BOOL,aux227_BOOL,aux265_BOOL],true);
constraint array_bool_or([aux370_BOOL,aux227_BOOL,aux265_BOOL,aux489_BOOL],true);
constraint array_bool_or([aux227_BOOL,aux265_BOOL,aux489_BOOL,aux204_BOOL],true);
constraint array_bool_or([aux265_BOOL,aux489_BOOL,aux204_BOOL,aux427_BOOL],true);
constraint array_bool_or([aux489_BOOL,aux204_BOOL,aux427_BOOL,aux460_BOOL],true);
constraint array_bool_or([aux204_BOOL,aux427_BOOL,aux460_BOOL,aux331_BOOL],true);
constraint array_bool_or([aux427_BOOL,aux460_BOOL,aux331_BOOL,aux273_BOOL],true);
constraint array_bool_or([aux460_BOOL,aux331_BOOL,aux273_BOOL,aux444_BOOL],true);
constraint array_bool_or([aux331_BOOL,aux273_BOOL,aux444_BOOL,aux463_BOOL],true);
constraint array_bool_or([aux464_BOOL,aux445_BOOL,aux228_BOOL,aux525_BOOL],true);
constraint array_bool_or([aux445_BOOL,aux228_BOOL,aux525_BOOL,aux208_BOOL],true);
constraint array_bool_or([aux228_BOOL,aux525_BOOL,aux208_BOOL,aux435_BOOL],true);
constraint array_bool_or([aux525_BOOL,aux208_BOOL,aux435_BOOL,aux473_BOOL],true);
constraint array_bool_or([aux208_BOOL,aux435_BOOL,aux473_BOOL,aux334_BOOL],true);
constraint array_bool_or([aux435_BOOL,aux473_BOOL,aux334_BOOL,aux405_BOOL],true);
constraint array_bool_or([aux473_BOOL,aux334_BOOL,aux405_BOOL,aux250_BOOL],true);
constraint array_bool_or([aux334_BOOL,aux405_BOOL,aux250_BOOL,aux526_BOOL],true);
constraint array_bool_or([aux405_BOOL,aux250_BOOL,aux526_BOOL,aux263_BOOL],true);
constraint array_bool_or([aux250_BOOL,aux526_BOOL,aux263_BOOL,aux462_BOOL],true);
constraint array_bool_or([aux540_BOOL,aux455_BOOL,aux390_BOOL,aux330_BOOL],true);
constraint array_bool_or([aux455_BOOL,aux390_BOOL,aux330_BOOL,aux253_BOOL],true);
constraint array_bool_or([aux390_BOOL,aux330_BOOL,aux253_BOOL,aux199_BOOL],true);
constraint array_bool_or([aux330_BOOL,aux253_BOOL,aux199_BOOL,aux475_BOOL],true);
constraint array_bool_or([aux253_BOOL,aux199_BOOL,aux475_BOOL,aux417_BOOL],true);
constraint array_bool_or([aux199_BOOL,aux475_BOOL,aux417_BOOL,aux339_BOOL],true);
constraint array_bool_or([aux475_BOOL,aux417_BOOL,aux339_BOOL,aux210_BOOL],true);
constraint array_bool_or([aux417_BOOL,aux339_BOOL,aux210_BOOL,aux425_BOOL],true);
constraint array_bool_or([aux339_BOOL,aux210_BOOL,aux425_BOOL,aux223_BOOL],true);
constraint array_bool_or([aux210_BOOL,aux425_BOOL,aux223_BOOL,aux538_BOOL],true);
constraint array_bool_or([aux539_BOOL,aux454_BOOL,aux324_BOOL,aux458_BOOL],true);
constraint array_bool_or([aux454_BOOL,aux324_BOOL,aux458_BOOL,aux393_BOOL],true);
constraint array_bool_or([aux324_BOOL,aux458_BOOL,aux393_BOOL,aux332_BOOL],true);
constraint array_bool_or([aux458_BOOL,aux393_BOOL,aux332_BOOL,aux239_BOOL],true);
constraint array_bool_or([aux393_BOOL,aux332_BOOL,aux239_BOOL,aux183_BOOL],true);
constraint array_bool_or([aux332_BOOL,aux239_BOOL,aux183_BOOL,aux478_BOOL],true);
constraint array_bool_or([aux239_BOOL,aux183_BOOL,aux478_BOOL,aux335_BOOL],true);
constraint array_bool_or([aux183_BOOL,aux478_BOOL,aux335_BOOL,aux345_BOOL],true);
constraint array_bool_or([aux478_BOOL,aux335_BOOL,aux345_BOOL,aux229_BOOL],true);
constraint array_bool_or([aux335_BOOL,aux345_BOOL,aux229_BOOL,aux537_BOOL],true);
constraint array_bool_or([aux502_BOOL,aux186_BOOL,aux407_BOOL,aux441_BOOL],true);
constraint array_bool_or([aux186_BOOL,aux407_BOOL,aux441_BOOL,aux231_BOOL],true);
constraint array_bool_or([aux407_BOOL,aux441_BOOL,aux231_BOOL,aux450_BOOL],true);
constraint array_bool_or([aux441_BOOL,aux231_BOOL,aux450_BOOL,aux318_BOOL],true);
constraint array_bool_or([aux231_BOOL,aux450_BOOL,aux318_BOOL,aux190_BOOL],true);
constraint array_bool_or([aux450_BOOL,aux318_BOOL,aux190_BOOL,aux410_BOOL],true);
constraint array_bool_or([aux318_BOOL,aux190_BOOL,aux410_BOOL,aux264_BOOL],true);
constraint array_bool_or([aux190_BOOL,aux410_BOOL,aux264_BOOL,aux520_BOOL],true);
constraint array_bool_or([aux410_BOOL,aux264_BOOL,aux520_BOOL,aux302_BOOL],true);
constraint array_bool_or([aux264_BOOL,aux520_BOOL,aux302_BOOL,aux500_BOOL],true);
constraint array_bool_or([aux501_BOOL,aux303_BOOL,aux285_BOOL,aux461_BOOL],true);
constraint array_bool_or([aux303_BOOL,aux285_BOOL,aux461_BOOL,aux329_BOOL],true);
constraint array_bool_or([aux285_BOOL,aux461_BOOL,aux329_BOOL,aux211_BOOL],true);
constraint array_bool_or([aux461_BOOL,aux329_BOOL,aux211_BOOL,aux440_BOOL],true);
constraint array_bool_or([aux329_BOOL,aux211_BOOL,aux440_BOOL,aux298_BOOL],true);
constraint array_bool_or([aux211_BOOL,aux440_BOOL,aux298_BOOL,aux517_BOOL],true);
constraint array_bool_or([aux440_BOOL,aux298_BOOL,aux517_BOOL,aux378_BOOL],true);
constraint array_bool_or([aux298_BOOL,aux517_BOOL,aux378_BOOL,aux376_BOOL],true);
constraint array_bool_or([aux517_BOOL,aux378_BOOL,aux376_BOOL,aux397_BOOL],true);
constraint array_bool_or([aux378_BOOL,aux376_BOOL,aux397_BOOL,aux499_BOOL],true);
constraint array_bool_or([aux320_BOOL,aux389_BOOL,aux230_BOOL,aux354_BOOL],true);
constraint array_bool_or([aux389_BOOL,aux230_BOOL,aux354_BOOL,aux406_BOOL],true);
constraint array_bool_or([aux230_BOOL,aux354_BOOL,aux406_BOOL,aux222_BOOL],true);
constraint array_bool_or([aux354_BOOL,aux406_BOOL,aux222_BOOL,aux269_BOOL],true);
constraint array_bool_or([aux406_BOOL,aux222_BOOL,aux269_BOOL,aux493_BOOL],true);
constraint array_bool_or([aux222_BOOL,aux269_BOOL,aux493_BOOL,aux192_BOOL],true);
constraint array_bool_or([aux269_BOOL,aux493_BOOL,aux192_BOOL,aux415_BOOL],true);
constraint array_bool_or([aux493_BOOL,aux192_BOOL,aux415_BOOL,aux476_BOOL],true);
constraint array_bool_or([aux192_BOOL,aux415_BOOL,aux476_BOOL,aux314_BOOL],true);
constraint array_bool_or([aux415_BOOL,aux476_BOOL,aux314_BOOL,aux321_BOOL],true);
constraint array_bool_or([aux322_BOOL,aux315_BOOL,aux272_BOOL,aux233_BOOL],true);
constraint array_bool_or([aux315_BOOL,aux272_BOOL,aux233_BOOL,aux283_BOOL],true);
constraint array_bool_or([aux272_BOOL,aux233_BOOL,aux283_BOOL,aux508_BOOL],true);
constraint array_bool_or([aux233_BOOL,aux283_BOOL,aux508_BOOL,aux205_BOOL],true);
constraint array_bool_or([aux283_BOOL,aux508_BOOL,aux205_BOOL,aux374_BOOL],true);
constraint array_bool_or([aux508_BOOL,aux205_BOOL,aux374_BOOL,aux240_BOOL],true);
constraint array_bool_or([aux205_BOOL,aux374_BOOL,aux240_BOOL,aux293_BOOL],true);
constraint array_bool_or([aux374_BOOL,aux240_BOOL,aux293_BOOL,aux346_BOOL],true);
constraint array_bool_or([aux240_BOOL,aux293_BOOL,aux346_BOOL,aux195_BOOL],true);
constraint array_bool_or([aux293_BOOL,aux346_BOOL,aux195_BOOL,aux323_BOOL],true);
constraint array_bool_or([aux495_BOOL,aux396_BOOL,aux278_BOOL,aux369_BOOL],true);
constraint array_bool_or([aux396_BOOL,aux278_BOOL,aux369_BOOL,aux480_BOOL],true);
constraint array_bool_or([aux278_BOOL,aux369_BOOL,aux480_BOOL,aux235_BOOL],true);
constraint array_bool_or([aux369_BOOL,aux480_BOOL,aux235_BOOL,aux357_BOOL],true);
constraint array_bool_or([aux480_BOOL,aux235_BOOL,aux357_BOOL,aux432_BOOL],true);
constraint array_bool_or([aux235_BOOL,aux357_BOOL,aux432_BOOL,aux371_BOOL],true);
constraint array_bool_or([aux357_BOOL,aux432_BOOL,aux371_BOOL,aux224_BOOL],true);
constraint array_bool_or([aux432_BOOL,aux371_BOOL,aux224_BOOL,aux266_BOOL],true);
constraint array_bool_or([aux371_BOOL,aux224_BOOL,aux266_BOOL,aux360_BOOL],true);
constraint array_bool_or([aux224_BOOL,aux266_BOOL,aux360_BOOL,aux491_BOOL],true);
constraint array_bool_or([aux494_BOOL,aux365_BOOL,aux367_BOOL,aux327_BOOL],true);
constraint array_bool_or([aux365_BOOL,aux367_BOOL,aux327_BOOL,aux443_BOOL],true);
constraint array_bool_or([aux367_BOOL,aux327_BOOL,aux443_BOOL,aux372_BOOL],true);
constraint array_bool_or([aux327_BOOL,aux443_BOOL,aux372_BOOL,aux484_BOOL],true);
constraint array_bool_or([aux443_BOOL,aux372_BOOL,aux484_BOOL,aux207_BOOL],true);
constraint array_bool_or([aux372_BOOL,aux484_BOOL,aux207_BOOL,aux317_BOOL],true);
constraint array_bool_or([aux484_BOOL,aux207_BOOL,aux317_BOOL,aux366_BOOL],true);
constraint array_bool_or([aux207_BOOL,aux317_BOOL,aux366_BOOL,aux380_BOOL],true);
constraint array_bool_or([aux317_BOOL,aux366_BOOL,aux380_BOOL,aux358_BOOL],true);
constraint array_bool_or([aux366_BOOL,aux380_BOOL,aux358_BOOL,aux490_BOOL],true);
constraint array_bool_or([aux307_BOOL,aux434_BOOL,aux282_BOOL,aux522_BOOL],true);
constraint array_bool_or([aux434_BOOL,aux282_BOOL,aux522_BOOL,aux247_BOOL],true);
constraint array_bool_or([aux282_BOOL,aux522_BOOL,aux247_BOOL,aux284_BOOL],true);
constraint array_bool_or([aux522_BOOL,aux247_BOOL,aux284_BOOL,aux395_BOOL],true);
constraint array_bool_or([aux247_BOOL,aux284_BOOL,aux395_BOOL,aux411_BOOL],true);
constraint array_bool_or([aux284_BOOL,aux395_BOOL,aux411_BOOL,aux524_BOOL],true);
constraint array_bool_or([aux395_BOOL,aux411_BOOL,aux524_BOOL,aux288_BOOL],true);
constraint array_bool_or([aux411_BOOL,aux524_BOOL,aux288_BOOL,aux304_BOOL],true);
constraint array_bool_or([aux524_BOOL,aux288_BOOL,aux304_BOOL,aux292_BOOL],true);
constraint array_bool_or([aux288_BOOL,aux304_BOOL,aux292_BOOL,aux306_BOOL],true);
constraint array_bool_or([aux308_BOOL,aux439_BOOL,aux381_BOOL,aux388_BOOL],true);
constraint array_bool_or([aux439_BOOL,aux381_BOOL,aux388_BOOL,aux416_BOOL],true);
constraint array_bool_or([aux381_BOOL,aux388_BOOL,aux416_BOOL,aux504_BOOL],true);
constraint array_bool_or([aux388_BOOL,aux416_BOOL,aux504_BOOL,aux255_BOOL],true);
constraint array_bool_or([aux416_BOOL,aux504_BOOL,aux255_BOOL,aux267_BOOL],true);
constraint array_bool_or([aux504_BOOL,aux255_BOOL,aux267_BOOL,aux375_BOOL],true);
constraint array_bool_or([aux255_BOOL,aux267_BOOL,aux375_BOOL,aux512_BOOL],true);
constraint array_bool_or([aux267_BOOL,aux375_BOOL,aux512_BOOL,aux403_BOOL],true);
constraint array_bool_or([aux375_BOOL,aux512_BOOL,aux403_BOOL,aux287_BOOL],true);
constraint array_bool_or([aux512_BOOL,aux403_BOOL,aux287_BOOL,aux305_BOOL],true);
constraint bool_clause([aux219_BOOL,aux562_BOOL],[]);
constraint bool_clause([aux220_BOOL,aux563_BOOL],[]);
constraint bool_clause([aux516_BOOL,aux564_BOOL],[]);
constraint bool_clause([aux515_BOOL,aux565_BOOL],[]);
constraint bool_clause([aux342_BOOL,aux566_BOOL],[]);
constraint bool_clause([aux344_BOOL,aux567_BOOL],[]);
constraint bool_clause([aux468_BOOL,aux568_BOOL],[]);
constraint bool_clause([aux470_BOOL,aux569_BOOL],[]);
constraint bool_clause([aux536_BOOL,aux570_BOOL],[]);
constraint bool_clause([aux535_BOOL,aux571_BOOL],[]);
constraint bool_clause([aux296_BOOL,aux572_BOOL],[]);
constraint bool_clause([aux297_BOOL,aux573_BOOL],[]);
constraint bool_clause([aux276_BOOL,aux574_BOOL],[]);
constraint bool_clause([aux277_BOOL,aux575_BOOL],[]);
constraint bool_clause([aux258_BOOL,aux576_BOOL],[]);
constraint bool_clause([aux259_BOOL,aux577_BOOL],[]);
constraint bool_clause([aux465_BOOL,aux578_BOOL],[]);
constraint bool_clause([aux464_BOOL,aux579_BOOL],[]);
constraint bool_clause([aux540_BOOL,aux580_BOOL],[]);
constraint bool_clause([aux539_BOOL,aux581_BOOL],[]);
constraint bool_clause([aux502_BOOL,aux582_BOOL],[]);
constraint bool_clause([aux501_BOOL,aux583_BOOL],[]);
constraint bool_clause([aux320_BOOL,aux584_BOOL],[]);
constraint bool_clause([aux322_BOOL,aux585_BOOL],[]);
constraint bool_clause([aux495_BOOL,aux586_BOOL],[]);
constraint bool_clause([aux494_BOOL,aux587_BOOL],[]);
constraint bool_clause([aux307_BOOL,aux588_BOOL],[]);
constraint bool_clause([aux308_BOOL,aux589_BOOL],[]);
constraint array_bool_or([aux591_BOOL,aux220_BOOL,aux202_BOOL],true);
constraint array_bool_or([aux592_BOOL,aux219_BOOL,aux202_BOOL],true);
constraint array_bool_or([aux593_BOOL,aux219_BOOL,aux200_BOOL],true);
constraint array_bool_or([aux220_BOOL,aux200_BOOL,aux594_BOOL],true);
constraint array_bool_or([aux202_BOOL,aux328_BOOL,aux596_BOOL],true);
constraint array_bool_or([aux597_BOOL,aux200_BOOL,aux328_BOOL],true);
constraint array_bool_or([aux598_BOOL,aux200_BOOL,aux447_BOOL],true);
constraint array_bool_or([aux599_BOOL,aux202_BOOL,aux447_BOOL],true);
constraint array_bool_or([aux328_BOOL,aux347_BOOL,aux601_BOOL],true);
constraint array_bool_or([aux602_BOOL,aux447_BOOL,aux347_BOOL],true);
constraint array_bool_or([aux603_BOOL,aux447_BOOL,aux481_BOOL],true);
constraint array_bool_or([aux604_BOOL,aux328_BOOL,aux481_BOOL],true);
constraint array_bool_or([aux347_BOOL,aux232_BOOL,aux606_BOOL],true);
constraint array_bool_or([aux607_BOOL,aux481_BOOL,aux232_BOOL],true);
constraint array_bool_or([aux608_BOOL,aux481_BOOL,aux368_BOOL],true);
constraint array_bool_or([aux609_BOOL,aux347_BOOL,aux368_BOOL],true);
constraint array_bool_or([aux232_BOOL,aux479_BOOL,aux611_BOOL],true);
constraint array_bool_or([aux612_BOOL,aux368_BOOL,aux479_BOOL],true);
constraint array_bool_or([aux613_BOOL,aux368_BOOL,aux436_BOOL],true);
constraint array_bool_or([aux614_BOOL,aux232_BOOL,aux436_BOOL],true);
constraint array_bool_or([aux479_BOOL,aux361_BOOL,aux616_BOOL],true);
constraint array_bool_or([aux617_BOOL,aux436_BOOL,aux361_BOOL],true);
constraint array_bool_or([aux618_BOOL,aux436_BOOL,aux359_BOOL],true);
constraint array_bool_or([aux619_BOOL,aux479_BOOL,aux359_BOOL],true);
constraint array_bool_or([aux361_BOOL,aux286_BOOL,aux621_BOOL],true);
constraint array_bool_or([aux622_BOOL,aux359_BOOL,aux286_BOOL],true);
constraint array_bool_or([aux623_BOOL,aux359_BOOL,aux234_BOOL],true);
constraint array_bool_or([aux624_BOOL,aux361_BOOL,aux234_BOOL],true);
constraint array_bool_or([aux286_BOOL,aux350_BOOL,aux626_BOOL],true);
constraint array_bool_or([aux627_BOOL,aux234_BOOL,aux350_BOOL],true);
constraint array_bool_or([aux628_BOOL,aux234_BOOL,aux482_BOOL],true);
constraint array_bool_or([aux629_BOOL,aux286_BOOL,aux482_BOOL],true);
constraint array_bool_or([aux350_BOOL,aux485_BOOL,aux631_BOOL],true);
constraint array_bool_or([aux632_BOOL,aux482_BOOL,aux485_BOOL],true);
constraint array_bool_or([aux633_BOOL,aux482_BOOL,aux446_BOOL],true);
constraint array_bool_or([aux634_BOOL,aux350_BOOL,aux446_BOOL],true);
constraint array_bool_or([aux485_BOOL,aux291_BOOL,aux636_BOOL],true);
constraint array_bool_or([aux637_BOOL,aux446_BOOL,aux291_BOOL],true);
constraint array_bool_or([aux638_BOOL,aux446_BOOL,aux422_BOOL],true);
constraint array_bool_or([aux639_BOOL,aux485_BOOL,aux422_BOOL],true);
constraint array_bool_or([aux291_BOOL,aux424_BOOL,aux641_BOOL],true);
constraint array_bool_or([aux642_BOOL,aux422_BOOL,aux424_BOOL],true);
constraint array_bool_or([aux643_BOOL,aux422_BOOL,aux430_BOOL],true);
constraint array_bool_or([aux644_BOOL,aux291_BOOL,aux430_BOOL],true);
constraint array_bool_or([aux646_BOOL,aux424_BOOL,aux217_BOOL],true);
constraint array_bool_or([aux647_BOOL,aux430_BOOL,aux217_BOOL],true);
constraint array_bool_or([aux648_BOOL,aux430_BOOL,aux218_BOOL],true);
constraint array_bool_or([aux649_BOOL,aux424_BOOL,aux218_BOOL],true);
constraint array_bool_or([aux515_BOOL,aux196_BOOL,aux651_BOOL],true);
constraint array_bool_or([aux516_BOOL,aux196_BOOL,aux652_BOOL],true);
constraint array_bool_or([aux516_BOOL,aux198_BOOL,aux653_BOOL],true);
constraint array_bool_or([aux515_BOOL,aux198_BOOL,aux654_BOOL],true);
constraint array_bool_or([aux196_BOOL,aux237_BOOL,aux656_BOOL],true);
constraint array_bool_or([aux198_BOOL,aux237_BOOL,aux657_BOOL],true);
constraint array_bool_or([aux198_BOOL,aux532_BOOL,aux658_BOOL],true);
constraint array_bool_or([aux196_BOOL,aux532_BOOL,aux659_BOOL],true);
constraint array_bool_or([aux237_BOOL,aux310_BOOL,aux661_BOOL],true);
constraint array_bool_or([aux532_BOOL,aux310_BOOL,aux662_BOOL],true);
constraint array_bool_or([aux532_BOOL,aux531_BOOL,aux663_BOOL],true);
constraint array_bool_or([aux237_BOOL,aux531_BOOL,aux664_BOOL],true);
constraint array_bool_or([aux310_BOOL,aux385_BOOL,aux666_BOOL],true);
constraint array_bool_or([aux531_BOOL,aux385_BOOL,aux667_BOOL],true);
constraint array_bool_or([aux531_BOOL,aux244_BOOL,aux668_BOOL],true);
constraint array_bool_or([aux310_BOOL,aux244_BOOL,aux669_BOOL],true);
constraint array_bool_or([aux385_BOOL,aux498_BOOL,aux671_BOOL],true);
constraint array_bool_or([aux244_BOOL,aux498_BOOL,aux672_BOOL],true);
constraint array_bool_or([aux244_BOOL,aux187_BOOL,aux673_BOOL],true);
constraint array_bool_or([aux385_BOOL,aux187_BOOL,aux674_BOOL],true);
constraint array_bool_or([aux498_BOOL,aux238_BOOL,aux676_BOOL],true);
constraint array_bool_or([aux187_BOOL,aux238_BOOL,aux677_BOOL],true);
constraint array_bool_or([aux187_BOOL,aux290_BOOL,aux678_BOOL],true);
constraint array_bool_or([aux498_BOOL,aux290_BOOL,aux679_BOOL],true);
constraint array_bool_or([aux238_BOOL,aux203_BOOL,aux681_BOOL],true);
constraint array_bool_or([aux290_BOOL,aux203_BOOL,aux682_BOOL],true);
constraint array_bool_or([aux290_BOOL,aux426_BOOL,aux683_BOOL],true);
constraint array_bool_or([aux238_BOOL,aux426_BOOL,aux684_BOOL],true);
constraint array_bool_or([aux203_BOOL,aux312_BOOL,aux686_BOOL],true);
constraint array_bool_or([aux426_BOOL,aux312_BOOL,aux687_BOOL],true);
constraint array_bool_or([aux426_BOOL,aux542_BOOL,aux688_BOOL],true);
constraint array_bool_or([aux203_BOOL,aux542_BOOL,aux689_BOOL],true);
constraint array_bool_or([aux312_BOOL,aux546_BOOL,aux691_BOOL],true);
constraint array_bool_or([aux542_BOOL,aux546_BOOL,aux692_BOOL],true);
constraint array_bool_or([aux542_BOOL,aux215_BOOL,aux693_BOOL],true);
constraint array_bool_or([aux312_BOOL,aux215_BOOL,aux694_BOOL],true);
constraint array_bool_or([aux546_BOOL,aux466_BOOL,aux696_BOOL],true);
constraint array_bool_or([aux215_BOOL,aux466_BOOL,aux697_BOOL],true);
constraint array_bool_or([aux215_BOOL,aux523_BOOL,aux698_BOOL],true);
constraint array_bool_or([aux546_BOOL,aux523_BOOL,aux699_BOOL],true);
constraint array_bool_or([aux466_BOOL,aux507_BOOL,aux701_BOOL],true);
constraint array_bool_or([aux523_BOOL,aux507_BOOL,aux702_BOOL],true);
constraint array_bool_or([aux523_BOOL,aux506_BOOL,aux703_BOOL],true);
constraint array_bool_or([aux466_BOOL,aux506_BOOL,aux704_BOOL],true);
constraint array_bool_or([aux706_BOOL,aux507_BOOL,aux514_BOOL],true);
constraint array_bool_or([aux506_BOOL,aux514_BOOL,aux707_BOOL],true);
constraint array_bool_or([aux506_BOOL,aux513_BOOL,aux708_BOOL],true);
constraint array_bool_or([aux507_BOOL,aux513_BOOL,aux709_BOOL],true);
constraint array_bool_or([aux344_BOOL,aux281_BOOL,aux711_BOOL],true);
constraint array_bool_or([aux342_BOOL,aux281_BOOL,aux712_BOOL],true);
constraint array_bool_or([aux342_BOOL,aux246_BOOL,aux713_BOOL],true);
constraint array_bool_or([aux246_BOOL,aux344_BOOL,aux714_BOOL],true);
constraint array_bool_or([aux281_BOOL,aux256_BOOL,aux716_BOOL],true);
constraint array_bool_or([aux246_BOOL,aux256_BOOL,aux717_BOOL],true);
constraint array_bool_or([aux246_BOOL,aux418_BOOL,aux718_BOOL],true);
constraint array_bool_or([aux418_BOOL,aux281_BOOL,aux719_BOOL],true);
constraint array_bool_or([aux256_BOOL,aux311_BOOL,aux721_BOOL],true);
constraint array_bool_or([aux418_BOOL,aux311_BOOL,aux722_BOOL],true);
constraint array_bool_or([aux418_BOOL,aux209_BOOL,aux723_BOOL],true);
constraint array_bool_or([aux209_BOOL,aux256_BOOL,aux724_BOOL],true);
constraint array_bool_or([aux311_BOOL,aux453_BOOL,aux726_BOOL],true);
constraint array_bool_or([aux209_BOOL,aux453_BOOL,aux727_BOOL],true);
constraint array_bool_or([aux209_BOOL,aux433_BOOL,aux728_BOOL],true);
constraint array_bool_or([aux433_BOOL,aux311_BOOL,aux729_BOOL],true);
constraint array_bool_or([aux453_BOOL,aux326_BOOL,aux731_BOOL],true);
constraint array_bool_or([aux433_BOOL,aux326_BOOL,aux732_BOOL],true);
constraint array_bool_or([aux433_BOOL,aux289_BOOL,aux733_BOOL],true);
constraint array_bool_or([aux289_BOOL,aux453_BOOL,aux734_BOOL],true);
constraint array_bool_or([aux326_BOOL,aux185_BOOL,aux736_BOOL],true);
constraint array_bool_or([aux289_BOOL,aux185_BOOL,aux737_BOOL],true);
constraint array_bool_or([aux289_BOOL,aux511_BOOL,aux738_BOOL],true);
constraint array_bool_or([aux511_BOOL,aux326_BOOL,aux739_BOOL],true);
constraint array_bool_or([aux185_BOOL,aux408_BOOL,aux741_BOOL],true);
constraint array_bool_or([aux511_BOOL,aux408_BOOL,aux742_BOOL],true);
constraint array_bool_or([aux511_BOOL,aux399_BOOL,aux743_BOOL],true);
constraint array_bool_or([aux399_BOOL,aux185_BOOL,aux744_BOOL],true);
constraint array_bool_or([aux408_BOOL,aux268_BOOL,aux746_BOOL],true);
constraint array_bool_or([aux399_BOOL,aux268_BOOL,aux747_BOOL],true);
constraint array_bool_or([aux399_BOOL,aux248_BOOL,aux748_BOOL],true);
constraint array_bool_or([aux248_BOOL,aux408_BOOL,aux749_BOOL],true);
constraint array_bool_or([aux268_BOOL,aux497_BOOL,aux751_BOOL],true);
constraint array_bool_or([aux248_BOOL,aux497_BOOL,aux752_BOOL],true);
constraint array_bool_or([aux248_BOOL,aux486_BOOL,aux753_BOOL],true);
constraint array_bool_or([aux486_BOOL,aux268_BOOL,aux754_BOOL],true);
constraint array_bool_or([aux497_BOOL,aux387_BOOL,aux756_BOOL],true);
constraint array_bool_or([aux486_BOOL,aux387_BOOL,aux757_BOOL],true);
constraint array_bool_or([aux486_BOOL,aux527_BOOL,aux758_BOOL],true);
constraint array_bool_or([aux527_BOOL,aux497_BOOL,aux759_BOOL],true);
constraint array_bool_or([aux387_BOOL,aux383_BOOL,aux761_BOOL],true);
constraint array_bool_or([aux527_BOOL,aux383_BOOL,aux762_BOOL],true);
constraint array_bool_or([aux527_BOOL,aux280_BOOL,aux763_BOOL],true);
constraint array_bool_or([aux280_BOOL,aux387_BOOL,aux764_BOOL],true);
constraint array_bool_or([aux383_BOOL,aux341_BOOL,aux766_BOOL],true);
constraint array_bool_or([aux280_BOOL,aux341_BOOL,aux767_BOOL],true);
constraint array_bool_or([aux280_BOOL,aux343_BOOL,aux768_BOOL],true);
constraint array_bool_or([aux343_BOOL,aux383_BOOL,aux769_BOOL],true);
constraint array_bool_or([aux470_BOOL,aux301_BOOL,aux771_BOOL],true);
constraint array_bool_or([aux468_BOOL,aux301_BOOL,aux772_BOOL],true);
constraint array_bool_or([aux468_BOOL,aux428_BOOL,aux773_BOOL],true);
constraint array_bool_or([aux428_BOOL,aux470_BOOL,aux774_BOOL],true);
constraint array_bool_or([aux301_BOOL,aux270_BOOL,aux776_BOOL],true);
constraint array_bool_or([aux428_BOOL,aux270_BOOL,aux777_BOOL],true);
constraint array_bool_or([aux428_BOOL,aux226_BOOL,aux778_BOOL],true);
constraint array_bool_or([aux226_BOOL,aux301_BOOL,aux779_BOOL],true);
constraint array_bool_or([aux270_BOOL,aux401_BOOL,aux781_BOOL],true);
constraint array_bool_or([aux226_BOOL,aux401_BOOL,aux782_BOOL],true);
constraint array_bool_or([aux226_BOOL,aux467_BOOL,aux783_BOOL],true);
constraint array_bool_or([aux467_BOOL,aux270_BOOL,aux784_BOOL],true);
constraint array_bool_or([aux401_BOOL,aux251_BOOL,aux786_BOOL],true);
constraint array_bool_or([aux467_BOOL,aux251_BOOL,aux787_BOOL],true);
constraint array_bool_or([aux467_BOOL,aux336_BOOL,aux788_BOOL],true);
constraint array_bool_or([aux336_BOOL,aux401_BOOL,aux789_BOOL],true);
constraint array_bool_or([aux251_BOOL,aux261_BOOL,aux791_BOOL],true);
constraint array_bool_or([aux336_BOOL,aux261_BOOL,aux792_BOOL],true);
constraint array_bool_or([aux336_BOOL,aux379_BOOL,aux793_BOOL],true);
constraint array_bool_or([aux379_BOOL,aux251_BOOL,aux794_BOOL],true);
constraint array_bool_or([aux261_BOOL,aux492_BOOL,aux796_BOOL],true);
constraint array_bool_or([aux379_BOOL,aux492_BOOL,aux797_BOOL],true);
constraint array_bool_or([aux379_BOOL,aux242_BOOL,aux798_BOOL],true);
constraint array_bool_or([aux242_BOOL,aux261_BOOL,aux799_BOOL],true);
constraint array_bool_or([aux492_BOOL,aux191_BOOL,aux801_BOOL],true);
constraint array_bool_or([aux242_BOOL,aux191_BOOL,aux802_BOOL],true);
constraint array_bool_or([aux242_BOOL,aux299_BOOL,aux803_BOOL],true);
constraint array_bool_or([aux299_BOOL,aux492_BOOL,aux804_BOOL],true);
constraint array_bool_or([aux191_BOOL,aux413_BOOL,aux806_BOOL],true);
constraint array_bool_or([aux299_BOOL,aux413_BOOL,aux807_BOOL],true);
constraint array_bool_or([aux299_BOOL,aux529_BOOL,aux808_BOOL],true);
constraint array_bool_or([aux529_BOOL,aux191_BOOL,aux809_BOOL],true);
constraint array_bool_or([aux413_BOOL,aux451_BOOL,aux811_BOOL],true);
constraint array_bool_or([aux529_BOOL,aux451_BOOL,aux812_BOOL],true);
constraint array_bool_or([aux529_BOOL,aux212_BOOL,aux813_BOOL],true);
constraint array_bool_or([aux212_BOOL,aux413_BOOL,aux814_BOOL],true);
constraint array_bool_or([aux451_BOOL,aux338_BOOL,aux816_BOOL],true);
constraint array_bool_or([aux212_BOOL,aux338_BOOL,aux817_BOOL],true);
constraint array_bool_or([aux212_BOOL,aux474_BOOL,aux818_BOOL],true);
constraint array_bool_or([aux474_BOOL,aux451_BOOL,aux819_BOOL],true);
constraint array_bool_or([aux338_BOOL,aux184_BOOL,aux821_BOOL],true);
constraint array_bool_or([aux474_BOOL,aux184_BOOL,aux822_BOOL],true);
constraint array_bool_or([aux474_BOOL,aux300_BOOL,aux823_BOOL],true);
constraint array_bool_or([aux300_BOOL,aux338_BOOL,aux824_BOOL],true);
constraint array_bool_or([aux184_BOOL,aux469_BOOL,aux826_BOOL],true);
constraint array_bool_or([aux300_BOOL,aux469_BOOL,aux827_BOOL],true);
constraint array_bool_or([aux300_BOOL,aux471_BOOL,aux828_BOOL],true);
constraint array_bool_or([aux471_BOOL,aux184_BOOL,aux829_BOOL],true);
constraint array_bool_or([aux831_BOOL,aux535_BOOL,aux483_BOOL],true);
constraint array_bool_or([aux832_BOOL,aux536_BOOL,aux483_BOOL],true);
constraint array_bool_or([aux833_BOOL,aux536_BOOL,aux488_BOOL],true);
constraint array_bool_or([aux834_BOOL,aux535_BOOL,aux488_BOOL],true);
constraint array_bool_or([aux836_BOOL,aux483_BOOL,aux337_BOOL],true);
constraint array_bool_or([aux837_BOOL,aux488_BOOL,aux337_BOOL],true);
constraint array_bool_or([aux838_BOOL,aux488_BOOL,aux373_BOOL],true);
constraint array_bool_or([aux839_BOOL,aux483_BOOL,aux373_BOOL],true);
constraint array_bool_or([aux841_BOOL,aux337_BOOL,aux543_BOOL],true);
constraint array_bool_or([aux842_BOOL,aux373_BOOL,aux543_BOOL],true);
constraint array_bool_or([aux843_BOOL,aux373_BOOL,aux394_BOOL],true);
constraint array_bool_or([aux844_BOOL,aux337_BOOL,aux394_BOOL],true);
constraint array_bool_or([aux846_BOOL,aux543_BOOL,aux421_BOOL],true);
constraint array_bool_or([aux847_BOOL,aux394_BOOL,aux421_BOOL],true);
constraint array_bool_or([aux848_BOOL,aux394_BOOL,aux279_BOOL],true);
constraint array_bool_or([aux849_BOOL,aux543_BOOL,aux279_BOOL],true);
constraint array_bool_or([aux851_BOOL,aux421_BOOL,aux384_BOOL],true);
constraint array_bool_or([aux852_BOOL,aux279_BOOL,aux384_BOOL],true);
constraint array_bool_or([aux853_BOOL,aux279_BOOL,aux241_BOOL],true);
constraint array_bool_or([aux854_BOOL,aux421_BOOL,aux241_BOOL],true);
constraint array_bool_or([aux856_BOOL,aux384_BOOL,aux271_BOOL],true);
constraint array_bool_or([aux857_BOOL,aux241_BOOL,aux271_BOOL],true);
constraint array_bool_or([aux858_BOOL,aux241_BOOL,aux496_BOOL],true);
constraint array_bool_or([aux859_BOOL,aux384_BOOL,aux496_BOOL],true);
constraint array_bool_or([aux861_BOOL,aux271_BOOL,aux236_BOOL],true);
constraint array_bool_or([aux862_BOOL,aux496_BOOL,aux236_BOOL],true);
constraint array_bool_or([aux863_BOOL,aux496_BOOL,aux429_BOOL],true);
constraint array_bool_or([aux864_BOOL,aux271_BOOL,aux429_BOOL],true);
constraint array_bool_or([aux866_BOOL,aux236_BOOL,aux545_BOOL],true);
constraint array_bool_or([aux867_BOOL,aux429_BOOL,aux545_BOOL],true);
constraint array_bool_or([aux868_BOOL,aux429_BOOL,aux398_BOOL],true);
constraint array_bool_or([aux869_BOOL,aux236_BOOL,aux398_BOOL],true);
constraint array_bool_or([aux871_BOOL,aux545_BOOL,aux363_BOOL],true);
constraint array_bool_or([aux872_BOOL,aux398_BOOL,aux363_BOOL],true);
constraint array_bool_or([aux873_BOOL,aux398_BOOL,aux252_BOOL],true);
constraint array_bool_or([aux874_BOOL,aux545_BOOL,aux252_BOOL],true);
constraint array_bool_or([aux876_BOOL,aux363_BOOL,aux356_BOOL],true);
constraint array_bool_or([aux877_BOOL,aux252_BOOL,aux356_BOOL],true);
constraint array_bool_or([aux878_BOOL,aux252_BOOL,aux437_BOOL],true);
constraint array_bool_or([aux879_BOOL,aux363_BOOL,aux437_BOOL],true);
constraint array_bool_or([aux881_BOOL,aux356_BOOL,aux249_BOOL],true);
constraint array_bool_or([aux882_BOOL,aux437_BOOL,aux249_BOOL],true);
constraint array_bool_or([aux883_BOOL,aux437_BOOL,aux221_BOOL],true);
constraint array_bool_or([aux884_BOOL,aux356_BOOL,aux221_BOOL],true);
constraint array_bool_or([aux886_BOOL,aux249_BOOL,aux533_BOOL],true);
constraint array_bool_or([aux887_BOOL,aux221_BOOL,aux533_BOOL],true);
constraint array_bool_or([aux888_BOOL,aux221_BOOL,aux534_BOOL],true);
constraint array_bool_or([aux889_BOOL,aux249_BOOL,aux534_BOOL],true);
constraint array_bool_or([aux891_BOOL,aux297_BOOL,aux541_BOOL],true);
constraint array_bool_or([aux892_BOOL,aux296_BOOL,aux541_BOOL],true);
constraint array_bool_or([aux893_BOOL,aux296_BOOL,aux544_BOOL],true);
constraint array_bool_or([aux894_BOOL,aux297_BOOL,aux544_BOOL],true);
constraint array_bool_or([aux896_BOOL,aux541_BOOL,aux431_BOOL],true);
constraint array_bool_or([aux897_BOOL,aux544_BOOL,aux431_BOOL],true);
constraint array_bool_or([aux898_BOOL,aux544_BOOL,aux382_BOOL],true);
constraint array_bool_or([aux899_BOOL,aux541_BOOL,aux382_BOOL],true);
constraint array_bool_or([aux901_BOOL,aux431_BOOL,aux400_BOOL],true);
constraint array_bool_or([aux902_BOOL,aux382_BOOL,aux400_BOOL],true);
constraint array_bool_or([aux903_BOOL,aux382_BOOL,aux349_BOOL],true);
constraint array_bool_or([aux904_BOOL,aux431_BOOL,aux349_BOOL],true);
constraint array_bool_or([aux906_BOOL,aux400_BOOL,aux423_BOOL],true);
constraint array_bool_or([aux907_BOOL,aux349_BOOL,aux423_BOOL],true);
constraint array_bool_or([aux908_BOOL,aux349_BOOL,aux194_BOOL],true);
constraint array_bool_or([aux909_BOOL,aux400_BOOL,aux194_BOOL],true);
constraint array_bool_or([aux911_BOOL,aux423_BOOL,aux325_BOOL],true);
constraint array_bool_or([aux912_BOOL,aux194_BOOL,aux325_BOOL],true);
constraint array_bool_or([aux913_BOOL,aux194_BOOL,aux456_BOOL],true);
constraint array_bool_or([aux914_BOOL,aux423_BOOL,aux456_BOOL],true);
constraint array_bool_or([aux916_BOOL,aux325_BOOL,aux243_BOOL],true);
constraint array_bool_or([aux917_BOOL,aux456_BOOL,aux243_BOOL],true);
constraint array_bool_or([aux918_BOOL,aux456_BOOL,aux377_BOOL],true);
constraint array_bool_or([aux919_BOOL,aux325_BOOL,aux377_BOOL],true);
constraint array_bool_or([aux921_BOOL,aux243_BOOL,aux449_BOOL],true);
constraint array_bool_or([aux922_BOOL,aux377_BOOL,aux449_BOOL],true);
constraint array_bool_or([aux923_BOOL,aux377_BOOL,aux409_BOOL],true);
constraint array_bool_or([aux924_BOOL,aux243_BOOL,aux409_BOOL],true);
constraint array_bool_or([aux926_BOOL,aux449_BOOL,aux404_BOOL],true);
constraint array_bool_or([aux927_BOOL,aux409_BOOL,aux404_BOOL],true);
constraint array_bool_or([aux928_BOOL,aux409_BOOL,aux353_BOOL],true);
constraint array_bool_or([aux929_BOOL,aux449_BOOL,aux353_BOOL],true);
constraint array_bool_or([aux931_BOOL,aux404_BOOL,aux333_BOOL],true);
constraint array_bool_or([aux932_BOOL,aux353_BOOL,aux333_BOOL],true);
constraint array_bool_or([aux933_BOOL,aux353_BOOL,aux472_BOOL],true);
constraint array_bool_or([aux934_BOOL,aux404_BOOL,aux472_BOOL],true);
constraint array_bool_or([aux936_BOOL,aux333_BOOL,aux442_BOOL],true);
constraint array_bool_or([aux937_BOOL,aux472_BOOL,aux442_BOOL],true);
constraint array_bool_or([aux938_BOOL,aux472_BOOL,aux510_BOOL],true);
constraint array_bool_or([aux939_BOOL,aux333_BOOL,aux510_BOOL],true);
constraint array_bool_or([aux941_BOOL,aux442_BOOL,aux214_BOOL],true);
constraint array_bool_or([aux942_BOOL,aux510_BOOL,aux214_BOOL],true);
constraint array_bool_or([aux943_BOOL,aux510_BOOL,aux216_BOOL],true);
constraint array_bool_or([aux944_BOOL,aux442_BOOL,aux216_BOOL],true);
constraint array_bool_or([aux946_BOOL,aux214_BOOL,aux294_BOOL],true);
constraint array_bool_or([aux947_BOOL,aux216_BOOL,aux294_BOOL],true);
constraint array_bool_or([aux948_BOOL,aux216_BOOL,aux295_BOOL],true);
constraint array_bool_or([aux949_BOOL,aux214_BOOL,aux295_BOOL],true);
constraint array_bool_or([aux277_BOOL,aux386_BOOL,aux951_BOOL],true);
constraint array_bool_or([aux276_BOOL,aux386_BOOL,aux952_BOOL],true);
constraint array_bool_or([aux276_BOOL,aux391_BOOL,aux953_BOOL],true);
constraint array_bool_or([aux277_BOOL,aux391_BOOL,aux954_BOOL],true);
constraint array_bool_or([aux386_BOOL,aux505_BOOL,aux956_BOOL],true);
constraint array_bool_or([aux391_BOOL,aux505_BOOL,aux957_BOOL],true);
constraint array_bool_or([aux391_BOOL,aux402_BOOL,aux958_BOOL],true);
constraint array_bool_or([aux386_BOOL,aux402_BOOL,aux959_BOOL],true);
constraint array_bool_or([aux505_BOOL,aux254_BOOL,aux961_BOOL],true);
constraint array_bool_or([aux402_BOOL,aux254_BOOL,aux962_BOOL],true);
constraint array_bool_or([aux402_BOOL,aux313_BOOL,aux963_BOOL],true);
constraint array_bool_or([aux505_BOOL,aux313_BOOL,aux964_BOOL],true);
constraint array_bool_or([aux254_BOOL,aux197_BOOL,aux966_BOOL],true);
constraint array_bool_or([aux313_BOOL,aux197_BOOL,aux967_BOOL],true);
constraint array_bool_or([aux313_BOOL,aux419_BOOL,aux968_BOOL],true);
constraint array_bool_or([aux254_BOOL,aux419_BOOL,aux969_BOOL],true);
constraint array_bool_or([aux197_BOOL,aux309_BOOL,aux971_BOOL],true);
constraint array_bool_or([aux419_BOOL,aux309_BOOL,aux972_BOOL],true);
constraint array_bool_or([aux419_BOOL,aux528_BOOL,aux973_BOOL],true);
constraint array_bool_or([aux197_BOOL,aux528_BOOL,aux974_BOOL],true);
constraint array_bool_or([aux309_BOOL,aux412_BOOL,aux976_BOOL],true);
constraint array_bool_or([aux528_BOOL,aux412_BOOL,aux977_BOOL],true);
constraint array_bool_or([aux528_BOOL,aux452_BOOL,aux978_BOOL],true);
constraint array_bool_or([aux309_BOOL,aux452_BOOL,aux979_BOOL],true);
constraint array_bool_or([aux412_BOOL,aux519_BOOL,aux981_BOOL],true);
constraint array_bool_or([aux452_BOOL,aux519_BOOL,aux982_BOOL],true);
constraint array_bool_or([aux452_BOOL,aux206_BOOL,aux983_BOOL],true);
constraint array_bool_or([aux412_BOOL,aux206_BOOL,aux984_BOOL],true);
constraint array_bool_or([aux519_BOOL,aux448_BOOL,aux986_BOOL],true);
constraint array_bool_or([aux206_BOOL,aux448_BOOL,aux987_BOOL],true);
constraint array_bool_or([aux206_BOOL,aux316_BOOL,aux988_BOOL],true);
constraint array_bool_or([aux519_BOOL,aux316_BOOL,aux989_BOOL],true);
constraint array_bool_or([aux448_BOOL,aux319_BOOL,aux991_BOOL],true);
constraint array_bool_or([aux316_BOOL,aux319_BOOL,aux992_BOOL],true);
constraint array_bool_or([aux316_BOOL,aux362_BOOL,aux993_BOOL],true);
constraint array_bool_or([aux448_BOOL,aux362_BOOL,aux994_BOOL],true);
constraint array_bool_or([aux319_BOOL,aux518_BOOL,aux996_BOOL],true);
constraint array_bool_or([aux362_BOOL,aux518_BOOL,aux997_BOOL],true);
constraint array_bool_or([aux362_BOOL,aux420_BOOL,aux998_BOOL],true);
constraint array_bool_or([aux319_BOOL,aux420_BOOL,aux999_BOOL],true);
constraint array_bool_or([aux518_BOOL,aux348_BOOL,aux1001_BOOL],true);
constraint array_bool_or([aux420_BOOL,aux348_BOOL,aux1002_BOOL],true);
constraint array_bool_or([aux420_BOOL,aux352_BOOL,aux1003_BOOL],true);
constraint array_bool_or([aux518_BOOL,aux352_BOOL,aux1004_BOOL],true);
constraint array_bool_or([aux348_BOOL,aux275_BOOL,aux1006_BOOL],true);
constraint array_bool_or([aux352_BOOL,aux275_BOOL,aux1007_BOOL],true);
constraint array_bool_or([aux352_BOOL,aux274_BOOL,aux1008_BOOL],true);
constraint array_bool_or([aux348_BOOL,aux274_BOOL,aux1009_BOOL],true);
constraint array_bool_or([aux259_BOOL,aux189_BOOL,aux1011_BOOL],true);
constraint array_bool_or([aux1012_BOOL,aux258_BOOL,aux189_BOOL],true);
constraint array_bool_or([aux258_BOOL,aux457_BOOL,aux1013_BOOL],true);
constraint array_bool_or([aux1014_BOOL,aux457_BOOL,aux259_BOOL],true);
constraint array_bool_or([aux189_BOOL,aux509_BOOL,aux1016_BOOL],true);
constraint array_bool_or([aux1017_BOOL,aux457_BOOL,aux509_BOOL],true);
constraint array_bool_or([aux457_BOOL,aux201_BOOL,aux1018_BOOL],true);
constraint array_bool_or([aux1019_BOOL,aux201_BOOL,aux189_BOOL],true);
constraint array_bool_or([aux509_BOOL,aux245_BOOL,aux1021_BOOL],true);
constraint array_bool_or([aux1022_BOOL,aux201_BOOL,aux245_BOOL],true);
constraint array_bool_or([aux201_BOOL,aux459_BOOL,aux1023_BOOL],true);
constraint array_bool_or([aux1024_BOOL,aux459_BOOL,aux509_BOOL],true);
constraint array_bool_or([aux245_BOOL,aux392_BOOL,aux1026_BOOL],true);
constraint array_bool_or([aux1027_BOOL,aux459_BOOL,aux392_BOOL],true);
constraint array_bool_or([aux459_BOOL,aux414_BOOL,aux1028_BOOL],true);
constraint array_bool_or([aux1029_BOOL,aux414_BOOL,aux245_BOOL],true);
constraint array_bool_or([aux392_BOOL,aux351_BOOL,aux1031_BOOL],true);
constraint array_bool_or([aux1032_BOOL,aux414_BOOL,aux351_BOOL],true);
constraint array_bool_or([aux414_BOOL,aux193_BOOL,aux1033_BOOL],true);
constraint array_bool_or([aux1034_BOOL,aux193_BOOL,aux392_BOOL],true);
constraint array_bool_or([aux351_BOOL,aux477_BOOL,aux1036_BOOL],true);
constraint array_bool_or([aux1037_BOOL,aux193_BOOL,aux477_BOOL],true);
constraint array_bool_or([aux193_BOOL,aux503_BOOL,aux1038_BOOL],true);
constraint array_bool_or([aux1039_BOOL,aux503_BOOL,aux351_BOOL],true);
constraint array_bool_or([aux477_BOOL,aux438_BOOL,aux1041_BOOL],true);
constraint array_bool_or([aux1042_BOOL,aux503_BOOL,aux438_BOOL],true);
constraint array_bool_or([aux503_BOOL,aux262_BOOL,aux1043_BOOL],true);
constraint array_bool_or([aux1044_BOOL,aux262_BOOL,aux477_BOOL],true);
constraint array_bool_or([aux438_BOOL,aux213_BOOL,aux1046_BOOL],true);
constraint array_bool_or([aux1047_BOOL,aux262_BOOL,aux213_BOOL],true);
constraint array_bool_or([aux262_BOOL,aux225_BOOL,aux1048_BOOL],true);
constraint array_bool_or([aux1049_BOOL,aux225_BOOL,aux438_BOOL],true);
constraint array_bool_or([aux213_BOOL,aux530_BOOL,aux1051_BOOL],true);
constraint array_bool_or([aux1052_BOOL,aux225_BOOL,aux530_BOOL],true);
constraint array_bool_or([aux225_BOOL,aux364_BOOL,aux1053_BOOL],true);
constraint array_bool_or([aux1054_BOOL,aux364_BOOL,aux213_BOOL],true);
constraint array_bool_or([aux530_BOOL,aux487_BOOL,aux1056_BOOL],true);
constraint array_bool_or([aux1057_BOOL,aux364_BOOL,aux487_BOOL],true);
constraint array_bool_or([aux364_BOOL,aux355_BOOL,aux1058_BOOL],true);
constraint array_bool_or([aux1059_BOOL,aux355_BOOL,aux530_BOOL],true);
constraint array_bool_or([aux487_BOOL,aux340_BOOL,aux1061_BOOL],true);
constraint array_bool_or([aux1062_BOOL,aux355_BOOL,aux340_BOOL],true);
constraint array_bool_or([aux355_BOOL,aux188_BOOL,aux1063_BOOL],true);
constraint array_bool_or([aux1064_BOOL,aux188_BOOL,aux487_BOOL],true);
constraint array_bool_or([aux340_BOOL,aux257_BOOL,aux1066_BOOL],true);
constraint array_bool_or([aux1067_BOOL,aux188_BOOL,aux257_BOOL],true);
constraint array_bool_or([aux188_BOOL,aux260_BOOL,aux1068_BOOL],true);
constraint array_bool_or([aux1069_BOOL,aux260_BOOL,aux340_BOOL],true);
constraint array_bool_or([aux464_BOOL,aux445_BOOL,aux1071_BOOL],true);
constraint array_bool_or([aux465_BOOL,aux445_BOOL,aux1072_BOOL],true);
constraint array_bool_or([aux465_BOOL,aux521_BOOL,aux1073_BOOL],true);
constraint array_bool_or([aux521_BOOL,aux464_BOOL,aux1074_BOOL],true);
constraint array_bool_or([aux445_BOOL,aux228_BOOL,aux1076_BOOL],true);
constraint array_bool_or([aux521_BOOL,aux228_BOOL,aux1077_BOOL],true);
constraint array_bool_or([aux521_BOOL,aux370_BOOL,aux1078_BOOL],true);
constraint array_bool_or([aux370_BOOL,aux445_BOOL,aux1079_BOOL],true);
constraint array_bool_or([aux228_BOOL,aux525_BOOL,aux1081_BOOL],true);
constraint array_bool_or([aux370_BOOL,aux525_BOOL,aux1082_BOOL],true);
constraint array_bool_or([aux370_BOOL,aux227_BOOL,aux1083_BOOL],true);
constraint array_bool_or([aux227_BOOL,aux228_BOOL,aux1084_BOOL],true);
constraint array_bool_or([aux525_BOOL,aux208_BOOL,aux1086_BOOL],true);
constraint array_bool_or([aux227_BOOL,aux208_BOOL,aux1087_BOOL],true);
constraint array_bool_or([aux227_BOOL,aux265_BOOL,aux1088_BOOL],true);
constraint array_bool_or([aux265_BOOL,aux525_BOOL,aux1089_BOOL],true);
constraint array_bool_or([aux208_BOOL,aux435_BOOL,aux1091_BOOL],true);
constraint array_bool_or([aux265_BOOL,aux435_BOOL,aux1092_BOOL],true);
constraint array_bool_or([aux265_BOOL,aux489_BOOL,aux1093_BOOL],true);
constraint array_bool_or([aux489_BOOL,aux208_BOOL,aux1094_BOOL],true);
constraint array_bool_or([aux435_BOOL,aux473_BOOL,aux1096_BOOL],true);
constraint array_bool_or([aux489_BOOL,aux473_BOOL,aux1097_BOOL],true);
constraint array_bool_or([aux489_BOOL,aux204_BOOL,aux1098_BOOL],true);
constraint array_bool_or([aux204_BOOL,aux435_BOOL,aux1099_BOOL],true);
constraint array_bool_or([aux473_BOOL,aux334_BOOL,aux1101_BOOL],true);
constraint array_bool_or([aux204_BOOL,aux334_BOOL,aux1102_BOOL],true);
constraint array_bool_or([aux204_BOOL,aux427_BOOL,aux1103_BOOL],true);
constraint array_bool_or([aux427_BOOL,aux473_BOOL,aux1104_BOOL],true);
constraint array_bool_or([aux334_BOOL,aux405_BOOL,aux1106_BOOL],true);
constraint array_bool_or([aux427_BOOL,aux405_BOOL,aux1107_BOOL],true);
constraint array_bool_or([aux427_BOOL,aux460_BOOL,aux1108_BOOL],true);
constraint array_bool_or([aux460_BOOL,aux334_BOOL,aux1109_BOOL],true);
constraint array_bool_or([aux405_BOOL,aux250_BOOL,aux1111_BOOL],true);
constraint array_bool_or([aux460_BOOL,aux250_BOOL,aux1112_BOOL],true);
constraint array_bool_or([aux460_BOOL,aux331_BOOL,aux1113_BOOL],true);
constraint array_bool_or([aux331_BOOL,aux405_BOOL,aux1114_BOOL],true);
constraint array_bool_or([aux250_BOOL,aux526_BOOL,aux1116_BOOL],true);
constraint array_bool_or([aux331_BOOL,aux526_BOOL,aux1117_BOOL],true);
constraint array_bool_or([aux331_BOOL,aux273_BOOL,aux1118_BOOL],true);
constraint array_bool_or([aux273_BOOL,aux250_BOOL,aux1119_BOOL],true);
constraint array_bool_or([aux526_BOOL,aux263_BOOL,aux1121_BOOL],true);
constraint array_bool_or([aux273_BOOL,aux263_BOOL,aux1122_BOOL],true);
constraint array_bool_or([aux273_BOOL,aux444_BOOL,aux1123_BOOL],true);
constraint array_bool_or([aux444_BOOL,aux526_BOOL,aux1124_BOOL],true);
constraint array_bool_or([aux263_BOOL,aux462_BOOL,aux1126_BOOL],true);
constraint array_bool_or([aux444_BOOL,aux462_BOOL,aux1127_BOOL],true);
constraint array_bool_or([aux444_BOOL,aux463_BOOL,aux1128_BOOL],true);
constraint array_bool_or([aux463_BOOL,aux263_BOOL,aux1129_BOOL],true);
constraint array_bool_or([aux1131_BOOL,aux539_BOOL,aux454_BOOL],true);
constraint array_bool_or([aux1132_BOOL,aux540_BOOL,aux454_BOOL],true);
constraint array_bool_or([aux1133_BOOL,aux540_BOOL,aux455_BOOL],true);
constraint array_bool_or([aux1134_BOOL,aux539_BOOL,aux455_BOOL],true);
constraint array_bool_or([aux1136_BOOL,aux454_BOOL,aux324_BOOL],true);
constraint array_bool_or([aux1137_BOOL,aux455_BOOL,aux324_BOOL],true);
constraint array_bool_or([aux1138_BOOL,aux455_BOOL,aux390_BOOL],true);
constraint array_bool_or([aux1139_BOOL,aux454_BOOL,aux390_BOOL],true);
constraint array_bool_or([aux1141_BOOL,aux324_BOOL,aux458_BOOL],true);
constraint array_bool_or([aux1142_BOOL,aux390_BOOL,aux458_BOOL],true);
constraint array_bool_or([aux1143_BOOL,aux390_BOOL,aux330_BOOL],true);
constraint array_bool_or([aux1144_BOOL,aux324_BOOL,aux330_BOOL],true);
constraint array_bool_or([aux1146_BOOL,aux458_BOOL,aux393_BOOL],true);
constraint array_bool_or([aux1147_BOOL,aux330_BOOL,aux393_BOOL],true);
constraint array_bool_or([aux1148_BOOL,aux330_BOOL,aux253_BOOL],true);
constraint array_bool_or([aux1149_BOOL,aux458_BOOL,aux253_BOOL],true);
constraint array_bool_or([aux1151_BOOL,aux393_BOOL,aux332_BOOL],true);
constraint array_bool_or([aux1152_BOOL,aux253_BOOL,aux332_BOOL],true);
constraint array_bool_or([aux1153_BOOL,aux253_BOOL,aux199_BOOL],true);
constraint array_bool_or([aux1154_BOOL,aux393_BOOL,aux199_BOOL],true);
constraint array_bool_or([aux1156_BOOL,aux332_BOOL,aux239_BOOL],true);
constraint array_bool_or([aux1157_BOOL,aux199_BOOL,aux239_BOOL],true);
constraint array_bool_or([aux1158_BOOL,aux199_BOOL,aux475_BOOL],true);
constraint array_bool_or([aux1159_BOOL,aux332_BOOL,aux475_BOOL],true);
constraint array_bool_or([aux1161_BOOL,aux239_BOOL,aux183_BOOL],true);
constraint array_bool_or([aux1162_BOOL,aux475_BOOL,aux183_BOOL],true);
constraint array_bool_or([aux1163_BOOL,aux475_BOOL,aux417_BOOL],true);
constraint array_bool_or([aux1164_BOOL,aux239_BOOL,aux417_BOOL],true);
constraint array_bool_or([aux1166_BOOL,aux183_BOOL,aux478_BOOL],true);
constraint array_bool_or([aux1167_BOOL,aux417_BOOL,aux478_BOOL],true);
constraint array_bool_or([aux1168_BOOL,aux417_BOOL,aux339_BOOL],true);
constraint array_bool_or([aux1169_BOOL,aux183_BOOL,aux339_BOOL],true);
constraint array_bool_or([aux1171_BOOL,aux478_BOOL,aux335_BOOL],true);
constraint array_bool_or([aux1172_BOOL,aux339_BOOL,aux335_BOOL],true);
constraint array_bool_or([aux1173_BOOL,aux339_BOOL,aux210_BOOL],true);
constraint array_bool_or([aux1174_BOOL,aux478_BOOL,aux210_BOOL],true);
constraint array_bool_or([aux1176_BOOL,aux335_BOOL,aux345_BOOL],true);
constraint array_bool_or([aux1177_BOOL,aux210_BOOL,aux345_BOOL],true);
constraint array_bool_or([aux1178_BOOL,aux210_BOOL,aux425_BOOL],true);
constraint array_bool_or([aux1179_BOOL,aux335_BOOL,aux425_BOOL],true);
constraint array_bool_or([aux1181_BOOL,aux345_BOOL,aux229_BOOL],true);
constraint array_bool_or([aux1182_BOOL,aux425_BOOL,aux229_BOOL],true);
constraint array_bool_or([aux1183_BOOL,aux425_BOOL,aux223_BOOL],true);
constraint array_bool_or([aux1184_BOOL,aux345_BOOL,aux223_BOOL],true);
constraint array_bool_or([aux1186_BOOL,aux229_BOOL,aux537_BOOL],true);
constraint array_bool_or([aux1187_BOOL,aux223_BOOL,aux537_BOOL],true);
constraint array_bool_or([aux1188_BOOL,aux223_BOOL,aux538_BOOL],true);
constraint array_bool_or([aux1189_BOOL,aux229_BOOL,aux538_BOOL],true);
constraint array_bool_or([aux501_BOOL,aux303_BOOL,aux1191_BOOL],true);
constraint array_bool_or([aux502_BOOL,aux303_BOOL,aux1192_BOOL],true);
constraint array_bool_or([aux502_BOOL,aux186_BOOL,aux1193_BOOL],true);
constraint array_bool_or([aux186_BOOL,aux501_BOOL,aux1194_BOOL],true);
constraint array_bool_or([aux303_BOOL,aux285_BOOL,aux1196_BOOL],true);
constraint array_bool_or([aux186_BOOL,aux285_BOOL,aux1197_BOOL],true);
constraint array_bool_or([aux186_BOOL,aux407_BOOL,aux1198_BOOL],true);
constraint array_bool_or([aux407_BOOL,aux303_BOOL,aux1199_BOOL],true);
constraint array_bool_or([aux285_BOOL,aux461_BOOL,aux1201_BOOL],true);
constraint array_bool_or([aux407_BOOL,aux461_BOOL,aux1202_BOOL],true);
constraint array_bool_or([aux407_BOOL,aux441_BOOL,aux1203_BOOL],true);
constraint array_bool_or([aux441_BOOL,aux285_BOOL,aux1204_BOOL],true);
constraint array_bool_or([aux461_BOOL,aux329_BOOL,aux1206_BOOL],true);
constraint array_bool_or([aux441_BOOL,aux329_BOOL,aux1207_BOOL],true);
constraint array_bool_or([aux441_BOOL,aux231_BOOL,aux1208_BOOL],true);
constraint array_bool_or([aux231_BOOL,aux461_BOOL,aux1209_BOOL],true);
constraint array_bool_or([aux329_BOOL,aux211_BOOL,aux1211_BOOL],true);
constraint array_bool_or([aux231_BOOL,aux211_BOOL,aux1212_BOOL],true);
constraint array_bool_or([aux231_BOOL,aux450_BOOL,aux1213_BOOL],true);
constraint array_bool_or([aux450_BOOL,aux329_BOOL,aux1214_BOOL],true);
constraint array_bool_or([aux211_BOOL,aux440_BOOL,aux1216_BOOL],true);
constraint array_bool_or([aux450_BOOL,aux440_BOOL,aux1217_BOOL],true);
constraint array_bool_or([aux450_BOOL,aux318_BOOL,aux1218_BOOL],true);
constraint array_bool_or([aux318_BOOL,aux211_BOOL,aux1219_BOOL],true);
constraint array_bool_or([aux440_BOOL,aux298_BOOL,aux1221_BOOL],true);
constraint array_bool_or([aux318_BOOL,aux298_BOOL,aux1222_BOOL],true);
constraint array_bool_or([aux318_BOOL,aux190_BOOL,aux1223_BOOL],true);
constraint array_bool_or([aux190_BOOL,aux440_BOOL,aux1224_BOOL],true);
constraint array_bool_or([aux298_BOOL,aux517_BOOL,aux1226_BOOL],true);
constraint array_bool_or([aux190_BOOL,aux517_BOOL,aux1227_BOOL],true);
constraint array_bool_or([aux190_BOOL,aux410_BOOL,aux1228_BOOL],true);
constraint array_bool_or([aux410_BOOL,aux298_BOOL,aux1229_BOOL],true);
constraint array_bool_or([aux517_BOOL,aux378_BOOL,aux1231_BOOL],true);
constraint array_bool_or([aux410_BOOL,aux378_BOOL,aux1232_BOOL],true);
constraint array_bool_or([aux410_BOOL,aux264_BOOL,aux1233_BOOL],true);
constraint array_bool_or([aux264_BOOL,aux517_BOOL,aux1234_BOOL],true);
constraint array_bool_or([aux378_BOOL,aux376_BOOL,aux1236_BOOL],true);
constraint array_bool_or([aux264_BOOL,aux376_BOOL,aux1237_BOOL],true);
constraint array_bool_or([aux264_BOOL,aux520_BOOL,aux1238_BOOL],true);
constraint array_bool_or([aux520_BOOL,aux378_BOOL,aux1239_BOOL],true);
constraint array_bool_or([aux376_BOOL,aux397_BOOL,aux1241_BOOL],true);
constraint array_bool_or([aux520_BOOL,aux397_BOOL,aux1242_BOOL],true);
constraint array_bool_or([aux520_BOOL,aux302_BOOL,aux1243_BOOL],true);
constraint array_bool_or([aux302_BOOL,aux376_BOOL,aux1244_BOOL],true);
constraint array_bool_or([aux397_BOOL,aux499_BOOL,aux1246_BOOL],true);
constraint array_bool_or([aux302_BOOL,aux499_BOOL,aux1247_BOOL],true);
constraint array_bool_or([aux302_BOOL,aux500_BOOL,aux1248_BOOL],true);
constraint array_bool_or([aux500_BOOL,aux397_BOOL,aux1249_BOOL],true);
constraint array_bool_or([aux322_BOOL,aux315_BOOL,aux1251_BOOL],true);
constraint array_bool_or([aux320_BOOL,aux315_BOOL,aux1252_BOOL],true);
constraint array_bool_or([aux320_BOOL,aux389_BOOL,aux1253_BOOL],true);
constraint array_bool_or([aux389_BOOL,aux322_BOOL,aux1254_BOOL],true);
constraint array_bool_or([aux315_BOOL,aux272_BOOL,aux1256_BOOL],true);
constraint array_bool_or([aux389_BOOL,aux272_BOOL,aux1257_BOOL],true);
constraint array_bool_or([aux389_BOOL,aux230_BOOL,aux1258_BOOL],true);
constraint array_bool_or([aux230_BOOL,aux315_BOOL,aux1259_BOOL],true);
constraint array_bool_or([aux272_BOOL,aux233_BOOL,aux1261_BOOL],true);
constraint array_bool_or([aux230_BOOL,aux233_BOOL,aux1262_BOOL],true);
constraint array_bool_or([aux230_BOOL,aux354_BOOL,aux1263_BOOL],true);
constraint array_bool_or([aux354_BOOL,aux272_BOOL,aux1264_BOOL],true);
constraint array_bool_or([aux233_BOOL,aux283_BOOL,aux1266_BOOL],true);
constraint array_bool_or([aux354_BOOL,aux283_BOOL,aux1267_BOOL],true);
constraint array_bool_or([aux354_BOOL,aux406_BOOL,aux1268_BOOL],true);
constraint array_bool_or([aux406_BOOL,aux233_BOOL,aux1269_BOOL],true);
constraint array_bool_or([aux283_BOOL,aux508_BOOL,aux1271_BOOL],true);
constraint array_bool_or([aux406_BOOL,aux508_BOOL,aux1272_BOOL],true);
constraint array_bool_or([aux406_BOOL,aux222_BOOL,aux1273_BOOL],true);
constraint array_bool_or([aux222_BOOL,aux283_BOOL,aux1274_BOOL],true);
constraint array_bool_or([aux508_BOOL,aux205_BOOL,aux1276_BOOL],true);
constraint array_bool_or([aux222_BOOL,aux205_BOOL,aux1277_BOOL],true);
constraint array_bool_or([aux222_BOOL,aux269_BOOL,aux1278_BOOL],true);
constraint array_bool_or([aux269_BOOL,aux508_BOOL,aux1279_BOOL],true);
constraint array_bool_or([aux205_BOOL,aux374_BOOL,aux1281_BOOL],true);
constraint array_bool_or([aux269_BOOL,aux374_BOOL,aux1282_BOOL],true);
constraint array_bool_or([aux269_BOOL,aux493_BOOL,aux1283_BOOL],true);
constraint array_bool_or([aux493_BOOL,aux205_BOOL,aux1284_BOOL],true);
constraint array_bool_or([aux374_BOOL,aux240_BOOL,aux1286_BOOL],true);
constraint array_bool_or([aux493_BOOL,aux240_BOOL,aux1287_BOOL],true);
constraint array_bool_or([aux493_BOOL,aux192_BOOL,aux1288_BOOL],true);
constraint array_bool_or([aux192_BOOL,aux374_BOOL,aux1289_BOOL],true);
constraint array_bool_or([aux240_BOOL,aux293_BOOL,aux1291_BOOL],true);
constraint array_bool_or([aux192_BOOL,aux293_BOOL,aux1292_BOOL],true);
constraint array_bool_or([aux192_BOOL,aux415_BOOL,aux1293_BOOL],true);
constraint array_bool_or([aux415_BOOL,aux240_BOOL,aux1294_BOOL],true);
constraint array_bool_or([aux293_BOOL,aux346_BOOL,aux1296_BOOL],true);
constraint array_bool_or([aux415_BOOL,aux346_BOOL,aux1297_BOOL],true);
constraint array_bool_or([aux415_BOOL,aux476_BOOL,aux1298_BOOL],true);
constraint array_bool_or([aux476_BOOL,aux293_BOOL,aux1299_BOOL],true);
constraint array_bool_or([aux346_BOOL,aux195_BOOL,aux1301_BOOL],true);
constraint array_bool_or([aux476_BOOL,aux195_BOOL,aux1302_BOOL],true);
constraint array_bool_or([aux476_BOOL,aux314_BOOL,aux1303_BOOL],true);
constraint array_bool_or([aux314_BOOL,aux346_BOOL,aux1304_BOOL],true);
constraint array_bool_or([aux195_BOOL,aux323_BOOL,aux1306_BOOL],true);
constraint array_bool_or([aux314_BOOL,aux323_BOOL,aux1307_BOOL],true);
constraint array_bool_or([aux314_BOOL,aux321_BOOL,aux1308_BOOL],true);
constraint array_bool_or([aux321_BOOL,aux195_BOOL,aux1309_BOOL],true);
constraint array_bool_or([aux494_BOOL,aux365_BOOL,aux1311_BOOL],true);
constraint array_bool_or([aux1312_BOOL,aux495_BOOL,aux365_BOOL],true);
constraint array_bool_or([aux1313_BOOL,aux495_BOOL,aux396_BOOL],true);
constraint array_bool_or([aux1314_BOOL,aux494_BOOL,aux396_BOOL],true);
constraint array_bool_or([aux365_BOOL,aux367_BOOL,aux1316_BOOL],true);
constraint array_bool_or([aux1317_BOOL,aux396_BOOL,aux367_BOOL],true);
constraint array_bool_or([aux1318_BOOL,aux396_BOOL,aux278_BOOL],true);
constraint array_bool_or([aux1319_BOOL,aux365_BOOL,aux278_BOOL],true);
constraint array_bool_or([aux367_BOOL,aux327_BOOL,aux1321_BOOL],true);
constraint array_bool_or([aux1322_BOOL,aux278_BOOL,aux327_BOOL],true);
constraint array_bool_or([aux1323_BOOL,aux278_BOOL,aux369_BOOL],true);
constraint array_bool_or([aux1324_BOOL,aux367_BOOL,aux369_BOOL],true);
constraint array_bool_or([aux327_BOOL,aux443_BOOL,aux1326_BOOL],true);
constraint array_bool_or([aux1327_BOOL,aux369_BOOL,aux443_BOOL],true);
constraint array_bool_or([aux1328_BOOL,aux369_BOOL,aux480_BOOL],true);
constraint array_bool_or([aux1329_BOOL,aux327_BOOL,aux480_BOOL],true);
constraint array_bool_or([aux443_BOOL,aux372_BOOL,aux1331_BOOL],true);
constraint array_bool_or([aux1332_BOOL,aux480_BOOL,aux372_BOOL],true);
constraint array_bool_or([aux1333_BOOL,aux480_BOOL,aux235_BOOL],true);
constraint array_bool_or([aux1334_BOOL,aux443_BOOL,aux235_BOOL],true);
constraint array_bool_or([aux372_BOOL,aux484_BOOL,aux1336_BOOL],true);
constraint array_bool_or([aux1337_BOOL,aux235_BOOL,aux484_BOOL],true);
constraint array_bool_or([aux1338_BOOL,aux235_BOOL,aux357_BOOL],true);
constraint array_bool_or([aux1339_BOOL,aux372_BOOL,aux357_BOOL],true);
constraint array_bool_or([aux484_BOOL,aux207_BOOL,aux1341_BOOL],true);
constraint array_bool_or([aux1342_BOOL,aux357_BOOL,aux207_BOOL],true);
constraint array_bool_or([aux1343_BOOL,aux357_BOOL,aux432_BOOL],true);
constraint array_bool_or([aux1344_BOOL,aux484_BOOL,aux432_BOOL],true);
constraint array_bool_or([aux207_BOOL,aux317_BOOL,aux1346_BOOL],true);
constraint array_bool_or([aux1347_BOOL,aux432_BOOL,aux317_BOOL],true);
constraint array_bool_or([aux1348_BOOL,aux432_BOOL,aux371_BOOL],true);
constraint array_bool_or([aux1349_BOOL,aux207_BOOL,aux371_BOOL],true);
constraint array_bool_or([aux317_BOOL,aux366_BOOL,aux1351_BOOL],true);
constraint array_bool_or([aux1352_BOOL,aux371_BOOL,aux366_BOOL],true);
constraint array_bool_or([aux1353_BOOL,aux371_BOOL,aux224_BOOL],true);
constraint array_bool_or([aux1354_BOOL,aux317_BOOL,aux224_BOOL],true);
constraint array_bool_or([aux366_BOOL,aux380_BOOL,aux1356_BOOL],true);
constraint array_bool_or([aux1357_BOOL,aux224_BOOL,aux380_BOOL],true);
constraint array_bool_or([aux1358_BOOL,aux224_BOOL,aux266_BOOL],true);
constraint array_bool_or([aux1359_BOOL,aux366_BOOL,aux266_BOOL],true);
constraint array_bool_or([aux380_BOOL,aux358_BOOL,aux1361_BOOL],true);
constraint array_bool_or([aux1362_BOOL,aux266_BOOL,aux358_BOOL],true);
constraint array_bool_or([aux1363_BOOL,aux266_BOOL,aux360_BOOL],true);
constraint array_bool_or([aux1364_BOOL,aux380_BOOL,aux360_BOOL],true);
constraint array_bool_or([aux358_BOOL,aux490_BOOL,aux1366_BOOL],true);
constraint array_bool_or([aux1367_BOOL,aux360_BOOL,aux490_BOOL],true);
constraint array_bool_or([aux1368_BOOL,aux360_BOOL,aux491_BOOL],true);
constraint array_bool_or([aux1369_BOOL,aux358_BOOL,aux491_BOOL],true);
constraint array_bool_or([aux1371_BOOL,aux308_BOOL,aux439_BOOL],true);
constraint array_bool_or([aux1372_BOOL,aux307_BOOL,aux439_BOOL],true);
constraint array_bool_or([aux1373_BOOL,aux307_BOOL,aux434_BOOL],true);
constraint array_bool_or([aux308_BOOL,aux434_BOOL,aux1374_BOOL],true);
constraint array_bool_or([aux439_BOOL,aux381_BOOL,aux1376_BOOL],true);
constraint array_bool_or([aux1377_BOOL,aux434_BOOL,aux381_BOOL],true);
constraint array_bool_or([aux1378_BOOL,aux434_BOOL,aux282_BOOL],true);
constraint array_bool_or([aux1379_BOOL,aux439_BOOL,aux282_BOOL],true);
constraint array_bool_or([aux381_BOOL,aux388_BOOL,aux1381_BOOL],true);
constraint array_bool_or([aux1382_BOOL,aux282_BOOL,aux388_BOOL],true);
constraint array_bool_or([aux1383_BOOL,aux282_BOOL,aux522_BOOL],true);
constraint array_bool_or([aux1384_BOOL,aux381_BOOL,aux522_BOOL],true);
constraint array_bool_or([aux388_BOOL,aux416_BOOL,aux1386_BOOL],true);
constraint array_bool_or([aux1387_BOOL,aux522_BOOL,aux416_BOOL],true);
constraint array_bool_or([aux1388_BOOL,aux522_BOOL,aux247_BOOL],true);
constraint array_bool_or([aux1389_BOOL,aux388_BOOL,aux247_BOOL],true);
constraint array_bool_or([aux416_BOOL,aux504_BOOL,aux1391_BOOL],true);
constraint array_bool_or([aux1392_BOOL,aux247_BOOL,aux504_BOOL],true);
constraint array_bool_or([aux1393_BOOL,aux247_BOOL,aux284_BOOL],true);
constraint array_bool_or([aux1394_BOOL,aux416_BOOL,aux284_BOOL],true);
constraint array_bool_or([aux504_BOOL,aux255_BOOL,aux1396_BOOL],true);
constraint array_bool_or([aux1397_BOOL,aux284_BOOL,aux255_BOOL],true);
constraint array_bool_or([aux1398_BOOL,aux284_BOOL,aux395_BOOL],true);
constraint array_bool_or([aux1399_BOOL,aux504_BOOL,aux395_BOOL],true);
constraint array_bool_or([aux255_BOOL,aux267_BOOL,aux1401_BOOL],true);
constraint array_bool_or([aux1402_BOOL,aux395_BOOL,aux267_BOOL],true);
constraint array_bool_or([aux1403_BOOL,aux395_BOOL,aux411_BOOL],true);
constraint array_bool_or([aux1404_BOOL,aux255_BOOL,aux411_BOOL],true);
constraint array_bool_or([aux267_BOOL,aux375_BOOL,aux1406_BOOL],true);
constraint array_bool_or([aux1407_BOOL,aux411_BOOL,aux375_BOOL],true);
constraint array_bool_or([aux1408_BOOL,aux411_BOOL,aux524_BOOL],true);
constraint array_bool_or([aux1409_BOOL,aux267_BOOL,aux524_BOOL],true);
constraint array_bool_or([aux375_BOOL,aux512_BOOL,aux1411_BOOL],true);
constraint array_bool_or([aux1412_BOOL,aux524_BOOL,aux512_BOOL],true);
constraint array_bool_or([aux1413_BOOL,aux524_BOOL,aux288_BOOL],true);
constraint array_bool_or([aux1414_BOOL,aux375_BOOL,aux288_BOOL],true);
constraint array_bool_or([aux512_BOOL,aux403_BOOL,aux1416_BOOL],true);
constraint array_bool_or([aux1417_BOOL,aux288_BOOL,aux403_BOOL],true);
constraint array_bool_or([aux1418_BOOL,aux288_BOOL,aux304_BOOL],true);
constraint array_bool_or([aux1419_BOOL,aux512_BOOL,aux304_BOOL],true);
constraint array_bool_or([aux403_BOOL,aux287_BOOL,aux1421_BOOL],true);
constraint array_bool_or([aux1422_BOOL,aux304_BOOL,aux287_BOOL],true);
constraint array_bool_or([aux1423_BOOL,aux304_BOOL,aux292_BOOL],true);
constraint array_bool_or([aux1424_BOOL,aux403_BOOL,aux292_BOOL],true);
constraint array_bool_or([aux287_BOOL,aux305_BOOL,aux1426_BOOL],true);
constraint array_bool_or([aux1427_BOOL,aux292_BOOL,aux305_BOOL],true);
constraint array_bool_or([aux1428_BOOL,aux292_BOOL,aux306_BOOL],true);
constraint array_bool_or([aux1429_BOOL,aux287_BOOL,aux306_BOOL],true);
constraint bool_clause([aux218_BOOL,aux1430_BOOL],[]);
constraint bool_clause([aux217_BOOL,aux1431_BOOL],[]);
constraint bool_clause([aux513_BOOL,aux1432_BOOL],[]);
constraint bool_clause([aux514_BOOL,aux1433_BOOL],[]);
constraint bool_clause([aux343_BOOL,aux1434_BOOL],[]);
constraint bool_clause([aux341_BOOL,aux1435_BOOL],[]);
constraint bool_clause([aux471_BOOL,aux1436_BOOL],[]);
constraint bool_clause([aux469_BOOL,aux1437_BOOL],[]);
constraint bool_clause([aux534_BOOL,aux1438_BOOL],[]);
constraint bool_clause([aux533_BOOL,aux1439_BOOL],[]);
constraint bool_clause([aux295_BOOL,aux1440_BOOL],[]);
constraint bool_clause([aux294_BOOL,aux1441_BOOL],[]);
constraint bool_clause([aux274_BOOL,aux1442_BOOL],[]);
constraint bool_clause([aux275_BOOL,aux1443_BOOL],[]);
constraint bool_clause([aux260_BOOL,aux1444_BOOL],[]);
constraint bool_clause([aux257_BOOL,aux1445_BOOL],[]);
constraint bool_clause([aux463_BOOL,aux1446_BOOL],[]);
constraint bool_clause([aux462_BOOL,aux1447_BOOL],[]);
constraint bool_clause([aux538_BOOL,aux1448_BOOL],[]);
constraint bool_clause([aux537_BOOL,aux1449_BOOL],[]);
constraint bool_clause([aux500_BOOL,aux1450_BOOL],[]);
constraint bool_clause([aux499_BOOL,aux1451_BOOL],[]);
constraint bool_clause([aux321_BOOL,aux1452_BOOL],[]);
constraint bool_clause([aux323_BOOL,aux1453_BOOL],[]);
constraint bool_clause([aux491_BOOL,aux1454_BOOL],[]);
constraint bool_clause([aux490_BOOL,aux1455_BOOL],[]);
constraint bool_clause([aux306_BOOL,aux1456_BOOL],[]);
constraint bool_clause([aux305_BOOL,aux1457_BOOL],[]);

solve :: int_search([opponent_00001_00001, opponent_00001_00002, opponent_00001_00003, opponent_00001_00004, opponent_00001_00005, opponent_00001_00006, opponent_00001_00007, opponent_00001_00008, opponent_00001_00009, opponent_00001_00010, opponent_00001_00011, opponent_00001_00012, opponent_00001_00013, opponent_00002_00001, opponent_00002_00002, opponent_00002_00003, opponent_00002_00004, opponent_00002_00005, opponent_00002_00006, opponent_00002_00007, opponent_00002_00008, opponent_00002_00009, opponent_00002_00010, opponent_00002_00011, opponent_00002_00012, opponent_00002_00013, opponent_00003_00001, opponent_00003_00002, opponent_00003_00003, opponent_00003_00004, opponent_00003_00005, opponent_00003_00006, opponent_00003_00007, opponent_00003_00008, opponent_00003_00009, opponent_00003_00010, opponent_00003_00011, opponent_00003_00012, opponent_00003_00013, opponent_00004_00001, opponent_00004_00002, opponent_00004_00003, opponent_00004_00004, opponent_00004_00005, opponent_00004_00006, opponent_00004_00007, opponent_00004_00008, opponent_00004_00009, opponent_00004_00010, opponent_00004_00011, opponent_00004_00012, opponent_00004_00013, opponent_00005_00001, opponent_00005_00002, opponent_00005_00003, opponent_00005_00004, opponent_00005_00005, opponent_00005_00006, opponent_00005_00007, opponent_00005_00008, opponent_00005_00009, opponent_00005_00010, opponent_00005_00011, opponent_00005_00012, opponent_00005_00013, opponent_00006_00001, opponent_00006_00002, opponent_00006_00003, opponent_00006_00004, opponent_00006_00005, opponent_00006_00006, opponent_00006_00007, opponent_00006_00008, opponent_00006_00009, opponent_00006_00010, opponent_00006_00011, opponent_00006_00012, opponent_00006_00013, opponent_00007_00001, opponent_00007_00002, opponent_00007_00003, opponent_00007_00004, opponent_00007_00005, opponent_00007_00006, opponent_00007_00007, opponent_00007_00008, opponent_00007_00009, opponent_00007_00010, opponent_00007_00011, opponent_00007_00012, opponent_00007_00013, opponent_00008_00001, opponent_00008_00002, opponent_00008_00003, opponent_00008_00004, opponent_00008_00005, opponent_00008_00006, opponent_00008_00007, opponent_00008_00008, opponent_00008_00009, opponent_00008_00010, opponent_00008_00011, opponent_00008_00012, opponent_00008_00013, opponent_00009_00001, opponent_00009_00002, opponent_00009_00003, opponent_00009_00004, opponent_00009_00005, opponent_00009_00006, opponent_00009_00007, opponent_00009_00008, opponent_00009_00009, opponent_00009_00010, opponent_00009_00011, opponent_00009_00012, opponent_00009_00013, opponent_00010_00001, opponent_00010_00002, opponent_00010_00003, opponent_00010_00004, opponent_00010_00005, opponent_00010_00006, opponent_00010_00007, opponent_00010_00008, opponent_00010_00009, opponent_00010_00010, opponent_00010_00011, opponent_00010_00012, opponent_00010_00013, opponent_00011_00001, opponent_00011_00002, opponent_00011_00003, opponent_00011_00004, opponent_00011_00005, opponent_00011_00006, opponent_00011_00007, opponent_00011_00008, opponent_00011_00009, opponent_00011_00010, opponent_00011_00011, opponent_00011_00012, opponent_00011_00013, opponent_00012_00001, opponent_00012_00002, opponent_00012_00003, opponent_00012_00004, opponent_00012_00005, opponent_00012_00006, opponent_00012_00007, opponent_00012_00008, opponent_00012_00009, opponent_00012_00010, opponent_00012_00011, opponent_00012_00012, opponent_00012_00013, opponent_00013_00001, opponent_00013_00002, opponent_00013_00003, opponent_00013_00004, opponent_00013_00005, opponent_00013_00006, opponent_00013_00007, opponent_00013_00008, opponent_00013_00009, opponent_00013_00010, opponent_00013_00011, opponent_00013_00012, opponent_00013_00013, opponent_00014_00001, opponent_00014_00002, opponent_00014_00003, opponent_00014_00004, opponent_00014_00005, opponent_00014_00006, opponent_00014_00007, opponent_00014_00008, opponent_00014_00009, opponent_00014_00010, opponent_00014_00011, opponent_00014_00012, opponent_00014_00013, venue_00001_00001, venue_00001_00002, venue_00001_00003, venue_00001_00004, venue_00001_00005, venue_00001_00006, venue_00001_00007, venue_00001_00008, venue_00001_00009, venue_00001_00010, venue_00001_00011, venue_00001_00012, venue_00001_00013, venue_00002_00001, venue_00002_00002, venue_00002_00003, venue_00002_00004, venue_00002_00005, venue_00002_00006, venue_00002_00007, venue_00002_00008, venue_00002_00009, venue_00002_00010, venue_00002_00011, venue_00002_00012, venue_00002_00013, venue_00003_00001, venue_00003_00002, venue_00003_00003, venue_00003_00004, venue_00003_00005, venue_00003_00006, venue_00003_00007, venue_00003_00008, venue_00003_00009, venue_00003_00010, venue_00003_00011, venue_00003_00012, venue_00003_00013, venue_00004_00001, venue_00004_00002, venue_00004_00003, venue_00004_00004, venue_00004_00005, venue_00004_00006, venue_00004_00007, venue_00004_00008, venue_00004_00009, venue_00004_00010, venue_00004_00011, venue_00004_00012, venue_00004_00013, venue_00005_00001, venue_00005_00002, venue_00005_00003, venue_00005_00004, venue_00005_00005, venue_00005_00006, venue_00005_00007, venue_00005_00008, venue_00005_00009, venue_00005_00010, venue_00005_00011, venue_00005_00012, venue_00005_00013, venue_00006_00001, venue_00006_00002, venue_00006_00003, venue_00006_00004, venue_00006_00005, venue_00006_00006, venue_00006_00007, venue_00006_00008, venue_00006_00009, venue_00006_00010, venue_00006_00011, venue_00006_00012, venue_00006_00013, venue_00007_00001, venue_00007_00002, venue_00007_00003, venue_00007_00004, venue_00007_00005, venue_00007_00006, venue_00007_00007, venue_00007_00008, venue_00007_00009, venue_00007_00010, venue_00007_00011, venue_00007_00012, venue_00007_00013, venue_00008_00001, venue_00008_00002, venue_00008_00003, venue_00008_00004, venue_00008_00005, venue_00008_00006, venue_00008_00007, venue_00008_00008, venue_00008_00009, venue_00008_00010, venue_00008_00011, venue_00008_00012, venue_00008_00013, venue_00009_00001, venue_00009_00002, venue_00009_00003, venue_00009_00004, venue_00009_00005, venue_00009_00006, venue_00009_00007, venue_00009_00008, venue_00009_00009, venue_00009_00010, venue_00009_00011, venue_00009_00012, venue_00009_00013, venue_00010_00001, venue_00010_00002, venue_00010_00003, venue_00010_00004, venue_00010_00005, venue_00010_00006, venue_00010_00007, venue_00010_00008, venue_00010_00009, venue_00010_00010, venue_00010_00011, venue_00010_00012, venue_00010_00013, venue_00011_00001, venue_00011_00002, venue_00011_00003, venue_00011_00004, venue_00011_00005, venue_00011_00006, venue_00011_00007, venue_00011_00008, venue_00011_00009, venue_00011_00010, venue_00011_00011, venue_00011_00012, venue_00011_00013, venue_00012_00001, venue_00012_00002, venue_00012_00003, venue_00012_00004, venue_00012_00005, venue_00012_00006, venue_00012_00007, venue_00012_00008, venue_00012_00009, venue_00012_00010, venue_00012_00011, venue_00012_00012, venue_00012_00013, venue_00013_00001, venue_00013_00002, venue_00013_00003, venue_00013_00004, venue_00013_00005, venue_00013_00006, venue_00013_00007, venue_00013_00008, venue_00013_00009, venue_00013_00010, venue_00013_00011, venue_00013_00012, venue_00013_00013, venue_00014_00001, venue_00014_00002, venue_00014_00003, venue_00014_00004, venue_00014_00005, venue_00014_00006, venue_00014_00007, venue_00014_00008, venue_00014_00009, venue_00014_00010, venue_00014_00011, venue_00014_00012, venue_00014_00013, travel_00001_00001, travel_00001_00002, travel_00001_00003, travel_00001_00004, travel_00001_00005, travel_00001_00006, travel_00001_00007, travel_00001_00008, travel_00001_00009, travel_00001_00010, travel_00001_00011, travel_00001_00012, travel_00001_00013, travel_00001_00014, travel_00002_00001, travel_00002_00002, travel_00002_00003, travel_00002_00004, travel_00002_00005, travel_00002_00006, travel_00002_00007, travel_00002_00008, travel_00002_00009, travel_00002_00010, travel_00002_00011, travel_00002_00012, travel_00002_00013, travel_00002_00014, travel_00003_00001, travel_00003_00002, travel_00003_00003, travel_00003_00004, travel_00003_00005, travel_00003_00006, travel_00003_00007, travel_00003_00008, travel_00003_00009, travel_00003_00010, travel_00003_00011, travel_00003_00012, travel_00003_00013, travel_00003_00014, travel_00004_00001, travel_00004_00002, travel_00004_00003, travel_00004_00004, travel_00004_00005, travel_00004_00006, travel_00004_00007, travel_00004_00008, travel_00004_00009, travel_00004_00010, travel_00004_00011, travel_00004_00012, travel_00004_00013, travel_00004_00014, travel_00005_00001, travel_00005_00002, travel_00005_00003, travel_00005_00004, travel_00005_00005, travel_00005_00006, travel_00005_00007, travel_00005_00008, travel_00005_00009, travel_00005_00010, travel_00005_00011, travel_00005_00012, travel_00005_00013, travel_00005_00014, travel_00006_00001, travel_00006_00002, travel_00006_00003, travel_00006_00004, travel_00006_00005, travel_00006_00006, travel_00006_00007, travel_00006_00008, travel_00006_00009, travel_00006_00010, travel_00006_00011, travel_00006_00012, travel_00006_00013, travel_00006_00014, travel_00007_00001, travel_00007_00002, travel_00007_00003, travel_00007_00004, travel_00007_00005, travel_00007_00006, travel_00007_00007, travel_00007_00008, travel_00007_00009, travel_00007_00010, travel_00007_00011, travel_00007_00012, travel_00007_00013, travel_00007_00014, travel_00008_00001, travel_00008_00002, travel_00008_00003, travel_00008_00004, travel_00008_00005, travel_00008_00006, travel_00008_00007, travel_00008_00008, travel_00008_00009, travel_00008_00010, travel_00008_00011, travel_00008_00012, travel_00008_00013, travel_00008_00014, travel_00009_00001, travel_00009_00002, travel_00009_00003, travel_00009_00004, travel_00009_00005, travel_00009_00006, travel_00009_00007, travel_00009_00008, travel_00009_00009, travel_00009_00010, travel_00009_00011, travel_00009_00012, travel_00009_00013, travel_00009_00014, travel_00010_00001, travel_00010_00002, travel_00010_00003, travel_00010_00004, travel_00010_00005, travel_00010_00006, travel_00010_00007, travel_00010_00008, travel_00010_00009, travel_00010_00010, travel_00010_00011, travel_00010_00012, travel_00010_00013, travel_00010_00014, travel_00011_00001, travel_00011_00002, travel_00011_00003, travel_00011_00004, travel_00011_00005, travel_00011_00006, travel_00011_00007, travel_00011_00008, travel_00011_00009, travel_00011_00010, travel_00011_00011, travel_00011_00012, travel_00011_00013, travel_00011_00014, travel_00012_00001, travel_00012_00002, travel_00012_00003, travel_00012_00004, travel_00012_00005, travel_00012_00006, travel_00012_00007, travel_00012_00008, travel_00012_00009, travel_00012_00010, travel_00012_00011, travel_00012_00012, travel_00012_00013, travel_00012_00014, travel_00013_00001, travel_00013_00002, travel_00013_00003, travel_00013_00004, travel_00013_00005, travel_00013_00006, travel_00013_00007, travel_00013_00008, travel_00013_00009, travel_00013_00010, travel_00013_00011, travel_00013_00012, travel_00013_00013, travel_00013_00014, travel_00014_00001, travel_00014_00002, travel_00014_00003, travel_00014_00004, travel_00014_00005, travel_00014_00006, travel_00014_00007, travel_00014_00008, travel_00014_00009, travel_00014_00010, travel_00014_00011, travel_00014_00012, travel_00014_00013, travel_00014_00014], input_order, indomain_min, complete)
minimize objective;
