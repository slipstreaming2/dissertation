predicate gecode_global_cardinality(array[int] of var int: x, array[int] of int: cover, array[int] of var int: counts);
var 0..3: plan2d_00001_00001:: output_var ;
var 0..3: plan2d_00001_00002:: output_var ;
var 0..3: plan2d_00001_00003:: output_var ;
var 0..3: plan2d_00001_00004:: output_var ;
var 0..3: plan2d_00001_00005:: output_var ;
var 0..3: plan2d_00001_00006:: output_var ;
var 0..3: plan2d_00002_00001:: output_var ;
var 0..3: plan2d_00002_00002:: output_var ;
var 0..3: plan2d_00002_00003:: output_var ;
var 0..3: plan2d_00002_00004:: output_var ;
var 0..3: plan2d_00002_00005:: output_var ;
var 0..3: plan2d_00002_00006:: output_var ;
var 0..3: plan2d_00003_00001:: output_var ;
var 0..3: plan2d_00003_00002:: output_var ;
var 0..3: plan2d_00003_00003:: output_var ;
var 0..3: plan2d_00003_00004:: output_var ;
var 0..3: plan2d_00003_00005:: output_var ;
var 0..3: plan2d_00003_00006:: output_var ;
var 0..3: plan2d_00004_00001:: output_var ;
var 0..3: plan2d_00004_00002:: output_var ;
var 0..3: plan2d_00004_00003:: output_var ;
var 0..3: plan2d_00004_00004:: output_var ;
var 0..3: plan2d_00004_00005:: output_var ;
var 0..3: plan2d_00004_00006:: output_var ;
var 0..3: plan2d_00005_00001:: output_var ;
var 0..3: plan2d_00005_00002:: output_var ;
var 0..3: plan2d_00005_00003:: output_var ;
var 0..3: plan2d_00005_00004:: output_var ;
var 0..3: plan2d_00005_00005:: output_var ;
var 0..3: plan2d_00005_00006:: output_var ;
var 0..3: plan2d_00006_00001:: output_var ;
var 0..3: plan2d_00006_00002:: output_var ;
var 0..3: plan2d_00006_00003:: output_var ;
var 0..3: plan2d_00006_00004:: output_var ;
var 0..3: plan2d_00006_00005:: output_var ;
var 0..3: plan2d_00006_00006:: output_var ;
var 0..3: plan2d_00007_00001:: output_var ;
var 0..3: plan2d_00007_00002:: output_var ;
var 0..3: plan2d_00007_00003:: output_var ;
var 0..3: plan2d_00007_00004:: output_var ;
var 0..3: plan2d_00007_00005:: output_var ;
var 0..3: plan2d_00007_00006:: output_var ;
var 0..3: plan2d_00008_00001:: output_var ;
var 0..3: plan2d_00008_00002:: output_var ;
var 0..3: plan2d_00008_00003:: output_var ;
var 0..3: plan2d_00008_00004:: output_var ;
var 0..3: plan2d_00008_00005:: output_var ;
var 0..3: plan2d_00008_00006:: output_var ;
var 0..3: plan2d_00009_00001:: output_var ;
var 0..3: plan2d_00009_00002:: output_var ;
var 0..3: plan2d_00009_00003:: output_var ;
var 0..3: plan2d_00009_00004:: output_var ;
var 0..3: plan2d_00009_00005:: output_var ;
var 0..3: plan2d_00009_00006:: output_var ;
var 0..3: plan2d_00010_00001:: output_var ;
var 0..3: plan2d_00010_00002:: output_var ;
var 0..3: plan2d_00010_00003:: output_var ;
var 0..3: plan2d_00010_00004:: output_var ;
var 0..3: plan2d_00010_00005:: output_var ;
var 0..3: plan2d_00010_00006:: output_var ;
var 0..3: plan2d_00011_00001:: output_var ;
var 0..3: plan2d_00011_00002:: output_var ;
var 0..3: plan2d_00011_00003:: output_var ;
var 0..3: plan2d_00011_00004:: output_var ;
var 0..3: plan2d_00011_00005:: output_var ;
var 0..3: plan2d_00011_00006:: output_var ;
var 0..3: plan2d_00012_00001:: output_var ;
var 0..3: plan2d_00012_00002:: output_var ;
var 0..3: plan2d_00012_00003:: output_var ;
var 0..3: plan2d_00012_00004:: output_var ;
var 0..3: plan2d_00012_00005:: output_var ;
var 0..3: plan2d_00012_00006:: output_var ;
var 0..3: plan2d_00013_00001:: output_var ;
var 0..3: plan2d_00013_00002:: output_var ;
var 0..3: plan2d_00013_00003:: output_var ;
var 0..3: plan2d_00013_00004:: output_var ;
var 0..3: plan2d_00013_00005:: output_var ;
var 0..3: plan2d_00013_00006:: output_var ;
var 0..3: plan2d_00014_00001:: output_var ;
var 0..3: plan2d_00014_00002:: output_var ;
var 0..3: plan2d_00014_00003:: output_var ;
var 0..3: plan2d_00014_00004:: output_var ;
var 0..3: plan2d_00014_00005:: output_var ;
var 0..3: plan2d_00014_00006:: output_var ;
var 0..3: plan2d_00015_00001:: output_var ;
var 0..3: plan2d_00015_00002:: output_var ;
var 0..3: plan2d_00015_00003:: output_var ;
var 0..3: plan2d_00015_00004:: output_var ;
var 0..3: plan2d_00015_00005:: output_var ;
var 0..3: plan2d_00015_00006:: output_var ;
var 0..3: plan2d_00016_00001:: output_var ;
var 0..3: plan2d_00016_00002:: output_var ;
var 0..3: plan2d_00016_00003:: output_var ;
var 0..3: plan2d_00016_00004:: output_var ;
var 0..3: plan2d_00016_00005:: output_var ;
var 0..3: plan2d_00016_00006:: output_var ;
var 0..3: plan2d_00017_00001:: output_var ;
var 0..3: plan2d_00017_00002:: output_var ;
var 0..3: plan2d_00017_00003:: output_var ;
var 0..3: plan2d_00017_00004:: output_var ;
var 0..3: plan2d_00017_00005:: output_var ;
var 0..3: plan2d_00017_00006:: output_var ;
var 0..3: plan2d_00018_00001:: output_var ;
var 0..3: plan2d_00018_00002:: output_var ;
var 0..3: plan2d_00018_00003:: output_var ;
var 0..3: plan2d_00018_00004:: output_var ;
var 0..3: plan2d_00018_00005:: output_var ;
var 0..3: plan2d_00018_00006:: output_var ;
var 0..3: plan2d_00019_00001:: output_var ;
var 0..3: plan2d_00019_00002:: output_var ;
var 0..3: plan2d_00019_00003:: output_var ;
var 0..3: plan2d_00019_00004:: output_var ;
var 0..3: plan2d_00019_00005:: output_var ;
var 0..3: plan2d_00019_00006:: output_var ;
var 0..3: plan2d_00020_00001:: output_var ;
var 0..3: plan2d_00020_00002:: output_var ;
var 0..3: plan2d_00020_00003:: output_var ;
var 0..3: plan2d_00020_00004:: output_var ;
var 0..3: plan2d_00020_00005:: output_var ;
var 0..3: plan2d_00020_00006:: output_var ;
var 0..3: plan2d_00021_00001:: output_var ;
var 0..3: plan2d_00021_00002:: output_var ;
var 0..3: plan2d_00021_00003:: output_var ;
var 0..3: plan2d_00021_00004:: output_var ;
var 0..3: plan2d_00021_00005:: output_var ;
var 0..3: plan2d_00021_00006:: output_var ;
var 0..3: plan2d_00022_00001:: output_var ;
var 0..3: plan2d_00022_00002:: output_var ;
var 0..3: plan2d_00022_00003:: output_var ;
var 0..3: plan2d_00022_00004:: output_var ;
var 0..3: plan2d_00022_00005:: output_var ;
var 0..3: plan2d_00022_00006:: output_var ;
var 0..3: plan2d_00023_00001:: output_var ;
var 0..3: plan2d_00023_00002:: output_var ;
var 0..3: plan2d_00023_00003:: output_var ;
var 0..3: plan2d_00023_00004:: output_var ;
var 0..3: plan2d_00023_00005:: output_var ;
var 0..3: plan2d_00023_00006:: output_var ;
var 0..3: plan2d_00024_00001:: output_var ;
var 0..3: plan2d_00024_00002:: output_var ;
var 0..3: plan2d_00024_00003:: output_var ;
var 0..3: plan2d_00024_00004:: output_var ;
var 0..3: plan2d_00024_00005:: output_var ;
var 0..3: plan2d_00024_00006:: output_var ;
var 0..3: plan2d_00025_00001:: output_var ;
var 0..3: plan2d_00025_00002:: output_var ;
var 0..3: plan2d_00025_00003:: output_var ;
var 0..3: plan2d_00025_00004:: output_var ;
var 0..3: plan2d_00025_00005:: output_var ;
var 0..3: plan2d_00025_00006:: output_var ;
var 0..3: plan2d_00026_00001:: output_var ;
var 0..3: plan2d_00026_00002:: output_var ;
var 0..3: plan2d_00026_00003:: output_var ;
var 0..3: plan2d_00026_00004:: output_var ;
var 0..3: plan2d_00026_00005:: output_var ;
var 0..3: plan2d_00026_00006:: output_var ;
var 0..3: plan2d_00027_00001:: output_var ;
var 0..3: plan2d_00027_00002:: output_var ;
var 0..3: plan2d_00027_00003:: output_var ;
var 0..3: plan2d_00027_00004:: output_var ;
var 0..3: plan2d_00027_00005:: output_var ;
var 0..3: plan2d_00027_00006:: output_var ;
var 0..3: plan2d_00028_00001:: output_var ;
var 0..3: plan2d_00028_00002:: output_var ;
var 0..3: plan2d_00028_00003:: output_var ;
var 0..3: plan2d_00028_00004:: output_var ;
var 0..3: plan2d_00028_00005:: output_var ;
var 0..3: plan2d_00028_00006:: output_var ;
var bool: aux0_BOOL:: var_is_introduced ;
var {0,1}: aux0_INTEGER :: var_is_introduced ;
var bool: aux1_BOOL:: var_is_introduced ;
var {0,1}: aux1_INTEGER :: var_is_introduced ;
var bool: aux2_BOOL:: var_is_introduced ;
var {0,1}: aux2_INTEGER :: var_is_introduced ;
var bool: aux3_BOOL:: var_is_introduced ;
var {0,1}: aux3_INTEGER :: var_is_introduced ;
var bool: aux4_BOOL:: var_is_introduced ;
var {0,1}: aux4_INTEGER :: var_is_introduced ;
var bool: aux5_BOOL:: var_is_introduced ;
var {0,1}: aux5_INTEGER :: var_is_introduced ;
var bool: aux6_BOOL:: var_is_introduced ;
var {0,1}: aux6_INTEGER :: var_is_introduced ;
var bool: aux7_BOOL:: var_is_introduced ;
var {0,1}: aux7_INTEGER :: var_is_introduced ;
var bool: aux8_BOOL:: var_is_introduced ;
var {0,1}: aux8_INTEGER :: var_is_introduced ;
var bool: aux9_BOOL:: var_is_introduced ;
var {0,1}: aux9_INTEGER :: var_is_introduced ;
var bool: aux10_BOOL:: var_is_introduced ;
var {0,1}: aux10_INTEGER :: var_is_introduced ;
var bool: aux11_BOOL:: var_is_introduced ;
var {0,1}: aux11_INTEGER :: var_is_introduced ;
var bool: aux12_BOOL:: var_is_introduced ;
var {0,1}: aux12_INTEGER :: var_is_introduced ;
var bool: aux13_BOOL:: var_is_introduced ;
var {0,1}: aux13_INTEGER :: var_is_introduced ;
var bool: aux14_BOOL:: var_is_introduced ;
var {0,1}: aux14_INTEGER :: var_is_introduced ;
var bool: aux15_BOOL:: var_is_introduced ;
var {0,1}: aux15_INTEGER :: var_is_introduced ;
var bool: aux16_BOOL:: var_is_introduced ;
var {0,1}: aux16_INTEGER :: var_is_introduced ;
var bool: aux17_BOOL:: var_is_introduced ;
var {0,1}: aux17_INTEGER :: var_is_introduced ;
var bool: aux18_BOOL:: var_is_introduced ;
var {0,1}: aux18_INTEGER :: var_is_introduced ;
var bool: aux19_BOOL:: var_is_introduced ;
var {0,1}: aux19_INTEGER :: var_is_introduced ;
var bool: aux20_BOOL:: var_is_introduced ;
var {0,1}: aux20_INTEGER :: var_is_introduced ;
var bool: aux21_BOOL:: var_is_introduced ;
var {0,1}: aux21_INTEGER :: var_is_introduced ;
var bool: aux22_BOOL:: var_is_introduced ;
var {0,1}: aux22_INTEGER :: var_is_introduced ;
var bool: aux23_BOOL:: var_is_introduced ;
var {0,1}: aux23_INTEGER :: var_is_introduced ;
var bool: aux24_BOOL:: var_is_introduced ;
var {0,1}: aux24_INTEGER :: var_is_introduced ;
var bool: aux25_BOOL:: var_is_introduced ;
var {0,1}: aux25_INTEGER :: var_is_introduced ;
var bool: aux26_BOOL:: var_is_introduced ;
var {0,1}: aux26_INTEGER :: var_is_introduced ;
var bool: aux27_BOOL:: var_is_introduced ;
var {0,1}: aux27_INTEGER :: var_is_introduced ;
var bool: aux28_BOOL:: var_is_introduced ;
var {0,1}: aux28_INTEGER :: var_is_introduced ;
var bool: aux29_BOOL:: var_is_introduced ;
var {0,1}: aux29_INTEGER :: var_is_introduced ;
var bool: aux30_BOOL:: var_is_introduced ;
var {0,1}: aux30_INTEGER :: var_is_introduced ;
var bool: aux31_BOOL:: var_is_introduced ;
var {0,1}: aux31_INTEGER :: var_is_introduced ;
var bool: aux32_BOOL:: var_is_introduced ;
var {0,1}: aux32_INTEGER :: var_is_introduced ;
var bool: aux33_BOOL:: var_is_introduced ;
var {0,1}: aux33_INTEGER :: var_is_introduced ;
var bool: aux34_BOOL:: var_is_introduced ;
var {0,1}: aux34_INTEGER :: var_is_introduced ;
var bool: aux35_BOOL:: var_is_introduced ;
var {0,1}: aux35_INTEGER :: var_is_introduced ;
var bool: aux36_BOOL:: var_is_introduced ;
var {0,1}: aux36_INTEGER :: var_is_introduced ;
var bool: aux37_BOOL:: var_is_introduced ;
var {0,1}: aux37_INTEGER :: var_is_introduced ;
var bool: aux38_BOOL:: var_is_introduced ;
var {0,1}: aux38_INTEGER :: var_is_introduced ;
var bool: aux39_BOOL:: var_is_introduced ;
var {0,1}: aux39_INTEGER :: var_is_introduced ;
var bool: aux40_BOOL:: var_is_introduced ;
var {0,1}: aux40_INTEGER :: var_is_introduced ;
var bool: aux41_BOOL:: var_is_introduced ;
var {0,1}: aux41_INTEGER :: var_is_introduced ;
var bool: aux42_BOOL:: var_is_introduced ;
var {0,1}: aux42_INTEGER :: var_is_introduced ;
var bool: aux43_BOOL:: var_is_introduced ;
var {0,1}: aux43_INTEGER :: var_is_introduced ;
var bool: aux44_BOOL:: var_is_introduced ;
var {0,1}: aux44_INTEGER :: var_is_introduced ;
var bool: aux45_BOOL:: var_is_introduced ;
var {0,1}: aux45_INTEGER :: var_is_introduced ;
var bool: aux46_BOOL:: var_is_introduced ;
var {0,1}: aux46_INTEGER :: var_is_introduced ;
var bool: aux47_BOOL:: var_is_introduced ;
var {0,1}: aux47_INTEGER :: var_is_introduced ;
var bool: aux48_BOOL:: var_is_introduced ;
var {0,1}: aux48_INTEGER :: var_is_introduced ;
var bool: aux49_BOOL:: var_is_introduced ;
var {0,1}: aux49_INTEGER :: var_is_introduced ;
var bool: aux50_BOOL:: var_is_introduced ;
var {0,1}: aux50_INTEGER :: var_is_introduced ;
var bool: aux51_BOOL:: var_is_introduced ;
var {0,1}: aux51_INTEGER :: var_is_introduced ;
var bool: aux52_BOOL:: var_is_introduced ;
var {0,1}: aux52_INTEGER :: var_is_introduced ;
var bool: aux53_BOOL:: var_is_introduced ;
var {0,1}: aux53_INTEGER :: var_is_introduced ;
var bool: aux54_BOOL:: var_is_introduced ;
var {0,1}: aux54_INTEGER :: var_is_introduced ;
var bool: aux55_BOOL:: var_is_introduced ;
var {0,1}: aux55_INTEGER :: var_is_introduced ;
var bool: aux56_BOOL:: var_is_introduced ;
var {0,1}: aux56_INTEGER :: var_is_introduced ;
var bool: aux57_BOOL:: var_is_introduced ;
var {0,1}: aux57_INTEGER :: var_is_introduced ;
var bool: aux58_BOOL:: var_is_introduced ;
var {0,1}: aux58_INTEGER :: var_is_introduced ;
var bool: aux59_BOOL:: var_is_introduced ;
var {0,1}: aux59_INTEGER :: var_is_introduced ;
var bool: aux60_BOOL:: var_is_introduced ;
var {0,1}: aux60_INTEGER :: var_is_introduced ;
var bool: aux61_BOOL:: var_is_introduced ;
var {0,1}: aux61_INTEGER :: var_is_introduced ;
var bool: aux62_BOOL:: var_is_introduced ;
var {0,1}: aux62_INTEGER :: var_is_introduced ;
var bool: aux63_BOOL:: var_is_introduced ;
var {0,1}: aux63_INTEGER :: var_is_introduced ;
var bool: aux64_BOOL:: var_is_introduced ;
var {0,1}: aux64_INTEGER :: var_is_introduced ;
var bool: aux65_BOOL:: var_is_introduced ;
var {0,1}: aux65_INTEGER :: var_is_introduced ;
var bool: aux66_BOOL:: var_is_introduced ;
var {0,1}: aux66_INTEGER :: var_is_introduced ;
var bool: aux67_BOOL:: var_is_introduced ;
var {0,1}: aux67_INTEGER :: var_is_introduced ;
var bool: aux68_BOOL:: var_is_introduced ;
var {0,1}: aux68_INTEGER :: var_is_introduced ;
var bool: aux69_BOOL:: var_is_introduced ;
var {0,1}: aux69_INTEGER :: var_is_introduced ;
var bool: aux70_BOOL:: var_is_introduced ;
var {0,1}: aux70_INTEGER :: var_is_introduced ;
var bool: aux71_BOOL:: var_is_introduced ;
var {0,1}: aux71_INTEGER :: var_is_introduced ;
var bool: aux72_BOOL:: var_is_introduced ;
var {0,1}: aux72_INTEGER :: var_is_introduced ;
var bool: aux73_BOOL:: var_is_introduced ;
var {0,1}: aux73_INTEGER :: var_is_introduced ;
var bool: aux74_BOOL:: var_is_introduced ;
var {0,1}: aux74_INTEGER :: var_is_introduced ;
var bool: aux75_BOOL:: var_is_introduced ;
var {0,1}: aux75_INTEGER :: var_is_introduced ;
var bool: aux76_BOOL:: var_is_introduced ;
var {0,1}: aux76_INTEGER :: var_is_introduced ;
var bool: aux77_BOOL:: var_is_introduced ;
var {0,1}: aux77_INTEGER :: var_is_introduced ;
var bool: aux78_BOOL:: var_is_introduced ;
var {0,1}: aux78_INTEGER :: var_is_introduced ;
var bool: aux79_BOOL:: var_is_introduced ;
var {0,1}: aux79_INTEGER :: var_is_introduced ;
var bool: aux80_BOOL:: var_is_introduced ;
var {0,1}: aux80_INTEGER :: var_is_introduced ;
var bool: aux81_BOOL:: var_is_introduced ;
var {0,1}: aux81_INTEGER :: var_is_introduced ;
var bool: aux82_BOOL:: var_is_introduced ;
var {0,1}: aux82_INTEGER :: var_is_introduced ;
var bool: aux83_BOOL:: var_is_introduced ;
var {0,1}: aux83_INTEGER :: var_is_introduced ;
var bool: aux84_BOOL:: var_is_introduced ;
var {0,1}: aux84_INTEGER :: var_is_introduced ;
var bool: aux85_BOOL:: var_is_introduced ;
var {0,1}: aux85_INTEGER :: var_is_introduced ;
var bool: aux86_BOOL:: var_is_introduced ;
var {0,1}: aux86_INTEGER :: var_is_introduced ;
var bool: aux87_BOOL:: var_is_introduced ;
var {0,1}: aux87_INTEGER :: var_is_introduced ;
var bool: aux88_BOOL:: var_is_introduced ;
var {0,1}: aux88_INTEGER :: var_is_introduced ;
var bool: aux89_BOOL:: var_is_introduced ;
var {0,1}: aux89_INTEGER :: var_is_introduced ;
var bool: aux90_BOOL:: var_is_introduced ;
var {0,1}: aux90_INTEGER :: var_is_introduced ;
var bool: aux91_BOOL:: var_is_introduced ;
var {0,1}: aux91_INTEGER :: var_is_introduced ;
var bool: aux92_BOOL:: var_is_introduced ;
var {0,1}: aux92_INTEGER :: var_is_introduced ;
var bool: aux93_BOOL:: var_is_introduced ;
var {0,1}: aux93_INTEGER :: var_is_introduced ;
var bool: aux94_BOOL:: var_is_introduced ;
var {0,1}: aux94_INTEGER :: var_is_introduced ;
var bool: aux95_BOOL:: var_is_introduced ;
var {0,1}: aux95_INTEGER :: var_is_introduced ;
var bool: aux96_BOOL:: var_is_introduced ;
var {0,1}: aux96_INTEGER :: var_is_introduced ;
var bool: aux97_BOOL:: var_is_introduced ;
var {0,1}: aux97_INTEGER :: var_is_introduced ;
var bool: aux98_BOOL:: var_is_introduced ;
var {0,1}: aux98_INTEGER :: var_is_introduced ;
var bool: aux99_BOOL:: var_is_introduced ;
var {0,1}: aux99_INTEGER :: var_is_introduced ;
var bool: aux100_BOOL:: var_is_introduced ;
var {0,1}: aux100_INTEGER :: var_is_introduced ;
var bool: aux101_BOOL:: var_is_introduced ;
var {0,1}: aux101_INTEGER :: var_is_introduced ;
var bool: aux102_BOOL:: var_is_introduced ;
var {0,1}: aux102_INTEGER :: var_is_introduced ;
var bool: aux103_BOOL:: var_is_introduced ;
var {0,1}: aux103_INTEGER :: var_is_introduced ;
var bool: aux104_BOOL:: var_is_introduced ;
var {0,1}: aux104_INTEGER :: var_is_introduced ;
var bool: aux105_BOOL:: var_is_introduced ;
var {0,1}: aux105_INTEGER :: var_is_introduced ;
var bool: aux106_BOOL:: var_is_introduced ;
var {0,1}: aux106_INTEGER :: var_is_introduced ;
var bool: aux107_BOOL:: var_is_introduced ;
var {0,1}: aux107_INTEGER :: var_is_introduced ;
var bool: aux108_BOOL:: var_is_introduced ;
var {0,1}: aux108_INTEGER :: var_is_introduced ;
var bool: aux109_BOOL:: var_is_introduced ;
var {0,1}: aux109_INTEGER :: var_is_introduced ;
var bool: aux110_BOOL:: var_is_introduced ;
var {0,1}: aux110_INTEGER :: var_is_introduced ;
var bool: aux111_BOOL:: var_is_introduced ;
var {0,1}: aux111_INTEGER :: var_is_introduced ;
var bool: aux112_BOOL:: var_is_introduced ;
var {0,1}: aux112_INTEGER :: var_is_introduced ;
var bool: aux113_BOOL:: var_is_introduced ;
var {0,1}: aux113_INTEGER :: var_is_introduced ;
var bool: aux114_BOOL:: var_is_introduced ;
var {0,1}: aux114_INTEGER :: var_is_introduced ;
var bool: aux115_BOOL:: var_is_introduced ;
var {0,1}: aux115_INTEGER :: var_is_introduced ;
var bool: aux116_BOOL:: var_is_introduced ;
var {0,1}: aux116_INTEGER :: var_is_introduced ;
var bool: aux117_BOOL:: var_is_introduced ;
var {0,1}: aux117_INTEGER :: var_is_introduced ;
var bool: aux118_BOOL:: var_is_introduced ;
var {0,1}: aux118_INTEGER :: var_is_introduced ;
var bool: aux119_BOOL:: var_is_introduced ;
var {0,1}: aux119_INTEGER :: var_is_introduced ;
var bool: aux120_BOOL:: var_is_introduced ;
var {0,1}: aux120_INTEGER :: var_is_introduced ;
var bool: aux121_BOOL:: var_is_introduced ;
var {0,1}: aux121_INTEGER :: var_is_introduced ;
var bool: aux122_BOOL:: var_is_introduced ;
var {0,1}: aux122_INTEGER :: var_is_introduced ;
var bool: aux123_BOOL:: var_is_introduced ;
var {0,1}: aux123_INTEGER :: var_is_introduced ;
var bool: aux124_BOOL:: var_is_introduced ;
var {0,1}: aux124_INTEGER :: var_is_introduced ;
var bool: aux125_BOOL:: var_is_introduced ;
var {0,1}: aux125_INTEGER :: var_is_introduced ;
var bool: aux126_BOOL:: var_is_introduced ;
var {0,1}: aux126_INTEGER :: var_is_introduced ;
var bool: aux127_BOOL:: var_is_introduced ;
var {0,1}: aux127_INTEGER :: var_is_introduced ;
var bool: aux128_BOOL:: var_is_introduced ;
var {0,1}: aux128_INTEGER :: var_is_introduced ;
var bool: aux129_BOOL:: var_is_introduced ;
var {0,1}: aux129_INTEGER :: var_is_introduced ;
var bool: aux130_BOOL:: var_is_introduced ;
var {0,1}: aux130_INTEGER :: var_is_introduced ;
var bool: aux131_BOOL:: var_is_introduced ;
var {0,1}: aux131_INTEGER :: var_is_introduced ;
var bool: aux132_BOOL:: var_is_introduced ;
var {0,1}: aux132_INTEGER :: var_is_introduced ;
var bool: aux133_BOOL:: var_is_introduced ;
var {0,1}: aux133_INTEGER :: var_is_introduced ;
var bool: aux134_BOOL:: var_is_introduced ;
var {0,1}: aux134_INTEGER :: var_is_introduced ;
var bool: aux135_BOOL:: var_is_introduced ;
var {0,1}: aux135_INTEGER :: var_is_introduced ;
var bool: aux136_BOOL:: var_is_introduced ;
var {0,1}: aux136_INTEGER :: var_is_introduced ;
var bool: aux137_BOOL:: var_is_introduced ;
var {0,1}: aux137_INTEGER :: var_is_introduced ;
var bool: aux138_BOOL:: var_is_introduced ;
var {0,1}: aux138_INTEGER :: var_is_introduced ;
var bool: aux139_BOOL:: var_is_introduced ;
var {0,1}: aux139_INTEGER :: var_is_introduced ;
var bool: aux140_BOOL:: var_is_introduced ;
var {0,1}: aux140_INTEGER :: var_is_introduced ;
var bool: aux141_BOOL:: var_is_introduced ;
var {0,1}: aux141_INTEGER :: var_is_introduced ;
var bool: aux142_BOOL:: var_is_introduced ;
var {0,1}: aux142_INTEGER :: var_is_introduced ;
var bool: aux143_BOOL:: var_is_introduced ;
var {0,1}: aux143_INTEGER :: var_is_introduced ;
var bool: aux144_BOOL:: var_is_introduced ;
var {0,1}: aux144_INTEGER :: var_is_introduced ;
var bool: aux145_BOOL:: var_is_introduced ;
var {0,1}: aux145_INTEGER :: var_is_introduced ;
var bool: aux146_BOOL:: var_is_introduced ;
var {0,1}: aux146_INTEGER :: var_is_introduced ;
var bool: aux147_BOOL:: var_is_introduced ;
var {0,1}: aux147_INTEGER :: var_is_introduced ;
var bool: aux148_BOOL:: var_is_introduced ;
var {0,1}: aux148_INTEGER :: var_is_introduced ;
var bool: aux149_BOOL:: var_is_introduced ;
var {0,1}: aux149_INTEGER :: var_is_introduced ;
var bool: aux150_BOOL:: var_is_introduced ;
var {0,1}: aux150_INTEGER :: var_is_introduced ;
var bool: aux151_BOOL:: var_is_introduced ;
var {0,1}: aux151_INTEGER :: var_is_introduced ;
var bool: aux152_BOOL:: var_is_introduced ;
var {0,1}: aux152_INTEGER :: var_is_introduced ;
var bool: aux153_BOOL:: var_is_introduced ;
var {0,1}: aux153_INTEGER :: var_is_introduced ;
var bool: aux154_BOOL:: var_is_introduced ;
var {0,1}: aux154_INTEGER :: var_is_introduced ;
var bool: aux155_BOOL:: var_is_introduced ;
var {0,1}: aux155_INTEGER :: var_is_introduced ;
var bool: aux156_BOOL:: var_is_introduced ;
var {0,1}: aux156_INTEGER :: var_is_introduced ;
var bool: aux157_BOOL:: var_is_introduced ;
var {0,1}: aux157_INTEGER :: var_is_introduced ;
var bool: aux158_BOOL:: var_is_introduced ;
var {0,1}: aux158_INTEGER :: var_is_introduced ;
var bool: aux159_BOOL:: var_is_introduced ;
var {0,1}: aux159_INTEGER :: var_is_introduced ;
var bool: aux160_BOOL:: var_is_introduced ;
var {0,1}: aux160_INTEGER :: var_is_introduced ;
var bool: aux161_BOOL:: var_is_introduced ;
var {0,1}: aux161_INTEGER :: var_is_introduced ;
var bool: aux162_BOOL:: var_is_introduced ;
var {0,1}: aux162_INTEGER :: var_is_introduced ;
var bool: aux163_BOOL:: var_is_introduced ;
var {0,1}: aux163_INTEGER :: var_is_introduced ;
var bool: aux164_BOOL:: var_is_introduced ;
var {0,1}: aux164_INTEGER :: var_is_introduced ;
var bool: aux165_BOOL:: var_is_introduced ;
var {0,1}: aux165_INTEGER :: var_is_introduced ;
var bool: aux166_BOOL:: var_is_introduced ;
var {0,1}: aux166_INTEGER :: var_is_introduced ;
var bool: aux167_BOOL:: var_is_introduced ;
var {0,1}: aux167_INTEGER :: var_is_introduced ;
var bool: aux168_BOOL:: var_is_introduced ;
var {0,1}: aux168_INTEGER :: var_is_introduced ;
var bool: aux169_BOOL:: var_is_introduced ;
var {0,1}: aux169_INTEGER :: var_is_introduced ;
var bool: aux170_BOOL:: var_is_introduced ;
var {0,1}: aux170_INTEGER :: var_is_introduced ;
var bool: aux171_BOOL:: var_is_introduced ;
var {0,1}: aux171_INTEGER :: var_is_introduced ;
var bool: aux172_BOOL:: var_is_introduced ;
var {0,1}: aux172_INTEGER :: var_is_introduced ;
var bool: aux173_BOOL:: var_is_introduced ;
var {0,1}: aux173_INTEGER :: var_is_introduced ;
var bool: aux174_BOOL:: var_is_introduced ;
var {0,1}: aux174_INTEGER :: var_is_introduced ;
var bool: aux175_BOOL:: var_is_introduced ;
var {0,1}: aux175_INTEGER :: var_is_introduced ;
var bool: aux176_BOOL:: var_is_introduced ;
var {0,1}: aux176_INTEGER :: var_is_introduced ;
var bool: aux177_BOOL:: var_is_introduced ;
var {0,1}: aux177_INTEGER :: var_is_introduced ;
var bool: aux178_BOOL:: var_is_introduced ;
var {0,1}: aux178_INTEGER :: var_is_introduced ;
var bool: aux179_BOOL:: var_is_introduced ;
var {0,1}: aux179_INTEGER :: var_is_introduced ;
var bool: aux180_BOOL:: var_is_introduced ;
var {0,1}: aux180_INTEGER :: var_is_introduced ;
var bool: aux181_BOOL:: var_is_introduced ;
var {0,1}: aux181_INTEGER :: var_is_introduced ;
var bool: aux182_BOOL:: var_is_introduced ;
var {0,1}: aux182_INTEGER :: var_is_introduced ;
var bool: aux183_BOOL:: var_is_introduced ;
var {0,1}: aux183_INTEGER :: var_is_introduced ;
var bool: aux184_BOOL:: var_is_introduced ;
var {0,1}: aux184_INTEGER :: var_is_introduced ;
var bool: aux185_BOOL:: var_is_introduced ;
var {0,1}: aux185_INTEGER :: var_is_introduced ;
var bool: aux186_BOOL:: var_is_introduced ;
var {0,1}: aux186_INTEGER :: var_is_introduced ;
var bool: aux187_BOOL:: var_is_introduced ;
var {0,1}: aux187_INTEGER :: var_is_introduced ;
var bool: aux188_BOOL:: var_is_introduced ;
var {0,1}: aux188_INTEGER :: var_is_introduced ;
var bool: aux189_BOOL:: var_is_introduced ;
var {0,1}: aux189_INTEGER :: var_is_introduced ;
var bool: aux190_BOOL:: var_is_introduced ;
var {0,1}: aux190_INTEGER :: var_is_introduced ;
var bool: aux191_BOOL:: var_is_introduced ;
var {0,1}: aux191_INTEGER :: var_is_introduced ;
var bool: aux192_BOOL:: var_is_introduced ;
var {0,1}: aux192_INTEGER :: var_is_introduced ;
var bool: aux193_BOOL:: var_is_introduced ;
var {0,1}: aux193_INTEGER :: var_is_introduced ;
var bool: aux194_BOOL:: var_is_introduced ;
var {0,1}: aux194_INTEGER :: var_is_introduced ;
var bool: aux195_BOOL:: var_is_introduced ;
var {0,1}: aux195_INTEGER :: var_is_introduced ;
var bool: aux196_BOOL:: var_is_introduced ;
var {0,1}: aux196_INTEGER :: var_is_introduced ;
var bool: aux197_BOOL:: var_is_introduced ;
var {0,1}: aux197_INTEGER :: var_is_introduced ;
var bool: aux198_BOOL:: var_is_introduced ;
var {0,1}: aux198_INTEGER :: var_is_introduced ;
var bool: aux199_BOOL:: var_is_introduced ;
var {0,1}: aux199_INTEGER :: var_is_introduced ;
var bool: aux200_BOOL:: var_is_introduced ;
var {0,1}: aux200_INTEGER :: var_is_introduced ;
var bool: aux201_BOOL:: var_is_introduced ;
var {0,1}: aux201_INTEGER :: var_is_introduced ;
var bool: aux202_BOOL:: var_is_introduced ;
var {0,1}: aux202_INTEGER :: var_is_introduced ;
var bool: aux203_BOOL:: var_is_introduced ;
var {0,1}: aux203_INTEGER :: var_is_introduced ;
var bool: aux204_BOOL:: var_is_introduced ;
var {0,1}: aux204_INTEGER :: var_is_introduced ;
var bool: aux205_BOOL:: var_is_introduced ;
var {0,1}: aux205_INTEGER :: var_is_introduced ;
var bool: aux206_BOOL:: var_is_introduced ;
var {0,1}: aux206_INTEGER :: var_is_introduced ;
var bool: aux207_BOOL:: var_is_introduced ;
var {0,1}: aux207_INTEGER :: var_is_introduced ;
var bool: aux208_BOOL:: var_is_introduced ;
var {0,1}: aux208_INTEGER :: var_is_introduced ;
var bool: aux209_BOOL:: var_is_introduced ;
var {0,1}: aux209_INTEGER :: var_is_introduced ;
var bool: aux210_BOOL:: var_is_introduced ;
var {0,1}: aux210_INTEGER :: var_is_introduced ;
var bool: aux211_BOOL:: var_is_introduced ;
var {0,1}: aux211_INTEGER :: var_is_introduced ;
var bool: aux212_BOOL:: var_is_introduced ;
var {0,1}: aux212_INTEGER :: var_is_introduced ;
var bool: aux213_BOOL:: var_is_introduced ;
var {0,1}: aux213_INTEGER :: var_is_introduced ;
var bool: aux214_BOOL:: var_is_introduced ;
var {0,1}: aux214_INTEGER :: var_is_introduced ;
var bool: aux215_BOOL:: var_is_introduced ;
var {0,1}: aux215_INTEGER :: var_is_introduced ;
var bool: aux216_BOOL:: var_is_introduced ;
var {0,1}: aux216_INTEGER :: var_is_introduced ;
var bool: aux217_BOOL:: var_is_introduced ;
var {0,1}: aux217_INTEGER :: var_is_introduced ;
var bool: aux218_BOOL:: var_is_introduced ;
var {0,1}: aux218_INTEGER :: var_is_introduced ;
var bool: aux219_BOOL:: var_is_introduced ;
var {0,1}: aux219_INTEGER :: var_is_introduced ;
var bool: aux220_BOOL:: var_is_introduced ;
var {0,1}: aux220_INTEGER :: var_is_introduced ;
var bool: aux221_BOOL:: var_is_introduced ;
var {0,1}: aux221_INTEGER :: var_is_introduced ;
var bool: aux222_BOOL:: var_is_introduced ;
var {0,1}: aux222_INTEGER :: var_is_introduced ;
var bool: aux223_BOOL:: var_is_introduced ;
var {0,1}: aux223_INTEGER :: var_is_introduced ;
var bool: aux224_BOOL:: var_is_introduced ;
var {0,1}: aux224_INTEGER :: var_is_introduced ;
var bool: aux225_BOOL:: var_is_introduced ;
var {0,1}: aux225_INTEGER :: var_is_introduced ;
var bool: aux226_BOOL:: var_is_introduced ;
var {0,1}: aux226_INTEGER :: var_is_introduced ;
var bool: aux227_BOOL:: var_is_introduced ;
var {0,1}: aux227_INTEGER :: var_is_introduced ;
var bool: aux228_BOOL:: var_is_introduced ;
var {0,1}: aux228_INTEGER :: var_is_introduced ;
var bool: aux229_BOOL:: var_is_introduced ;
var {0,1}: aux229_INTEGER :: var_is_introduced ;
var bool: aux230_BOOL:: var_is_introduced ;
var {0,1}: aux230_INTEGER :: var_is_introduced ;
var bool: aux231_BOOL:: var_is_introduced ;
var {0,1}: aux231_INTEGER :: var_is_introduced ;
var bool: aux232_BOOL:: var_is_introduced ;
var {0,1}: aux232_INTEGER :: var_is_introduced ;
var bool: aux233_BOOL:: var_is_introduced ;
var {0,1}: aux233_INTEGER :: var_is_introduced ;
var bool: aux234_BOOL:: var_is_introduced ;
var {0,1}: aux234_INTEGER :: var_is_introduced ;
var bool: aux235_BOOL:: var_is_introduced ;
var {0,1}: aux235_INTEGER :: var_is_introduced ;
var bool: aux236_BOOL:: var_is_introduced ;
var {0,1}: aux236_INTEGER :: var_is_introduced ;
var bool: aux237_BOOL:: var_is_introduced ;
var {0,1}: aux237_INTEGER :: var_is_introduced ;
var bool: aux238_BOOL:: var_is_introduced ;
var {0,1}: aux238_INTEGER :: var_is_introduced ;
var bool: aux239_BOOL:: var_is_introduced ;
var {0,1}: aux239_INTEGER :: var_is_introduced ;
var bool: aux240_BOOL:: var_is_introduced ;
var {0,1}: aux240_INTEGER :: var_is_introduced ;
var bool: aux241_BOOL:: var_is_introduced ;
var {0,1}: aux241_INTEGER :: var_is_introduced ;
var bool: aux242_BOOL:: var_is_introduced ;
var {0,1}: aux242_INTEGER :: var_is_introduced ;
var bool: aux243_BOOL:: var_is_introduced ;
var {0,1}: aux243_INTEGER :: var_is_introduced ;
var bool: aux244_BOOL:: var_is_introduced ;
var {0,1}: aux244_INTEGER :: var_is_introduced ;
var bool: aux245_BOOL:: var_is_introduced ;
var {0,1}: aux245_INTEGER :: var_is_introduced ;
var bool: aux246_BOOL:: var_is_introduced ;
var {0,1}: aux246_INTEGER :: var_is_introduced ;
var bool: aux247_BOOL:: var_is_introduced ;
var {0,1}: aux247_INTEGER :: var_is_introduced ;
var bool: aux248_BOOL:: var_is_introduced ;
var {0,1}: aux248_INTEGER :: var_is_introduced ;
var bool: aux249_BOOL:: var_is_introduced ;
var {0,1}: aux249_INTEGER :: var_is_introduced ;
var bool: aux250_BOOL:: var_is_introduced ;
var {0,1}: aux250_INTEGER :: var_is_introduced ;
var bool: aux251_BOOL:: var_is_introduced ;
var {0,1}: aux251_INTEGER :: var_is_introduced ;
var bool: aux252_BOOL:: var_is_introduced ;
var {0,1}: aux252_INTEGER :: var_is_introduced ;
var bool: aux253_BOOL:: var_is_introduced ;
var {0,1}: aux253_INTEGER :: var_is_introduced ;
var bool: aux254_BOOL:: var_is_introduced ;
var {0,1}: aux254_INTEGER :: var_is_introduced ;
var bool: aux255_BOOL:: var_is_introduced ;
var {0,1}: aux255_INTEGER :: var_is_introduced ;
var bool: aux256_BOOL:: var_is_introduced ;
var {0,1}: aux256_INTEGER :: var_is_introduced ;
var bool: aux257_BOOL:: var_is_introduced ;
var {0,1}: aux257_INTEGER :: var_is_introduced ;
var bool: aux258_BOOL:: var_is_introduced ;
var {0,1}: aux258_INTEGER :: var_is_introduced ;
var bool: aux259_BOOL:: var_is_introduced ;
var {0,1}: aux259_INTEGER :: var_is_introduced ;
var bool: aux260_BOOL:: var_is_introduced ;
var {0,1}: aux260_INTEGER :: var_is_introduced ;
var bool: aux261_BOOL:: var_is_introduced ;
var {0,1}: aux261_INTEGER :: var_is_introduced ;
var bool: aux262_BOOL:: var_is_introduced ;
var {0,1}: aux262_INTEGER :: var_is_introduced ;
var bool: aux263_BOOL:: var_is_introduced ;
var {0,1}: aux263_INTEGER :: var_is_introduced ;
var bool: aux264_BOOL:: var_is_introduced ;
var {0,1}: aux264_INTEGER :: var_is_introduced ;
var bool: aux265_BOOL:: var_is_introduced ;
var {0,1}: aux265_INTEGER :: var_is_introduced ;
var bool: aux266_BOOL:: var_is_introduced ;
var {0,1}: aux266_INTEGER :: var_is_introduced ;
var bool: aux267_BOOL:: var_is_introduced ;
var {0,1}: aux267_INTEGER :: var_is_introduced ;
var bool: aux268_BOOL:: var_is_introduced ;
var {0,1}: aux268_INTEGER :: var_is_introduced ;
var bool: aux269_BOOL:: var_is_introduced ;
var {0,1}: aux269_INTEGER :: var_is_introduced ;
var bool: aux270_BOOL:: var_is_introduced ;
var {0,1}: aux270_INTEGER :: var_is_introduced ;
var bool: aux271_BOOL:: var_is_introduced ;
var {0,1}: aux271_INTEGER :: var_is_introduced ;
var bool: aux272_BOOL:: var_is_introduced ;
var {0,1}: aux272_INTEGER :: var_is_introduced ;
var bool: aux273_BOOL:: var_is_introduced ;
var {0,1}: aux273_INTEGER :: var_is_introduced ;
var bool: aux274_BOOL:: var_is_introduced ;
var {0,1}: aux274_INTEGER :: var_is_introduced ;
var bool: aux275_BOOL:: var_is_introduced ;
var {0,1}: aux275_INTEGER :: var_is_introduced ;
var bool: aux276_BOOL:: var_is_introduced ;
var {0,1}: aux276_INTEGER :: var_is_introduced ;
var bool: aux277_BOOL:: var_is_introduced ;
var {0,1}: aux277_INTEGER :: var_is_introduced ;
var bool: aux278_BOOL:: var_is_introduced ;
var {0,1}: aux278_INTEGER :: var_is_introduced ;
var bool: aux279_BOOL:: var_is_introduced ;
var {0,1}: aux279_INTEGER :: var_is_introduced ;
var bool: aux280_BOOL:: var_is_introduced ;
var {0,1}: aux280_INTEGER :: var_is_introduced ;
var bool: aux281_BOOL:: var_is_introduced ;
var {0,1}: aux281_INTEGER :: var_is_introduced ;
var bool: aux282_BOOL:: var_is_introduced ;
var {0,1}: aux282_INTEGER :: var_is_introduced ;
var bool: aux283_BOOL:: var_is_introduced ;
var {0,1}: aux283_INTEGER :: var_is_introduced ;
var bool: aux284_BOOL:: var_is_introduced ;
var {0,1}: aux284_INTEGER :: var_is_introduced ;
var bool: aux285_BOOL:: var_is_introduced ;
var {0,1}: aux285_INTEGER :: var_is_introduced ;
var bool: aux286_BOOL:: var_is_introduced ;
var {0,1}: aux286_INTEGER :: var_is_introduced ;
var bool: aux287_BOOL:: var_is_introduced ;
var {0,1}: aux287_INTEGER :: var_is_introduced ;
var bool: aux288_BOOL:: var_is_introduced ;
var {0,1}: aux288_INTEGER :: var_is_introduced ;
var bool: aux289_BOOL:: var_is_introduced ;
var {0,1}: aux289_INTEGER :: var_is_introduced ;
var bool: aux290_BOOL:: var_is_introduced ;
var {0,1}: aux290_INTEGER :: var_is_introduced ;
var bool: aux291_BOOL:: var_is_introduced ;
var {0,1}: aux291_INTEGER :: var_is_introduced ;
var bool: aux292_BOOL:: var_is_introduced ;
var {0,1}: aux292_INTEGER :: var_is_introduced ;
var bool: aux293_BOOL:: var_is_introduced ;
var {0,1}: aux293_INTEGER :: var_is_introduced ;
var bool: aux294_BOOL:: var_is_introduced ;
var {0,1}: aux294_INTEGER :: var_is_introduced ;
var bool: aux295_BOOL:: var_is_introduced ;
var {0,1}: aux295_INTEGER :: var_is_introduced ;
var bool: aux296_BOOL:: var_is_introduced ;
var {0,1}: aux296_INTEGER :: var_is_introduced ;
var bool: aux297_BOOL:: var_is_introduced ;
var {0,1}: aux297_INTEGER :: var_is_introduced ;
var bool: aux298_BOOL:: var_is_introduced ;
var {0,1}: aux298_INTEGER :: var_is_introduced ;
var bool: aux299_BOOL:: var_is_introduced ;
var {0,1}: aux299_INTEGER :: var_is_introduced ;
var bool: aux300_BOOL:: var_is_introduced ;
var {0,1}: aux300_INTEGER :: var_is_introduced ;
var bool: aux301_BOOL:: var_is_introduced ;
var {0,1}: aux301_INTEGER :: var_is_introduced ;
var bool: aux302_BOOL:: var_is_introduced ;
var {0,1}: aux302_INTEGER :: var_is_introduced ;
var bool: aux303_BOOL:: var_is_introduced ;
var {0,1}: aux303_INTEGER :: var_is_introduced ;
var bool: aux304_BOOL:: var_is_introduced ;
var {0,1}: aux304_INTEGER :: var_is_introduced ;
var bool: aux305_BOOL:: var_is_introduced ;
var {0,1}: aux305_INTEGER :: var_is_introduced ;
var bool: aux306_BOOL:: var_is_introduced ;
var {0,1}: aux306_INTEGER :: var_is_introduced ;
var bool: aux307_BOOL:: var_is_introduced ;
var {0,1}: aux307_INTEGER :: var_is_introduced ;
var bool: aux308_BOOL:: var_is_introduced ;
var {0,1}: aux308_INTEGER :: var_is_introduced ;
var bool: aux309_BOOL:: var_is_introduced ;
var {0,1}: aux309_INTEGER :: var_is_introduced ;
var bool: aux310_BOOL:: var_is_introduced ;
var {0,1}: aux310_INTEGER :: var_is_introduced ;
var bool: aux311_BOOL:: var_is_introduced ;
var {0,1}: aux311_INTEGER :: var_is_introduced ;
var bool: aux312_BOOL:: var_is_introduced ;
var {0,1}: aux312_INTEGER :: var_is_introduced ;
var bool: aux313_BOOL:: var_is_introduced ;
var {0,1}: aux313_INTEGER :: var_is_introduced ;
var bool: aux314_BOOL:: var_is_introduced ;
var {0,1}: aux314_INTEGER :: var_is_introduced ;
var bool: aux315_BOOL:: var_is_introduced ;
var {0,1}: aux315_INTEGER :: var_is_introduced ;
var bool: aux316_BOOL:: var_is_introduced ;
var {0,1}: aux316_INTEGER :: var_is_introduced ;
var bool: aux317_BOOL:: var_is_introduced ;
var {0,1}: aux317_INTEGER :: var_is_introduced ;
var bool: aux318_BOOL:: var_is_introduced ;
var {0,1}: aux318_INTEGER :: var_is_introduced ;
var bool: aux319_BOOL:: var_is_introduced ;
var {0,1}: aux319_INTEGER :: var_is_introduced ;
var bool: aux320_BOOL:: var_is_introduced ;
var {0,1}: aux320_INTEGER :: var_is_introduced ;
var bool: aux321_BOOL:: var_is_introduced ;
var {0,1}: aux321_INTEGER :: var_is_introduced ;
var bool: aux322_BOOL:: var_is_introduced ;
var {0,1}: aux322_INTEGER :: var_is_introduced ;
var bool: aux323_BOOL:: var_is_introduced ;
var {0,1}: aux323_INTEGER :: var_is_introduced ;
var bool: aux324_BOOL:: var_is_introduced ;
var {0,1}: aux324_INTEGER :: var_is_introduced ;
var bool: aux325_BOOL:: var_is_introduced ;
var {0,1}: aux325_INTEGER :: var_is_introduced ;
var bool: aux326_BOOL:: var_is_introduced ;
var {0,1}: aux326_INTEGER :: var_is_introduced ;
var bool: aux327_BOOL:: var_is_introduced ;
var {0,1}: aux327_INTEGER :: var_is_introduced ;
var bool: aux328_BOOL:: var_is_introduced ;
var {0,1}: aux328_INTEGER :: var_is_introduced ;
var bool: aux329_BOOL:: var_is_introduced ;
var {0,1}: aux329_INTEGER :: var_is_introduced ;
var bool: aux330_BOOL:: var_is_introduced ;
var {0,1}: aux330_INTEGER :: var_is_introduced ;
var bool: aux331_BOOL:: var_is_introduced ;
var {0,1}: aux331_INTEGER :: var_is_introduced ;
var bool: aux332_BOOL:: var_is_introduced ;
var {0,1}: aux332_INTEGER :: var_is_introduced ;
var bool: aux333_BOOL:: var_is_introduced ;
var {0,1}: aux333_INTEGER :: var_is_introduced ;
var bool: aux334_BOOL:: var_is_introduced ;
var {0,1}: aux334_INTEGER :: var_is_introduced ;
var bool: aux335_BOOL:: var_is_introduced ;
var {0,1}: aux335_INTEGER :: var_is_introduced ;
var bool: aux336_BOOL:: var_is_introduced ;
var {0,1}: aux336_INTEGER :: var_is_introduced ;
var bool: aux337_BOOL:: var_is_introduced ;
var {0,1}: aux337_INTEGER :: var_is_introduced ;
var bool: aux338_BOOL:: var_is_introduced ;
var {0,1}: aux338_INTEGER :: var_is_introduced ;
var bool: aux339_BOOL:: var_is_introduced ;
var {0,1}: aux339_INTEGER :: var_is_introduced ;
var bool: aux340_BOOL:: var_is_introduced ;
var {0,1}: aux340_INTEGER :: var_is_introduced ;
var bool: aux341_BOOL:: var_is_introduced ;
var {0,1}: aux341_INTEGER :: var_is_introduced ;
var bool: aux342_BOOL:: var_is_introduced ;
var {0,1}: aux342_INTEGER :: var_is_introduced ;
var bool: aux343_BOOL:: var_is_introduced ;
var {0,1}: aux343_INTEGER :: var_is_introduced ;
var bool: aux344_BOOL:: var_is_introduced ;
var {0,1}: aux344_INTEGER :: var_is_introduced ;
var bool: aux345_BOOL:: var_is_introduced ;
var {0,1}: aux345_INTEGER :: var_is_introduced ;
var bool: aux346_BOOL:: var_is_introduced ;
var {0,1}: aux346_INTEGER :: var_is_introduced ;
var bool: aux347_BOOL:: var_is_introduced ;
var {0,1}: aux347_INTEGER :: var_is_introduced ;
var bool: aux348_BOOL:: var_is_introduced ;
var {0,1}: aux348_INTEGER :: var_is_introduced ;
var bool: aux349_BOOL:: var_is_introduced ;
var {0,1}: aux349_INTEGER :: var_is_introduced ;
var bool: aux350_BOOL:: var_is_introduced ;
var {0,1}: aux350_INTEGER :: var_is_introduced ;
var bool: aux351_BOOL:: var_is_introduced ;
var {0,1}: aux351_INTEGER :: var_is_introduced ;
var bool: aux352_BOOL:: var_is_introduced ;
var {0,1}: aux352_INTEGER :: var_is_introduced ;
var bool: aux353_BOOL:: var_is_introduced ;
var {0,1}: aux353_INTEGER :: var_is_introduced ;
var bool: aux354_BOOL:: var_is_introduced ;
var {0,1}: aux354_INTEGER :: var_is_introduced ;
var bool: aux355_BOOL:: var_is_introduced ;
var {0,1}: aux355_INTEGER :: var_is_introduced ;
var bool: aux356_BOOL:: var_is_introduced ;
var {0,1}: aux356_INTEGER :: var_is_introduced ;
var bool: aux357_BOOL:: var_is_introduced ;
var {0,1}: aux357_INTEGER :: var_is_introduced ;
var bool: aux358_BOOL:: var_is_introduced ;
var {0,1}: aux358_INTEGER :: var_is_introduced ;
var bool: aux359_BOOL:: var_is_introduced ;
var {0,1}: aux359_INTEGER :: var_is_introduced ;
var bool: aux360_BOOL:: var_is_introduced ;
var {0,1}: aux360_INTEGER :: var_is_introduced ;
var bool: aux361_BOOL:: var_is_introduced ;
var {0,1}: aux361_INTEGER :: var_is_introduced ;
var bool: aux362_BOOL:: var_is_introduced ;
var {0,1}: aux362_INTEGER :: var_is_introduced ;
var bool: aux363_BOOL:: var_is_introduced ;
var {0,1}: aux363_INTEGER :: var_is_introduced ;
var bool: aux364_BOOL:: var_is_introduced ;
var {0,1}: aux364_INTEGER :: var_is_introduced ;
var bool: aux365_BOOL:: var_is_introduced ;
var {0,1}: aux365_INTEGER :: var_is_introduced ;
var bool: aux366_BOOL:: var_is_introduced ;
var {0,1}: aux366_INTEGER :: var_is_introduced ;
var bool: aux367_BOOL:: var_is_introduced ;
var {0,1}: aux367_INTEGER :: var_is_introduced ;
var bool: aux368_BOOL:: var_is_introduced ;
var {0,1}: aux368_INTEGER :: var_is_introduced ;
var bool: aux369_BOOL:: var_is_introduced ;
var {0,1}: aux369_INTEGER :: var_is_introduced ;
var bool: aux370_BOOL:: var_is_introduced ;
var {0,1}: aux370_INTEGER :: var_is_introduced ;
var bool: aux371_BOOL:: var_is_introduced ;
var {0,1}: aux371_INTEGER :: var_is_introduced ;
var bool: aux372_BOOL:: var_is_introduced ;
var {0,1}: aux372_INTEGER :: var_is_introduced ;
var bool: aux373_BOOL:: var_is_introduced ;
var {0,1}: aux373_INTEGER :: var_is_introduced ;
var bool: aux374_BOOL:: var_is_introduced ;
var {0,1}: aux374_INTEGER :: var_is_introduced ;
var bool: aux375_BOOL:: var_is_introduced ;
var {0,1}: aux375_INTEGER :: var_is_introduced ;
var bool: aux376_BOOL:: var_is_introduced ;
var {0,1}: aux376_INTEGER :: var_is_introduced ;
var bool: aux377_BOOL:: var_is_introduced ;
var {0,1}: aux377_INTEGER :: var_is_introduced ;
var bool: aux378_BOOL:: var_is_introduced ;
var {0,1}: aux378_INTEGER :: var_is_introduced ;
var bool: aux379_BOOL:: var_is_introduced ;
var {0,1}: aux379_INTEGER :: var_is_introduced ;
var bool: aux380_BOOL:: var_is_introduced ;
var {0,1}: aux380_INTEGER :: var_is_introduced ;
var bool: aux381_BOOL:: var_is_introduced ;
var {0,1}: aux381_INTEGER :: var_is_introduced ;
var bool: aux382_BOOL:: var_is_introduced ;
var {0,1}: aux382_INTEGER :: var_is_introduced ;
var bool: aux383_BOOL:: var_is_introduced ;
var {0,1}: aux383_INTEGER :: var_is_introduced ;
var bool: aux384_BOOL:: var_is_introduced ;
var {0,1}: aux384_INTEGER :: var_is_introduced ;
var bool: aux385_BOOL:: var_is_introduced ;
var {0,1}: aux385_INTEGER :: var_is_introduced ;
var bool: aux386_BOOL:: var_is_introduced ;
var {0,1}: aux386_INTEGER :: var_is_introduced ;
var bool: aux387_BOOL:: var_is_introduced ;
var {0,1}: aux387_INTEGER :: var_is_introduced ;
var bool: aux388_BOOL:: var_is_introduced ;
var {0,1}: aux388_INTEGER :: var_is_introduced ;
var bool: aux389_BOOL:: var_is_introduced ;
var {0,1}: aux389_INTEGER :: var_is_introduced ;
var bool: aux390_BOOL:: var_is_introduced ;
var {0,1}: aux390_INTEGER :: var_is_introduced ;
var bool: aux391_BOOL:: var_is_introduced ;
var {0,1}: aux391_INTEGER :: var_is_introduced ;
var bool: aux392_BOOL:: var_is_introduced ;
var {0,1}: aux392_INTEGER :: var_is_introduced ;
var bool: aux393_BOOL:: var_is_introduced ;
var {0,1}: aux393_INTEGER :: var_is_introduced ;
var bool: aux394_BOOL:: var_is_introduced ;
var {0,1}: aux394_INTEGER :: var_is_introduced ;
var bool: aux395_BOOL:: var_is_introduced ;
var {0,1}: aux395_INTEGER :: var_is_introduced ;
var bool: aux396_BOOL:: var_is_introduced ;
var {0,1}: aux396_INTEGER :: var_is_introduced ;
var bool: aux397_BOOL:: var_is_introduced ;
var {0,1}: aux397_INTEGER :: var_is_introduced ;
var bool: aux398_BOOL:: var_is_introduced ;
var {0,1}: aux398_INTEGER :: var_is_introduced ;
var bool: aux399_BOOL:: var_is_introduced ;
var {0,1}: aux399_INTEGER :: var_is_introduced ;
var bool: aux400_BOOL:: var_is_introduced ;
var {0,1}: aux400_INTEGER :: var_is_introduced ;
var bool: aux401_BOOL:: var_is_introduced ;
var {0,1}: aux401_INTEGER :: var_is_introduced ;
var bool: aux402_BOOL:: var_is_introduced ;
var {0,1}: aux402_INTEGER :: var_is_introduced ;
var bool: aux403_BOOL:: var_is_introduced ;
var {0,1}: aux403_INTEGER :: var_is_introduced ;
var bool: aux404_BOOL:: var_is_introduced ;
var {0,1}: aux404_INTEGER :: var_is_introduced ;
var bool: aux405_BOOL:: var_is_introduced ;
var {0,1}: aux405_INTEGER :: var_is_introduced ;
var bool: aux406_BOOL:: var_is_introduced ;
var {0,1}: aux406_INTEGER :: var_is_introduced ;
var bool: aux407_BOOL:: var_is_introduced ;
var {0,1}: aux407_INTEGER :: var_is_introduced ;
var bool: aux408_BOOL:: var_is_introduced ;
var {0,1}: aux408_INTEGER :: var_is_introduced ;
var bool: aux409_BOOL:: var_is_introduced ;
var {0,1}: aux409_INTEGER :: var_is_introduced ;
var bool: aux410_BOOL:: var_is_introduced ;
var {0,1}: aux410_INTEGER :: var_is_introduced ;
var bool: aux411_BOOL:: var_is_introduced ;
var {0,1}: aux411_INTEGER :: var_is_introduced ;
var bool: aux412_BOOL:: var_is_introduced ;
var {0,1}: aux412_INTEGER :: var_is_introduced ;
var bool: aux413_BOOL:: var_is_introduced ;
var {0,1}: aux413_INTEGER :: var_is_introduced ;
var bool: aux414_BOOL:: var_is_introduced ;
var {0,1}: aux414_INTEGER :: var_is_introduced ;
var bool: aux415_BOOL:: var_is_introduced ;
var {0,1}: aux415_INTEGER :: var_is_introduced ;
var bool: aux416_BOOL:: var_is_introduced ;
var {0,1}: aux416_INTEGER :: var_is_introduced ;
var bool: aux417_BOOL:: var_is_introduced ;
var {0,1}: aux417_INTEGER :: var_is_introduced ;
var bool: aux418_BOOL:: var_is_introduced ;
var {0,1}: aux418_INTEGER :: var_is_introduced ;
var bool: aux419_BOOL:: var_is_introduced ;
var {0,1}: aux419_INTEGER :: var_is_introduced ;
var bool: aux420_BOOL:: var_is_introduced ;
var {0,1}: aux420_INTEGER :: var_is_introduced ;
var bool: aux421_BOOL:: var_is_introduced ;
var {0,1}: aux421_INTEGER :: var_is_introduced ;
var bool: aux422_BOOL:: var_is_introduced ;
var {0,1}: aux422_INTEGER :: var_is_introduced ;
var bool: aux423_BOOL:: var_is_introduced ;
var {0,1}: aux423_INTEGER :: var_is_introduced ;
var bool: aux424_BOOL:: var_is_introduced ;
var {0,1}: aux424_INTEGER :: var_is_introduced ;
var bool: aux425_BOOL:: var_is_introduced ;
var {0,1}: aux425_INTEGER :: var_is_introduced ;
var bool: aux426_BOOL:: var_is_introduced ;
var {0,1}: aux426_INTEGER :: var_is_introduced ;
var bool: aux427_BOOL:: var_is_introduced ;
var {0,1}: aux427_INTEGER :: var_is_introduced ;
var bool: aux428_BOOL:: var_is_introduced ;
var {0,1}: aux428_INTEGER :: var_is_introduced ;
var bool: aux429_BOOL:: var_is_introduced ;
var {0,1}: aux429_INTEGER :: var_is_introduced ;
var bool: aux430_BOOL:: var_is_introduced ;
var {0,1}: aux430_INTEGER :: var_is_introduced ;
var bool: aux431_BOOL:: var_is_introduced ;
var {0,1}: aux431_INTEGER :: var_is_introduced ;
var bool: aux432_BOOL:: var_is_introduced ;
var {0,1}: aux432_INTEGER :: var_is_introduced ;
var bool: aux433_BOOL:: var_is_introduced ;
var {0,1}: aux433_INTEGER :: var_is_introduced ;
var bool: aux434_BOOL:: var_is_introduced ;
var {0,1}: aux434_INTEGER :: var_is_introduced ;
var bool: aux435_BOOL:: var_is_introduced ;
var {0,1}: aux435_INTEGER :: var_is_introduced ;
var bool: aux436_BOOL:: var_is_introduced ;
var {0,1}: aux436_INTEGER :: var_is_introduced ;
var bool: aux437_BOOL:: var_is_introduced ;
var {0,1}: aux437_INTEGER :: var_is_introduced ;
var bool: aux438_BOOL:: var_is_introduced ;
var {0,1}: aux438_INTEGER :: var_is_introduced ;
var bool: aux439_BOOL:: var_is_introduced ;
var {0,1}: aux439_INTEGER :: var_is_introduced ;
var bool: aux440_BOOL:: var_is_introduced ;
var {0,1}: aux440_INTEGER :: var_is_introduced ;
var bool: aux441_BOOL:: var_is_introduced ;
var {0,1}: aux441_INTEGER :: var_is_introduced ;
var bool: aux442_BOOL:: var_is_introduced ;
var {0,1}: aux442_INTEGER :: var_is_introduced ;
var bool: aux443_BOOL:: var_is_introduced ;
var {0,1}: aux443_INTEGER :: var_is_introduced ;
var bool: aux444_BOOL:: var_is_introduced ;
var {0,1}: aux444_INTEGER :: var_is_introduced ;
var bool: aux445_BOOL:: var_is_introduced ;
var {0,1}: aux445_INTEGER :: var_is_introduced ;
var bool: aux446_BOOL:: var_is_introduced ;
var {0,1}: aux446_INTEGER :: var_is_introduced ;
var bool: aux447_BOOL:: var_is_introduced ;
var {0,1}: aux447_INTEGER :: var_is_introduced ;
var bool: aux448_BOOL:: var_is_introduced ;
var {0,1}: aux448_INTEGER :: var_is_introduced ;
var bool: aux449_BOOL:: var_is_introduced ;
var {0,1}: aux449_INTEGER :: var_is_introduced ;
var bool: aux450_BOOL:: var_is_introduced ;
var {0,1}: aux450_INTEGER :: var_is_introduced ;
var bool: aux451_BOOL:: var_is_introduced ;
var {0,1}: aux451_INTEGER :: var_is_introduced ;
var bool: aux452_BOOL:: var_is_introduced ;
var {0,1}: aux452_INTEGER :: var_is_introduced ;
var bool: aux453_BOOL:: var_is_introduced ;
var {0,1}: aux453_INTEGER :: var_is_introduced ;
var bool: aux454_BOOL:: var_is_introduced ;
var {0,1}: aux454_INTEGER :: var_is_introduced ;
var bool: aux455_BOOL:: var_is_introduced ;
var {0,1}: aux455_INTEGER :: var_is_introduced ;
var bool: aux456_BOOL:: var_is_introduced ;
var {0,1}: aux456_INTEGER :: var_is_introduced ;
var bool: aux457_BOOL:: var_is_introduced ;
var {0,1}: aux457_INTEGER :: var_is_introduced ;
var bool: aux458_BOOL:: var_is_introduced ;
var {0,1}: aux458_INTEGER :: var_is_introduced ;
var bool: aux459_BOOL:: var_is_introduced ;
var {0,1}: aux459_INTEGER :: var_is_introduced ;
var bool: aux460_BOOL:: var_is_introduced ;
var {0,1}: aux460_INTEGER :: var_is_introduced ;
var bool: aux461_BOOL:: var_is_introduced ;
var {0,1}: aux461_INTEGER :: var_is_introduced ;
var bool: aux462_BOOL:: var_is_introduced ;
var {0,1}: aux462_INTEGER :: var_is_introduced ;
var bool: aux463_BOOL:: var_is_introduced ;
var {0,1}: aux463_INTEGER :: var_is_introduced ;
var bool: aux464_BOOL:: var_is_introduced ;
var {0,1}: aux464_INTEGER :: var_is_introduced ;
var bool: aux465_BOOL:: var_is_introduced ;
var {0,1}: aux465_INTEGER :: var_is_introduced ;
var bool: aux466_BOOL:: var_is_introduced ;
var {0,1}: aux466_INTEGER :: var_is_introduced ;
var bool: aux467_BOOL:: var_is_introduced ;
var {0,1}: aux467_INTEGER :: var_is_introduced ;
var bool: aux468_BOOL:: var_is_introduced ;
var {0,1}: aux468_INTEGER :: var_is_introduced ;
var bool: aux469_BOOL:: var_is_introduced ;
var {0,1}: aux469_INTEGER :: var_is_introduced ;
var bool: aux470_BOOL:: var_is_introduced ;
var {0,1}: aux470_INTEGER :: var_is_introduced ;
var bool: aux471_BOOL:: var_is_introduced ;
var {0,1}: aux471_INTEGER :: var_is_introduced ;
var bool: aux472_BOOL:: var_is_introduced ;
var {0,1}: aux472_INTEGER :: var_is_introduced ;
var bool: aux473_BOOL:: var_is_introduced ;
var {0,1}: aux473_INTEGER :: var_is_introduced ;
var bool: aux474_BOOL:: var_is_introduced ;
var {0,1}: aux474_INTEGER :: var_is_introduced ;
var bool: aux475_BOOL:: var_is_introduced ;
var {0,1}: aux475_INTEGER :: var_is_introduced ;
var bool: aux476_BOOL:: var_is_introduced ;
var {0,1}: aux476_INTEGER :: var_is_introduced ;
var bool: aux477_BOOL:: var_is_introduced ;
var {0,1}: aux477_INTEGER :: var_is_introduced ;
var bool: aux478_BOOL:: var_is_introduced ;
var {0,1}: aux478_INTEGER :: var_is_introduced ;
var bool: aux479_BOOL:: var_is_introduced ;
var {0,1}: aux479_INTEGER :: var_is_introduced ;
var bool: aux480_BOOL:: var_is_introduced ;
var {0,1}: aux480_INTEGER :: var_is_introduced ;
var bool: aux481_BOOL:: var_is_introduced ;
var {0,1}: aux481_INTEGER :: var_is_introduced ;
var bool: aux482_BOOL:: var_is_introduced ;
var {0,1}: aux482_INTEGER :: var_is_introduced ;
var bool: aux483_BOOL:: var_is_introduced ;
var {0,1}: aux483_INTEGER :: var_is_introduced ;
var bool: aux484_BOOL:: var_is_introduced ;
var {0,1}: aux484_INTEGER :: var_is_introduced ;
var bool: aux485_BOOL:: var_is_introduced ;
var {0,1}: aux485_INTEGER :: var_is_introduced ;
var bool: aux486_BOOL:: var_is_introduced ;
var {0,1}: aux486_INTEGER :: var_is_introduced ;
var bool: aux487_BOOL:: var_is_introduced ;
var {0,1}: aux487_INTEGER :: var_is_introduced ;
var bool: aux488_BOOL:: var_is_introduced ;
var {0,1}: aux488_INTEGER :: var_is_introduced ;
var bool: aux489_BOOL:: var_is_introduced ;
var {0,1}: aux489_INTEGER :: var_is_introduced ;
var bool: aux490_BOOL:: var_is_introduced ;
var {0,1}: aux490_INTEGER :: var_is_introduced ;
var bool: aux491_BOOL:: var_is_introduced ;
var {0,1}: aux491_INTEGER :: var_is_introduced ;
var bool: aux492_BOOL:: var_is_introduced ;
var {0,1}: aux492_INTEGER :: var_is_introduced ;
var bool: aux493_BOOL:: var_is_introduced ;
var {0,1}: aux493_INTEGER :: var_is_introduced ;
var bool: aux494_BOOL:: var_is_introduced ;
var {0,1}: aux494_INTEGER :: var_is_introduced ;
var bool: aux495_BOOL:: var_is_introduced ;
var {0,1}: aux495_INTEGER :: var_is_introduced ;
var bool: aux496_BOOL:: var_is_introduced ;
var {0,1}: aux496_INTEGER :: var_is_introduced ;
var bool: aux497_BOOL:: var_is_introduced ;
var {0,1}: aux497_INTEGER :: var_is_introduced ;
var bool: aux498_BOOL:: var_is_introduced ;
var {0,1}: aux498_INTEGER :: var_is_introduced ;
var bool: aux499_BOOL:: var_is_introduced ;
var {0,1}: aux499_INTEGER :: var_is_introduced ;
var bool: aux500_BOOL:: var_is_introduced ;
var {0,1}: aux500_INTEGER :: var_is_introduced ;
var bool: aux501_BOOL:: var_is_introduced ;
var {0,1}: aux501_INTEGER :: var_is_introduced ;
var bool: aux502_BOOL:: var_is_introduced ;
var {0,1}: aux502_INTEGER :: var_is_introduced ;
var bool: aux503_BOOL:: var_is_introduced ;
var {0,1}: aux503_INTEGER :: var_is_introduced ;
var bool: aux504_BOOL:: var_is_introduced ;
var {0,1}: aux504_INTEGER :: var_is_introduced ;
var bool: aux505_BOOL:: var_is_introduced ;
var {0,1}: aux505_INTEGER :: var_is_introduced ;
var bool: aux506_BOOL:: var_is_introduced ;
var {0,1}: aux506_INTEGER :: var_is_introduced ;
var bool: aux507_BOOL:: var_is_introduced ;
var {0,1}: aux507_INTEGER :: var_is_introduced ;
var bool: aux508_BOOL:: var_is_introduced ;
var {0,1}: aux508_INTEGER :: var_is_introduced ;
var bool: aux509_BOOL:: var_is_introduced ;
var {0,1}: aux509_INTEGER :: var_is_introduced ;
var bool: aux510_BOOL:: var_is_introduced ;
var {0,1}: aux510_INTEGER :: var_is_introduced ;
var bool: aux511_BOOL:: var_is_introduced ;
var {0,1}: aux511_INTEGER :: var_is_introduced ;
var bool: aux512_BOOL:: var_is_introduced ;
var {0,1}: aux512_INTEGER :: var_is_introduced ;
var bool: aux513_BOOL:: var_is_introduced ;
var {0,1}: aux513_INTEGER :: var_is_introduced ;
var bool: aux514_BOOL:: var_is_introduced ;
var {0,1}: aux514_INTEGER :: var_is_introduced ;
var bool: aux515_BOOL:: var_is_introduced ;
var {0,1}: aux515_INTEGER :: var_is_introduced ;
var bool: aux516_BOOL:: var_is_introduced ;
var {0,1}: aux516_INTEGER :: var_is_introduced ;
var bool: aux517_BOOL:: var_is_introduced ;
var {0,1}: aux517_INTEGER :: var_is_introduced ;
var bool: aux518_BOOL:: var_is_introduced ;
var {0,1}: aux518_INTEGER :: var_is_introduced ;
var bool: aux519_BOOL:: var_is_introduced ;
var {0,1}: aux519_INTEGER :: var_is_introduced ;
var bool: aux520_BOOL:: var_is_introduced ;
var {0,1}: aux520_INTEGER :: var_is_introduced ;
var bool: aux521_BOOL:: var_is_introduced ;
var {0,1}: aux521_INTEGER :: var_is_introduced ;
var bool: aux522_BOOL:: var_is_introduced ;
var {0,1}: aux522_INTEGER :: var_is_introduced ;
var bool: aux523_BOOL:: var_is_introduced ;
var {0,1}: aux523_INTEGER :: var_is_introduced ;
var bool: aux524_BOOL:: var_is_introduced ;
var {0,1}: aux524_INTEGER :: var_is_introduced ;
var bool: aux525_BOOL:: var_is_introduced ;
var {0,1}: aux525_INTEGER :: var_is_introduced ;
var bool: aux526_BOOL:: var_is_introduced ;
var {0,1}: aux526_INTEGER :: var_is_introduced ;
var bool: aux527_BOOL:: var_is_introduced ;
var {0,1}: aux527_INTEGER :: var_is_introduced ;
var bool: aux528_BOOL:: var_is_introduced ;
var {0,1}: aux528_INTEGER :: var_is_introduced ;
var bool: aux529_BOOL:: var_is_introduced ;
var {0,1}: aux529_INTEGER :: var_is_introduced ;
var bool: aux530_BOOL:: var_is_introduced ;
var {0,1}: aux530_INTEGER :: var_is_introduced ;
var bool: aux531_BOOL:: var_is_introduced ;
var {0,1}: aux531_INTEGER :: var_is_introduced ;
var bool: aux532_BOOL:: var_is_introduced ;
var {0,1}: aux532_INTEGER :: var_is_introduced ;
var bool: aux533_BOOL:: var_is_introduced ;
var {0,1}: aux533_INTEGER :: var_is_introduced ;
var bool: aux534_BOOL:: var_is_introduced ;
var {0,1}: aux534_INTEGER :: var_is_introduced ;
var bool: aux535_BOOL:: var_is_introduced ;
var {0,1}: aux535_INTEGER :: var_is_introduced ;
var bool: aux536_BOOL:: var_is_introduced ;
var {0,1}: aux536_INTEGER :: var_is_introduced ;
var bool: aux537_BOOL:: var_is_introduced ;
var {0,1}: aux537_INTEGER :: var_is_introduced ;
var bool: aux538_BOOL:: var_is_introduced ;
var {0,1}: aux538_INTEGER :: var_is_introduced ;
var bool: aux539_BOOL:: var_is_introduced ;
var {0,1}: aux539_INTEGER :: var_is_introduced ;
var bool: aux540_BOOL:: var_is_introduced ;
var {0,1}: aux540_INTEGER :: var_is_introduced ;
var bool: aux541_BOOL:: var_is_introduced ;
var {0,1}: aux541_INTEGER :: var_is_introduced ;
var bool: aux542_BOOL:: var_is_introduced ;
var {0,1}: aux542_INTEGER :: var_is_introduced ;
var bool: aux543_BOOL:: var_is_introduced ;
var {0,1}: aux543_INTEGER :: var_is_introduced ;
var bool: aux544_BOOL:: var_is_introduced ;
var {0,1}: aux544_INTEGER :: var_is_introduced ;
var bool: aux545_BOOL:: var_is_introduced ;
var {0,1}: aux545_INTEGER :: var_is_introduced ;
var bool: aux546_BOOL:: var_is_introduced ;
var {0,1}: aux546_INTEGER :: var_is_introduced ;
var bool: aux547_BOOL:: var_is_introduced ;
var {0,1}: aux547_INTEGER :: var_is_introduced ;
var bool: aux548_BOOL:: var_is_introduced ;
var {0,1}: aux548_INTEGER :: var_is_introduced ;
var bool: aux549_BOOL:: var_is_introduced ;
var {0,1}: aux549_INTEGER :: var_is_introduced ;
var bool: aux550_BOOL:: var_is_introduced ;
var {0,1}: aux550_INTEGER :: var_is_introduced ;
var bool: aux551_BOOL:: var_is_introduced ;
var {0,1}: aux551_INTEGER :: var_is_introduced ;
var bool: aux552_BOOL:: var_is_introduced ;
var {0,1}: aux552_INTEGER :: var_is_introduced ;
var bool: aux553_BOOL:: var_is_introduced ;
var {0,1}: aux553_INTEGER :: var_is_introduced ;
var bool: aux554_BOOL:: var_is_introduced ;
var {0,1}: aux554_INTEGER :: var_is_introduced ;
var bool: aux555_BOOL:: var_is_introduced ;
var {0,1}: aux555_INTEGER :: var_is_introduced ;
var bool: aux556_BOOL:: var_is_introduced ;
var {0,1}: aux556_INTEGER :: var_is_introduced ;
var bool: aux557_BOOL:: var_is_introduced ;
var bool: aux558_BOOL:: var_is_introduced ;
var {0,1}: aux558_INTEGER :: var_is_introduced ;
var bool: aux559_BOOL:: var_is_introduced ;
var bool: aux560_BOOL:: var_is_introduced ;
var bool: aux561_BOOL:: var_is_introduced ;
var {0,1}: aux561_INTEGER :: var_is_introduced ;
var bool: aux562_BOOL:: var_is_introduced ;
var bool: aux563_BOOL:: var_is_introduced ;
var bool: aux564_BOOL:: var_is_introduced ;
var bool: aux566_BOOL:: var_is_introduced ;
var bool: aux567_BOOL:: var_is_introduced ;
var {0,1}: aux567_INTEGER :: var_is_introduced ;
var bool: aux568_BOOL:: var_is_introduced ;
var {0,1}: aux568_INTEGER :: var_is_introduced ;
var bool: aux570_BOOL:: var_is_introduced ;
var {0,1}: aux570_INTEGER :: var_is_introduced ;
var bool: aux571_BOOL:: var_is_introduced ;
var {0,1}: aux571_INTEGER :: var_is_introduced ;
var bool: aux573_BOOL:: var_is_introduced ;
var {0,1}: aux573_INTEGER :: var_is_introduced ;
var bool: aux575_BOOL:: var_is_introduced ;
var {0,1}: aux575_INTEGER :: var_is_introduced ;
var bool: aux577_BOOL:: var_is_introduced ;
var {0,1}: aux577_INTEGER :: var_is_introduced ;
var bool: aux581_BOOL:: var_is_introduced ;
var {0,1}: aux581_INTEGER :: var_is_introduced ;
var bool: aux582_BOOL:: var_is_introduced ;
var {0,1}: aux582_INTEGER :: var_is_introduced ;
var bool: aux584_BOOL:: var_is_introduced ;
var {0,1}: aux584_INTEGER :: var_is_introduced ;
var bool: aux585_BOOL:: var_is_introduced ;
var {0,1}: aux585_INTEGER :: var_is_introduced ;
var bool: aux587_BOOL:: var_is_introduced ;
var {0,1}: aux587_INTEGER :: var_is_introduced ;
var bool: aux589_BOOL:: var_is_introduced ;
var {0,1}: aux589_INTEGER :: var_is_introduced ;
var bool: aux591_BOOL:: var_is_introduced ;
var {0,1}: aux591_INTEGER :: var_is_introduced ;
var bool: aux595_BOOL:: var_is_introduced ;
var {0,1}: aux595_INTEGER :: var_is_introduced ;
var bool: aux596_BOOL:: var_is_introduced ;
var {0,1}: aux596_INTEGER :: var_is_introduced ;
var bool: aux598_BOOL:: var_is_introduced ;
var {0,1}: aux598_INTEGER :: var_is_introduced ;
var bool: aux599_BOOL:: var_is_introduced ;
var {0,1}: aux599_INTEGER :: var_is_introduced ;
var bool: aux601_BOOL:: var_is_introduced ;
var {0,1}: aux601_INTEGER :: var_is_introduced ;
var bool: aux603_BOOL:: var_is_introduced ;
var {0,1}: aux603_INTEGER :: var_is_introduced ;
var bool: aux605_BOOL:: var_is_introduced ;
var {0,1}: aux605_INTEGER :: var_is_introduced ;
var bool: aux609_BOOL:: var_is_introduced ;
var {0,1}: aux609_INTEGER :: var_is_introduced ;
var bool: aux610_BOOL:: var_is_introduced ;
var {0,1}: aux610_INTEGER :: var_is_introduced ;
var bool: aux612_BOOL:: var_is_introduced ;
var {0,1}: aux612_INTEGER :: var_is_introduced ;
var bool: aux613_BOOL:: var_is_introduced ;
var {0,1}: aux613_INTEGER :: var_is_introduced ;
var bool: aux615_BOOL:: var_is_introduced ;
var {0,1}: aux615_INTEGER :: var_is_introduced ;
var bool: aux617_BOOL:: var_is_introduced ;
var {0,1}: aux617_INTEGER :: var_is_introduced ;
var bool: aux619_BOOL:: var_is_introduced ;
var {0,1}: aux619_INTEGER :: var_is_introduced ;
var bool: aux623_BOOL:: var_is_introduced ;
var {0,1}: aux623_INTEGER :: var_is_introduced ;
var bool: aux624_BOOL:: var_is_introduced ;
var {0,1}: aux624_INTEGER :: var_is_introduced ;
var bool: aux626_BOOL:: var_is_introduced ;
var {0,1}: aux626_INTEGER :: var_is_introduced ;
var bool: aux627_BOOL:: var_is_introduced ;
var {0,1}: aux627_INTEGER :: var_is_introduced ;
var bool: aux629_BOOL:: var_is_introduced ;
var {0,1}: aux629_INTEGER :: var_is_introduced ;
var bool: aux631_BOOL:: var_is_introduced ;
var {0,1}: aux631_INTEGER :: var_is_introduced ;
var bool: aux633_BOOL:: var_is_introduced ;
var {0,1}: aux633_INTEGER :: var_is_introduced ;
var bool: aux637_BOOL:: var_is_introduced ;
var {0,1}: aux637_INTEGER :: var_is_introduced ;
var bool: aux638_BOOL:: var_is_introduced ;
var {0,1}: aux638_INTEGER :: var_is_introduced ;
var bool: aux640_BOOL:: var_is_introduced ;
var {0,1}: aux640_INTEGER :: var_is_introduced ;
var bool: aux641_BOOL:: var_is_introduced ;
var {0,1}: aux641_INTEGER :: var_is_introduced ;
var bool: aux643_BOOL:: var_is_introduced ;
var {0,1}: aux643_INTEGER :: var_is_introduced ;
var bool: aux645_BOOL:: var_is_introduced ;
var {0,1}: aux645_INTEGER :: var_is_introduced ;
var bool: aux647_BOOL:: var_is_introduced ;
var {0,1}: aux647_INTEGER :: var_is_introduced ;
var bool: aux651_BOOL:: var_is_introduced ;
var {0,1}: aux651_INTEGER :: var_is_introduced ;
var bool: aux652_BOOL:: var_is_introduced ;
var {0,1}: aux652_INTEGER :: var_is_introduced ;
var bool: aux654_BOOL:: var_is_introduced ;
var {0,1}: aux654_INTEGER :: var_is_introduced ;
var bool: aux655_BOOL:: var_is_introduced ;
var {0,1}: aux655_INTEGER :: var_is_introduced ;
var bool: aux657_BOOL:: var_is_introduced ;
var {0,1}: aux657_INTEGER :: var_is_introduced ;
var bool: aux659_BOOL:: var_is_introduced ;
var {0,1}: aux659_INTEGER :: var_is_introduced ;
var bool: aux661_BOOL:: var_is_introduced ;
var {0,1}: aux661_INTEGER :: var_is_introduced ;
var bool: aux665_BOOL:: var_is_introduced ;
var {0,1}: aux665_INTEGER :: var_is_introduced ;
var bool: aux666_BOOL:: var_is_introduced ;
var {0,1}: aux666_INTEGER :: var_is_introduced ;
var bool: aux668_BOOL:: var_is_introduced ;
var {0,1}: aux668_INTEGER :: var_is_introduced ;
var bool: aux669_BOOL:: var_is_introduced ;
var {0,1}: aux669_INTEGER :: var_is_introduced ;
var bool: aux671_BOOL:: var_is_introduced ;
var {0,1}: aux671_INTEGER :: var_is_introduced ;
var bool: aux673_BOOL:: var_is_introduced ;
var {0,1}: aux673_INTEGER :: var_is_introduced ;
var bool: aux675_BOOL:: var_is_introduced ;
var {0,1}: aux675_INTEGER :: var_is_introduced ;
var bool: aux679_BOOL:: var_is_introduced ;
var {0,1}: aux679_INTEGER :: var_is_introduced ;
var bool: aux680_BOOL:: var_is_introduced ;
var {0,1}: aux680_INTEGER :: var_is_introduced ;
var bool: aux682_BOOL:: var_is_introduced ;
var {0,1}: aux682_INTEGER :: var_is_introduced ;
var bool: aux683_BOOL:: var_is_introduced ;
var {0,1}: aux683_INTEGER :: var_is_introduced ;
var bool: aux685_BOOL:: var_is_introduced ;
var {0,1}: aux685_INTEGER :: var_is_introduced ;
var bool: aux687_BOOL:: var_is_introduced ;
var {0,1}: aux687_INTEGER :: var_is_introduced ;
var bool: aux689_BOOL:: var_is_introduced ;
var {0,1}: aux689_INTEGER :: var_is_introduced ;
var bool: aux693_BOOL:: var_is_introduced ;
var {0,1}: aux693_INTEGER :: var_is_introduced ;
var bool: aux694_BOOL:: var_is_introduced ;
var {0,1}: aux694_INTEGER :: var_is_introduced ;
var bool: aux696_BOOL:: var_is_introduced ;
var {0,1}: aux696_INTEGER :: var_is_introduced ;
var bool: aux697_BOOL:: var_is_introduced ;
var {0,1}: aux697_INTEGER :: var_is_introduced ;
var bool: aux699_BOOL:: var_is_introduced ;
var {0,1}: aux699_INTEGER :: var_is_introduced ;
var bool: aux701_BOOL:: var_is_introduced ;
var {0,1}: aux701_INTEGER :: var_is_introduced ;
var bool: aux703_BOOL:: var_is_introduced ;
var {0,1}: aux703_INTEGER :: var_is_introduced ;
var bool: aux707_BOOL:: var_is_introduced ;
var {0,1}: aux707_INTEGER :: var_is_introduced ;
var bool: aux708_BOOL:: var_is_introduced ;
var {0,1}: aux708_INTEGER :: var_is_introduced ;
var bool: aux710_BOOL:: var_is_introduced ;
var {0,1}: aux710_INTEGER :: var_is_introduced ;
var bool: aux711_BOOL:: var_is_introduced ;
var {0,1}: aux711_INTEGER :: var_is_introduced ;
var bool: aux713_BOOL:: var_is_introduced ;
var {0,1}: aux713_INTEGER :: var_is_introduced ;
var bool: aux715_BOOL:: var_is_introduced ;
var {0,1}: aux715_INTEGER :: var_is_introduced ;
var bool: aux717_BOOL:: var_is_introduced ;
var {0,1}: aux717_INTEGER :: var_is_introduced ;
var bool: aux721_BOOL:: var_is_introduced ;
var {0,1}: aux721_INTEGER :: var_is_introduced ;
var bool: aux722_BOOL:: var_is_introduced ;
var {0,1}: aux722_INTEGER :: var_is_introduced ;
var bool: aux724_BOOL:: var_is_introduced ;
var {0,1}: aux724_INTEGER :: var_is_introduced ;
var bool: aux725_BOOL:: var_is_introduced ;
var {0,1}: aux725_INTEGER :: var_is_introduced ;
var bool: aux727_BOOL:: var_is_introduced ;
var {0,1}: aux727_INTEGER :: var_is_introduced ;
var bool: aux729_BOOL:: var_is_introduced ;
var {0,1}: aux729_INTEGER :: var_is_introduced ;
var bool: aux731_BOOL:: var_is_introduced ;
var {0,1}: aux731_INTEGER :: var_is_introduced ;
var bool: aux735_BOOL:: var_is_introduced ;
var {0,1}: aux735_INTEGER :: var_is_introduced ;
var bool: aux736_BOOL:: var_is_introduced ;
var {0,1}: aux736_INTEGER :: var_is_introduced ;
var bool: aux738_BOOL:: var_is_introduced ;
var {0,1}: aux738_INTEGER :: var_is_introduced ;
var bool: aux739_BOOL:: var_is_introduced ;
var {0,1}: aux739_INTEGER :: var_is_introduced ;
var bool: aux741_BOOL:: var_is_introduced ;
var {0,1}: aux741_INTEGER :: var_is_introduced ;
var bool: aux743_BOOL:: var_is_introduced ;
var {0,1}: aux743_INTEGER :: var_is_introduced ;
var bool: aux745_BOOL:: var_is_introduced ;
var {0,1}: aux745_INTEGER :: var_is_introduced ;
var bool: aux749_BOOL:: var_is_introduced ;
var {0,1}: aux749_INTEGER :: var_is_introduced ;
var bool: aux750_BOOL:: var_is_introduced ;
var {0,1}: aux750_INTEGER :: var_is_introduced ;
var bool: aux752_BOOL:: var_is_introduced ;
var {0,1}: aux752_INTEGER :: var_is_introduced ;
var bool: aux753_BOOL:: var_is_introduced ;
var {0,1}: aux753_INTEGER :: var_is_introduced ;
var bool: aux755_BOOL:: var_is_introduced ;
var {0,1}: aux755_INTEGER :: var_is_introduced ;
var bool: aux757_BOOL:: var_is_introduced ;
var {0,1}: aux757_INTEGER :: var_is_introduced ;
var bool: aux759_BOOL:: var_is_introduced ;
var {0,1}: aux759_INTEGER :: var_is_introduced ;
var bool: aux763_BOOL:: var_is_introduced ;
var {0,1}: aux763_INTEGER :: var_is_introduced ;
var bool: aux764_BOOL:: var_is_introduced ;
var {0,1}: aux764_INTEGER :: var_is_introduced ;
var bool: aux766_BOOL:: var_is_introduced ;
var {0,1}: aux766_INTEGER :: var_is_introduced ;
var bool: aux767_BOOL:: var_is_introduced ;
var {0,1}: aux767_INTEGER :: var_is_introduced ;
var bool: aux769_BOOL:: var_is_introduced ;
var {0,1}: aux769_INTEGER :: var_is_introduced ;
var bool: aux771_BOOL:: var_is_introduced ;
var {0,1}: aux771_INTEGER :: var_is_introduced ;
var bool: aux773_BOOL:: var_is_introduced ;
var {0,1}: aux773_INTEGER :: var_is_introduced ;
var bool: aux777_BOOL:: var_is_introduced ;
var {0,1}: aux777_INTEGER :: var_is_introduced ;
var bool: aux778_BOOL:: var_is_introduced ;
var {0,1}: aux778_INTEGER :: var_is_introduced ;
var bool: aux780_BOOL:: var_is_introduced ;
var {0,1}: aux780_INTEGER :: var_is_introduced ;
var bool: aux781_BOOL:: var_is_introduced ;
var {0,1}: aux781_INTEGER :: var_is_introduced ;
var bool: aux783_BOOL:: var_is_introduced ;
var {0,1}: aux783_INTEGER :: var_is_introduced ;
var bool: aux785_BOOL:: var_is_introduced ;
var {0,1}: aux785_INTEGER :: var_is_introduced ;
var bool: aux787_BOOL:: var_is_introduced ;
var {0,1}: aux787_INTEGER :: var_is_introduced ;
var bool: aux791_BOOL:: var_is_introduced ;
var {0,1}: aux791_INTEGER :: var_is_introduced ;
var bool: aux792_BOOL:: var_is_introduced ;
var {0,1}: aux792_INTEGER :: var_is_introduced ;
var bool: aux794_BOOL:: var_is_introduced ;
var {0,1}: aux794_INTEGER :: var_is_introduced ;
var bool: aux795_BOOL:: var_is_introduced ;
var {0,1}: aux795_INTEGER :: var_is_introduced ;
var bool: aux797_BOOL:: var_is_introduced ;
var {0,1}: aux797_INTEGER :: var_is_introduced ;
var bool: aux799_BOOL:: var_is_introduced ;
var {0,1}: aux799_INTEGER :: var_is_introduced ;
var bool: aux801_BOOL:: var_is_introduced ;
var {0,1}: aux801_INTEGER :: var_is_introduced ;
var bool: aux805_BOOL:: var_is_introduced ;
var {0,1}: aux805_INTEGER :: var_is_introduced ;
var bool: aux806_BOOL:: var_is_introduced ;
var {0,1}: aux806_INTEGER :: var_is_introduced ;
var bool: aux808_BOOL:: var_is_introduced ;
var {0,1}: aux808_INTEGER :: var_is_introduced ;
var bool: aux809_BOOL:: var_is_introduced ;
var {0,1}: aux809_INTEGER :: var_is_introduced ;
var bool: aux811_BOOL:: var_is_introduced ;
var {0,1}: aux811_INTEGER :: var_is_introduced ;
var bool: aux813_BOOL:: var_is_introduced ;
var {0,1}: aux813_INTEGER :: var_is_introduced ;
var bool: aux815_BOOL:: var_is_introduced ;
var {0,1}: aux815_INTEGER :: var_is_introduced ;
var bool: aux819_BOOL:: var_is_introduced ;
var {0,1}: aux819_INTEGER :: var_is_introduced ;
var bool: aux820_BOOL:: var_is_introduced ;
var {0,1}: aux820_INTEGER :: var_is_introduced ;
var bool: aux822_BOOL:: var_is_introduced ;
var {0,1}: aux822_INTEGER :: var_is_introduced ;
var bool: aux823_BOOL:: var_is_introduced ;
var {0,1}: aux823_INTEGER :: var_is_introduced ;
var bool: aux825_BOOL:: var_is_introduced ;
var {0,1}: aux825_INTEGER :: var_is_introduced ;
var bool: aux827_BOOL:: var_is_introduced ;
var {0,1}: aux827_INTEGER :: var_is_introduced ;
var bool: aux829_BOOL:: var_is_introduced ;
var {0,1}: aux829_INTEGER :: var_is_introduced ;
var bool: aux833_BOOL:: var_is_introduced ;
var {0,1}: aux833_INTEGER :: var_is_introduced ;
var bool: aux834_BOOL:: var_is_introduced ;
var {0,1}: aux834_INTEGER :: var_is_introduced ;
var bool: aux836_BOOL:: var_is_introduced ;
var {0,1}: aux836_INTEGER :: var_is_introduced ;
var bool: aux837_BOOL:: var_is_introduced ;
var {0,1}: aux837_INTEGER :: var_is_introduced ;
var bool: aux839_BOOL:: var_is_introduced ;
var {0,1}: aux839_INTEGER :: var_is_introduced ;
var bool: aux841_BOOL:: var_is_introduced ;
var {0,1}: aux841_INTEGER :: var_is_introduced ;
var bool: aux843_BOOL:: var_is_introduced ;
var {0,1}: aux843_INTEGER :: var_is_introduced ;
var bool: aux847_BOOL:: var_is_introduced ;
var {0,1}: aux847_INTEGER :: var_is_introduced ;
var bool: aux848_BOOL:: var_is_introduced ;
var {0,1}: aux848_INTEGER :: var_is_introduced ;
var bool: aux850_BOOL:: var_is_introduced ;
var {0,1}: aux850_INTEGER :: var_is_introduced ;
var bool: aux851_BOOL:: var_is_introduced ;
var {0,1}: aux851_INTEGER :: var_is_introduced ;
var bool: aux853_BOOL:: var_is_introduced ;
var {0,1}: aux853_INTEGER :: var_is_introduced ;
var bool: aux855_BOOL:: var_is_introduced ;
var {0,1}: aux855_INTEGER :: var_is_introduced ;
var bool: aux857_BOOL:: var_is_introduced ;
var {0,1}: aux857_INTEGER :: var_is_introduced ;
var bool: aux861_BOOL:: var_is_introduced ;
var {0,1}: aux861_INTEGER :: var_is_introduced ;
var bool: aux862_BOOL:: var_is_introduced ;
var {0,1}: aux862_INTEGER :: var_is_introduced ;
var bool: aux864_BOOL:: var_is_introduced ;
var {0,1}: aux864_INTEGER :: var_is_introduced ;
var bool: aux865_BOOL:: var_is_introduced ;
var {0,1}: aux865_INTEGER :: var_is_introduced ;
var bool: aux867_BOOL:: var_is_introduced ;
var {0,1}: aux867_INTEGER :: var_is_introduced ;
var bool: aux869_BOOL:: var_is_introduced ;
var {0,1}: aux869_INTEGER :: var_is_introduced ;
var bool: aux871_BOOL:: var_is_introduced ;
var {0,1}: aux871_INTEGER :: var_is_introduced ;
var bool: aux875_BOOL:: var_is_introduced ;
var {0,1}: aux875_INTEGER :: var_is_introduced ;
var bool: aux876_BOOL:: var_is_introduced ;
var {0,1}: aux876_INTEGER :: var_is_introduced ;
var bool: aux878_BOOL:: var_is_introduced ;
var {0,1}: aux878_INTEGER :: var_is_introduced ;
var bool: aux879_BOOL:: var_is_introduced ;
var {0,1}: aux879_INTEGER :: var_is_introduced ;
var bool: aux881_BOOL:: var_is_introduced ;
var {0,1}: aux881_INTEGER :: var_is_introduced ;
var bool: aux883_BOOL:: var_is_introduced ;
var {0,1}: aux883_INTEGER :: var_is_introduced ;
var bool: aux885_BOOL:: var_is_introduced ;
var {0,1}: aux885_INTEGER :: var_is_introduced ;
var bool: aux889_BOOL:: var_is_introduced ;
var {0,1}: aux889_INTEGER :: var_is_introduced ;
var bool: aux890_BOOL:: var_is_introduced ;
var {0,1}: aux890_INTEGER :: var_is_introduced ;
var bool: aux892_BOOL:: var_is_introduced ;
var {0,1}: aux892_INTEGER :: var_is_introduced ;
var bool: aux893_BOOL:: var_is_introduced ;
var {0,1}: aux893_INTEGER :: var_is_introduced ;
var bool: aux895_BOOL:: var_is_introduced ;
var {0,1}: aux895_INTEGER :: var_is_introduced ;
var bool: aux897_BOOL:: var_is_introduced ;
var {0,1}: aux897_INTEGER :: var_is_introduced ;
var bool: aux899_BOOL:: var_is_introduced ;
var {0,1}: aux899_INTEGER :: var_is_introduced ;
var bool: aux903_BOOL:: var_is_introduced ;
var {0,1}: aux903_INTEGER :: var_is_introduced ;
var bool: aux904_BOOL:: var_is_introduced ;
var {0,1}: aux904_INTEGER :: var_is_introduced ;
var bool: aux906_BOOL:: var_is_introduced ;
var {0,1}: aux906_INTEGER :: var_is_introduced ;
var bool: aux907_BOOL:: var_is_introduced ;
var {0,1}: aux907_INTEGER :: var_is_introduced ;
var bool: aux909_BOOL:: var_is_introduced ;
var {0,1}: aux909_INTEGER :: var_is_introduced ;
var bool: aux911_BOOL:: var_is_introduced ;
var {0,1}: aux911_INTEGER :: var_is_introduced ;
var bool: aux913_BOOL:: var_is_introduced ;
var {0,1}: aux913_INTEGER :: var_is_introduced ;
var bool: aux917_BOOL:: var_is_introduced ;
var {0,1}: aux917_INTEGER :: var_is_introduced ;
var bool: aux918_BOOL:: var_is_introduced ;
var {0,1}: aux918_INTEGER :: var_is_introduced ;
var bool: aux920_BOOL:: var_is_introduced ;
var {0,1}: aux920_INTEGER :: var_is_introduced ;
var bool: aux921_BOOL:: var_is_introduced ;
var {0,1}: aux921_INTEGER :: var_is_introduced ;
var bool: aux923_BOOL:: var_is_introduced ;
var {0,1}: aux923_INTEGER :: var_is_introduced ;
var bool: aux925_BOOL:: var_is_introduced ;
var {0,1}: aux925_INTEGER :: var_is_introduced ;
var bool: aux927_BOOL:: var_is_introduced ;
var {0,1}: aux927_INTEGER :: var_is_introduced ;
var bool: aux931_BOOL:: var_is_introduced ;
var {0,1}: aux931_INTEGER :: var_is_introduced ;
var bool: aux932_BOOL:: var_is_introduced ;
var {0,1}: aux932_INTEGER :: var_is_introduced ;
var bool: aux934_BOOL:: var_is_introduced ;
var {0,1}: aux934_INTEGER :: var_is_introduced ;
var bool: aux935_BOOL:: var_is_introduced ;
var {0,1}: aux935_INTEGER :: var_is_introduced ;
var bool: aux937_BOOL:: var_is_introduced ;
var {0,1}: aux937_INTEGER :: var_is_introduced ;
var bool: aux939_BOOL:: var_is_introduced ;
var {0,1}: aux939_INTEGER :: var_is_introduced ;
var bool: aux941_BOOL:: var_is_introduced ;
var {0,1}: aux941_INTEGER :: var_is_introduced ;
var bool: aux945_BOOL:: var_is_introduced ;
var {0,1}: aux945_INTEGER :: var_is_introduced ;
var bool: aux946_BOOL:: var_is_introduced ;
var {0,1}: aux946_INTEGER :: var_is_introduced ;
var bool: aux948_BOOL:: var_is_introduced ;
var {0,1}: aux948_INTEGER :: var_is_introduced ;
var bool: aux949_BOOL:: var_is_introduced ;
var {0,1}: aux949_INTEGER :: var_is_introduced ;
var bool: aux951_BOOL:: var_is_introduced ;
var {0,1}: aux951_INTEGER :: var_is_introduced ;
var bool: aux953_BOOL:: var_is_introduced ;
var bool: aux954_BOOL:: var_is_introduced ;
var bool: aux955_BOOL:: var_is_introduced ;
var bool: aux956_BOOL:: var_is_introduced ;
var bool: aux957_BOOL:: var_is_introduced ;
var bool: aux958_BOOL:: var_is_introduced ;
var bool: aux959_BOOL:: var_is_introduced ;
var bool: aux960_BOOL:: var_is_introduced ;
var bool: aux961_BOOL:: var_is_introduced ;
var bool: aux962_BOOL:: var_is_introduced ;
var bool: aux963_BOOL:: var_is_introduced ;
var bool: aux964_BOOL:: var_is_introduced ;
var bool: aux965_BOOL:: var_is_introduced ;
var bool: aux966_BOOL:: var_is_introduced ;
var bool: aux967_BOOL:: var_is_introduced ;
var bool: aux968_BOOL:: var_is_introduced ;
var bool: aux969_BOOL:: var_is_introduced ;
var bool: aux970_BOOL:: var_is_introduced ;
var bool: aux971_BOOL:: var_is_introduced ;
var bool: aux972_BOOL:: var_is_introduced ;
var bool: aux973_BOOL:: var_is_introduced ;
var bool: aux974_BOOL:: var_is_introduced ;
var bool: aux975_BOOL:: var_is_introduced ;
var bool: aux976_BOOL:: var_is_introduced ;
var bool: aux977_BOOL:: var_is_introduced ;
var bool: aux978_BOOL:: var_is_introduced ;
var bool: aux979_BOOL:: var_is_introduced ;
var bool: aux980_BOOL:: var_is_introduced ;
var bool: aux981_BOOL:: var_is_introduced ;
var bool: aux982_BOOL:: var_is_introduced ;
var bool: aux983_BOOL:: var_is_introduced ;
var bool: aux984_BOOL:: var_is_introduced ;
var bool: aux985_BOOL:: var_is_introduced ;
var bool: aux986_BOOL:: var_is_introduced ;
var bool: aux987_BOOL:: var_is_introduced ;
var bool: aux988_BOOL:: var_is_introduced ;
var bool: aux989_BOOL:: var_is_introduced ;
var bool: aux990_BOOL:: var_is_introduced ;
var bool: aux991_BOOL:: var_is_introduced ;
var bool: aux992_BOOL:: var_is_introduced ;
var bool: aux993_BOOL:: var_is_introduced ;
var bool: aux994_BOOL:: var_is_introduced ;
var bool: aux995_BOOL:: var_is_introduced ;
var bool: aux996_BOOL:: var_is_introduced ;
var bool: aux997_BOOL:: var_is_introduced ;
var bool: aux998_BOOL:: var_is_introduced ;
var bool: aux999_BOOL:: var_is_introduced ;
var bool: aux1000_BOOL:: var_is_introduced ;
var bool: aux1001_BOOL:: var_is_introduced ;
var bool: aux1002_BOOL:: var_is_introduced ;
var bool: aux1003_BOOL:: var_is_introduced ;
var bool: aux1004_BOOL:: var_is_introduced ;
var bool: aux1005_BOOL:: var_is_introduced ;
var bool: aux1006_BOOL:: var_is_introduced ;
var bool: aux1007_BOOL:: var_is_introduced ;
var bool: aux1008_BOOL:: var_is_introduced ;
var bool: aux1009_BOOL:: var_is_introduced ;
var bool: aux1010_BOOL:: var_is_introduced ;
var bool: aux1011_BOOL:: var_is_introduced ;
var bool: aux1012_BOOL:: var_is_introduced ;
var bool: aux1013_BOOL:: var_is_introduced ;
var bool: aux1014_BOOL:: var_is_introduced ;
var bool: aux1015_BOOL:: var_is_introduced ;
var bool: aux1016_BOOL:: var_is_introduced ;
var bool: aux1017_BOOL:: var_is_introduced ;
var bool: aux1018_BOOL:: var_is_introduced ;
var bool: aux1019_BOOL:: var_is_introduced ;
var bool: aux1020_BOOL:: var_is_introduced ;
var bool: aux1021_BOOL:: var_is_introduced ;
var bool: aux1022_BOOL:: var_is_introduced ;
var bool: aux1023_BOOL:: var_is_introduced ;
var bool: aux1024_BOOL:: var_is_introduced ;
var bool: aux1025_BOOL:: var_is_introduced ;
var bool: aux1026_BOOL:: var_is_introduced ;
var bool: aux1027_BOOL:: var_is_introduced ;
var bool: aux1028_BOOL:: var_is_introduced ;
var bool: aux1029_BOOL:: var_is_introduced ;
var bool: aux1030_BOOL:: var_is_introduced ;
var bool: aux1031_BOOL:: var_is_introduced ;
var bool: aux1032_BOOL:: var_is_introduced ;
var bool: aux1033_BOOL:: var_is_introduced ;
var bool: aux1034_BOOL:: var_is_introduced ;
var bool: aux1035_BOOL:: var_is_introduced ;
var bool: aux1036_BOOL:: var_is_introduced ;
var bool: aux1037_BOOL:: var_is_introduced ;
var bool: aux1038_BOOL:: var_is_introduced ;
var bool: aux1039_BOOL:: var_is_introduced ;
var bool: aux1040_BOOL:: var_is_introduced ;
var bool: aux1041_BOOL:: var_is_introduced ;
var bool: aux1042_BOOL:: var_is_introduced ;
var bool: aux1043_BOOL:: var_is_introduced ;
var bool: aux1044_BOOL:: var_is_introduced ;
var bool: aux1045_BOOL:: var_is_introduced ;
var bool: aux1046_BOOL:: var_is_introduced ;
var bool: aux1047_BOOL:: var_is_introduced ;
var bool: aux1048_BOOL:: var_is_introduced ;
var bool: aux1049_BOOL:: var_is_introduced ;
var bool: aux1050_BOOL:: var_is_introduced ;
var bool: aux1051_BOOL:: var_is_introduced ;
var bool: aux1052_BOOL:: var_is_introduced ;
var bool: aux1053_BOOL:: var_is_introduced ;
var bool: aux1054_BOOL:: var_is_introduced ;
var bool: aux1055_BOOL:: var_is_introduced ;
var bool: aux1056_BOOL:: var_is_introduced ;
var bool: aux1057_BOOL:: var_is_introduced ;
var bool: aux1058_BOOL:: var_is_introduced ;
var bool: aux1059_BOOL:: var_is_introduced ;
var bool: aux1060_BOOL:: var_is_introduced ;
var bool: aux1061_BOOL:: var_is_introduced ;
var bool: aux1062_BOOL:: var_is_introduced ;
var bool: aux1063_BOOL:: var_is_introduced ;
var bool: aux1064_BOOL:: var_is_introduced ;
var bool: aux1065_BOOL:: var_is_introduced ;
var bool: aux1066_BOOL:: var_is_introduced ;
var bool: aux1067_BOOL:: var_is_introduced ;
var bool: aux1068_BOOL:: var_is_introduced ;
var bool: aux1069_BOOL:: var_is_introduced ;
var bool: aux1070_BOOL:: var_is_introduced ;
var bool: aux1071_BOOL:: var_is_introduced ;
var bool: aux1072_BOOL:: var_is_introduced ;
var bool: aux1073_BOOL:: var_is_introduced ;
var bool: aux1074_BOOL:: var_is_introduced ;
var bool: aux1075_BOOL:: var_is_introduced ;
var bool: aux1076_BOOL:: var_is_introduced ;
var bool: aux1077_BOOL:: var_is_introduced ;
var bool: aux1078_BOOL:: var_is_introduced ;
var bool: aux1079_BOOL:: var_is_introduced ;
var bool: aux1080_BOOL:: var_is_introduced ;
var bool: aux1081_BOOL:: var_is_introduced ;
var bool: aux1082_BOOL:: var_is_introduced ;
var bool: aux1083_BOOL:: var_is_introduced ;
var bool: aux1084_BOOL:: var_is_introduced ;
var bool: aux1085_BOOL:: var_is_introduced ;
var bool: aux1086_BOOL:: var_is_introduced ;
var bool: aux1087_BOOL:: var_is_introduced ;
var bool: aux1088_BOOL:: var_is_introduced ;
var bool: aux1089_BOOL:: var_is_introduced ;
var bool: aux1090_BOOL:: var_is_introduced ;
var bool: aux1091_BOOL:: var_is_introduced ;
var bool: aux1092_BOOL:: var_is_introduced ;
var bool: aux1093_BOOL:: var_is_introduced ;
var bool: aux1094_BOOL:: var_is_introduced ;
var bool: aux1095_BOOL:: var_is_introduced ;
var bool: aux1096_BOOL:: var_is_introduced ;
var bool: aux1097_BOOL:: var_is_introduced ;
var bool: aux1098_BOOL:: var_is_introduced ;
var bool: aux1099_BOOL:: var_is_introduced ;
var bool: aux1100_BOOL:: var_is_introduced ;
var bool: aux1101_BOOL:: var_is_introduced ;
var bool: aux1102_BOOL:: var_is_introduced ;
var bool: aux1103_BOOL:: var_is_introduced ;
var bool: aux1104_BOOL:: var_is_introduced ;
var bool: aux1105_BOOL:: var_is_introduced ;
var bool: aux1106_BOOL:: var_is_introduced ;
var bool: aux1107_BOOL:: var_is_introduced ;
var bool: aux1108_BOOL:: var_is_introduced ;
var bool: aux1109_BOOL:: var_is_introduced ;
var bool: aux1110_BOOL:: var_is_introduced ;
var bool: aux1111_BOOL:: var_is_introduced ;
var bool: aux1112_BOOL:: var_is_introduced ;
var bool: aux1113_BOOL:: var_is_introduced ;
var bool: aux1114_BOOL:: var_is_introduced ;
var bool: aux1115_BOOL:: var_is_introduced ;
var bool: aux1116_BOOL:: var_is_introduced ;
var bool: aux1117_BOOL:: var_is_introduced ;
var bool: aux1118_BOOL:: var_is_introduced ;
constraint bool2int(aux0_BOOL,aux0_INTEGER);
constraint bool2int(aux1_BOOL,aux1_INTEGER);
constraint bool2int(aux2_BOOL,aux2_INTEGER);
constraint bool2int(aux3_BOOL,aux3_INTEGER);
constraint bool2int(aux4_BOOL,aux4_INTEGER);
constraint bool2int(aux5_BOOL,aux5_INTEGER);
constraint bool2int(aux6_BOOL,aux6_INTEGER);
constraint bool2int(aux7_BOOL,aux7_INTEGER);
constraint bool2int(aux8_BOOL,aux8_INTEGER);
constraint bool2int(aux9_BOOL,aux9_INTEGER);
constraint bool2int(aux10_BOOL,aux10_INTEGER);
constraint bool2int(aux11_BOOL,aux11_INTEGER);
constraint bool2int(aux12_BOOL,aux12_INTEGER);
constraint bool2int(aux13_BOOL,aux13_INTEGER);
constraint bool2int(aux14_BOOL,aux14_INTEGER);
constraint bool2int(aux15_BOOL,aux15_INTEGER);
constraint bool2int(aux16_BOOL,aux16_INTEGER);
constraint bool2int(aux17_BOOL,aux17_INTEGER);
constraint bool2int(aux18_BOOL,aux18_INTEGER);
constraint bool2int(aux19_BOOL,aux19_INTEGER);
constraint bool2int(aux20_BOOL,aux20_INTEGER);
constraint bool2int(aux21_BOOL,aux21_INTEGER);
constraint bool2int(aux22_BOOL,aux22_INTEGER);
constraint bool2int(aux23_BOOL,aux23_INTEGER);
constraint bool2int(aux24_BOOL,aux24_INTEGER);
constraint bool2int(aux25_BOOL,aux25_INTEGER);
constraint bool2int(aux26_BOOL,aux26_INTEGER);
constraint bool2int(aux27_BOOL,aux27_INTEGER);
constraint bool2int(aux28_BOOL,aux28_INTEGER);
constraint bool2int(aux29_BOOL,aux29_INTEGER);
constraint bool2int(aux30_BOOL,aux30_INTEGER);
constraint bool2int(aux31_BOOL,aux31_INTEGER);
constraint bool2int(aux32_BOOL,aux32_INTEGER);
constraint bool2int(aux33_BOOL,aux33_INTEGER);
constraint bool2int(aux34_BOOL,aux34_INTEGER);
constraint bool2int(aux35_BOOL,aux35_INTEGER);
constraint bool2int(aux36_BOOL,aux36_INTEGER);
constraint bool2int(aux37_BOOL,aux37_INTEGER);
constraint bool2int(aux38_BOOL,aux38_INTEGER);
constraint bool2int(aux39_BOOL,aux39_INTEGER);
constraint bool2int(aux40_BOOL,aux40_INTEGER);
constraint bool2int(aux41_BOOL,aux41_INTEGER);
constraint bool2int(aux42_BOOL,aux42_INTEGER);
constraint bool2int(aux43_BOOL,aux43_INTEGER);
constraint bool2int(aux44_BOOL,aux44_INTEGER);
constraint bool2int(aux45_BOOL,aux45_INTEGER);
constraint bool2int(aux46_BOOL,aux46_INTEGER);
constraint bool2int(aux47_BOOL,aux47_INTEGER);
constraint bool2int(aux48_BOOL,aux48_INTEGER);
constraint bool2int(aux49_BOOL,aux49_INTEGER);
constraint bool2int(aux50_BOOL,aux50_INTEGER);
constraint bool2int(aux51_BOOL,aux51_INTEGER);
constraint bool2int(aux52_BOOL,aux52_INTEGER);
constraint bool2int(aux53_BOOL,aux53_INTEGER);
constraint bool2int(aux54_BOOL,aux54_INTEGER);
constraint bool2int(aux55_BOOL,aux55_INTEGER);
constraint bool2int(aux56_BOOL,aux56_INTEGER);
constraint bool2int(aux57_BOOL,aux57_INTEGER);
constraint bool2int(aux58_BOOL,aux58_INTEGER);
constraint bool2int(aux59_BOOL,aux59_INTEGER);
constraint bool2int(aux60_BOOL,aux60_INTEGER);
constraint bool2int(aux61_BOOL,aux61_INTEGER);
constraint bool2int(aux62_BOOL,aux62_INTEGER);
constraint bool2int(aux63_BOOL,aux63_INTEGER);
constraint bool2int(aux64_BOOL,aux64_INTEGER);
constraint bool2int(aux65_BOOL,aux65_INTEGER);
constraint bool2int(aux66_BOOL,aux66_INTEGER);
constraint bool2int(aux67_BOOL,aux67_INTEGER);
constraint bool2int(aux68_BOOL,aux68_INTEGER);
constraint bool2int(aux69_BOOL,aux69_INTEGER);
constraint bool2int(aux70_BOOL,aux70_INTEGER);
constraint bool2int(aux71_BOOL,aux71_INTEGER);
constraint bool2int(aux72_BOOL,aux72_INTEGER);
constraint bool2int(aux73_BOOL,aux73_INTEGER);
constraint bool2int(aux74_BOOL,aux74_INTEGER);
constraint bool2int(aux75_BOOL,aux75_INTEGER);
constraint bool2int(aux76_BOOL,aux76_INTEGER);
constraint bool2int(aux77_BOOL,aux77_INTEGER);
constraint bool2int(aux78_BOOL,aux78_INTEGER);
constraint bool2int(aux79_BOOL,aux79_INTEGER);
constraint bool2int(aux80_BOOL,aux80_INTEGER);
constraint bool2int(aux81_BOOL,aux81_INTEGER);
constraint bool2int(aux82_BOOL,aux82_INTEGER);
constraint bool2int(aux83_BOOL,aux83_INTEGER);
constraint bool2int(aux84_BOOL,aux84_INTEGER);
constraint bool2int(aux85_BOOL,aux85_INTEGER);
constraint bool2int(aux86_BOOL,aux86_INTEGER);
constraint bool2int(aux87_BOOL,aux87_INTEGER);
constraint bool2int(aux88_BOOL,aux88_INTEGER);
constraint bool2int(aux89_BOOL,aux89_INTEGER);
constraint bool2int(aux90_BOOL,aux90_INTEGER);
constraint bool2int(aux91_BOOL,aux91_INTEGER);
constraint bool2int(aux92_BOOL,aux92_INTEGER);
constraint bool2int(aux93_BOOL,aux93_INTEGER);
constraint bool2int(aux94_BOOL,aux94_INTEGER);
constraint bool2int(aux95_BOOL,aux95_INTEGER);
constraint bool2int(aux96_BOOL,aux96_INTEGER);
constraint bool2int(aux97_BOOL,aux97_INTEGER);
constraint bool2int(aux98_BOOL,aux98_INTEGER);
constraint bool2int(aux99_BOOL,aux99_INTEGER);
constraint bool2int(aux100_BOOL,aux100_INTEGER);
constraint bool2int(aux101_BOOL,aux101_INTEGER);
constraint bool2int(aux102_BOOL,aux102_INTEGER);
constraint bool2int(aux103_BOOL,aux103_INTEGER);
constraint bool2int(aux104_BOOL,aux104_INTEGER);
constraint bool2int(aux105_BOOL,aux105_INTEGER);
constraint bool2int(aux106_BOOL,aux106_INTEGER);
constraint bool2int(aux107_BOOL,aux107_INTEGER);
constraint bool2int(aux108_BOOL,aux108_INTEGER);
constraint bool2int(aux109_BOOL,aux109_INTEGER);
constraint bool2int(aux110_BOOL,aux110_INTEGER);
constraint bool2int(aux111_BOOL,aux111_INTEGER);
constraint bool2int(aux112_BOOL,aux112_INTEGER);
constraint bool2int(aux113_BOOL,aux113_INTEGER);
constraint bool2int(aux114_BOOL,aux114_INTEGER);
constraint bool2int(aux115_BOOL,aux115_INTEGER);
constraint bool2int(aux116_BOOL,aux116_INTEGER);
constraint bool2int(aux117_BOOL,aux117_INTEGER);
constraint bool2int(aux118_BOOL,aux118_INTEGER);
constraint bool2int(aux119_BOOL,aux119_INTEGER);
constraint bool2int(aux120_BOOL,aux120_INTEGER);
constraint bool2int(aux121_BOOL,aux121_INTEGER);
constraint bool2int(aux122_BOOL,aux122_INTEGER);
constraint bool2int(aux123_BOOL,aux123_INTEGER);
constraint bool2int(aux124_BOOL,aux124_INTEGER);
constraint bool2int(aux125_BOOL,aux125_INTEGER);
constraint bool2int(aux126_BOOL,aux126_INTEGER);
constraint bool2int(aux127_BOOL,aux127_INTEGER);
constraint bool2int(aux128_BOOL,aux128_INTEGER);
constraint bool2int(aux129_BOOL,aux129_INTEGER);
constraint bool2int(aux130_BOOL,aux130_INTEGER);
constraint bool2int(aux131_BOOL,aux131_INTEGER);
constraint bool2int(aux132_BOOL,aux132_INTEGER);
constraint bool2int(aux133_BOOL,aux133_INTEGER);
constraint bool2int(aux134_BOOL,aux134_INTEGER);
constraint bool2int(aux135_BOOL,aux135_INTEGER);
constraint bool2int(aux136_BOOL,aux136_INTEGER);
constraint bool2int(aux137_BOOL,aux137_INTEGER);
constraint bool2int(aux138_BOOL,aux138_INTEGER);
constraint bool2int(aux139_BOOL,aux139_INTEGER);
constraint bool2int(aux140_BOOL,aux140_INTEGER);
constraint bool2int(aux141_BOOL,aux141_INTEGER);
constraint bool2int(aux142_BOOL,aux142_INTEGER);
constraint bool2int(aux143_BOOL,aux143_INTEGER);
constraint bool2int(aux144_BOOL,aux144_INTEGER);
constraint bool2int(aux145_BOOL,aux145_INTEGER);
constraint bool2int(aux146_BOOL,aux146_INTEGER);
constraint bool2int(aux147_BOOL,aux147_INTEGER);
constraint bool2int(aux148_BOOL,aux148_INTEGER);
constraint bool2int(aux149_BOOL,aux149_INTEGER);
constraint bool2int(aux150_BOOL,aux150_INTEGER);
constraint bool2int(aux151_BOOL,aux151_INTEGER);
constraint bool2int(aux152_BOOL,aux152_INTEGER);
constraint bool2int(aux153_BOOL,aux153_INTEGER);
constraint bool2int(aux154_BOOL,aux154_INTEGER);
constraint bool2int(aux155_BOOL,aux155_INTEGER);
constraint bool2int(aux156_BOOL,aux156_INTEGER);
constraint bool2int(aux157_BOOL,aux157_INTEGER);
constraint bool2int(aux158_BOOL,aux158_INTEGER);
constraint bool2int(aux159_BOOL,aux159_INTEGER);
constraint bool2int(aux160_BOOL,aux160_INTEGER);
constraint bool2int(aux161_BOOL,aux161_INTEGER);
constraint bool2int(aux162_BOOL,aux162_INTEGER);
constraint bool2int(aux163_BOOL,aux163_INTEGER);
constraint bool2int(aux164_BOOL,aux164_INTEGER);
constraint bool2int(aux165_BOOL,aux165_INTEGER);
constraint bool2int(aux166_BOOL,aux166_INTEGER);
constraint bool2int(aux167_BOOL,aux167_INTEGER);
constraint bool2int(aux168_BOOL,aux168_INTEGER);
constraint bool2int(aux169_BOOL,aux169_INTEGER);
constraint bool2int(aux170_BOOL,aux170_INTEGER);
constraint bool2int(aux171_BOOL,aux171_INTEGER);
constraint bool2int(aux172_BOOL,aux172_INTEGER);
constraint bool2int(aux173_BOOL,aux173_INTEGER);
constraint bool2int(aux174_BOOL,aux174_INTEGER);
constraint bool2int(aux175_BOOL,aux175_INTEGER);
constraint bool2int(aux176_BOOL,aux176_INTEGER);
constraint bool2int(aux177_BOOL,aux177_INTEGER);
constraint bool2int(aux178_BOOL,aux178_INTEGER);
constraint bool2int(aux179_BOOL,aux179_INTEGER);
constraint bool2int(aux180_BOOL,aux180_INTEGER);
constraint bool2int(aux181_BOOL,aux181_INTEGER);
constraint bool2int(aux182_BOOL,aux182_INTEGER);
constraint bool2int(aux183_BOOL,aux183_INTEGER);
constraint bool2int(aux184_BOOL,aux184_INTEGER);
constraint bool2int(aux185_BOOL,aux185_INTEGER);
constraint bool2int(aux186_BOOL,aux186_INTEGER);
constraint bool2int(aux187_BOOL,aux187_INTEGER);
constraint bool2int(aux188_BOOL,aux188_INTEGER);
constraint bool2int(aux189_BOOL,aux189_INTEGER);
constraint bool2int(aux190_BOOL,aux190_INTEGER);
constraint bool2int(aux191_BOOL,aux191_INTEGER);
constraint bool2int(aux192_BOOL,aux192_INTEGER);
constraint bool2int(aux193_BOOL,aux193_INTEGER);
constraint bool2int(aux194_BOOL,aux194_INTEGER);
constraint bool2int(aux195_BOOL,aux195_INTEGER);
constraint bool2int(aux196_BOOL,aux196_INTEGER);
constraint bool2int(aux197_BOOL,aux197_INTEGER);
constraint bool2int(aux198_BOOL,aux198_INTEGER);
constraint bool2int(aux199_BOOL,aux199_INTEGER);
constraint bool2int(aux200_BOOL,aux200_INTEGER);
constraint bool2int(aux201_BOOL,aux201_INTEGER);
constraint bool2int(aux202_BOOL,aux202_INTEGER);
constraint bool2int(aux203_BOOL,aux203_INTEGER);
constraint bool2int(aux204_BOOL,aux204_INTEGER);
constraint bool2int(aux205_BOOL,aux205_INTEGER);
constraint bool2int(aux206_BOOL,aux206_INTEGER);
constraint bool2int(aux207_BOOL,aux207_INTEGER);
constraint bool2int(aux208_BOOL,aux208_INTEGER);
constraint bool2int(aux209_BOOL,aux209_INTEGER);
constraint bool2int(aux210_BOOL,aux210_INTEGER);
constraint bool2int(aux211_BOOL,aux211_INTEGER);
constraint bool2int(aux212_BOOL,aux212_INTEGER);
constraint bool2int(aux213_BOOL,aux213_INTEGER);
constraint bool2int(aux214_BOOL,aux214_INTEGER);
constraint bool2int(aux215_BOOL,aux215_INTEGER);
constraint bool2int(aux216_BOOL,aux216_INTEGER);
constraint bool2int(aux217_BOOL,aux217_INTEGER);
constraint bool2int(aux218_BOOL,aux218_INTEGER);
constraint bool2int(aux219_BOOL,aux219_INTEGER);
constraint bool2int(aux220_BOOL,aux220_INTEGER);
constraint bool2int(aux221_BOOL,aux221_INTEGER);
constraint bool2int(aux222_BOOL,aux222_INTEGER);
constraint bool2int(aux223_BOOL,aux223_INTEGER);
constraint bool2int(aux224_BOOL,aux224_INTEGER);
constraint bool2int(aux225_BOOL,aux225_INTEGER);
constraint bool2int(aux226_BOOL,aux226_INTEGER);
constraint bool2int(aux227_BOOL,aux227_INTEGER);
constraint bool2int(aux228_BOOL,aux228_INTEGER);
constraint bool2int(aux229_BOOL,aux229_INTEGER);
constraint bool2int(aux230_BOOL,aux230_INTEGER);
constraint bool2int(aux231_BOOL,aux231_INTEGER);
constraint bool2int(aux232_BOOL,aux232_INTEGER);
constraint bool2int(aux233_BOOL,aux233_INTEGER);
constraint bool2int(aux234_BOOL,aux234_INTEGER);
constraint bool2int(aux235_BOOL,aux235_INTEGER);
constraint bool2int(aux236_BOOL,aux236_INTEGER);
constraint bool2int(aux237_BOOL,aux237_INTEGER);
constraint bool2int(aux238_BOOL,aux238_INTEGER);
constraint bool2int(aux239_BOOL,aux239_INTEGER);
constraint bool2int(aux240_BOOL,aux240_INTEGER);
constraint bool2int(aux241_BOOL,aux241_INTEGER);
constraint bool2int(aux242_BOOL,aux242_INTEGER);
constraint bool2int(aux243_BOOL,aux243_INTEGER);
constraint bool2int(aux244_BOOL,aux244_INTEGER);
constraint bool2int(aux245_BOOL,aux245_INTEGER);
constraint bool2int(aux246_BOOL,aux246_INTEGER);
constraint bool2int(aux247_BOOL,aux247_INTEGER);
constraint bool2int(aux248_BOOL,aux248_INTEGER);
constraint bool2int(aux249_BOOL,aux249_INTEGER);
constraint bool2int(aux250_BOOL,aux250_INTEGER);
constraint bool2int(aux251_BOOL,aux251_INTEGER);
constraint bool2int(aux252_BOOL,aux252_INTEGER);
constraint bool2int(aux253_BOOL,aux253_INTEGER);
constraint bool2int(aux254_BOOL,aux254_INTEGER);
constraint bool2int(aux255_BOOL,aux255_INTEGER);
constraint bool2int(aux256_BOOL,aux256_INTEGER);
constraint bool2int(aux257_BOOL,aux257_INTEGER);
constraint bool2int(aux258_BOOL,aux258_INTEGER);
constraint bool2int(aux259_BOOL,aux259_INTEGER);
constraint bool2int(aux260_BOOL,aux260_INTEGER);
constraint bool2int(aux261_BOOL,aux261_INTEGER);
constraint bool2int(aux262_BOOL,aux262_INTEGER);
constraint bool2int(aux263_BOOL,aux263_INTEGER);
constraint bool2int(aux264_BOOL,aux264_INTEGER);
constraint bool2int(aux265_BOOL,aux265_INTEGER);
constraint bool2int(aux266_BOOL,aux266_INTEGER);
constraint bool2int(aux267_BOOL,aux267_INTEGER);
constraint bool2int(aux268_BOOL,aux268_INTEGER);
constraint bool2int(aux269_BOOL,aux269_INTEGER);
constraint bool2int(aux270_BOOL,aux270_INTEGER);
constraint bool2int(aux271_BOOL,aux271_INTEGER);
constraint bool2int(aux272_BOOL,aux272_INTEGER);
constraint bool2int(aux273_BOOL,aux273_INTEGER);
constraint bool2int(aux274_BOOL,aux274_INTEGER);
constraint bool2int(aux275_BOOL,aux275_INTEGER);
constraint bool2int(aux276_BOOL,aux276_INTEGER);
constraint bool2int(aux277_BOOL,aux277_INTEGER);
constraint bool2int(aux278_BOOL,aux278_INTEGER);
constraint bool2int(aux279_BOOL,aux279_INTEGER);
constraint bool2int(aux280_BOOL,aux280_INTEGER);
constraint bool2int(aux281_BOOL,aux281_INTEGER);
constraint bool2int(aux282_BOOL,aux282_INTEGER);
constraint bool2int(aux283_BOOL,aux283_INTEGER);
constraint bool2int(aux284_BOOL,aux284_INTEGER);
constraint bool2int(aux285_BOOL,aux285_INTEGER);
constraint bool2int(aux286_BOOL,aux286_INTEGER);
constraint bool2int(aux287_BOOL,aux287_INTEGER);
constraint bool2int(aux288_BOOL,aux288_INTEGER);
constraint bool2int(aux289_BOOL,aux289_INTEGER);
constraint bool2int(aux290_BOOL,aux290_INTEGER);
constraint bool2int(aux291_BOOL,aux291_INTEGER);
constraint bool2int(aux292_BOOL,aux292_INTEGER);
constraint bool2int(aux293_BOOL,aux293_INTEGER);
constraint bool2int(aux294_BOOL,aux294_INTEGER);
constraint bool2int(aux295_BOOL,aux295_INTEGER);
constraint bool2int(aux296_BOOL,aux296_INTEGER);
constraint bool2int(aux297_BOOL,aux297_INTEGER);
constraint bool2int(aux298_BOOL,aux298_INTEGER);
constraint bool2int(aux299_BOOL,aux299_INTEGER);
constraint bool2int(aux300_BOOL,aux300_INTEGER);
constraint bool2int(aux301_BOOL,aux301_INTEGER);
constraint bool2int(aux302_BOOL,aux302_INTEGER);
constraint bool2int(aux303_BOOL,aux303_INTEGER);
constraint bool2int(aux304_BOOL,aux304_INTEGER);
constraint bool2int(aux305_BOOL,aux305_INTEGER);
constraint bool2int(aux306_BOOL,aux306_INTEGER);
constraint bool2int(aux307_BOOL,aux307_INTEGER);
constraint bool2int(aux308_BOOL,aux308_INTEGER);
constraint bool2int(aux309_BOOL,aux309_INTEGER);
constraint bool2int(aux310_BOOL,aux310_INTEGER);
constraint bool2int(aux311_BOOL,aux311_INTEGER);
constraint bool2int(aux312_BOOL,aux312_INTEGER);
constraint bool2int(aux313_BOOL,aux313_INTEGER);
constraint bool2int(aux314_BOOL,aux314_INTEGER);
constraint bool2int(aux315_BOOL,aux315_INTEGER);
constraint bool2int(aux316_BOOL,aux316_INTEGER);
constraint bool2int(aux317_BOOL,aux317_INTEGER);
constraint bool2int(aux318_BOOL,aux318_INTEGER);
constraint bool2int(aux319_BOOL,aux319_INTEGER);
constraint bool2int(aux320_BOOL,aux320_INTEGER);
constraint bool2int(aux321_BOOL,aux321_INTEGER);
constraint bool2int(aux322_BOOL,aux322_INTEGER);
constraint bool2int(aux323_BOOL,aux323_INTEGER);
constraint bool2int(aux324_BOOL,aux324_INTEGER);
constraint bool2int(aux325_BOOL,aux325_INTEGER);
constraint bool2int(aux326_BOOL,aux326_INTEGER);
constraint bool2int(aux327_BOOL,aux327_INTEGER);
constraint bool2int(aux328_BOOL,aux328_INTEGER);
constraint bool2int(aux329_BOOL,aux329_INTEGER);
constraint bool2int(aux330_BOOL,aux330_INTEGER);
constraint bool2int(aux331_BOOL,aux331_INTEGER);
constraint bool2int(aux332_BOOL,aux332_INTEGER);
constraint bool2int(aux333_BOOL,aux333_INTEGER);
constraint bool2int(aux334_BOOL,aux334_INTEGER);
constraint bool2int(aux335_BOOL,aux335_INTEGER);
constraint bool2int(aux336_BOOL,aux336_INTEGER);
constraint bool2int(aux337_BOOL,aux337_INTEGER);
constraint bool2int(aux338_BOOL,aux338_INTEGER);
constraint bool2int(aux339_BOOL,aux339_INTEGER);
constraint bool2int(aux340_BOOL,aux340_INTEGER);
constraint bool2int(aux341_BOOL,aux341_INTEGER);
constraint bool2int(aux342_BOOL,aux342_INTEGER);
constraint bool2int(aux343_BOOL,aux343_INTEGER);
constraint bool2int(aux344_BOOL,aux344_INTEGER);
constraint bool2int(aux345_BOOL,aux345_INTEGER);
constraint bool2int(aux346_BOOL,aux346_INTEGER);
constraint bool2int(aux347_BOOL,aux347_INTEGER);
constraint bool2int(aux348_BOOL,aux348_INTEGER);
constraint bool2int(aux349_BOOL,aux349_INTEGER);
constraint bool2int(aux350_BOOL,aux350_INTEGER);
constraint bool2int(aux351_BOOL,aux351_INTEGER);
constraint bool2int(aux352_BOOL,aux352_INTEGER);
constraint bool2int(aux353_BOOL,aux353_INTEGER);
constraint bool2int(aux354_BOOL,aux354_INTEGER);
constraint bool2int(aux355_BOOL,aux355_INTEGER);
constraint bool2int(aux356_BOOL,aux356_INTEGER);
constraint bool2int(aux357_BOOL,aux357_INTEGER);
constraint bool2int(aux358_BOOL,aux358_INTEGER);
constraint bool2int(aux359_BOOL,aux359_INTEGER);
constraint bool2int(aux360_BOOL,aux360_INTEGER);
constraint bool2int(aux361_BOOL,aux361_INTEGER);
constraint bool2int(aux362_BOOL,aux362_INTEGER);
constraint bool2int(aux363_BOOL,aux363_INTEGER);
constraint bool2int(aux364_BOOL,aux364_INTEGER);
constraint bool2int(aux365_BOOL,aux365_INTEGER);
constraint bool2int(aux366_BOOL,aux366_INTEGER);
constraint bool2int(aux367_BOOL,aux367_INTEGER);
constraint bool2int(aux368_BOOL,aux368_INTEGER);
constraint bool2int(aux369_BOOL,aux369_INTEGER);
constraint bool2int(aux370_BOOL,aux370_INTEGER);
constraint bool2int(aux371_BOOL,aux371_INTEGER);
constraint bool2int(aux372_BOOL,aux372_INTEGER);
constraint bool2int(aux373_BOOL,aux373_INTEGER);
constraint bool2int(aux374_BOOL,aux374_INTEGER);
constraint bool2int(aux375_BOOL,aux375_INTEGER);
constraint bool2int(aux376_BOOL,aux376_INTEGER);
constraint bool2int(aux377_BOOL,aux377_INTEGER);
constraint bool2int(aux378_BOOL,aux378_INTEGER);
constraint bool2int(aux379_BOOL,aux379_INTEGER);
constraint bool2int(aux380_BOOL,aux380_INTEGER);
constraint bool2int(aux381_BOOL,aux381_INTEGER);
constraint bool2int(aux382_BOOL,aux382_INTEGER);
constraint bool2int(aux383_BOOL,aux383_INTEGER);
constraint bool2int(aux384_BOOL,aux384_INTEGER);
constraint bool2int(aux385_BOOL,aux385_INTEGER);
constraint bool2int(aux386_BOOL,aux386_INTEGER);
constraint bool2int(aux387_BOOL,aux387_INTEGER);
constraint bool2int(aux388_BOOL,aux388_INTEGER);
constraint bool2int(aux389_BOOL,aux389_INTEGER);
constraint bool2int(aux390_BOOL,aux390_INTEGER);
constraint bool2int(aux391_BOOL,aux391_INTEGER);
constraint bool2int(aux392_BOOL,aux392_INTEGER);
constraint bool2int(aux393_BOOL,aux393_INTEGER);
constraint bool2int(aux394_BOOL,aux394_INTEGER);
constraint bool2int(aux395_BOOL,aux395_INTEGER);
constraint bool2int(aux396_BOOL,aux396_INTEGER);
constraint bool2int(aux397_BOOL,aux397_INTEGER);
constraint bool2int(aux398_BOOL,aux398_INTEGER);
constraint bool2int(aux399_BOOL,aux399_INTEGER);
constraint bool2int(aux400_BOOL,aux400_INTEGER);
constraint bool2int(aux401_BOOL,aux401_INTEGER);
constraint bool2int(aux402_BOOL,aux402_INTEGER);
constraint bool2int(aux403_BOOL,aux403_INTEGER);
constraint bool2int(aux404_BOOL,aux404_INTEGER);
constraint bool2int(aux405_BOOL,aux405_INTEGER);
constraint bool2int(aux406_BOOL,aux406_INTEGER);
constraint bool2int(aux407_BOOL,aux407_INTEGER);
constraint bool2int(aux408_BOOL,aux408_INTEGER);
constraint bool2int(aux409_BOOL,aux409_INTEGER);
constraint bool2int(aux410_BOOL,aux410_INTEGER);
constraint bool2int(aux411_BOOL,aux411_INTEGER);
constraint bool2int(aux412_BOOL,aux412_INTEGER);
constraint bool2int(aux413_BOOL,aux413_INTEGER);
constraint bool2int(aux414_BOOL,aux414_INTEGER);
constraint bool2int(aux415_BOOL,aux415_INTEGER);
constraint bool2int(aux416_BOOL,aux416_INTEGER);
constraint bool2int(aux417_BOOL,aux417_INTEGER);
constraint bool2int(aux418_BOOL,aux418_INTEGER);
constraint bool2int(aux419_BOOL,aux419_INTEGER);
constraint bool2int(aux420_BOOL,aux420_INTEGER);
constraint bool2int(aux421_BOOL,aux421_INTEGER);
constraint bool2int(aux422_BOOL,aux422_INTEGER);
constraint bool2int(aux423_BOOL,aux423_INTEGER);
constraint bool2int(aux424_BOOL,aux424_INTEGER);
constraint bool2int(aux425_BOOL,aux425_INTEGER);
constraint bool2int(aux426_BOOL,aux426_INTEGER);
constraint bool2int(aux427_BOOL,aux427_INTEGER);
constraint bool2int(aux428_BOOL,aux428_INTEGER);
constraint bool2int(aux429_BOOL,aux429_INTEGER);
constraint bool2int(aux430_BOOL,aux430_INTEGER);
constraint bool2int(aux431_BOOL,aux431_INTEGER);
constraint bool2int(aux432_BOOL,aux432_INTEGER);
constraint bool2int(aux433_BOOL,aux433_INTEGER);
constraint bool2int(aux434_BOOL,aux434_INTEGER);
constraint bool2int(aux435_BOOL,aux435_INTEGER);
constraint bool2int(aux436_BOOL,aux436_INTEGER);
constraint bool2int(aux437_BOOL,aux437_INTEGER);
constraint bool2int(aux438_BOOL,aux438_INTEGER);
constraint bool2int(aux439_BOOL,aux439_INTEGER);
constraint bool2int(aux440_BOOL,aux440_INTEGER);
constraint bool2int(aux441_BOOL,aux441_INTEGER);
constraint bool2int(aux442_BOOL,aux442_INTEGER);
constraint bool2int(aux443_BOOL,aux443_INTEGER);
constraint bool2int(aux444_BOOL,aux444_INTEGER);
constraint bool2int(aux445_BOOL,aux445_INTEGER);
constraint bool2int(aux446_BOOL,aux446_INTEGER);
constraint bool2int(aux447_BOOL,aux447_INTEGER);
constraint bool2int(aux448_BOOL,aux448_INTEGER);
constraint bool2int(aux449_BOOL,aux449_INTEGER);
constraint bool2int(aux450_BOOL,aux450_INTEGER);
constraint bool2int(aux451_BOOL,aux451_INTEGER);
constraint bool2int(aux452_BOOL,aux452_INTEGER);
constraint bool2int(aux453_BOOL,aux453_INTEGER);
constraint bool2int(aux454_BOOL,aux454_INTEGER);
constraint bool2int(aux455_BOOL,aux455_INTEGER);
constraint bool2int(aux456_BOOL,aux456_INTEGER);
constraint bool2int(aux457_BOOL,aux457_INTEGER);
constraint bool2int(aux458_BOOL,aux458_INTEGER);
constraint bool2int(aux459_BOOL,aux459_INTEGER);
constraint bool2int(aux460_BOOL,aux460_INTEGER);
constraint bool2int(aux461_BOOL,aux461_INTEGER);
constraint bool2int(aux462_BOOL,aux462_INTEGER);
constraint bool2int(aux463_BOOL,aux463_INTEGER);
constraint bool2int(aux464_BOOL,aux464_INTEGER);
constraint bool2int(aux465_BOOL,aux465_INTEGER);
constraint bool2int(aux466_BOOL,aux466_INTEGER);
constraint bool2int(aux467_BOOL,aux467_INTEGER);
constraint bool2int(aux468_BOOL,aux468_INTEGER);
constraint bool2int(aux469_BOOL,aux469_INTEGER);
constraint bool2int(aux470_BOOL,aux470_INTEGER);
constraint bool2int(aux471_BOOL,aux471_INTEGER);
constraint bool2int(aux472_BOOL,aux472_INTEGER);
constraint bool2int(aux473_BOOL,aux473_INTEGER);
constraint bool2int(aux474_BOOL,aux474_INTEGER);
constraint bool2int(aux475_BOOL,aux475_INTEGER);
constraint bool2int(aux476_BOOL,aux476_INTEGER);
constraint bool2int(aux477_BOOL,aux477_INTEGER);
constraint bool2int(aux478_BOOL,aux478_INTEGER);
constraint bool2int(aux479_BOOL,aux479_INTEGER);
constraint bool2int(aux480_BOOL,aux480_INTEGER);
constraint bool2int(aux481_BOOL,aux481_INTEGER);
constraint bool2int(aux482_BOOL,aux482_INTEGER);
constraint bool2int(aux483_BOOL,aux483_INTEGER);
constraint bool2int(aux484_BOOL,aux484_INTEGER);
constraint bool2int(aux485_BOOL,aux485_INTEGER);
constraint bool2int(aux486_BOOL,aux486_INTEGER);
constraint bool2int(aux487_BOOL,aux487_INTEGER);
constraint bool2int(aux488_BOOL,aux488_INTEGER);
constraint bool2int(aux489_BOOL,aux489_INTEGER);
constraint bool2int(aux490_BOOL,aux490_INTEGER);
constraint bool2int(aux491_BOOL,aux491_INTEGER);
constraint bool2int(aux492_BOOL,aux492_INTEGER);
constraint bool2int(aux493_BOOL,aux493_INTEGER);
constraint bool2int(aux494_BOOL,aux494_INTEGER);
constraint bool2int(aux495_BOOL,aux495_INTEGER);
constraint bool2int(aux496_BOOL,aux496_INTEGER);
constraint bool2int(aux497_BOOL,aux497_INTEGER);
constraint bool2int(aux498_BOOL,aux498_INTEGER);
constraint bool2int(aux499_BOOL,aux499_INTEGER);
constraint bool2int(aux500_BOOL,aux500_INTEGER);
constraint bool2int(aux501_BOOL,aux501_INTEGER);
constraint bool2int(aux502_BOOL,aux502_INTEGER);
constraint bool2int(aux503_BOOL,aux503_INTEGER);
constraint bool2int(aux504_BOOL,aux504_INTEGER);
constraint bool2int(aux505_BOOL,aux505_INTEGER);
constraint bool2int(aux506_BOOL,aux506_INTEGER);
constraint bool2int(aux507_BOOL,aux507_INTEGER);
constraint bool2int(aux508_BOOL,aux508_INTEGER);
constraint bool2int(aux509_BOOL,aux509_INTEGER);
constraint bool2int(aux510_BOOL,aux510_INTEGER);
constraint bool2int(aux511_BOOL,aux511_INTEGER);
constraint bool2int(aux512_BOOL,aux512_INTEGER);
constraint bool2int(aux513_BOOL,aux513_INTEGER);
constraint bool2int(aux514_BOOL,aux514_INTEGER);
constraint bool2int(aux515_BOOL,aux515_INTEGER);
constraint bool2int(aux516_BOOL,aux516_INTEGER);
constraint bool2int(aux517_BOOL,aux517_INTEGER);
constraint bool2int(aux518_BOOL,aux518_INTEGER);
constraint bool2int(aux519_BOOL,aux519_INTEGER);
constraint bool2int(aux520_BOOL,aux520_INTEGER);
constraint bool2int(aux521_BOOL,aux521_INTEGER);
constraint bool2int(aux522_BOOL,aux522_INTEGER);
constraint bool2int(aux523_BOOL,aux523_INTEGER);
constraint bool2int(aux524_BOOL,aux524_INTEGER);
constraint bool2int(aux525_BOOL,aux525_INTEGER);
constraint bool2int(aux526_BOOL,aux526_INTEGER);
constraint bool2int(aux527_BOOL,aux527_INTEGER);
constraint bool2int(aux528_BOOL,aux528_INTEGER);
constraint bool2int(aux529_BOOL,aux529_INTEGER);
constraint bool2int(aux530_BOOL,aux530_INTEGER);
constraint bool2int(aux531_BOOL,aux531_INTEGER);
constraint bool2int(aux532_BOOL,aux532_INTEGER);
constraint bool2int(aux533_BOOL,aux533_INTEGER);
constraint bool2int(aux534_BOOL,aux534_INTEGER);
constraint bool2int(aux535_BOOL,aux535_INTEGER);
constraint bool2int(aux536_BOOL,aux536_INTEGER);
constraint bool2int(aux537_BOOL,aux537_INTEGER);
constraint bool2int(aux538_BOOL,aux538_INTEGER);
constraint bool2int(aux539_BOOL,aux539_INTEGER);
constraint bool2int(aux540_BOOL,aux540_INTEGER);
constraint bool2int(aux541_BOOL,aux541_INTEGER);
constraint bool2int(aux542_BOOL,aux542_INTEGER);
constraint bool2int(aux543_BOOL,aux543_INTEGER);
constraint bool2int(aux544_BOOL,aux544_INTEGER);
constraint bool2int(aux545_BOOL,aux545_INTEGER);
constraint bool2int(aux546_BOOL,aux546_INTEGER);
constraint bool2int(aux547_BOOL,aux547_INTEGER);
constraint bool2int(aux548_BOOL,aux548_INTEGER);
constraint bool2int(aux549_BOOL,aux549_INTEGER);
constraint bool2int(aux550_BOOL,aux550_INTEGER);
constraint bool2int(aux551_BOOL,aux551_INTEGER);
constraint bool2int(aux552_BOOL,aux552_INTEGER);
constraint bool2int(aux553_BOOL,aux553_INTEGER);
constraint bool2int(aux554_BOOL,aux554_INTEGER);
constraint bool2int(aux555_BOOL,aux555_INTEGER);
constraint bool2int(aux556_BOOL,aux556_INTEGER);
constraint bool2int(aux558_BOOL,aux558_INTEGER);
constraint bool2int(aux561_BOOL,aux561_INTEGER);
constraint bool2int(aux567_BOOL,aux567_INTEGER);
constraint bool2int(aux568_BOOL,aux568_INTEGER);
constraint bool2int(aux570_BOOL,aux570_INTEGER);
constraint bool2int(aux571_BOOL,aux571_INTEGER);
constraint bool2int(aux573_BOOL,aux573_INTEGER);
constraint bool2int(aux575_BOOL,aux575_INTEGER);
constraint bool2int(aux577_BOOL,aux577_INTEGER);
constraint bool2int(aux581_BOOL,aux581_INTEGER);
constraint bool2int(aux582_BOOL,aux582_INTEGER);
constraint bool2int(aux584_BOOL,aux584_INTEGER);
constraint bool2int(aux585_BOOL,aux585_INTEGER);
constraint bool2int(aux587_BOOL,aux587_INTEGER);
constraint bool2int(aux589_BOOL,aux589_INTEGER);
constraint bool2int(aux591_BOOL,aux591_INTEGER);
constraint bool2int(aux595_BOOL,aux595_INTEGER);
constraint bool2int(aux596_BOOL,aux596_INTEGER);
constraint bool2int(aux598_BOOL,aux598_INTEGER);
constraint bool2int(aux599_BOOL,aux599_INTEGER);
constraint bool2int(aux601_BOOL,aux601_INTEGER);
constraint bool2int(aux603_BOOL,aux603_INTEGER);
constraint bool2int(aux605_BOOL,aux605_INTEGER);
constraint bool2int(aux609_BOOL,aux609_INTEGER);
constraint bool2int(aux610_BOOL,aux610_INTEGER);
constraint bool2int(aux612_BOOL,aux612_INTEGER);
constraint bool2int(aux613_BOOL,aux613_INTEGER);
constraint bool2int(aux615_BOOL,aux615_INTEGER);
constraint bool2int(aux617_BOOL,aux617_INTEGER);
constraint bool2int(aux619_BOOL,aux619_INTEGER);
constraint bool2int(aux623_BOOL,aux623_INTEGER);
constraint bool2int(aux624_BOOL,aux624_INTEGER);
constraint bool2int(aux626_BOOL,aux626_INTEGER);
constraint bool2int(aux627_BOOL,aux627_INTEGER);
constraint bool2int(aux629_BOOL,aux629_INTEGER);
constraint bool2int(aux631_BOOL,aux631_INTEGER);
constraint bool2int(aux633_BOOL,aux633_INTEGER);
constraint bool2int(aux637_BOOL,aux637_INTEGER);
constraint bool2int(aux638_BOOL,aux638_INTEGER);
constraint bool2int(aux640_BOOL,aux640_INTEGER);
constraint bool2int(aux641_BOOL,aux641_INTEGER);
constraint bool2int(aux643_BOOL,aux643_INTEGER);
constraint bool2int(aux645_BOOL,aux645_INTEGER);
constraint bool2int(aux647_BOOL,aux647_INTEGER);
constraint bool2int(aux651_BOOL,aux651_INTEGER);
constraint bool2int(aux652_BOOL,aux652_INTEGER);
constraint bool2int(aux654_BOOL,aux654_INTEGER);
constraint bool2int(aux655_BOOL,aux655_INTEGER);
constraint bool2int(aux657_BOOL,aux657_INTEGER);
constraint bool2int(aux659_BOOL,aux659_INTEGER);
constraint bool2int(aux661_BOOL,aux661_INTEGER);
constraint bool2int(aux665_BOOL,aux665_INTEGER);
constraint bool2int(aux666_BOOL,aux666_INTEGER);
constraint bool2int(aux668_BOOL,aux668_INTEGER);
constraint bool2int(aux669_BOOL,aux669_INTEGER);
constraint bool2int(aux671_BOOL,aux671_INTEGER);
constraint bool2int(aux673_BOOL,aux673_INTEGER);
constraint bool2int(aux675_BOOL,aux675_INTEGER);
constraint bool2int(aux679_BOOL,aux679_INTEGER);
constraint bool2int(aux680_BOOL,aux680_INTEGER);
constraint bool2int(aux682_BOOL,aux682_INTEGER);
constraint bool2int(aux683_BOOL,aux683_INTEGER);
constraint bool2int(aux685_BOOL,aux685_INTEGER);
constraint bool2int(aux687_BOOL,aux687_INTEGER);
constraint bool2int(aux689_BOOL,aux689_INTEGER);
constraint bool2int(aux693_BOOL,aux693_INTEGER);
constraint bool2int(aux694_BOOL,aux694_INTEGER);
constraint bool2int(aux696_BOOL,aux696_INTEGER);
constraint bool2int(aux697_BOOL,aux697_INTEGER);
constraint bool2int(aux699_BOOL,aux699_INTEGER);
constraint bool2int(aux701_BOOL,aux701_INTEGER);
constraint bool2int(aux703_BOOL,aux703_INTEGER);
constraint bool2int(aux707_BOOL,aux707_INTEGER);
constraint bool2int(aux708_BOOL,aux708_INTEGER);
constraint bool2int(aux710_BOOL,aux710_INTEGER);
constraint bool2int(aux711_BOOL,aux711_INTEGER);
constraint bool2int(aux713_BOOL,aux713_INTEGER);
constraint bool2int(aux715_BOOL,aux715_INTEGER);
constraint bool2int(aux717_BOOL,aux717_INTEGER);
constraint bool2int(aux721_BOOL,aux721_INTEGER);
constraint bool2int(aux722_BOOL,aux722_INTEGER);
constraint bool2int(aux724_BOOL,aux724_INTEGER);
constraint bool2int(aux725_BOOL,aux725_INTEGER);
constraint bool2int(aux727_BOOL,aux727_INTEGER);
constraint bool2int(aux729_BOOL,aux729_INTEGER);
constraint bool2int(aux731_BOOL,aux731_INTEGER);
constraint bool2int(aux735_BOOL,aux735_INTEGER);
constraint bool2int(aux736_BOOL,aux736_INTEGER);
constraint bool2int(aux738_BOOL,aux738_INTEGER);
constraint bool2int(aux739_BOOL,aux739_INTEGER);
constraint bool2int(aux741_BOOL,aux741_INTEGER);
constraint bool2int(aux743_BOOL,aux743_INTEGER);
constraint bool2int(aux745_BOOL,aux745_INTEGER);
constraint bool2int(aux749_BOOL,aux749_INTEGER);
constraint bool2int(aux750_BOOL,aux750_INTEGER);
constraint bool2int(aux752_BOOL,aux752_INTEGER);
constraint bool2int(aux753_BOOL,aux753_INTEGER);
constraint bool2int(aux755_BOOL,aux755_INTEGER);
constraint bool2int(aux757_BOOL,aux757_INTEGER);
constraint bool2int(aux759_BOOL,aux759_INTEGER);
constraint bool2int(aux763_BOOL,aux763_INTEGER);
constraint bool2int(aux764_BOOL,aux764_INTEGER);
constraint bool2int(aux766_BOOL,aux766_INTEGER);
constraint bool2int(aux767_BOOL,aux767_INTEGER);
constraint bool2int(aux769_BOOL,aux769_INTEGER);
constraint bool2int(aux771_BOOL,aux771_INTEGER);
constraint bool2int(aux773_BOOL,aux773_INTEGER);
constraint bool2int(aux777_BOOL,aux777_INTEGER);
constraint bool2int(aux778_BOOL,aux778_INTEGER);
constraint bool2int(aux780_BOOL,aux780_INTEGER);
constraint bool2int(aux781_BOOL,aux781_INTEGER);
constraint bool2int(aux783_BOOL,aux783_INTEGER);
constraint bool2int(aux785_BOOL,aux785_INTEGER);
constraint bool2int(aux787_BOOL,aux787_INTEGER);
constraint bool2int(aux791_BOOL,aux791_INTEGER);
constraint bool2int(aux792_BOOL,aux792_INTEGER);
constraint bool2int(aux794_BOOL,aux794_INTEGER);
constraint bool2int(aux795_BOOL,aux795_INTEGER);
constraint bool2int(aux797_BOOL,aux797_INTEGER);
constraint bool2int(aux799_BOOL,aux799_INTEGER);
constraint bool2int(aux801_BOOL,aux801_INTEGER);
constraint bool2int(aux805_BOOL,aux805_INTEGER);
constraint bool2int(aux806_BOOL,aux806_INTEGER);
constraint bool2int(aux808_BOOL,aux808_INTEGER);
constraint bool2int(aux809_BOOL,aux809_INTEGER);
constraint bool2int(aux811_BOOL,aux811_INTEGER);
constraint bool2int(aux813_BOOL,aux813_INTEGER);
constraint bool2int(aux815_BOOL,aux815_INTEGER);
constraint bool2int(aux819_BOOL,aux819_INTEGER);
constraint bool2int(aux820_BOOL,aux820_INTEGER);
constraint bool2int(aux822_BOOL,aux822_INTEGER);
constraint bool2int(aux823_BOOL,aux823_INTEGER);
constraint bool2int(aux825_BOOL,aux825_INTEGER);
constraint bool2int(aux827_BOOL,aux827_INTEGER);
constraint bool2int(aux829_BOOL,aux829_INTEGER);
constraint bool2int(aux833_BOOL,aux833_INTEGER);
constraint bool2int(aux834_BOOL,aux834_INTEGER);
constraint bool2int(aux836_BOOL,aux836_INTEGER);
constraint bool2int(aux837_BOOL,aux837_INTEGER);
constraint bool2int(aux839_BOOL,aux839_INTEGER);
constraint bool2int(aux841_BOOL,aux841_INTEGER);
constraint bool2int(aux843_BOOL,aux843_INTEGER);
constraint bool2int(aux847_BOOL,aux847_INTEGER);
constraint bool2int(aux848_BOOL,aux848_INTEGER);
constraint bool2int(aux850_BOOL,aux850_INTEGER);
constraint bool2int(aux851_BOOL,aux851_INTEGER);
constraint bool2int(aux853_BOOL,aux853_INTEGER);
constraint bool2int(aux855_BOOL,aux855_INTEGER);
constraint bool2int(aux857_BOOL,aux857_INTEGER);
constraint bool2int(aux861_BOOL,aux861_INTEGER);
constraint bool2int(aux862_BOOL,aux862_INTEGER);
constraint bool2int(aux864_BOOL,aux864_INTEGER);
constraint bool2int(aux865_BOOL,aux865_INTEGER);
constraint bool2int(aux867_BOOL,aux867_INTEGER);
constraint bool2int(aux869_BOOL,aux869_INTEGER);
constraint bool2int(aux871_BOOL,aux871_INTEGER);
constraint bool2int(aux875_BOOL,aux875_INTEGER);
constraint bool2int(aux876_BOOL,aux876_INTEGER);
constraint bool2int(aux878_BOOL,aux878_INTEGER);
constraint bool2int(aux879_BOOL,aux879_INTEGER);
constraint bool2int(aux881_BOOL,aux881_INTEGER);
constraint bool2int(aux883_BOOL,aux883_INTEGER);
constraint bool2int(aux885_BOOL,aux885_INTEGER);
constraint bool2int(aux889_BOOL,aux889_INTEGER);
constraint bool2int(aux890_BOOL,aux890_INTEGER);
constraint bool2int(aux892_BOOL,aux892_INTEGER);
constraint bool2int(aux893_BOOL,aux893_INTEGER);
constraint bool2int(aux895_BOOL,aux895_INTEGER);
constraint bool2int(aux897_BOOL,aux897_INTEGER);
constraint bool2int(aux899_BOOL,aux899_INTEGER);
constraint bool2int(aux903_BOOL,aux903_INTEGER);
constraint bool2int(aux904_BOOL,aux904_INTEGER);
constraint bool2int(aux906_BOOL,aux906_INTEGER);
constraint bool2int(aux907_BOOL,aux907_INTEGER);
constraint bool2int(aux909_BOOL,aux909_INTEGER);
constraint bool2int(aux911_BOOL,aux911_INTEGER);
constraint bool2int(aux913_BOOL,aux913_INTEGER);
constraint bool2int(aux917_BOOL,aux917_INTEGER);
constraint bool2int(aux918_BOOL,aux918_INTEGER);
constraint bool2int(aux920_BOOL,aux920_INTEGER);
constraint bool2int(aux921_BOOL,aux921_INTEGER);
constraint bool2int(aux923_BOOL,aux923_INTEGER);
constraint bool2int(aux925_BOOL,aux925_INTEGER);
constraint bool2int(aux927_BOOL,aux927_INTEGER);
constraint bool2int(aux931_BOOL,aux931_INTEGER);
constraint bool2int(aux932_BOOL,aux932_INTEGER);
constraint bool2int(aux934_BOOL,aux934_INTEGER);
constraint bool2int(aux935_BOOL,aux935_INTEGER);
constraint bool2int(aux937_BOOL,aux937_INTEGER);
constraint bool2int(aux939_BOOL,aux939_INTEGER);
constraint bool2int(aux941_BOOL,aux941_INTEGER);
constraint bool2int(aux945_BOOL,aux945_INTEGER);
constraint bool2int(aux946_BOOL,aux946_INTEGER);
constraint bool2int(aux948_BOOL,aux948_INTEGER);
constraint bool2int(aux949_BOOL,aux949_INTEGER);
constraint bool2int(aux951_BOOL,aux951_INTEGER);
constraint int_le_reif(plan2d_00028_00006, plan2d_00001_00001,aux557_BOOL);
constraint int_ne_reif(plan2d_00028_00004,plan2d_00028_00006,aux558_BOOL);
constraint int_lin_eq_reif([1,2],[aux338_INTEGER,aux558_INTEGER],0,aux559_BOOL);
constraint int_ne_reif(plan2d_00001_00001,plan2d_00028_00004,aux560_BOOL);
constraint int_ne_reif(plan2d_00001_00001,plan2d_00028_00005,aux561_BOOL);
constraint int_lin_eq_reif([2,1],[aux269_INTEGER,aux561_INTEGER],0,aux562_BOOL);
constraint int_ne_reif(plan2d_00001_00002,plan2d_00028_00005,aux563_BOOL);
constraint int_lin_eq_reif([1,1],[aux264_INTEGER,aux80_INTEGER],0,aux564_BOOL);
constraint int_lin_eq_reif([1,1,1],[aux263_INTEGER,aux264_INTEGER,aux80_INTEGER],0,false);
constraint int_ne_reif(plan2d_00001_00004,plan2d_00028_00006,aux566_BOOL);
constraint int_ne_reif(plan2d_00001_00001,plan2d_00001_00003,aux567_BOOL);
constraint int_ne_reif(plan2d_00001_00001,plan2d_00001_00004,aux568_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux273_INTEGER,aux567_INTEGER,aux568_INTEGER,aux64_INTEGER],0,false);
constraint int_ne_reif(plan2d_00001_00002,plan2d_00001_00004,aux570_BOOL);
constraint int_ne_reif(plan2d_00001_00002,plan2d_00001_00005,aux571_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux276_INTEGER,aux570_INTEGER,aux571_INTEGER,aux65_INTEGER],0,false);
constraint int_ne_reif(plan2d_00001_00003,plan2d_00001_00005,aux573_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux275_INTEGER,aux573_INTEGER,aux66_INTEGER],0,false);
constraint int_ne_reif(plan2d_00001_00004,plan2d_00001_00006,aux575_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux343_INTEGER,aux575_INTEGER,aux67_INTEGER],0,false);
constraint int_ne_reif(plan2d_00001_00005,plan2d_00002_00001,aux577_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux274_INTEGER,aux344_INTEGER,aux577_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux341_INTEGER,aux62_INTEGER,aux63_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux341_INTEGER,aux342_INTEGER,aux62_INTEGER,aux63_INTEGER],0,false);
constraint int_ne_reif(plan2d_00002_00001,plan2d_00002_00003,aux581_BOOL);
constraint int_ne_reif(plan2d_00002_00001,plan2d_00002_00004,aux582_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux155_INTEGER,aux170_INTEGER,aux581_INTEGER,aux582_INTEGER],0,false);
constraint int_ne_reif(plan2d_00002_00002,plan2d_00002_00004,aux584_BOOL);
constraint int_ne_reif(plan2d_00002_00002,plan2d_00002_00005,aux585_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux154_INTEGER,aux168_INTEGER,aux584_INTEGER,aux585_INTEGER],0,false);
constraint int_ne_reif(plan2d_00002_00003,plan2d_00002_00005,aux587_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux156_INTEGER,aux169_INTEGER,aux587_INTEGER],0,false);
constraint int_ne_reif(plan2d_00002_00004,plan2d_00002_00006,aux589_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux119_INTEGER,aux167_INTEGER,aux589_INTEGER],0,false);
constraint int_ne_reif(plan2d_00002_00005,plan2d_00003_00001,aux591_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux120_INTEGER,aux153_INTEGER,aux591_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux122_INTEGER,aux351_INTEGER,aux352_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux121_INTEGER,aux122_INTEGER,aux351_INTEGER,aux352_INTEGER],0,false);
constraint int_ne_reif(plan2d_00003_00001,plan2d_00003_00003,aux595_BOOL);
constraint int_ne_reif(plan2d_00003_00001,plan2d_00003_00004,aux596_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux284_INTEGER,aux595_INTEGER,aux596_INTEGER,aux88_INTEGER],0,false);
constraint int_ne_reif(plan2d_00003_00002,plan2d_00003_00004,aux598_BOOL);
constraint int_ne_reif(plan2d_00003_00002,plan2d_00003_00005,aux599_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux283_INTEGER,aux598_INTEGER,aux599_INTEGER,aux86_INTEGER],0,false);
constraint int_ne_reif(plan2d_00003_00003,plan2d_00003_00005,aux601_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux282_INTEGER,aux601_INTEGER,aux85_INTEGER],0,false);
constraint int_ne_reif(plan2d_00003_00004,plan2d_00003_00006,aux603_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux603_INTEGER,aux23_INTEGER,aux87_INTEGER],0,false);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00003_00005,aux605_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux281_INTEGER,aux605_INTEGER,aux24_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux219_INTEGER,aux220_INTEGER,aux25_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux219_INTEGER,aux220_INTEGER,aux22_INTEGER,aux25_INTEGER],0,false);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00004_00003,aux609_BOOL);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00004_00004,aux610_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux224_INTEGER,aux362_INTEGER,aux609_INTEGER,aux610_INTEGER],0,false);
constraint int_ne_reif(plan2d_00004_00002,plan2d_00004_00004,aux612_BOOL);
constraint int_ne_reif(plan2d_00004_00002,plan2d_00004_00005,aux613_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux225_INTEGER,aux361_INTEGER,aux612_INTEGER,aux613_INTEGER],0,false);
constraint int_ne_reif(plan2d_00004_00003,plan2d_00004_00005,aux615_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux226_INTEGER,aux359_INTEGER,aux615_INTEGER],0,false);
constraint int_ne_reif(plan2d_00004_00004,plan2d_00004_00006,aux617_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux223_INTEGER,aux293_INTEGER,aux617_INTEGER],0,false);
constraint int_ne_reif(plan2d_00004_00005,plan2d_00005_00001,aux619_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux294_INTEGER,aux360_INTEGER,aux619_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux175_INTEGER,aux176_INTEGER,aux295_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux175_INTEGER,aux176_INTEGER,aux295_INTEGER,aux296_INTEGER],0,false);
constraint int_ne_reif(plan2d_00005_00001,plan2d_00005_00003,aux623_BOOL);
constraint int_ne_reif(plan2d_00005_00001,plan2d_00005_00004,aux624_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux325_INTEGER,aux623_INTEGER,aux624_INTEGER,aux12_INTEGER],0,false);
constraint int_ne_reif(plan2d_00005_00002,plan2d_00005_00004,aux626_BOOL);
constraint int_ne_reif(plan2d_00005_00002,plan2d_00005_00005,aux627_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux328_INTEGER,aux626_INTEGER,aux627_INTEGER,aux15_INTEGER],0,false);
constraint int_ne_reif(plan2d_00005_00003,plan2d_00005_00005,aux629_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux327_INTEGER,aux629_INTEGER,aux14_INTEGER],0,false);
constraint int_ne_reif(plan2d_00005_00004,plan2d_00005_00006,aux631_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux299_INTEGER,aux631_INTEGER,aux13_INTEGER],0,false);
constraint int_ne_reif(plan2d_00005_00005,plan2d_00006_00001,aux633_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux300_INTEGER,aux326_INTEGER,aux633_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux297_INTEGER,aux16_INTEGER,aux17_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux297_INTEGER,aux298_INTEGER,aux16_INTEGER,aux17_INTEGER],0,false);
constraint int_ne_reif(plan2d_00006_00001,plan2d_00006_00003,aux637_BOOL);
constraint int_ne_reif(plan2d_00006_00001,plan2d_00006_00004,aux638_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux129_INTEGER,aux201_INTEGER,aux637_INTEGER,aux638_INTEGER],0,false);
constraint int_ne_reif(plan2d_00006_00002,plan2d_00006_00004,aux640_BOOL);
constraint int_ne_reif(plan2d_00006_00002,plan2d_00006_00005,aux641_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux128_INTEGER,aux202_INTEGER,aux640_INTEGER,aux641_INTEGER],0,false);
constraint int_ne_reif(plan2d_00006_00003,plan2d_00006_00005,aux643_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux130_INTEGER,aux199_INTEGER,aux643_INTEGER],0,false);
constraint int_ne_reif(plan2d_00006_00004,plan2d_00006_00006,aux645_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux200_INTEGER,aux309_INTEGER,aux645_INTEGER],0,false);
constraint int_ne_reif(plan2d_00006_00005,plan2d_00007_00001,aux647_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux127_INTEGER,aux310_INTEGER,aux647_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux231_INTEGER,aux232_INTEGER,aux312_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux231_INTEGER,aux232_INTEGER,aux311_INTEGER,aux312_INTEGER],0,false);
constraint int_ne_reif(plan2d_00007_00001,plan2d_00007_00003,aux651_BOOL);
constraint int_ne_reif(plan2d_00007_00001,plan2d_00007_00004,aux652_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux126_INTEGER,aux651_INTEGER,aux652_INTEGER,aux4_INTEGER],0,false);
constraint int_ne_reif(plan2d_00007_00002,plan2d_00007_00004,aux654_BOOL);
constraint int_ne_reif(plan2d_00007_00002,plan2d_00007_00005,aux655_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux125_INTEGER,aux654_INTEGER,aux655_INTEGER,aux5_INTEGER],0,false);
constraint int_ne_reif(plan2d_00007_00003,plan2d_00007_00005,aux657_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux124_INTEGER,aux657_INTEGER,aux6_INTEGER],0,false);
constraint int_ne_reif(plan2d_00007_00004,plan2d_00007_00006,aux659_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux131_INTEGER,aux659_INTEGER,aux7_INTEGER],0,false);
constraint int_ne_reif(plan2d_00007_00005,plan2d_00008_00001,aux661_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux123_INTEGER,aux132_INTEGER,aux661_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux134_INTEGER,aux20_INTEGER,aux21_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux133_INTEGER,aux134_INTEGER,aux20_INTEGER,aux21_INTEGER],0,false);
constraint int_ne_reif(plan2d_00008_00001,plan2d_00008_00003,aux665_BOOL);
constraint int_ne_reif(plan2d_00008_00001,plan2d_00008_00004,aux666_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux218_INTEGER,aux306_INTEGER,aux665_INTEGER,aux666_INTEGER],0,false);
constraint int_ne_reif(plan2d_00008_00002,plan2d_00008_00004,aux668_BOOL);
constraint int_ne_reif(plan2d_00008_00002,plan2d_00008_00005,aux669_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux217_INTEGER,aux305_INTEGER,aux668_INTEGER,aux669_INTEGER],0,false);
constraint int_ne_reif(plan2d_00008_00003,plan2d_00008_00005,aux671_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux216_INTEGER,aux307_INTEGER,aux671_INTEGER],0,false);
constraint int_ne_reif(plan2d_00008_00004,plan2d_00008_00006,aux673_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux215_INTEGER,aux673_INTEGER,aux77_INTEGER],0,false);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00008_00005,aux675_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux308_INTEGER,aux675_INTEGER,aux79_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux50_INTEGER,aux51_INTEGER,aux78_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux50_INTEGER,aux51_INTEGER,aux76_INTEGER,aux78_INTEGER],0,false);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00009_00003,aux679_BOOL);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00009_00004,aux680_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux385_INTEGER,aux679_INTEGER,aux680_INTEGER,aux97_INTEGER],0,false);
constraint int_ne_reif(plan2d_00009_00002,plan2d_00009_00004,aux682_BOOL);
constraint int_ne_reif(plan2d_00009_00002,plan2d_00009_00005,aux683_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux388_INTEGER,aux682_INTEGER,aux683_INTEGER,aux98_INTEGER],0,false);
constraint int_ne_reif(plan2d_00009_00003,plan2d_00009_00005,aux685_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux387_INTEGER,aux685_INTEGER,aux99_INTEGER],0,false);
constraint int_ne_reif(plan2d_00009_00004,plan2d_00009_00006,aux687_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux100_INTEGER,aux372_INTEGER,aux687_INTEGER],0,false);
constraint int_ne_reif(plan2d_00009_00005,plan2d_00010_00001,aux689_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux371_INTEGER,aux386_INTEGER,aux689_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux181_INTEGER,aux182_INTEGER,aux373_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux181_INTEGER,aux182_INTEGER,aux373_INTEGER,aux374_INTEGER],0,false);
constraint int_ne_reif(plan2d_00010_00001,plan2d_00010_00003,aux693_BOOL);
constraint int_ne_reif(plan2d_00010_00001,plan2d_00010_00004,aux694_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux260_INTEGER,aux693_INTEGER,aux694_INTEGER,aux30_INTEGER],0,false);
constraint int_ne_reif(plan2d_00010_00002,plan2d_00010_00004,aux696_BOOL);
constraint int_ne_reif(plan2d_00010_00002,plan2d_00010_00005,aux697_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux261_INTEGER,aux696_INTEGER,aux697_INTEGER,aux31_INTEGER],0,false);
constraint int_ne_reif(plan2d_00010_00003,plan2d_00010_00005,aux699_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux262_INTEGER,aux699_INTEGER,aux32_INTEGER],0,false);
constraint int_ne_reif(plan2d_00010_00004,plan2d_00010_00006,aux701_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux166_INTEGER,aux259_INTEGER,aux701_INTEGER],0,false);
constraint int_ne_reif(plan2d_00010_00005,plan2d_00011_00001,aux703_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux165_INTEGER,aux703_INTEGER,aux33_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux164_INTEGER,aux177_INTEGER,aux178_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux163_INTEGER,aux164_INTEGER,aux177_INTEGER,aux178_INTEGER],0,false);
constraint int_ne_reif(plan2d_00011_00001,plan2d_00011_00003,aux707_BOOL);
constraint int_ne_reif(plan2d_00011_00001,plan2d_00011_00004,aux708_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux707_INTEGER,aux708_INTEGER,aux42_INTEGER,aux68_INTEGER],0,false);
constraint int_ne_reif(plan2d_00011_00002,plan2d_00011_00004,aux710_BOOL);
constraint int_ne_reif(plan2d_00011_00002,plan2d_00011_00005,aux711_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux710_INTEGER,aux711_INTEGER,aux45_INTEGER,aux69_INTEGER],0,false);
constraint int_ne_reif(plan2d_00011_00003,plan2d_00011_00005,aux713_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux713_INTEGER,aux44_INTEGER,aux71_INTEGER],0,false);
constraint int_ne_reif(plan2d_00011_00004,plan2d_00011_00006,aux715_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux194_INTEGER,aux715_INTEGER,aux43_INTEGER],0,false);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00011_00005,aux717_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux196_INTEGER,aux717_INTEGER,aux70_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux195_INTEGER,aux197_INTEGER,aux198_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux193_INTEGER,aux195_INTEGER,aux197_INTEGER,aux198_INTEGER],0,false);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00012_00003,aux721_BOOL);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00012_00004,aux722_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux206_INTEGER,aux382_INTEGER,aux721_INTEGER,aux722_INTEGER],0,false);
constraint int_ne_reif(plan2d_00012_00002,plan2d_00012_00004,aux724_BOOL);
constraint int_ne_reif(plan2d_00012_00002,plan2d_00012_00005,aux725_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux203_INTEGER,aux379_INTEGER,aux724_INTEGER,aux725_INTEGER],0,false);
constraint int_ne_reif(plan2d_00012_00003,plan2d_00012_00005,aux727_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux204_INTEGER,aux380_INTEGER,aux727_INTEGER],0,false);
constraint int_ne_reif(plan2d_00012_00004,plan2d_00012_00006,aux729_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux205_INTEGER,aux324_INTEGER,aux729_INTEGER],0,false);
constraint int_ne_reif(plan2d_00012_00005,plan2d_00013_00001,aux731_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux323_INTEGER,aux381_INTEGER,aux731_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux321_INTEGER,aux383_INTEGER,aux384_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux321_INTEGER,aux322_INTEGER,aux383_INTEGER,aux384_INTEGER],0,false);
constraint int_ne_reif(plan2d_00013_00001,plan2d_00013_00003,aux735_BOOL);
constraint int_ne_reif(plan2d_00013_00001,plan2d_00013_00004,aux736_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux107_INTEGER,aux735_INTEGER,aux736_INTEGER,aux2_INTEGER],0,false);
constraint int_ne_reif(plan2d_00013_00002,plan2d_00013_00004,aux738_BOOL);
constraint int_ne_reif(plan2d_00013_00002,plan2d_00013_00005,aux739_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux108_INTEGER,aux738_INTEGER,aux739_INTEGER,aux3_INTEGER],0,false);
constraint int_ne_reif(plan2d_00013_00003,plan2d_00013_00005,aux741_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux106_INTEGER,aux741_INTEGER,aux0_INTEGER],0,false);
constraint int_ne_reif(plan2d_00013_00004,plan2d_00013_00006,aux743_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux313_INTEGER,aux743_INTEGER,aux1_INTEGER],0,false);
constraint int_ne_reif(plan2d_00013_00005,plan2d_00014_00001,aux745_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux105_INTEGER,aux316_INTEGER,aux745_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux109_INTEGER,aux110_INTEGER,aux315_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux109_INTEGER,aux110_INTEGER,aux314_INTEGER,aux315_INTEGER],0,false);
constraint int_ne_reif(plan2d_00014_00001,plan2d_00014_00003,aux749_BOOL);
constraint int_ne_reif(plan2d_00014_00001,plan2d_00014_00004,aux750_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux148_INTEGER,aux214_INTEGER,aux749_INTEGER,aux750_INTEGER],0,false);
constraint int_ne_reif(plan2d_00014_00002,plan2d_00014_00004,aux752_BOOL);
constraint int_ne_reif(plan2d_00014_00002,plan2d_00014_00005,aux753_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux149_INTEGER,aux213_INTEGER,aux752_INTEGER,aux753_INTEGER],0,false);
constraint int_ne_reif(plan2d_00014_00003,plan2d_00014_00005,aux755_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux150_INTEGER,aux212_INTEGER,aux755_INTEGER],0,false);
constraint int_ne_reif(plan2d_00014_00004,plan2d_00014_00006,aux757_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux211_INTEGER,aux280_INTEGER,aux757_INTEGER],0,false);
constraint int_ne_reif(plan2d_00014_00005,plan2d_00015_00001,aux759_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux147_INTEGER,aux279_INTEGER,aux759_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux187_INTEGER,aux188_INTEGER,aux278_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux187_INTEGER,aux188_INTEGER,aux277_INTEGER,aux278_INTEGER],0,false);
constraint int_ne_reif(plan2d_00015_00001,plan2d_00015_00003,aux763_BOOL);
constraint int_ne_reif(plan2d_00015_00001,plan2d_00015_00004,aux764_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux763_INTEGER,aux764_INTEGER,aux36_INTEGER,aux60_INTEGER],0,false);
constraint int_ne_reif(plan2d_00015_00002,plan2d_00015_00004,aux766_BOOL);
constraint int_ne_reif(plan2d_00015_00002,plan2d_00015_00005,aux767_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux766_INTEGER,aux767_INTEGER,aux37_INTEGER,aux61_INTEGER],0,false);
constraint int_ne_reif(plan2d_00015_00003,plan2d_00015_00005,aux769_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux769_INTEGER,aux34_INTEGER,aux59_INTEGER],0,false);
constraint int_ne_reif(plan2d_00015_00004,plan2d_00015_00006,aux771_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux115_INTEGER,aux771_INTEGER,aux35_INTEGER],0,false);
constraint int_ne_reif(plan2d_00015_00005,plan2d_00016_00001,aux773_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux118_INTEGER,aux773_INTEGER,aux58_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux103_INTEGER,aux104_INTEGER,aux116_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux103_INTEGER,aux104_INTEGER,aux116_INTEGER,aux117_INTEGER],0,false);
constraint int_ne_reif(plan2d_00016_00001,plan2d_00016_00003,aux777_BOOL);
constraint int_ne_reif(plan2d_00016_00001,plan2d_00016_00004,aux778_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux236_INTEGER,aux333_INTEGER,aux777_INTEGER,aux778_INTEGER],0,false);
constraint int_ne_reif(plan2d_00016_00002,plan2d_00016_00004,aux780_BOOL);
constraint int_ne_reif(plan2d_00016_00002,plan2d_00016_00005,aux781_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux235_INTEGER,aux334_INTEGER,aux780_INTEGER,aux781_INTEGER],0,false);
constraint int_ne_reif(plan2d_00016_00003,plan2d_00016_00005,aux783_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux238_INTEGER,aux335_INTEGER,aux783_INTEGER],0,false);
constraint int_ne_reif(plan2d_00016_00004,plan2d_00016_00006,aux785_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux237_INTEGER,aux287_INTEGER,aux785_INTEGER],0,false);
constraint int_ne_reif(plan2d_00017_00001,plan2d_00016_00005,aux787_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux285_INTEGER,aux336_INTEGER,aux787_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux286_INTEGER,aux353_INTEGER,aux354_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux286_INTEGER,aux288_INTEGER,aux353_INTEGER,aux354_INTEGER],0,false);
constraint int_ne_reif(plan2d_00017_00001,plan2d_00017_00003,aux791_BOOL);
constraint int_ne_reif(plan2d_00017_00001,plan2d_00017_00004,aux792_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux369_INTEGER,aux791_INTEGER,aux792_INTEGER,aux72_INTEGER],0,false);
constraint int_ne_reif(plan2d_00017_00002,plan2d_00017_00004,aux794_BOOL);
constraint int_ne_reif(plan2d_00017_00002,plan2d_00017_00005,aux795_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux370_INTEGER,aux794_INTEGER,aux795_INTEGER,aux73_INTEGER],0,false);
constraint int_ne_reif(plan2d_00017_00003,plan2d_00017_00005,aux797_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux368_INTEGER,aux797_INTEGER,aux74_INTEGER],0,false);
constraint int_ne_reif(plan2d_00017_00004,plan2d_00017_00006,aux799_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux301_INTEGER,aux799_INTEGER,aux75_INTEGER],0,false);
constraint int_ne_reif(plan2d_00017_00005,plan2d_00018_00001,aux801_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux304_INTEGER,aux367_INTEGER,aux801_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux303_INTEGER,aux89_INTEGER,aux90_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux302_INTEGER,aux303_INTEGER,aux89_INTEGER,aux90_INTEGER],0,false);
constraint int_ne_reif(plan2d_00018_00001,plan2d_00018_00003,aux805_BOOL);
constraint int_ne_reif(plan2d_00018_00001,plan2d_00018_00004,aux806_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux355_INTEGER,aux805_INTEGER,aux806_INTEGER,aux91_INTEGER],0,false);
constraint int_ne_reif(plan2d_00018_00002,plan2d_00018_00004,aux808_BOOL);
constraint int_ne_reif(plan2d_00018_00002,plan2d_00018_00005,aux809_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux358_INTEGER,aux808_INTEGER,aux809_INTEGER,aux92_INTEGER],0,false);
constraint int_ne_reif(plan2d_00018_00003,plan2d_00018_00005,aux811_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux357_INTEGER,aux811_INTEGER,aux93_INTEGER],0,false);
constraint int_ne_reif(plan2d_00018_00004,plan2d_00018_00006,aux813_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux330_INTEGER,aux356_INTEGER,aux813_INTEGER],0,false);
constraint int_ne_reif(plan2d_00018_00005,plan2d_00019_00001,aux815_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux329_INTEGER,aux815_INTEGER,aux94_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux179_INTEGER,aux180_INTEGER,aux332_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux179_INTEGER,aux180_INTEGER,aux331_INTEGER,aux332_INTEGER],0,false);
constraint int_ne_reif(plan2d_00019_00001,plan2d_00019_00003,aux819_BOOL);
constraint int_ne_reif(plan2d_00019_00001,plan2d_00019_00004,aux820_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux189_INTEGER,aux819_INTEGER,aux820_INTEGER,aux81_INTEGER],0,false);
constraint int_ne_reif(plan2d_00019_00002,plan2d_00019_00004,aux822_BOOL);
constraint int_ne_reif(plan2d_00019_00002,plan2d_00019_00005,aux823_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux190_INTEGER,aux822_INTEGER,aux823_INTEGER,aux83_INTEGER],0,false);
constraint int_ne_reif(plan2d_00019_00003,plan2d_00019_00005,aux825_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux192_INTEGER,aux825_INTEGER,aux82_INTEGER],0,false);
constraint int_ne_reif(plan2d_00019_00004,plan2d_00019_00006,aux827_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux243_INTEGER,aux827_INTEGER,aux84_INTEGER],0,false);
constraint int_ne_reif(plan2d_00020_00001,plan2d_00019_00005,aux829_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux191_INTEGER,aux245_INTEGER,aux829_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux161_INTEGER,aux162_INTEGER,aux244_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux161_INTEGER,aux162_INTEGER,aux244_INTEGER,aux246_INTEGER],0,false);
constraint int_ne_reif(plan2d_00020_00001,plan2d_00020_00003,aux833_BOOL);
constraint int_ne_reif(plan2d_00020_00001,plan2d_00020_00004,aux834_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux210_INTEGER,aux250_INTEGER,aux833_INTEGER,aux834_INTEGER],0,false);
constraint int_ne_reif(plan2d_00020_00002,plan2d_00020_00004,aux836_BOOL);
constraint int_ne_reif(plan2d_00020_00002,plan2d_00020_00005,aux837_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux209_INTEGER,aux249_INTEGER,aux836_INTEGER,aux837_INTEGER],0,false);
constraint int_ne_reif(plan2d_00020_00003,plan2d_00020_00005,aux839_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux208_INTEGER,aux248_INTEGER,aux839_INTEGER],0,false);
constraint int_ne_reif(plan2d_00020_00004,plan2d_00020_00006,aux841_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux207_INTEGER,aux348_INTEGER,aux841_INTEGER],0,false);
constraint int_ne_reif(plan2d_00020_00005,plan2d_00021_00001,aux843_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux247_INTEGER,aux345_INTEGER,aux843_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux233_INTEGER,aux234_INTEGER,aux347_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux233_INTEGER,aux234_INTEGER,aux346_INTEGER,aux347_INTEGER],0,false);
constraint int_ne_reif(plan2d_00021_00001,plan2d_00021_00003,aux847_BOOL);
constraint int_ne_reif(plan2d_00021_00001,plan2d_00021_00004,aux848_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux227_INTEGER,aux847_INTEGER,aux848_INTEGER,aux40_INTEGER],0,false);
constraint int_ne_reif(plan2d_00021_00002,plan2d_00021_00004,aux850_BOOL);
constraint int_ne_reif(plan2d_00021_00002,plan2d_00021_00005,aux851_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux229_INTEGER,aux850_INTEGER,aux851_INTEGER,aux41_INTEGER],0,false);
constraint int_ne_reif(plan2d_00021_00003,plan2d_00021_00005,aux853_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux228_INTEGER,aux853_INTEGER,aux38_INTEGER],0,false);
constraint int_ne_reif(plan2d_00021_00004,plan2d_00021_00006,aux855_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux855_INTEGER,aux39_INTEGER,aux54_INTEGER],0,false);
constraint int_ne_reif(plan2d_00021_00005,plan2d_00022_00001,aux857_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux230_INTEGER,aux857_INTEGER,aux55_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux18_INTEGER,aux19_INTEGER,aux57_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux18_INTEGER,aux19_INTEGER,aux56_INTEGER,aux57_INTEGER],0,false);
constraint int_ne_reif(plan2d_00022_00001,plan2d_00022_00003,aux861_BOOL);
constraint int_ne_reif(plan2d_00022_00001,plan2d_00022_00004,aux862_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux184_INTEGER,aux240_INTEGER,aux861_INTEGER,aux862_INTEGER],0,false);
constraint int_ne_reif(plan2d_00022_00002,plan2d_00022_00004,aux864_BOOL);
constraint int_ne_reif(plan2d_00022_00002,plan2d_00022_00005,aux865_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux183_INTEGER,aux239_INTEGER,aux864_INTEGER,aux865_INTEGER],0,false);
constraint int_ne_reif(plan2d_00022_00003,plan2d_00022_00005,aux867_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux186_INTEGER,aux242_INTEGER,aux867_INTEGER],0,false);
constraint int_ne_reif(plan2d_00022_00004,plan2d_00022_00006,aux869_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux138_INTEGER,aux241_INTEGER,aux869_INTEGER],0,false);
constraint int_ne_reif(plan2d_00022_00005,plan2d_00023_00001,aux871_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux135_INTEGER,aux185_INTEGER,aux871_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux136_INTEGER,aux221_INTEGER,aux222_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux136_INTEGER,aux137_INTEGER,aux221_INTEGER,aux222_INTEGER],0,false);
constraint int_ne_reif(plan2d_00023_00001,plan2d_00023_00003,aux875_BOOL);
constraint int_ne_reif(plan2d_00023_00001,plan2d_00023_00004,aux876_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux292_INTEGER,aux875_INTEGER,aux876_INTEGER,aux28_INTEGER],0,false);
constraint int_ne_reif(plan2d_00023_00002,plan2d_00023_00004,aux878_BOOL);
constraint int_ne_reif(plan2d_00023_00002,plan2d_00023_00005,aux879_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux290_INTEGER,aux878_INTEGER,aux879_INTEGER,aux29_INTEGER],0,false);
constraint int_ne_reif(plan2d_00023_00003,plan2d_00023_00005,aux881_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux289_INTEGER,aux881_INTEGER,aux26_INTEGER],0,false);
constraint int_ne_reif(plan2d_00023_00004,plan2d_00023_00006,aux883_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux171_INTEGER,aux883_INTEGER,aux27_INTEGER],0,false);
constraint int_ne_reif(plan2d_00023_00005,plan2d_00024_00001,aux885_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux172_INTEGER,aux291_INTEGER,aux885_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux173_INTEGER,aux95_INTEGER,aux96_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux173_INTEGER,aux174_INTEGER,aux95_INTEGER,aux96_INTEGER],0,false);
constraint int_ne_reif(plan2d_00024_00001,plan2d_00024_00003,aux889_BOOL);
constraint int_ne_reif(plan2d_00024_00001,plan2d_00024_00004,aux890_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux251_INTEGER,aux366_INTEGER,aux889_INTEGER,aux890_INTEGER],0,false);
constraint int_ne_reif(plan2d_00024_00002,plan2d_00024_00004,aux892_BOOL);
constraint int_ne_reif(plan2d_00024_00002,plan2d_00024_00005,aux893_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux253_INTEGER,aux365_INTEGER,aux892_INTEGER,aux893_INTEGER],0,false);
constraint int_ne_reif(plan2d_00024_00003,plan2d_00024_00005,aux895_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux254_INTEGER,aux364_INTEGER,aux895_INTEGER],0,false);
constraint int_ne_reif(plan2d_00024_00004,plan2d_00024_00006,aux897_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux252_INTEGER,aux897_INTEGER,aux8_INTEGER],0,false);
constraint int_ne_reif(plan2d_00025_00001,plan2d_00024_00005,aux899_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux363_INTEGER,aux899_INTEGER,aux11_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux151_INTEGER,aux152_INTEGER,aux10_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux151_INTEGER,aux152_INTEGER,aux9_INTEGER,aux10_INTEGER],0,false);
constraint int_ne_reif(plan2d_00025_00001,plan2d_00025_00003,aux903_BOOL);
constraint int_ne_reif(plan2d_00025_00001,plan2d_00025_00004,aux904_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux266_INTEGER,aux903_INTEGER,aux904_INTEGER,aux46_INTEGER],0,false);
constraint int_ne_reif(plan2d_00025_00002,plan2d_00025_00004,aux906_BOOL);
constraint int_ne_reif(plan2d_00025_00002,plan2d_00025_00005,aux907_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux268_INTEGER,aux906_INTEGER,aux907_INTEGER,aux48_INTEGER],0,false);
constraint int_ne_reif(plan2d_00025_00003,plan2d_00025_00005,aux909_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux267_INTEGER,aux909_INTEGER,aux47_INTEGER],0,false);
constraint int_ne_reif(plan2d_00025_00004,plan2d_00025_00006,aux911_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux375_INTEGER,aux911_INTEGER,aux49_INTEGER],0,false);
constraint int_ne_reif(plan2d_00025_00005,plan2d_00026_00001,aux913_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux265_INTEGER,aux376_INTEGER,aux913_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux101_INTEGER,aux102_INTEGER,aux378_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux101_INTEGER,aux102_INTEGER,aux377_INTEGER,aux378_INTEGER],0,false);
constraint int_ne_reif(plan2d_00026_00001,plan2d_00026_00003,aux917_BOOL);
constraint int_ne_reif(plan2d_00026_00001,plan2d_00026_00004,aux918_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux143_INTEGER,aux258_INTEGER,aux917_INTEGER,aux918_INTEGER],0,false);
constraint int_ne_reif(plan2d_00026_00002,plan2d_00026_00004,aux920_BOOL);
constraint int_ne_reif(plan2d_00026_00002,plan2d_00026_00005,aux921_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux144_INTEGER,aux257_INTEGER,aux920_INTEGER,aux921_INTEGER],0,false);
constraint int_ne_reif(plan2d_00026_00003,plan2d_00026_00005,aux923_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux145_INTEGER,aux256_INTEGER,aux923_INTEGER],0,false);
constraint int_ne_reif(plan2d_00026_00004,plan2d_00026_00006,aux925_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux146_INTEGER,aux317_INTEGER,aux925_INTEGER],0,false);
constraint int_ne_reif(plan2d_00026_00005,plan2d_00027_00001,aux927_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux255_INTEGER,aux318_INTEGER,aux927_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux319_INTEGER,aux349_INTEGER,aux350_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux319_INTEGER,aux320_INTEGER,aux349_INTEGER,aux350_INTEGER],0,false);
constraint int_ne_reif(plan2d_00027_00001,plan2d_00027_00003,aux931_BOOL);
constraint int_ne_reif(plan2d_00027_00001,plan2d_00027_00004,aux932_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux142_INTEGER,aux157_INTEGER,aux931_INTEGER,aux932_INTEGER],0,false);
constraint int_ne_reif(plan2d_00027_00002,plan2d_00027_00004,aux934_BOOL);
constraint int_ne_reif(plan2d_00027_00002,plan2d_00027_00005,aux935_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux141_INTEGER,aux159_INTEGER,aux934_INTEGER,aux935_INTEGER],0,false);
constraint int_ne_reif(plan2d_00027_00003,plan2d_00027_00005,aux937_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux140_INTEGER,aux158_INTEGER,aux937_INTEGER],0,false);
constraint int_ne_reif(plan2d_00027_00004,plan2d_00027_00006,aux939_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux111_INTEGER,aux139_INTEGER,aux939_INTEGER],0,false);
constraint int_ne_reif(plan2d_00027_00005,plan2d_00028_00001,aux941_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux112_INTEGER,aux160_INTEGER,aux941_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux113_INTEGER,aux52_INTEGER,aux53_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux113_INTEGER,aux114_INTEGER,aux52_INTEGER,aux53_INTEGER],0,false);
constraint int_ne_reif(plan2d_00028_00001,plan2d_00028_00003,aux945_BOOL);
constraint int_ne_reif(plan2d_00028_00001,plan2d_00028_00004,aux946_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux272_INTEGER,aux339_INTEGER,aux945_INTEGER,aux946_INTEGER],0,false);
constraint int_ne_reif(plan2d_00028_00002,plan2d_00028_00004,aux948_BOOL);
constraint int_ne_reif(plan2d_00028_00002,plan2d_00028_00005,aux949_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux271_INTEGER,aux340_INTEGER,aux948_INTEGER,aux949_INTEGER],0,false);
constraint int_ne_reif(plan2d_00028_00003,plan2d_00028_00005,aux951_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux270_INTEGER,aux337_INTEGER,aux951_INTEGER],0,false);
constraint int_le_reif(plan2d_00001_00002, plan2d_00001_00003,aux953_BOOL);
constraint int_le_reif(plan2d_00001_00003, plan2d_00001_00004,aux954_BOOL);
constraint int_le_reif(plan2d_00001_00004, plan2d_00001_00005,aux955_BOOL);
constraint int_le_reif(plan2d_00001_00005, plan2d_00001_00006,aux956_BOOL);
constraint int_le_reif(plan2d_00001_00006, plan2d_00002_00001,aux957_BOOL);
constraint int_le_reif(plan2d_00002_00001, plan2d_00002_00002,aux958_BOOL);
constraint int_le_reif(plan2d_00002_00002, plan2d_00002_00003,aux959_BOOL);
constraint int_le_reif(plan2d_00002_00003, plan2d_00002_00004,aux960_BOOL);
constraint int_le_reif(plan2d_00002_00004, plan2d_00002_00005,aux961_BOOL);
constraint int_le_reif(plan2d_00002_00005, plan2d_00002_00006,aux962_BOOL);
constraint int_le_reif(plan2d_00002_00006, plan2d_00003_00001,aux963_BOOL);
constraint int_le_reif(plan2d_00003_00001, plan2d_00003_00002,aux964_BOOL);
constraint int_le_reif(plan2d_00003_00002, plan2d_00003_00003,aux965_BOOL);
constraint int_le_reif(plan2d_00003_00003, plan2d_00003_00004,aux966_BOOL);
constraint int_le_reif(plan2d_00003_00004, plan2d_00003_00005,aux967_BOOL);
constraint int_le_reif(plan2d_00003_00005, plan2d_00003_00006,aux968_BOOL);
constraint int_le_reif(plan2d_00003_00006, plan2d_00004_00001,aux969_BOOL);
constraint int_le_reif(plan2d_00004_00001, plan2d_00004_00002,aux970_BOOL);
constraint int_le_reif(plan2d_00004_00002, plan2d_00004_00003,aux971_BOOL);
constraint int_le_reif(plan2d_00004_00003, plan2d_00004_00004,aux972_BOOL);
constraint int_le_reif(plan2d_00004_00004, plan2d_00004_00005,aux973_BOOL);
constraint int_le_reif(plan2d_00004_00005, plan2d_00004_00006,aux974_BOOL);
constraint int_le_reif(plan2d_00004_00006, plan2d_00005_00001,aux975_BOOL);
constraint int_le_reif(plan2d_00005_00001, plan2d_00005_00002,aux976_BOOL);
constraint int_le_reif(plan2d_00005_00002, plan2d_00005_00003,aux977_BOOL);
constraint int_le_reif(plan2d_00005_00003, plan2d_00005_00004,aux978_BOOL);
constraint int_le_reif(plan2d_00005_00004, plan2d_00005_00005,aux979_BOOL);
constraint int_le_reif(plan2d_00005_00005, plan2d_00005_00006,aux980_BOOL);
constraint int_le_reif(plan2d_00005_00006, plan2d_00006_00001,aux981_BOOL);
constraint int_le_reif(plan2d_00006_00001, plan2d_00006_00002,aux982_BOOL);
constraint int_le_reif(plan2d_00006_00002, plan2d_00006_00003,aux983_BOOL);
constraint int_le_reif(plan2d_00006_00003, plan2d_00006_00004,aux984_BOOL);
constraint int_le_reif(plan2d_00006_00004, plan2d_00006_00005,aux985_BOOL);
constraint int_le_reif(plan2d_00006_00005, plan2d_00006_00006,aux986_BOOL);
constraint int_le_reif(plan2d_00006_00006, plan2d_00007_00001,aux987_BOOL);
constraint int_le_reif(plan2d_00007_00001, plan2d_00007_00002,aux988_BOOL);
constraint int_le_reif(plan2d_00007_00002, plan2d_00007_00003,aux989_BOOL);
constraint int_le_reif(plan2d_00007_00003, plan2d_00007_00004,aux990_BOOL);
constraint int_le_reif(plan2d_00007_00004, plan2d_00007_00005,aux991_BOOL);
constraint int_le_reif(plan2d_00007_00005, plan2d_00007_00006,aux992_BOOL);
constraint int_le_reif(plan2d_00007_00006, plan2d_00008_00001,aux993_BOOL);
constraint int_le_reif(plan2d_00008_00001, plan2d_00008_00002,aux994_BOOL);
constraint int_le_reif(plan2d_00008_00002, plan2d_00008_00003,aux995_BOOL);
constraint int_le_reif(plan2d_00008_00003, plan2d_00008_00004,aux996_BOOL);
constraint int_le_reif(plan2d_00008_00004, plan2d_00008_00005,aux997_BOOL);
constraint int_le_reif(plan2d_00008_00005, plan2d_00008_00006,aux998_BOOL);
constraint int_le_reif(plan2d_00008_00006, plan2d_00009_00001,aux999_BOOL);
constraint int_le_reif(plan2d_00009_00001, plan2d_00009_00002,aux1000_BOOL);
constraint int_le_reif(plan2d_00009_00002, plan2d_00009_00003,aux1001_BOOL);
constraint int_le_reif(plan2d_00009_00003, plan2d_00009_00004,aux1002_BOOL);
constraint int_le_reif(plan2d_00009_00004, plan2d_00009_00005,aux1003_BOOL);
constraint int_le_reif(plan2d_00009_00005, plan2d_00009_00006,aux1004_BOOL);
constraint int_le_reif(plan2d_00009_00006, plan2d_00010_00001,aux1005_BOOL);
constraint int_le_reif(plan2d_00010_00001, plan2d_00010_00002,aux1006_BOOL);
constraint int_le_reif(plan2d_00010_00002, plan2d_00010_00003,aux1007_BOOL);
constraint int_le_reif(plan2d_00010_00003, plan2d_00010_00004,aux1008_BOOL);
constraint int_le_reif(plan2d_00010_00004, plan2d_00010_00005,aux1009_BOOL);
constraint int_le_reif(plan2d_00010_00005, plan2d_00010_00006,aux1010_BOOL);
constraint int_le_reif(plan2d_00010_00006, plan2d_00011_00001,aux1011_BOOL);
constraint int_le_reif(plan2d_00011_00001, plan2d_00011_00002,aux1012_BOOL);
constraint int_le_reif(plan2d_00011_00002, plan2d_00011_00003,aux1013_BOOL);
constraint int_le_reif(plan2d_00011_00003, plan2d_00011_00004,aux1014_BOOL);
constraint int_le_reif(plan2d_00011_00004, plan2d_00011_00005,aux1015_BOOL);
constraint int_le_reif(plan2d_00011_00005, plan2d_00011_00006,aux1016_BOOL);
constraint int_le_reif(plan2d_00011_00006, plan2d_00012_00001,aux1017_BOOL);
constraint int_le_reif(plan2d_00012_00001, plan2d_00012_00002,aux1018_BOOL);
constraint int_le_reif(plan2d_00012_00002, plan2d_00012_00003,aux1019_BOOL);
constraint int_le_reif(plan2d_00012_00003, plan2d_00012_00004,aux1020_BOOL);
constraint int_le_reif(plan2d_00012_00004, plan2d_00012_00005,aux1021_BOOL);
constraint int_le_reif(plan2d_00012_00005, plan2d_00012_00006,aux1022_BOOL);
constraint int_le_reif(plan2d_00012_00006, plan2d_00013_00001,aux1023_BOOL);
constraint int_le_reif(plan2d_00013_00001, plan2d_00013_00002,aux1024_BOOL);
constraint int_le_reif(plan2d_00013_00002, plan2d_00013_00003,aux1025_BOOL);
constraint int_le_reif(plan2d_00013_00003, plan2d_00013_00004,aux1026_BOOL);
constraint int_le_reif(plan2d_00013_00004, plan2d_00013_00005,aux1027_BOOL);
constraint int_le_reif(plan2d_00013_00005, plan2d_00013_00006,aux1028_BOOL);
constraint int_le_reif(plan2d_00013_00006, plan2d_00014_00001,aux1029_BOOL);
constraint int_le_reif(plan2d_00014_00001, plan2d_00014_00002,aux1030_BOOL);
constraint int_le_reif(plan2d_00014_00002, plan2d_00014_00003,aux1031_BOOL);
constraint int_le_reif(plan2d_00014_00003, plan2d_00014_00004,aux1032_BOOL);
constraint int_le_reif(plan2d_00014_00004, plan2d_00014_00005,aux1033_BOOL);
constraint int_le_reif(plan2d_00014_00005, plan2d_00014_00006,aux1034_BOOL);
constraint int_le_reif(plan2d_00014_00006, plan2d_00015_00001,aux1035_BOOL);
constraint int_le_reif(plan2d_00015_00001, plan2d_00015_00002,aux1036_BOOL);
constraint int_le_reif(plan2d_00015_00002, plan2d_00015_00003,aux1037_BOOL);
constraint int_le_reif(plan2d_00015_00003, plan2d_00015_00004,aux1038_BOOL);
constraint int_le_reif(plan2d_00015_00004, plan2d_00015_00005,aux1039_BOOL);
constraint int_le_reif(plan2d_00015_00005, plan2d_00015_00006,aux1040_BOOL);
constraint int_le_reif(plan2d_00015_00006, plan2d_00016_00001,aux1041_BOOL);
constraint int_le_reif(plan2d_00016_00001, plan2d_00016_00002,aux1042_BOOL);
constraint int_le_reif(plan2d_00016_00002, plan2d_00016_00003,aux1043_BOOL);
constraint int_le_reif(plan2d_00016_00003, plan2d_00016_00004,aux1044_BOOL);
constraint int_le_reif(plan2d_00016_00004, plan2d_00016_00005,aux1045_BOOL);
constraint int_le_reif(plan2d_00016_00005, plan2d_00016_00006,aux1046_BOOL);
constraint int_le_reif(plan2d_00016_00006, plan2d_00017_00001,aux1047_BOOL);
constraint int_le_reif(plan2d_00017_00001, plan2d_00017_00002,aux1048_BOOL);
constraint int_le_reif(plan2d_00017_00002, plan2d_00017_00003,aux1049_BOOL);
constraint int_le_reif(plan2d_00017_00003, plan2d_00017_00004,aux1050_BOOL);
constraint int_le_reif(plan2d_00017_00004, plan2d_00017_00005,aux1051_BOOL);
constraint int_le_reif(plan2d_00017_00005, plan2d_00017_00006,aux1052_BOOL);
constraint int_le_reif(plan2d_00017_00006, plan2d_00018_00001,aux1053_BOOL);
constraint int_le_reif(plan2d_00018_00001, plan2d_00018_00002,aux1054_BOOL);
constraint int_le_reif(plan2d_00018_00002, plan2d_00018_00003,aux1055_BOOL);
constraint int_le_reif(plan2d_00018_00003, plan2d_00018_00004,aux1056_BOOL);
constraint int_le_reif(plan2d_00018_00004, plan2d_00018_00005,aux1057_BOOL);
constraint int_le_reif(plan2d_00018_00005, plan2d_00018_00006,aux1058_BOOL);
constraint int_le_reif(plan2d_00018_00006, plan2d_00019_00001,aux1059_BOOL);
constraint int_le_reif(plan2d_00019_00001, plan2d_00019_00002,aux1060_BOOL);
constraint int_le_reif(plan2d_00019_00002, plan2d_00019_00003,aux1061_BOOL);
constraint int_le_reif(plan2d_00019_00003, plan2d_00019_00004,aux1062_BOOL);
constraint int_le_reif(plan2d_00019_00004, plan2d_00019_00005,aux1063_BOOL);
constraint int_le_reif(plan2d_00019_00005, plan2d_00019_00006,aux1064_BOOL);
constraint int_le_reif(plan2d_00019_00006, plan2d_00020_00001,aux1065_BOOL);
constraint int_le_reif(plan2d_00020_00001, plan2d_00020_00002,aux1066_BOOL);
constraint int_le_reif(plan2d_00020_00002, plan2d_00020_00003,aux1067_BOOL);
constraint int_le_reif(plan2d_00020_00003, plan2d_00020_00004,aux1068_BOOL);
constraint int_le_reif(plan2d_00020_00004, plan2d_00020_00005,aux1069_BOOL);
constraint int_le_reif(plan2d_00020_00005, plan2d_00020_00006,aux1070_BOOL);
constraint int_le_reif(plan2d_00020_00006, plan2d_00021_00001,aux1071_BOOL);
constraint int_le_reif(plan2d_00021_00001, plan2d_00021_00002,aux1072_BOOL);
constraint int_le_reif(plan2d_00021_00002, plan2d_00021_00003,aux1073_BOOL);
constraint int_le_reif(plan2d_00021_00003, plan2d_00021_00004,aux1074_BOOL);
constraint int_le_reif(plan2d_00021_00004, plan2d_00021_00005,aux1075_BOOL);
constraint int_le_reif(plan2d_00021_00005, plan2d_00021_00006,aux1076_BOOL);
constraint int_le_reif(plan2d_00021_00006, plan2d_00022_00001,aux1077_BOOL);
constraint int_le_reif(plan2d_00022_00001, plan2d_00022_00002,aux1078_BOOL);
constraint int_le_reif(plan2d_00022_00002, plan2d_00022_00003,aux1079_BOOL);
constraint int_le_reif(plan2d_00022_00003, plan2d_00022_00004,aux1080_BOOL);
constraint int_le_reif(plan2d_00022_00004, plan2d_00022_00005,aux1081_BOOL);
constraint int_le_reif(plan2d_00022_00005, plan2d_00022_00006,aux1082_BOOL);
constraint int_le_reif(plan2d_00022_00006, plan2d_00023_00001,aux1083_BOOL);
constraint int_le_reif(plan2d_00023_00001, plan2d_00023_00002,aux1084_BOOL);
constraint int_le_reif(plan2d_00023_00002, plan2d_00023_00003,aux1085_BOOL);
constraint int_le_reif(plan2d_00023_00003, plan2d_00023_00004,aux1086_BOOL);
constraint int_le_reif(plan2d_00023_00004, plan2d_00023_00005,aux1087_BOOL);
constraint int_le_reif(plan2d_00023_00005, plan2d_00023_00006,aux1088_BOOL);
constraint int_le_reif(plan2d_00023_00006, plan2d_00024_00001,aux1089_BOOL);
constraint int_le_reif(plan2d_00024_00001, plan2d_00024_00002,aux1090_BOOL);
constraint int_le_reif(plan2d_00024_00002, plan2d_00024_00003,aux1091_BOOL);
constraint int_le_reif(plan2d_00024_00003, plan2d_00024_00004,aux1092_BOOL);
constraint int_le_reif(plan2d_00024_00004, plan2d_00024_00005,aux1093_BOOL);
constraint int_le_reif(plan2d_00024_00005, plan2d_00024_00006,aux1094_BOOL);
constraint int_le_reif(plan2d_00024_00006, plan2d_00025_00001,aux1095_BOOL);
constraint int_le_reif(plan2d_00025_00001, plan2d_00025_00002,aux1096_BOOL);
constraint int_le_reif(plan2d_00025_00002, plan2d_00025_00003,aux1097_BOOL);
constraint int_le_reif(plan2d_00025_00003, plan2d_00025_00004,aux1098_BOOL);
constraint int_le_reif(plan2d_00025_00004, plan2d_00025_00005,aux1099_BOOL);
constraint int_le_reif(plan2d_00025_00005, plan2d_00025_00006,aux1100_BOOL);
constraint int_le_reif(plan2d_00025_00006, plan2d_00026_00001,aux1101_BOOL);
constraint int_le_reif(plan2d_00026_00001, plan2d_00026_00002,aux1102_BOOL);
constraint int_le_reif(plan2d_00026_00002, plan2d_00026_00003,aux1103_BOOL);
constraint int_le_reif(plan2d_00026_00003, plan2d_00026_00004,aux1104_BOOL);
constraint int_le_reif(plan2d_00026_00004, plan2d_00026_00005,aux1105_BOOL);
constraint int_le_reif(plan2d_00026_00005, plan2d_00026_00006,aux1106_BOOL);
constraint int_le_reif(plan2d_00026_00006, plan2d_00027_00001,aux1107_BOOL);
constraint int_le_reif(plan2d_00027_00001, plan2d_00027_00002,aux1108_BOOL);
constraint int_le_reif(plan2d_00027_00002, plan2d_00027_00003,aux1109_BOOL);
constraint int_le_reif(plan2d_00027_00003, plan2d_00027_00004,aux1110_BOOL);
constraint int_le_reif(plan2d_00027_00004, plan2d_00027_00005,aux1111_BOOL);
constraint int_le_reif(plan2d_00027_00005, plan2d_00027_00006,aux1112_BOOL);
constraint int_le_reif(plan2d_00027_00006, plan2d_00028_00001,aux1113_BOOL);
constraint int_le_reif(plan2d_00028_00001, plan2d_00028_00002,aux1114_BOOL);
constraint int_le_reif(plan2d_00028_00002, plan2d_00028_00003,aux1115_BOOL);
constraint int_le_reif(plan2d_00028_00003, plan2d_00028_00004,aux1116_BOOL);
constraint int_le_reif(plan2d_00028_00004, plan2d_00028_00005,aux1117_BOOL);
constraint int_le_reif(plan2d_00028_00005, plan2d_00028_00006,aux1118_BOOL);
constraint int_ne_reif(plan2d_00013_00003,plan2d_00013_00004,aux0_BOOL);
constraint int_ne_reif(plan2d_00013_00004,plan2d_00013_00005,aux1_BOOL);
constraint int_ne_reif(plan2d_00013_00001,plan2d_00013_00002,aux2_BOOL);
constraint int_ne_reif(plan2d_00013_00002,plan2d_00013_00003,aux3_BOOL);
constraint int_ne_reif(plan2d_00007_00001,plan2d_00007_00002,aux4_BOOL);
constraint int_ne_reif(plan2d_00007_00002,plan2d_00007_00003,aux5_BOOL);
constraint int_ne_reif(plan2d_00007_00003,plan2d_00007_00004,aux6_BOOL);
constraint int_ne_reif(plan2d_00007_00004,plan2d_00007_00005,aux7_BOOL);
constraint int_ne_reif(plan2d_00025_00001,plan2d_00024_00004,aux8_BOOL);
constraint int_ne_reif(plan2d_00025_00004,plan2d_00024_00006,aux9_BOOL);
constraint int_ne_reif(plan2d_00025_00002,plan2d_00024_00006,aux10_BOOL);
constraint int_ne_reif(plan2d_00025_00002,plan2d_00024_00005,aux11_BOOL);
constraint int_ne_reif(plan2d_00005_00001,plan2d_00005_00002,aux12_BOOL);
constraint int_ne_reif(plan2d_00005_00004,plan2d_00005_00005,aux13_BOOL);
constraint int_ne_reif(plan2d_00005_00003,plan2d_00005_00004,aux14_BOOL);
constraint int_ne_reif(plan2d_00005_00002,plan2d_00005_00003,aux15_BOOL);
constraint int_ne_reif(plan2d_00005_00006,plan2d_00006_00003,aux16_BOOL);
constraint int_ne_reif(plan2d_00005_00006,plan2d_00006_00001,aux17_BOOL);
constraint int_ne_reif(plan2d_00021_00006,plan2d_00022_00001,aux18_BOOL);
constraint int_ne_reif(plan2d_00021_00006,plan2d_00022_00003,aux19_BOOL);
constraint int_ne_reif(plan2d_00007_00006,plan2d_00008_00003,aux20_BOOL);
constraint int_ne_reif(plan2d_00007_00006,plan2d_00008_00001,aux21_BOOL);
constraint int_ne_reif(plan2d_00004_00004,plan2d_00003_00006,aux22_BOOL);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00003_00004,aux23_BOOL);
constraint int_ne_reif(plan2d_00004_00002,plan2d_00003_00005,aux24_BOOL);
constraint int_ne_reif(plan2d_00004_00002,plan2d_00003_00006,aux25_BOOL);
constraint int_ne_reif(plan2d_00023_00003,plan2d_00023_00004,aux26_BOOL);
constraint int_ne_reif(plan2d_00023_00004,plan2d_00023_00005,aux27_BOOL);
constraint int_ne_reif(plan2d_00023_00001,plan2d_00023_00002,aux28_BOOL);
constraint int_ne_reif(plan2d_00023_00002,plan2d_00023_00003,aux29_BOOL);
constraint int_ne_reif(plan2d_00010_00001,plan2d_00010_00005,aux30_BOOL);
constraint int_ne_reif(plan2d_00010_00002,plan2d_00010_00006,aux31_BOOL);
constraint int_ne_reif(plan2d_00010_00003,plan2d_00010_00006,aux32_BOOL);
constraint int_ne_reif(plan2d_00010_00005,plan2d_00010_00006,aux33_BOOL);
constraint int_ne_reif(plan2d_00015_00003,plan2d_00015_00004,aux34_BOOL);
constraint int_ne_reif(plan2d_00015_00004,plan2d_00015_00005,aux35_BOOL);
constraint int_ne_reif(plan2d_00015_00001,plan2d_00015_00002,aux36_BOOL);
constraint int_ne_reif(plan2d_00015_00002,plan2d_00015_00003,aux37_BOOL);
constraint int_ne_reif(plan2d_00021_00003,plan2d_00021_00004,aux38_BOOL);
constraint int_ne_reif(plan2d_00021_00004,plan2d_00021_00005,aux39_BOOL);
constraint int_ne_reif(plan2d_00021_00001,plan2d_00021_00002,aux40_BOOL);
constraint int_ne_reif(plan2d_00021_00002,plan2d_00021_00003,aux41_BOOL);
constraint int_ne_reif(plan2d_00011_00001,plan2d_00011_00002,aux42_BOOL);
constraint int_ne_reif(plan2d_00011_00004,plan2d_00011_00005,aux43_BOOL);
constraint int_ne_reif(plan2d_00011_00003,plan2d_00011_00004,aux44_BOOL);
constraint int_ne_reif(plan2d_00011_00002,plan2d_00011_00003,aux45_BOOL);
constraint int_ne_reif(plan2d_00025_00001,plan2d_00025_00002,aux46_BOOL);
constraint int_ne_reif(plan2d_00025_00003,plan2d_00025_00004,aux47_BOOL);
constraint int_ne_reif(plan2d_00025_00002,plan2d_00025_00003,aux48_BOOL);
constraint int_ne_reif(plan2d_00025_00004,plan2d_00025_00005,aux49_BOOL);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00008_00006,aux50_BOOL);
constraint int_ne_reif(plan2d_00009_00003,plan2d_00008_00006,aux51_BOOL);
constraint int_ne_reif(plan2d_00027_00006,plan2d_00028_00003,aux52_BOOL);
constraint int_ne_reif(plan2d_00027_00006,plan2d_00028_00001,aux53_BOOL);
constraint int_ne_reif(plan2d_00021_00004,plan2d_00022_00001,aux54_BOOL);
constraint int_ne_reif(plan2d_00021_00005,plan2d_00022_00002,aux55_BOOL);
constraint int_ne_reif(plan2d_00021_00006,plan2d_00022_00004,aux56_BOOL);
constraint int_ne_reif(plan2d_00021_00006,plan2d_00022_00002,aux57_BOOL);
constraint int_ne_reif(plan2d_00015_00005,plan2d_00015_00006,aux58_BOOL);
constraint int_ne_reif(plan2d_00015_00003,plan2d_00015_00006,aux59_BOOL);
constraint int_ne_reif(plan2d_00015_00001,plan2d_00015_00005,aux60_BOOL);
constraint int_ne_reif(plan2d_00015_00002,plan2d_00015_00006,aux61_BOOL);
constraint int_ne_reif(plan2d_00001_00006,plan2d_00002_00003,aux62_BOOL);
constraint int_ne_reif(plan2d_00001_00006,plan2d_00002_00001,aux63_BOOL);
constraint int_ne_reif(plan2d_00001_00001,plan2d_00001_00002,aux64_BOOL);
constraint int_ne_reif(plan2d_00001_00002,plan2d_00001_00003,aux65_BOOL);
constraint int_ne_reif(plan2d_00001_00003,plan2d_00001_00004,aux66_BOOL);
constraint int_ne_reif(plan2d_00001_00004,plan2d_00001_00005,aux67_BOOL);
constraint int_ne_reif(plan2d_00011_00001,plan2d_00011_00005,aux68_BOOL);
constraint int_ne_reif(plan2d_00011_00002,plan2d_00011_00006,aux69_BOOL);
constraint int_ne_reif(plan2d_00011_00005,plan2d_00011_00006,aux70_BOOL);
constraint int_ne_reif(plan2d_00011_00003,plan2d_00011_00006,aux71_BOOL);
constraint int_ne_reif(plan2d_00017_00001,plan2d_00017_00002,aux72_BOOL);
constraint int_ne_reif(plan2d_00017_00002,plan2d_00017_00003,aux73_BOOL);
constraint int_ne_reif(plan2d_00017_00003,plan2d_00017_00004,aux74_BOOL);
constraint int_ne_reif(plan2d_00017_00004,plan2d_00017_00005,aux75_BOOL);
constraint int_ne_reif(plan2d_00009_00004,plan2d_00008_00006,aux76_BOOL);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00008_00004,aux77_BOOL);
constraint int_ne_reif(plan2d_00009_00002,plan2d_00008_00006,aux78_BOOL);
constraint int_ne_reif(plan2d_00009_00002,plan2d_00008_00005,aux79_BOOL);
constraint int_ne_reif(plan2d_00001_00001,plan2d_00028_00006,aux80_BOOL);
constraint int_ne_reif(plan2d_00019_00001,plan2d_00019_00002,aux81_BOOL);
constraint int_ne_reif(plan2d_00019_00003,plan2d_00019_00004,aux82_BOOL);
constraint int_ne_reif(plan2d_00019_00002,plan2d_00019_00003,aux83_BOOL);
constraint int_ne_reif(plan2d_00019_00004,plan2d_00019_00005,aux84_BOOL);
constraint int_ne_reif(plan2d_00003_00003,plan2d_00003_00004,aux85_BOOL);
constraint int_ne_reif(plan2d_00003_00002,plan2d_00003_00003,aux86_BOOL);
constraint int_ne_reif(plan2d_00003_00004,plan2d_00003_00005,aux87_BOOL);
constraint int_ne_reif(plan2d_00003_00001,plan2d_00003_00002,aux88_BOOL);
constraint int_ne_reif(plan2d_00017_00006,plan2d_00018_00003,aux89_BOOL);
constraint int_ne_reif(plan2d_00017_00006,plan2d_00018_00001,aux90_BOOL);
constraint int_ne_reif(plan2d_00018_00001,plan2d_00018_00005,aux91_BOOL);
constraint int_ne_reif(plan2d_00018_00002,plan2d_00018_00006,aux92_BOOL);
constraint int_ne_reif(plan2d_00018_00003,plan2d_00018_00006,aux93_BOOL);
constraint int_ne_reif(plan2d_00018_00005,plan2d_00018_00006,aux94_BOOL);
constraint int_ne_reif(plan2d_00023_00006,plan2d_00024_00003,aux95_BOOL);
constraint int_ne_reif(plan2d_00023_00006,plan2d_00024_00001,aux96_BOOL);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00009_00002,aux97_BOOL);
constraint int_ne_reif(plan2d_00009_00002,plan2d_00009_00003,aux98_BOOL);
constraint int_ne_reif(plan2d_00009_00003,plan2d_00009_00004,aux99_BOOL);
constraint int_ne_reif(plan2d_00009_00004,plan2d_00009_00005,aux100_BOOL);
constraint int_ne_reif(plan2d_00025_00006,plan2d_00026_00001,aux101_BOOL);
constraint int_ne_reif(plan2d_00025_00006,plan2d_00026_00003,aux102_BOOL);
constraint int_ne_reif(plan2d_00015_00006,plan2d_00016_00001,aux103_BOOL);
constraint int_ne_reif(plan2d_00015_00006,plan2d_00016_00003,aux104_BOOL);
constraint int_ne_reif(plan2d_00013_00005,plan2d_00013_00006,aux105_BOOL);
constraint int_ne_reif(plan2d_00013_00003,plan2d_00013_00006,aux106_BOOL);
constraint int_ne_reif(plan2d_00013_00001,plan2d_00013_00005,aux107_BOOL);
constraint int_ne_reif(plan2d_00013_00002,plan2d_00013_00006,aux108_BOOL);
constraint int_ne_reif(plan2d_00013_00006,plan2d_00014_00003,aux109_BOOL);
constraint int_ne_reif(plan2d_00013_00006,plan2d_00014_00001,aux110_BOOL);
constraint int_ne_reif(plan2d_00027_00004,plan2d_00028_00001,aux111_BOOL);
constraint int_ne_reif(plan2d_00027_00005,plan2d_00028_00002,aux112_BOOL);
constraint int_ne_reif(plan2d_00027_00006,plan2d_00028_00002,aux113_BOOL);
constraint int_ne_reif(plan2d_00027_00006,plan2d_00028_00004,aux114_BOOL);
constraint int_ne_reif(plan2d_00015_00004,plan2d_00016_00001,aux115_BOOL);
constraint int_ne_reif(plan2d_00015_00006,plan2d_00016_00002,aux116_BOOL);
constraint int_ne_reif(plan2d_00015_00006,plan2d_00016_00004,aux117_BOOL);
constraint int_ne_reif(plan2d_00015_00005,plan2d_00016_00002,aux118_BOOL);
constraint int_ne_reif(plan2d_00002_00004,plan2d_00003_00001,aux119_BOOL);
constraint int_ne_reif(plan2d_00002_00005,plan2d_00003_00002,aux120_BOOL);
constraint int_ne_reif(plan2d_00002_00006,plan2d_00003_00004,aux121_BOOL);
constraint int_ne_reif(plan2d_00002_00006,plan2d_00003_00002,aux122_BOOL);
constraint int_ne_reif(plan2d_00007_00005,plan2d_00007_00006,aux123_BOOL);
constraint int_ne_reif(plan2d_00007_00003,plan2d_00007_00006,aux124_BOOL);
constraint int_ne_reif(plan2d_00007_00002,plan2d_00007_00006,aux125_BOOL);
constraint int_ne_reif(plan2d_00007_00001,plan2d_00007_00005,aux126_BOOL);
constraint int_ne_reif(plan2d_00006_00005,plan2d_00006_00006,aux127_BOOL);
constraint int_ne_reif(plan2d_00006_00002,plan2d_00006_00006,aux128_BOOL);
constraint int_ne_reif(plan2d_00006_00001,plan2d_00006_00005,aux129_BOOL);
constraint int_ne_reif(plan2d_00006_00003,plan2d_00006_00006,aux130_BOOL);
constraint int_ne_reif(plan2d_00007_00004,plan2d_00008_00001,aux131_BOOL);
constraint int_ne_reif(plan2d_00007_00005,plan2d_00008_00002,aux132_BOOL);
constraint int_ne_reif(plan2d_00007_00006,plan2d_00008_00004,aux133_BOOL);
constraint int_ne_reif(plan2d_00007_00006,plan2d_00008_00002,aux134_BOOL);
constraint int_ne_reif(plan2d_00022_00005,plan2d_00023_00002,aux135_BOOL);
constraint int_ne_reif(plan2d_00022_00006,plan2d_00023_00002,aux136_BOOL);
constraint int_ne_reif(plan2d_00022_00006,plan2d_00023_00004,aux137_BOOL);
constraint int_ne_reif(plan2d_00022_00004,plan2d_00023_00001,aux138_BOOL);
constraint int_ne_reif(plan2d_00027_00004,plan2d_00027_00005,aux139_BOOL);
constraint int_ne_reif(plan2d_00027_00003,plan2d_00027_00004,aux140_BOOL);
constraint int_ne_reif(plan2d_00027_00002,plan2d_00027_00003,aux141_BOOL);
constraint int_ne_reif(plan2d_00027_00001,plan2d_00027_00002,aux142_BOOL);
constraint int_ne_reif(plan2d_00026_00001,plan2d_00026_00002,aux143_BOOL);
constraint int_ne_reif(plan2d_00026_00002,plan2d_00026_00003,aux144_BOOL);
constraint int_ne_reif(plan2d_00026_00003,plan2d_00026_00004,aux145_BOOL);
constraint int_ne_reif(plan2d_00026_00004,plan2d_00026_00005,aux146_BOOL);
constraint int_ne_reif(plan2d_00014_00005,plan2d_00014_00006,aux147_BOOL);
constraint int_ne_reif(plan2d_00014_00001,plan2d_00014_00005,aux148_BOOL);
constraint int_ne_reif(plan2d_00014_00002,plan2d_00014_00006,aux149_BOOL);
constraint int_ne_reif(plan2d_00014_00003,plan2d_00014_00006,aux150_BOOL);
constraint int_ne_reif(plan2d_00025_00003,plan2d_00024_00006,aux151_BOOL);
constraint int_ne_reif(plan2d_00025_00001,plan2d_00024_00006,aux152_BOOL);
constraint int_ne_reif(plan2d_00002_00005,plan2d_00002_00006,aux153_BOOL);
constraint int_ne_reif(plan2d_00002_00002,plan2d_00002_00006,aux154_BOOL);
constraint int_ne_reif(plan2d_00002_00001,plan2d_00002_00005,aux155_BOOL);
constraint int_ne_reif(plan2d_00002_00003,plan2d_00002_00006,aux156_BOOL);
constraint int_ne_reif(plan2d_00027_00001,plan2d_00027_00005,aux157_BOOL);
constraint int_ne_reif(plan2d_00027_00003,plan2d_00027_00006,aux158_BOOL);
constraint int_ne_reif(plan2d_00027_00002,plan2d_00027_00006,aux159_BOOL);
constraint int_ne_reif(plan2d_00027_00005,plan2d_00027_00006,aux160_BOOL);
constraint int_ne_reif(plan2d_00020_00003,plan2d_00019_00006,aux161_BOOL);
constraint int_ne_reif(plan2d_00020_00001,plan2d_00019_00006,aux162_BOOL);
constraint int_ne_reif(plan2d_00010_00006,plan2d_00011_00004,aux163_BOOL);
constraint int_ne_reif(plan2d_00010_00006,plan2d_00011_00002,aux164_BOOL);
constraint int_ne_reif(plan2d_00010_00005,plan2d_00011_00002,aux165_BOOL);
constraint int_ne_reif(plan2d_00010_00004,plan2d_00011_00001,aux166_BOOL);
constraint int_ne_reif(plan2d_00002_00004,plan2d_00002_00005,aux167_BOOL);
constraint int_ne_reif(plan2d_00002_00002,plan2d_00002_00003,aux168_BOOL);
constraint int_ne_reif(plan2d_00002_00003,plan2d_00002_00004,aux169_BOOL);
constraint int_ne_reif(plan2d_00002_00001,plan2d_00002_00002,aux170_BOOL);
constraint int_ne_reif(plan2d_00023_00004,plan2d_00024_00001,aux171_BOOL);
constraint int_ne_reif(plan2d_00023_00005,plan2d_00024_00002,aux172_BOOL);
constraint int_ne_reif(plan2d_00023_00006,plan2d_00024_00002,aux173_BOOL);
constraint int_ne_reif(plan2d_00023_00006,plan2d_00024_00004,aux174_BOOL);
constraint int_ne_reif(plan2d_00004_00006,plan2d_00005_00001,aux175_BOOL);
constraint int_ne_reif(plan2d_00004_00006,plan2d_00005_00003,aux176_BOOL);
constraint int_ne_reif(plan2d_00010_00006,plan2d_00011_00003,aux177_BOOL);
constraint int_ne_reif(plan2d_00010_00006,plan2d_00011_00001,aux178_BOOL);
constraint int_ne_reif(plan2d_00018_00006,plan2d_00019_00003,aux179_BOOL);
constraint int_ne_reif(plan2d_00018_00006,plan2d_00019_00001,aux180_BOOL);
constraint int_ne_reif(plan2d_00009_00006,plan2d_00010_00001,aux181_BOOL);
constraint int_ne_reif(plan2d_00009_00006,plan2d_00010_00003,aux182_BOOL);
constraint int_ne_reif(plan2d_00022_00002,plan2d_00022_00006,aux183_BOOL);
constraint int_ne_reif(plan2d_00022_00001,plan2d_00022_00005,aux184_BOOL);
constraint int_ne_reif(plan2d_00022_00005,plan2d_00022_00006,aux185_BOOL);
constraint int_ne_reif(plan2d_00022_00003,plan2d_00022_00006,aux186_BOOL);
constraint int_ne_reif(plan2d_00014_00006,plan2d_00015_00001,aux187_BOOL);
constraint int_ne_reif(plan2d_00014_00006,plan2d_00015_00003,aux188_BOOL);
constraint int_ne_reif(plan2d_00019_00001,plan2d_00019_00005,aux189_BOOL);
constraint int_ne_reif(plan2d_00019_00002,plan2d_00019_00006,aux190_BOOL);
constraint int_ne_reif(plan2d_00019_00005,plan2d_00019_00006,aux191_BOOL);
constraint int_ne_reif(plan2d_00019_00003,plan2d_00019_00006,aux192_BOOL);
constraint int_ne_reif(plan2d_00012_00004,plan2d_00011_00006,aux193_BOOL);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00011_00004,aux194_BOOL);
constraint int_ne_reif(plan2d_00012_00002,plan2d_00011_00006,aux195_BOOL);
constraint int_ne_reif(plan2d_00012_00002,plan2d_00011_00005,aux196_BOOL);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00011_00006,aux197_BOOL);
constraint int_ne_reif(plan2d_00012_00003,plan2d_00011_00006,aux198_BOOL);
constraint int_ne_reif(plan2d_00006_00003,plan2d_00006_00004,aux199_BOOL);
constraint int_ne_reif(plan2d_00006_00004,plan2d_00006_00005,aux200_BOOL);
constraint int_ne_reif(plan2d_00006_00001,plan2d_00006_00002,aux201_BOOL);
constraint int_ne_reif(plan2d_00006_00002,plan2d_00006_00003,aux202_BOOL);
constraint int_ne_reif(plan2d_00012_00002,plan2d_00012_00003,aux203_BOOL);
constraint int_ne_reif(plan2d_00012_00003,plan2d_00012_00004,aux204_BOOL);
constraint int_ne_reif(plan2d_00012_00004,plan2d_00012_00005,aux205_BOOL);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00012_00002,aux206_BOOL);
constraint int_ne_reif(plan2d_00020_00004,plan2d_00020_00005,aux207_BOOL);
constraint int_ne_reif(plan2d_00020_00003,plan2d_00020_00004,aux208_BOOL);
constraint int_ne_reif(plan2d_00020_00002,plan2d_00020_00003,aux209_BOOL);
constraint int_ne_reif(plan2d_00020_00001,plan2d_00020_00002,aux210_BOOL);
constraint int_ne_reif(plan2d_00014_00004,plan2d_00014_00005,aux211_BOOL);
constraint int_ne_reif(plan2d_00014_00003,plan2d_00014_00004,aux212_BOOL);
constraint int_ne_reif(plan2d_00014_00002,plan2d_00014_00003,aux213_BOOL);
constraint int_ne_reif(plan2d_00014_00001,plan2d_00014_00002,aux214_BOOL);
constraint int_ne_reif(plan2d_00008_00004,plan2d_00008_00005,aux215_BOOL);
constraint int_ne_reif(plan2d_00008_00003,plan2d_00008_00004,aux216_BOOL);
constraint int_ne_reif(plan2d_00008_00002,plan2d_00008_00003,aux217_BOOL);
constraint int_ne_reif(plan2d_00008_00001,plan2d_00008_00002,aux218_BOOL);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00003_00006,aux219_BOOL);
constraint int_ne_reif(plan2d_00004_00003,plan2d_00003_00006,aux220_BOOL);
constraint int_ne_reif(plan2d_00022_00006,plan2d_00023_00003,aux221_BOOL);
constraint int_ne_reif(plan2d_00022_00006,plan2d_00023_00001,aux222_BOOL);
constraint int_ne_reif(plan2d_00004_00004,plan2d_00004_00005,aux223_BOOL);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00004_00002,aux224_BOOL);
constraint int_ne_reif(plan2d_00004_00002,plan2d_00004_00003,aux225_BOOL);
constraint int_ne_reif(plan2d_00004_00003,plan2d_00004_00004,aux226_BOOL);
constraint int_ne_reif(plan2d_00021_00001,plan2d_00021_00005,aux227_BOOL);
constraint int_ne_reif(plan2d_00021_00003,plan2d_00021_00006,aux228_BOOL);
constraint int_ne_reif(plan2d_00021_00002,plan2d_00021_00006,aux229_BOOL);
constraint int_ne_reif(plan2d_00021_00005,plan2d_00021_00006,aux230_BOOL);
constraint int_ne_reif(plan2d_00006_00006,plan2d_00007_00001,aux231_BOOL);
constraint int_ne_reif(plan2d_00006_00006,plan2d_00007_00003,aux232_BOOL);
constraint int_ne_reif(plan2d_00020_00006,plan2d_00021_00003,aux233_BOOL);
constraint int_ne_reif(plan2d_00020_00006,plan2d_00021_00001,aux234_BOOL);
constraint int_ne_reif(plan2d_00016_00002,plan2d_00016_00003,aux235_BOOL);
constraint int_ne_reif(plan2d_00016_00001,plan2d_00016_00002,aux236_BOOL);
constraint int_ne_reif(plan2d_00016_00004,plan2d_00016_00005,aux237_BOOL);
constraint int_ne_reif(plan2d_00016_00003,plan2d_00016_00004,aux238_BOOL);
constraint int_ne_reif(plan2d_00022_00002,plan2d_00022_00003,aux239_BOOL);
constraint int_ne_reif(plan2d_00022_00001,plan2d_00022_00002,aux240_BOOL);
constraint int_ne_reif(plan2d_00022_00004,plan2d_00022_00005,aux241_BOOL);
constraint int_ne_reif(plan2d_00022_00003,plan2d_00022_00004,aux242_BOOL);
constraint int_ne_reif(plan2d_00020_00001,plan2d_00019_00004,aux243_BOOL);
constraint int_ne_reif(plan2d_00020_00002,plan2d_00019_00006,aux244_BOOL);
constraint int_ne_reif(plan2d_00020_00002,plan2d_00019_00005,aux245_BOOL);
constraint int_ne_reif(plan2d_00020_00004,plan2d_00019_00006,aux246_BOOL);
constraint int_ne_reif(plan2d_00020_00005,plan2d_00020_00006,aux247_BOOL);
constraint int_ne_reif(plan2d_00020_00003,plan2d_00020_00006,aux248_BOOL);
constraint int_ne_reif(plan2d_00020_00002,plan2d_00020_00006,aux249_BOOL);
constraint int_ne_reif(plan2d_00020_00001,plan2d_00020_00005,aux250_BOOL);
constraint int_ne_reif(plan2d_00024_00001,plan2d_00024_00002,aux251_BOOL);
constraint int_ne_reif(plan2d_00024_00004,plan2d_00024_00005,aux252_BOOL);
constraint int_ne_reif(plan2d_00024_00002,plan2d_00024_00003,aux253_BOOL);
constraint int_ne_reif(plan2d_00024_00003,plan2d_00024_00004,aux254_BOOL);
constraint int_ne_reif(plan2d_00026_00005,plan2d_00026_00006,aux255_BOOL);
constraint int_ne_reif(plan2d_00026_00003,plan2d_00026_00006,aux256_BOOL);
constraint int_ne_reif(plan2d_00026_00002,plan2d_00026_00006,aux257_BOOL);
constraint int_ne_reif(plan2d_00026_00001,plan2d_00026_00005,aux258_BOOL);
constraint int_ne_reif(plan2d_00010_00004,plan2d_00010_00005,aux259_BOOL);
constraint int_ne_reif(plan2d_00010_00001,plan2d_00010_00002,aux260_BOOL);
constraint int_ne_reif(plan2d_00010_00002,plan2d_00010_00003,aux261_BOOL);
constraint int_ne_reif(plan2d_00010_00003,plan2d_00010_00004,aux262_BOOL);
constraint int_ne_reif(plan2d_00001_00003,plan2d_00028_00006,aux263_BOOL);
constraint int_ne_reif(plan2d_00001_00002,plan2d_00028_00006,aux264_BOOL);
constraint int_ne_reif(plan2d_00025_00005,plan2d_00025_00006,aux265_BOOL);
constraint int_ne_reif(plan2d_00025_00001,plan2d_00025_00005,aux266_BOOL);
constraint int_ne_reif(plan2d_00025_00003,plan2d_00025_00006,aux267_BOOL);
constraint int_ne_reif(plan2d_00025_00002,plan2d_00025_00006,aux268_BOOL);
constraint int_ne_reif(plan2d_00028_00005,plan2d_00028_00006,aux269_BOOL);
constraint int_ne_reif(plan2d_00028_00003,plan2d_00028_00006,aux270_BOOL);
constraint int_ne_reif(plan2d_00028_00002,plan2d_00028_00006,aux271_BOOL);
constraint int_ne_reif(plan2d_00028_00001,plan2d_00028_00005,aux272_BOOL);
constraint int_ne_reif(plan2d_00001_00001,plan2d_00001_00005,aux273_BOOL);
constraint int_ne_reif(plan2d_00001_00005,plan2d_00001_00006,aux274_BOOL);
constraint int_ne_reif(plan2d_00001_00003,plan2d_00001_00006,aux275_BOOL);
constraint int_ne_reif(plan2d_00001_00002,plan2d_00001_00006,aux276_BOOL);
constraint int_ne_reif(plan2d_00014_00006,plan2d_00015_00004,aux277_BOOL);
constraint int_ne_reif(plan2d_00014_00006,plan2d_00015_00002,aux278_BOOL);
constraint int_ne_reif(plan2d_00014_00005,plan2d_00015_00002,aux279_BOOL);
constraint int_ne_reif(plan2d_00014_00004,plan2d_00015_00001,aux280_BOOL);
constraint int_ne_reif(plan2d_00003_00005,plan2d_00003_00006,aux281_BOOL);
constraint int_ne_reif(plan2d_00003_00003,plan2d_00003_00006,aux282_BOOL);
constraint int_ne_reif(plan2d_00003_00002,plan2d_00003_00006,aux283_BOOL);
constraint int_ne_reif(plan2d_00003_00001,plan2d_00003_00005,aux284_BOOL);
constraint int_ne_reif(plan2d_00017_00002,plan2d_00016_00005,aux285_BOOL);
constraint int_ne_reif(plan2d_00017_00002,plan2d_00016_00006,aux286_BOOL);
constraint int_ne_reif(plan2d_00017_00001,plan2d_00016_00004,aux287_BOOL);
constraint int_ne_reif(plan2d_00017_00004,plan2d_00016_00006,aux288_BOOL);
constraint int_ne_reif(plan2d_00023_00003,plan2d_00023_00006,aux289_BOOL);
constraint int_ne_reif(plan2d_00023_00002,plan2d_00023_00006,aux290_BOOL);
constraint int_ne_reif(plan2d_00023_00005,plan2d_00023_00006,aux291_BOOL);
constraint int_ne_reif(plan2d_00023_00001,plan2d_00023_00005,aux292_BOOL);
constraint int_ne_reif(plan2d_00004_00004,plan2d_00005_00001,aux293_BOOL);
constraint int_ne_reif(plan2d_00004_00005,plan2d_00005_00002,aux294_BOOL);
constraint int_ne_reif(plan2d_00004_00006,plan2d_00005_00002,aux295_BOOL);
constraint int_ne_reif(plan2d_00004_00006,plan2d_00005_00004,aux296_BOOL);
constraint int_ne_reif(plan2d_00005_00006,plan2d_00006_00002,aux297_BOOL);
constraint int_ne_reif(plan2d_00005_00006,plan2d_00006_00004,aux298_BOOL);
constraint int_ne_reif(plan2d_00005_00004,plan2d_00006_00001,aux299_BOOL);
constraint int_ne_reif(plan2d_00005_00005,plan2d_00006_00002,aux300_BOOL);
constraint int_ne_reif(plan2d_00017_00004,plan2d_00018_00001,aux301_BOOL);
constraint int_ne_reif(plan2d_00017_00006,plan2d_00018_00004,aux302_BOOL);
constraint int_ne_reif(plan2d_00017_00006,plan2d_00018_00002,aux303_BOOL);
constraint int_ne_reif(plan2d_00017_00005,plan2d_00018_00002,aux304_BOOL);
constraint int_ne_reif(plan2d_00008_00002,plan2d_00008_00006,aux305_BOOL);
constraint int_ne_reif(plan2d_00008_00001,plan2d_00008_00005,aux306_BOOL);
constraint int_ne_reif(plan2d_00008_00003,plan2d_00008_00006,aux307_BOOL);
constraint int_ne_reif(plan2d_00008_00005,plan2d_00008_00006,aux308_BOOL);
constraint int_ne_reif(plan2d_00006_00004,plan2d_00007_00001,aux309_BOOL);
constraint int_ne_reif(plan2d_00006_00005,plan2d_00007_00002,aux310_BOOL);
constraint int_ne_reif(plan2d_00006_00006,plan2d_00007_00004,aux311_BOOL);
constraint int_ne_reif(plan2d_00006_00006,plan2d_00007_00002,aux312_BOOL);
constraint int_ne_reif(plan2d_00013_00004,plan2d_00014_00001,aux313_BOOL);
constraint int_ne_reif(plan2d_00013_00006,plan2d_00014_00004,aux314_BOOL);
constraint int_ne_reif(plan2d_00013_00006,plan2d_00014_00002,aux315_BOOL);
constraint int_ne_reif(plan2d_00013_00005,plan2d_00014_00002,aux316_BOOL);
constraint int_ne_reif(plan2d_00026_00004,plan2d_00027_00001,aux317_BOOL);
constraint int_ne_reif(plan2d_00026_00005,plan2d_00027_00002,aux318_BOOL);
constraint int_ne_reif(plan2d_00026_00006,plan2d_00027_00002,aux319_BOOL);
constraint int_ne_reif(plan2d_00026_00006,plan2d_00027_00004,aux320_BOOL);
constraint int_ne_reif(plan2d_00012_00006,plan2d_00013_00002,aux321_BOOL);
constraint int_ne_reif(plan2d_00012_00006,plan2d_00013_00004,aux322_BOOL);
constraint int_ne_reif(plan2d_00012_00005,plan2d_00013_00002,aux323_BOOL);
constraint int_ne_reif(plan2d_00012_00004,plan2d_00013_00001,aux324_BOOL);
constraint int_ne_reif(plan2d_00005_00001,plan2d_00005_00005,aux325_BOOL);
constraint int_ne_reif(plan2d_00005_00005,plan2d_00005_00006,aux326_BOOL);
constraint int_ne_reif(plan2d_00005_00003,plan2d_00005_00006,aux327_BOOL);
constraint int_ne_reif(plan2d_00005_00002,plan2d_00005_00006,aux328_BOOL);
constraint int_ne_reif(plan2d_00018_00005,plan2d_00019_00002,aux329_BOOL);
constraint int_ne_reif(plan2d_00018_00004,plan2d_00019_00001,aux330_BOOL);
constraint int_ne_reif(plan2d_00018_00006,plan2d_00019_00004,aux331_BOOL);
constraint int_ne_reif(plan2d_00018_00006,plan2d_00019_00002,aux332_BOOL);
constraint int_ne_reif(plan2d_00016_00001,plan2d_00016_00005,aux333_BOOL);
constraint int_ne_reif(plan2d_00016_00002,plan2d_00016_00006,aux334_BOOL);
constraint int_ne_reif(plan2d_00016_00003,plan2d_00016_00006,aux335_BOOL);
constraint int_ne_reif(plan2d_00016_00005,plan2d_00016_00006,aux336_BOOL);
constraint int_ne_reif(plan2d_00028_00003,plan2d_00028_00004,aux337_BOOL);
constraint int_ne_reif(plan2d_00028_00004,plan2d_00028_00005,aux338_BOOL);
constraint int_ne_reif(plan2d_00028_00001,plan2d_00028_00002,aux339_BOOL);
constraint int_ne_reif(plan2d_00028_00002,plan2d_00028_00003,aux340_BOOL);
constraint int_ne_reif(plan2d_00001_00006,plan2d_00002_00002,aux341_BOOL);
constraint int_ne_reif(plan2d_00001_00006,plan2d_00002_00004,aux342_BOOL);
constraint int_ne_reif(plan2d_00001_00004,plan2d_00002_00001,aux343_BOOL);
constraint int_ne_reif(plan2d_00001_00005,plan2d_00002_00002,aux344_BOOL);
constraint int_ne_reif(plan2d_00020_00005,plan2d_00021_00002,aux345_BOOL);
constraint int_ne_reif(plan2d_00020_00006,plan2d_00021_00004,aux346_BOOL);
constraint int_ne_reif(plan2d_00020_00006,plan2d_00021_00002,aux347_BOOL);
constraint int_ne_reif(plan2d_00020_00004,plan2d_00021_00001,aux348_BOOL);
constraint int_ne_reif(plan2d_00026_00006,plan2d_00027_00003,aux349_BOOL);
constraint int_ne_reif(plan2d_00026_00006,plan2d_00027_00001,aux350_BOOL);
constraint int_ne_reif(plan2d_00002_00006,plan2d_00003_00001,aux351_BOOL);
constraint int_ne_reif(plan2d_00002_00006,plan2d_00003_00003,aux352_BOOL);
constraint int_ne_reif(plan2d_00017_00001,plan2d_00016_00006,aux353_BOOL);
constraint int_ne_reif(plan2d_00017_00003,plan2d_00016_00006,aux354_BOOL);
constraint int_ne_reif(plan2d_00018_00001,plan2d_00018_00002,aux355_BOOL);
constraint int_ne_reif(plan2d_00018_00004,plan2d_00018_00005,aux356_BOOL);
constraint int_ne_reif(plan2d_00018_00003,plan2d_00018_00004,aux357_BOOL);
constraint int_ne_reif(plan2d_00018_00002,plan2d_00018_00003,aux358_BOOL);
constraint int_ne_reif(plan2d_00004_00003,plan2d_00004_00006,aux359_BOOL);
constraint int_ne_reif(plan2d_00004_00005,plan2d_00004_00006,aux360_BOOL);
constraint int_ne_reif(plan2d_00004_00002,plan2d_00004_00006,aux361_BOOL);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00004_00005,aux362_BOOL);
constraint int_ne_reif(plan2d_00024_00005,plan2d_00024_00006,aux363_BOOL);
constraint int_ne_reif(plan2d_00024_00003,plan2d_00024_00006,aux364_BOOL);
constraint int_ne_reif(plan2d_00024_00002,plan2d_00024_00006,aux365_BOOL);
constraint int_ne_reif(plan2d_00024_00001,plan2d_00024_00005,aux366_BOOL);
constraint int_ne_reif(plan2d_00017_00005,plan2d_00017_00006,aux367_BOOL);
constraint int_ne_reif(plan2d_00017_00003,plan2d_00017_00006,aux368_BOOL);
constraint int_ne_reif(plan2d_00017_00001,plan2d_00017_00005,aux369_BOOL);
constraint int_ne_reif(plan2d_00017_00002,plan2d_00017_00006,aux370_BOOL);
constraint int_ne_reif(plan2d_00009_00005,plan2d_00010_00002,aux371_BOOL);
constraint int_ne_reif(plan2d_00009_00004,plan2d_00010_00001,aux372_BOOL);
constraint int_ne_reif(plan2d_00009_00006,plan2d_00010_00002,aux373_BOOL);
constraint int_ne_reif(plan2d_00009_00006,plan2d_00010_00004,aux374_BOOL);
constraint int_ne_reif(plan2d_00025_00004,plan2d_00026_00001,aux375_BOOL);
constraint int_ne_reif(plan2d_00025_00005,plan2d_00026_00002,aux376_BOOL);
constraint int_ne_reif(plan2d_00025_00006,plan2d_00026_00004,aux377_BOOL);
constraint int_ne_reif(plan2d_00025_00006,plan2d_00026_00002,aux378_BOOL);
constraint int_ne_reif(plan2d_00012_00002,plan2d_00012_00006,aux379_BOOL);
constraint int_ne_reif(plan2d_00012_00003,plan2d_00012_00006,aux380_BOOL);
constraint int_ne_reif(plan2d_00012_00005,plan2d_00012_00006,aux381_BOOL);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00012_00005,aux382_BOOL);
constraint int_ne_reif(plan2d_00012_00006,plan2d_00013_00003,aux383_BOOL);
constraint int_ne_reif(plan2d_00012_00006,plan2d_00013_00001,aux384_BOOL);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00009_00005,aux385_BOOL);
constraint int_ne_reif(plan2d_00009_00005,plan2d_00009_00006,aux386_BOOL);
constraint int_ne_reif(plan2d_00009_00003,plan2d_00009_00006,aux387_BOOL);
constraint int_ne_reif(plan2d_00009_00002,plan2d_00009_00006,aux388_BOOL);
constraint int_eq_reif(0,plan2d_00008_00001,aux389_BOOL);
constraint int_eq_reif(plan2d_00025_00004,0,aux390_BOOL);
constraint int_eq_reif(0,plan2d_00003_00002,aux391_BOOL);
constraint int_eq_reif(plan2d_00018_00002,0,aux392_BOOL);
constraint int_eq_reif(plan2d_00009_00005,0,aux393_BOOL);
constraint int_eq_reif(0,plan2d_00007_00001,aux394_BOOL);
constraint int_eq_reif(0,plan2d_00003_00006,aux395_BOOL);
constraint int_eq_reif(0,plan2d_00015_00001,aux396_BOOL);
constraint int_eq_reif(plan2d_00026_00005,0,aux397_BOOL);
constraint int_eq_reif(0,plan2d_00014_00001,aux398_BOOL);
constraint int_eq_reif(0,plan2d_00002_00003,aux399_BOOL);
constraint int_eq_reif(0,plan2d_00019_00005,aux400_BOOL);
constraint int_eq_reif(plan2d_00021_00006,0,aux401_BOOL);
constraint int_eq_reif(plan2d_00013_00004,0,aux402_BOOL);
constraint int_eq_reif(plan2d_00017_00001,0,aux403_BOOL);
constraint int_eq_reif(0,plan2d_00006_00001,aux404_BOOL);
constraint int_eq_reif(plan2d_00012_00002,0,aux405_BOOL);
constraint int_eq_reif(plan2d_00018_00006,0,aux406_BOOL);
constraint int_eq_reif(0,plan2d_00014_00006,aux407_BOOL);
constraint int_eq_reif(0,plan2d_00027_00005,aux408_BOOL);
constraint int_eq_reif(plan2d_00004_00006,0,aux409_BOOL);
constraint int_eq_reif(0,plan2d_00002_00004,aux410_BOOL);
constraint int_eq_reif(0,plan2d_00010_00002,aux411_BOOL);
constraint int_eq_reif(plan2d_00020_00005,0,aux412_BOOL);
constraint int_eq_reif(0,plan2d_00023_00001,aux413_BOOL);
constraint int_eq_reif(0,plan2d_00028_00004,aux414_BOOL);
constraint int_eq_reif(plan2d_00025_00005,0,aux415_BOOL);
constraint int_eq_reif(0,plan2d_00024_00006,aux416_BOOL);
constraint int_eq_reif(plan2d_00005_00001,0,aux417_BOOL);
constraint int_eq_reif(plan2d_00018_00001,0,aux418_BOOL);
constraint int_eq_reif(plan2d_00009_00004,0,aux419_BOOL);
constraint int_eq_reif(0,plan2d_00022_00005,aux420_BOOL);
constraint int_eq_reif(plan2d_00013_00006,0,aux421_BOOL);
constraint int_eq_reif(0,plan2d_00002_00005,aux422_BOOL);
constraint int_eq_reif(0,plan2d_00027_00004,aux423_BOOL);
constraint int_eq_reif(0,plan2d_00016_00001,aux424_BOOL);
constraint int_eq_reif(plan2d_00026_00004,0,aux425_BOOL);
constraint int_eq_reif(plan2d_00013_00003,0,aux426_BOOL);
constraint int_eq_reif(plan2d_00017_00002,0,aux427_BOOL);
constraint int_eq_reif(plan2d_00012_00001,0,aux428_BOOL);
constraint int_eq_reif(0,plan2d_00008_00002,aux429_BOOL);
constraint int_eq_reif(0,plan2d_00011_00002,aux430_BOOL);
constraint int_eq_reif(0,plan2d_00024_00001,aux431_BOOL);
constraint int_eq_reif(0,plan2d_00015_00002,aux432_BOOL);
constraint int_eq_reif(plan2d_00017_00006,0,aux433_BOOL);
constraint int_eq_reif(plan2d_00004_00001,0,aux434_BOOL);
constraint int_eq_reif(0,plan2d_00002_00006,aux435_BOOL);
constraint int_eq_reif(plan2d_00025_00002,0,aux436_BOOL);
constraint int_eq_reif(0,plan2d_00028_00006,aux437_BOOL);
constraint int_eq_reif(plan2d_00005_00002,0,aux438_BOOL);
constraint int_eq_reif(0,plan2d_00011_00003,aux439_BOOL);
constraint int_eq_reif(plan2d_00013_00002,0,aux440_BOOL);
constraint int_eq_reif(0,plan2d_00015_00005,aux441_BOOL);
constraint int_eq_reif(plan2d_00017_00003,0,aux442_BOOL);
constraint int_eq_reif(0,plan2d_00014_00005,aux443_BOOL);
constraint int_eq_reif(plan2d_00020_00006,0,aux444_BOOL);
constraint int_eq_reif(0,plan2d_00003_00003,aux445_BOOL);
constraint int_eq_reif(0,plan2d_00001_00006,aux446_BOOL);
constraint int_eq_reif(0,plan2d_00006_00005,aux447_BOOL);
constraint int_eq_reif(0,plan2d_00007_00002,aux448_BOOL);
constraint int_eq_reif(0,plan2d_00016_00002,aux449_BOOL);
constraint int_eq_reif(plan2d_00021_00002,0,aux450_BOOL);
constraint int_eq_reif(0,plan2d_00019_00004,aux451_BOOL);
constraint int_eq_reif(0,plan2d_00002_00001,aux452_BOOL);
constraint int_eq_reif(0,plan2d_00022_00006,aux453_BOOL);
constraint int_eq_reif(plan2d_00009_00006,0,aux454_BOOL);
constraint int_eq_reif(0,plan2d_00003_00004,aux455_BOOL);
constraint int_eq_reif(plan2d_00025_00003,0,aux456_BOOL);
constraint int_eq_reif(0,plan2d_00024_00002,aux457_BOOL);
constraint int_eq_reif(plan2d_00005_00003,0,aux458_BOOL);
constraint int_eq_reif(0,plan2d_00008_00003,aux459_BOOL);
constraint int_eq_reif(0,plan2d_00023_00005,aux460_BOOL);
constraint int_eq_reif(0,plan2d_00022_00004,aux461_BOOL);
constraint int_eq_reif(plan2d_00013_00001,0,aux462_BOOL);
constraint int_eq_reif(0,plan2d_00019_00003,aux463_BOOL);
constraint int_eq_reif(0,plan2d_00010_00001,aux464_BOOL);
constraint int_eq_reif(plan2d_00017_00004,0,aux465_BOOL);
constraint int_eq_reif(0,plan2d_00001_00005,aux466_BOOL);
constraint int_eq_reif(0,plan2d_00016_00006,aux467_BOOL);
constraint int_eq_reif(0,plan2d_00010_00006,aux468_BOOL);
constraint int_eq_reif(plan2d_00026_00006,0,aux469_BOOL);
constraint int_eq_reif(0,plan2d_00028_00005,aux470_BOOL);
constraint int_eq_reif(0,plan2d_00019_00006,aux471_BOOL);
constraint int_eq_reif(0,plan2d_00027_00003,aux472_BOOL);
constraint int_eq_reif(0,plan2d_00001_00004,aux473_BOOL);
constraint int_eq_reif(plan2d_00021_00001,0,aux474_BOOL);
constraint int_eq_reif(0,plan2d_00007_00006,aux475_BOOL);
constraint int_eq_reif(0,plan2d_00014_00004,aux476_BOOL);
constraint int_eq_reif(0,plan2d_00002_00002,aux477_BOOL);
constraint int_eq_reif(0,plan2d_00006_00004,aux478_BOOL);
constraint int_eq_reif(plan2d_00020_00002,0,aux479_BOOL);
constraint int_eq_reif(0,plan2d_00028_00002,aux480_BOOL);
constraint int_eq_reif(plan2d_00005_00004,0,aux481_BOOL);
constraint int_eq_reif(0,plan2d_00023_00003,aux482_BOOL);
constraint int_eq_reif(plan2d_00009_00001,0,aux483_BOOL);
constraint int_eq_reif(0,plan2d_00027_00002,aux484_BOOL);
constraint int_eq_reif(0,plan2d_00016_00003,aux485_BOOL);
constraint int_eq_reif(0,plan2d_00001_00003,aux486_BOOL);
constraint int_eq_reif(plan2d_00026_00001,0,aux487_BOOL);
constraint int_eq_reif(plan2d_00004_00003,0,aux488_BOOL);
constraint int_eq_reif(plan2d_00017_00005,0,aux489_BOOL);
constraint int_eq_reif(0,plan2d_00008_00004,aux490_BOOL);
constraint int_eq_reif(0,plan2d_00024_00003,aux491_BOOL);
constraint int_eq_reif(0,plan2d_00011_00004,aux492_BOOL);
constraint int_eq_reif(0,plan2d_00022_00003,aux493_BOOL);
constraint int_eq_reif(plan2d_00021_00004,0,aux494_BOOL);
constraint int_eq_reif(0,plan2d_00015_00004,aux495_BOOL);
constraint int_eq_reif(plan2d_00020_00001,0,aux496_BOOL);
constraint int_eq_reif(plan2d_00004_00002,0,aux497_BOOL);
constraint int_eq_reif(0,plan2d_00019_00002,aux498_BOOL);
constraint int_eq_reif(plan2d_00025_00001,0,aux499_BOOL);
constraint int_eq_reif(plan2d_00005_00005,0,aux500_BOOL);
constraint int_eq_reif(plan2d_00018_00005,0,aux501_BOOL);
constraint int_eq_reif(0,plan2d_00027_00006,aux502_BOOL);
constraint int_eq_reif(0,plan2d_00007_00003,aux503_BOOL);
constraint int_eq_reif(0,plan2d_00014_00003,aux504_BOOL);
constraint int_eq_reif(0,plan2d_00010_00005,aux505_BOOL);
constraint int_eq_reif(0,plan2d_00011_00005,aux506_BOOL);
constraint int_eq_reif(0,plan2d_00006_00003,aux507_BOOL);
constraint int_eq_reif(0,plan2d_00015_00006,aux508_BOOL);
constraint int_eq_reif(plan2d_00012_00005,0,aux509_BOOL);
constraint int_eq_reif(0,plan2d_00028_00001,aux510_BOOL);
constraint int_eq_reif(0,plan2d_00023_00004,aux511_BOOL);
constraint int_eq_reif(0,plan2d_00003_00005,aux512_BOOL);
constraint int_eq_reif(0,plan2d_00001_00001,aux513_BOOL);
constraint int_eq_reif(0,plan2d_00016_00004,aux514_BOOL);
constraint int_eq_reif(plan2d_00021_00003,0,aux515_BOOL);
constraint int_eq_reif(plan2d_00020_00004,0,aux516_BOOL);
constraint int_eq_reif(0,plan2d_00024_00004,aux517_BOOL);
constraint int_eq_reif(0,plan2d_00006_00006,aux518_BOOL);
constraint int_eq_reif(0,plan2d_00008_00005,aux519_BOOL);
constraint int_eq_reif(0,plan2d_00008_00006,aux520_BOOL);
constraint int_eq_reif(plan2d_00009_00003,0,aux521_BOOL);
constraint int_eq_reif(plan2d_00018_00004,0,aux522_BOOL);
constraint int_eq_reif(0,plan2d_00007_00005,aux523_BOOL);
constraint int_eq_reif(0,plan2d_00022_00002,aux524_BOOL);
constraint int_eq_reif(plan2d_00026_00003,0,aux525_BOOL);
constraint int_eq_reif(0,plan2d_00010_00003,aux526_BOOL);
constraint int_eq_reif(plan2d_00004_00005,0,aux527_BOOL);
constraint int_eq_reif(plan2d_00012_00004,0,aux528_BOOL);
constraint int_eq_reif(0,plan2d_00023_00002,aux529_BOOL);
constraint int_eq_reif(0,plan2d_00028_00003,aux530_BOOL);
constraint int_eq_reif(0,plan2d_00001_00002,aux531_BOOL);
constraint int_eq_reif(0,plan2d_00011_00006,aux532_BOOL);
constraint int_eq_reif(0,plan2d_00027_00001,aux533_BOOL);
constraint int_eq_reif(plan2d_00025_00006,0,aux534_BOOL);
constraint int_eq_reif(0,plan2d_00023_00006,aux535_BOOL);
constraint int_eq_reif(0,plan2d_00014_00002,aux536_BOOL);
constraint int_eq_reif(plan2d_00020_00003,0,aux537_BOOL);
constraint int_eq_reif(0,plan2d_00006_00002,aux538_BOOL);
constraint int_eq_reif(plan2d_00009_00002,0,aux539_BOOL);
constraint int_eq_reif(plan2d_00018_00003,0,aux540_BOOL);
constraint int_eq_reif(0,plan2d_00016_00005,aux541_BOOL);
constraint int_eq_reif(0,plan2d_00011_00001,aux542_BOOL);
constraint int_eq_reif(plan2d_00026_00002,0,aux543_BOOL);
constraint int_eq_reif(0,plan2d_00015_00003,aux544_BOOL);
constraint int_eq_reif(plan2d_00004_00004,0,aux545_BOOL);
constraint int_eq_reif(plan2d_00013_00005,0,aux546_BOOL);
constraint int_eq_reif(plan2d_00012_00003,0,aux547_BOOL);
constraint int_eq_reif(0,plan2d_00019_00001,aux548_BOOL);
constraint int_eq_reif(plan2d_00012_00006,0,aux549_BOOL);
constraint int_eq_reif(0,plan2d_00024_00005,aux550_BOOL);
constraint int_eq_reif(0,plan2d_00003_00001,aux551_BOOL);
constraint int_eq_reif(plan2d_00005_00006,0,aux552_BOOL);
constraint int_eq_reif(0,plan2d_00007_00004,aux553_BOOL);
constraint int_eq_reif(plan2d_00021_00005,0,aux554_BOOL);
constraint int_eq_reif(0,plan2d_00022_00001,aux555_BOOL);
constraint int_eq_reif(0,plan2d_00010_00004,aux556_BOOL);
constraint array_bool_or([aux513_BOOL,aux557_BOOL],true);
constraint bool_clause([],[aux80_BOOL,aux64_BOOL]);
constraint bool_clause([aux560_BOOL],[aux559_BOOL]);
constraint bool_clause([aux563_BOOL],[aux562_BOOL]);
constraint bool_clause([aux263_BOOL],[aux564_BOOL]);
constraint int_lin_le([-1,-1,-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux399_INTEGER,aux410_INTEGER,aux422_INTEGER,aux435_INTEGER,aux437_INTEGER,aux446_INTEGER,aux452_INTEGER,aux466_INTEGER,aux473_INTEGER,aux477_INTEGER,aux486_INTEGER,aux513_INTEGER,aux531_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux399_INTEGER,aux410_INTEGER,aux422_INTEGER,aux437_INTEGER,aux446_INTEGER,aux452_INTEGER,aux466_INTEGER,aux470_INTEGER,aux473_INTEGER,aux477_INTEGER,aux486_INTEGER,aux513_INTEGER,aux531_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux399_INTEGER,aux410_INTEGER,aux414_INTEGER,aux437_INTEGER,aux446_INTEGER,aux452_INTEGER,aux466_INTEGER,aux470_INTEGER,aux473_INTEGER,aux477_INTEGER,aux486_INTEGER,aux513_INTEGER,aux531_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux399_INTEGER,aux414_INTEGER,aux437_INTEGER,aux446_INTEGER,aux452_INTEGER,aux466_INTEGER,aux470_INTEGER,aux473_INTEGER,aux477_INTEGER,aux486_INTEGER,aux513_INTEGER,aux530_INTEGER,aux531_INTEGER,2],0);
constraint int_lin_le([-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux414_INTEGER,aux437_INTEGER,aux446_INTEGER,aux452_INTEGER,aux466_INTEGER,aux470_INTEGER,aux473_INTEGER,aux477_INTEGER,aux480_INTEGER,aux486_INTEGER,aux513_INTEGER,aux530_INTEGER,aux531_INTEGER,2],0);
constraint int_lin_le([-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux414_INTEGER,aux437_INTEGER,aux446_INTEGER,aux452_INTEGER,aux466_INTEGER,aux470_INTEGER,aux473_INTEGER,aux480_INTEGER,aux486_INTEGER,aux510_INTEGER,aux513_INTEGER,aux530_INTEGER,aux531_INTEGER,2],0);
constraint int_lin_le([-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux414_INTEGER,aux437_INTEGER,aux446_INTEGER,aux466_INTEGER,aux470_INTEGER,aux473_INTEGER,aux480_INTEGER,aux486_INTEGER,aux502_INTEGER,aux510_INTEGER,aux513_INTEGER,aux530_INTEGER,aux531_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux414_INTEGER,aux437_INTEGER,aux446_INTEGER,aux466_INTEGER,aux470_INTEGER,aux473_INTEGER,aux480_INTEGER,aux486_INTEGER,aux502_INTEGER,aux510_INTEGER,aux513_INTEGER,aux530_INTEGER,aux531_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux408_INTEGER,aux414_INTEGER,aux437_INTEGER,aux466_INTEGER,aux470_INTEGER,aux473_INTEGER,aux480_INTEGER,aux486_INTEGER,aux502_INTEGER,aux510_INTEGER,aux513_INTEGER,aux530_INTEGER,aux531_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux408_INTEGER,aux414_INTEGER,aux423_INTEGER,aux437_INTEGER,aux470_INTEGER,aux473_INTEGER,aux480_INTEGER,aux486_INTEGER,aux502_INTEGER,aux510_INTEGER,aux513_INTEGER,aux530_INTEGER,aux531_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux408_INTEGER,aux414_INTEGER,aux423_INTEGER,aux437_INTEGER,aux470_INTEGER,aux472_INTEGER,aux480_INTEGER,aux486_INTEGER,aux502_INTEGER,aux510_INTEGER,aux513_INTEGER,aux530_INTEGER,aux531_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux408_INTEGER,aux414_INTEGER,aux423_INTEGER,aux437_INTEGER,aux470_INTEGER,aux472_INTEGER,aux480_INTEGER,aux484_INTEGER,aux502_INTEGER,aux510_INTEGER,aux513_INTEGER,aux530_INTEGER,aux531_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux408_INTEGER,aux414_INTEGER,aux423_INTEGER,aux437_INTEGER,aux470_INTEGER,aux472_INTEGER,aux480_INTEGER,aux484_INTEGER,aux502_INTEGER,aux510_INTEGER,aux513_INTEGER,aux530_INTEGER,aux533_INTEGER,2],0);
constraint gecode_global_cardinality([plan2d_00020_00001, plan2d_00012_00001, plan2d_00004_00001, plan2d_00025_00001, plan2d_00017_00001, plan2d_00009_00001, plan2d_00021_00001, plan2d_00013_00001, plan2d_00005_00001, plan2d_00026_00001, plan2d_00018_00001, plan2d_00001_00001, plan2d_00022_00001, plan2d_00014_00001, plan2d_00006_00001, plan2d_00027_00001, plan2d_00019_00001, plan2d_00010_00001, plan2d_00002_00001, plan2d_00023_00001, plan2d_00015_00001, plan2d_00007_00001, plan2d_00028_00001, plan2d_00011_00001, plan2d_00003_00001, plan2d_00024_00001, plan2d_00016_00001, plan2d_00008_00001],[0, 1, 2, 3],[5, 10, 11, 2])::domain;
constraint gecode_global_cardinality([plan2d_00020_00002, plan2d_00012_00002, plan2d_00004_00002, plan2d_00025_00002, plan2d_00017_00002, plan2d_00009_00002, plan2d_00021_00002, plan2d_00013_00002, plan2d_00005_00002, plan2d_00026_00002, plan2d_00018_00002, plan2d_00001_00002, plan2d_00022_00002, plan2d_00014_00002, plan2d_00006_00002, plan2d_00027_00002, plan2d_00019_00002, plan2d_00010_00002, plan2d_00002_00002, plan2d_00023_00002, plan2d_00015_00002, plan2d_00007_00002, plan2d_00028_00002, plan2d_00011_00002, plan2d_00003_00002, plan2d_00024_00002, plan2d_00016_00002, plan2d_00008_00002],[0, 1, 2, 3],[1, 8, 9, 10])::domain;
constraint gecode_global_cardinality([plan2d_00020_00003, plan2d_00012_00003, plan2d_00004_00003, plan2d_00025_00003, plan2d_00017_00003, plan2d_00009_00003, plan2d_00021_00003, plan2d_00013_00003, plan2d_00005_00003, plan2d_00026_00003, plan2d_00018_00003, plan2d_00001_00003, plan2d_00022_00003, plan2d_00014_00003, plan2d_00006_00003, plan2d_00027_00003, plan2d_00019_00003, plan2d_00010_00003, plan2d_00002_00003, plan2d_00023_00003, plan2d_00015_00003, plan2d_00007_00003, plan2d_00028_00003, plan2d_00011_00003, plan2d_00003_00003, plan2d_00024_00003, plan2d_00016_00003, plan2d_00008_00003],[0, 1, 2, 3],[2, 8, 10, 8])::domain;
constraint gecode_global_cardinality([plan2d_00020_00004, plan2d_00012_00004, plan2d_00004_00004, plan2d_00025_00004, plan2d_00017_00004, plan2d_00009_00004, plan2d_00021_00004, plan2d_00013_00004, plan2d_00005_00004, plan2d_00026_00004, plan2d_00018_00004, plan2d_00001_00004, plan2d_00022_00004, plan2d_00014_00004, plan2d_00006_00004, plan2d_00027_00004, plan2d_00019_00004, plan2d_00010_00004, plan2d_00002_00004, plan2d_00023_00004, plan2d_00015_00004, plan2d_00007_00004, plan2d_00028_00004, plan2d_00011_00004, plan2d_00003_00004, plan2d_00024_00004, plan2d_00016_00004, plan2d_00008_00004],[0, 1, 2, 3],[2, 8, 9, 9])::domain;
constraint gecode_global_cardinality([plan2d_00020_00005, plan2d_00012_00005, plan2d_00004_00005, plan2d_00025_00005, plan2d_00017_00005, plan2d_00009_00005, plan2d_00021_00005, plan2d_00013_00005, plan2d_00005_00005, plan2d_00026_00005, plan2d_00018_00005, plan2d_00001_00005, plan2d_00022_00005, plan2d_00014_00005, plan2d_00006_00005, plan2d_00027_00005, plan2d_00019_00005, plan2d_00010_00005, plan2d_00002_00005, plan2d_00023_00005, plan2d_00015_00005, plan2d_00007_00005, plan2d_00028_00005, plan2d_00011_00005, plan2d_00003_00005, plan2d_00024_00005, plan2d_00016_00005, plan2d_00008_00005],[0, 1, 2, 3],[5, 1, 13, 9])::domain;
constraint gecode_global_cardinality([plan2d_00020_00006, plan2d_00012_00006, plan2d_00004_00006, plan2d_00025_00006, plan2d_00017_00006, plan2d_00009_00006, plan2d_00021_00006, plan2d_00013_00006, plan2d_00005_00006, plan2d_00026_00006, plan2d_00018_00006, plan2d_00001_00006, plan2d_00022_00006, plan2d_00014_00006, plan2d_00006_00006, plan2d_00027_00006, plan2d_00019_00006, plan2d_00010_00006, plan2d_00002_00006, plan2d_00023_00006, plan2d_00015_00006, plan2d_00007_00006, plan2d_00028_00006, plan2d_00011_00006, plan2d_00003_00006, plan2d_00024_00006, plan2d_00016_00006, plan2d_00008_00006],[0, 1, 2, 3],[17, 2, 8, 1])::domain;
constraint bool_clause([],[aux64_BOOL,aux65_BOOL]);
constraint bool_clause([],[aux65_BOOL,aux66_BOOL]);
constraint bool_clause([],[aux66_BOOL,aux67_BOOL]);
constraint bool_clause([],[aux67_BOOL,aux274_BOOL]);
constraint bool_clause([],[aux63_BOOL,aux170_BOOL]);
constraint bool_clause([],[aux170_BOOL,aux168_BOOL]);
constraint bool_clause([],[aux168_BOOL,aux169_BOOL]);
constraint bool_clause([],[aux169_BOOL,aux167_BOOL]);
constraint bool_clause([],[aux167_BOOL,aux153_BOOL]);
constraint bool_clause([],[aux351_BOOL,aux88_BOOL]);
constraint bool_clause([],[aux88_BOOL,aux86_BOOL]);
constraint bool_clause([],[aux86_BOOL,aux85_BOOL]);
constraint bool_clause([],[aux85_BOOL,aux87_BOOL]);
constraint bool_clause([],[aux87_BOOL,aux281_BOOL]);
constraint bool_clause([],[aux219_BOOL,aux224_BOOL]);
constraint bool_clause([],[aux224_BOOL,aux225_BOOL]);
constraint bool_clause([],[aux225_BOOL,aux226_BOOL]);
constraint bool_clause([],[aux226_BOOL,aux223_BOOL]);
constraint bool_clause([],[aux223_BOOL,aux360_BOOL]);
constraint bool_clause([],[aux175_BOOL,aux12_BOOL]);
constraint bool_clause([],[aux12_BOOL,aux15_BOOL]);
constraint bool_clause([],[aux15_BOOL,aux14_BOOL]);
constraint bool_clause([],[aux14_BOOL,aux13_BOOL]);
constraint bool_clause([],[aux13_BOOL,aux326_BOOL]);
constraint bool_clause([],[aux17_BOOL,aux201_BOOL]);
constraint bool_clause([],[aux201_BOOL,aux202_BOOL]);
constraint bool_clause([],[aux202_BOOL,aux199_BOOL]);
constraint bool_clause([],[aux199_BOOL,aux200_BOOL]);
constraint bool_clause([],[aux200_BOOL,aux127_BOOL]);
constraint bool_clause([],[aux231_BOOL,aux4_BOOL]);
constraint bool_clause([],[aux4_BOOL,aux5_BOOL]);
constraint bool_clause([],[aux5_BOOL,aux6_BOOL]);
constraint bool_clause([],[aux6_BOOL,aux7_BOOL]);
constraint bool_clause([],[aux7_BOOL,aux123_BOOL]);
constraint bool_clause([],[aux21_BOOL,aux218_BOOL]);
constraint bool_clause([],[aux218_BOOL,aux217_BOOL]);
constraint bool_clause([],[aux217_BOOL,aux216_BOOL]);
constraint bool_clause([],[aux216_BOOL,aux215_BOOL]);
constraint bool_clause([],[aux215_BOOL,aux308_BOOL]);
constraint bool_clause([],[aux50_BOOL,aux97_BOOL]);
constraint bool_clause([],[aux97_BOOL,aux98_BOOL]);
constraint bool_clause([],[aux98_BOOL,aux99_BOOL]);
constraint bool_clause([],[aux99_BOOL,aux100_BOOL]);
constraint bool_clause([],[aux100_BOOL,aux386_BOOL]);
constraint bool_clause([],[aux181_BOOL,aux260_BOOL]);
constraint bool_clause([],[aux260_BOOL,aux261_BOOL]);
constraint bool_clause([],[aux261_BOOL,aux262_BOOL]);
constraint bool_clause([],[aux262_BOOL,aux259_BOOL]);
constraint bool_clause([],[aux259_BOOL,aux33_BOOL]);
constraint bool_clause([],[aux178_BOOL,aux42_BOOL]);
constraint bool_clause([],[aux42_BOOL,aux45_BOOL]);
constraint bool_clause([],[aux45_BOOL,aux44_BOOL]);
constraint bool_clause([],[aux44_BOOL,aux43_BOOL]);
constraint bool_clause([],[aux43_BOOL,aux70_BOOL]);
constraint bool_clause([],[aux197_BOOL,aux206_BOOL]);
constraint bool_clause([],[aux206_BOOL,aux203_BOOL]);
constraint bool_clause([],[aux203_BOOL,aux204_BOOL]);
constraint bool_clause([],[aux204_BOOL,aux205_BOOL]);
constraint bool_clause([],[aux205_BOOL,aux381_BOOL]);
constraint bool_clause([],[aux384_BOOL,aux2_BOOL]);
constraint bool_clause([],[aux2_BOOL,aux3_BOOL]);
constraint bool_clause([],[aux3_BOOL,aux0_BOOL]);
constraint bool_clause([],[aux0_BOOL,aux1_BOOL]);
constraint bool_clause([],[aux1_BOOL,aux105_BOOL]);
constraint bool_clause([],[aux110_BOOL,aux214_BOOL]);
constraint bool_clause([],[aux214_BOOL,aux213_BOOL]);
constraint bool_clause([],[aux213_BOOL,aux212_BOOL]);
constraint bool_clause([],[aux212_BOOL,aux211_BOOL]);
constraint bool_clause([],[aux211_BOOL,aux147_BOOL]);
constraint bool_clause([],[aux187_BOOL,aux36_BOOL]);
constraint bool_clause([],[aux36_BOOL,aux37_BOOL]);
constraint bool_clause([],[aux37_BOOL,aux34_BOOL]);
constraint bool_clause([],[aux34_BOOL,aux35_BOOL]);
constraint bool_clause([],[aux35_BOOL,aux58_BOOL]);
constraint bool_clause([],[aux103_BOOL,aux236_BOOL]);
constraint bool_clause([],[aux236_BOOL,aux235_BOOL]);
constraint bool_clause([],[aux235_BOOL,aux238_BOOL]);
constraint bool_clause([],[aux238_BOOL,aux237_BOOL]);
constraint bool_clause([],[aux237_BOOL,aux336_BOOL]);
constraint bool_clause([],[aux353_BOOL,aux72_BOOL]);
constraint bool_clause([],[aux72_BOOL,aux73_BOOL]);
constraint bool_clause([],[aux73_BOOL,aux74_BOOL]);
constraint bool_clause([],[aux74_BOOL,aux75_BOOL]);
constraint bool_clause([],[aux75_BOOL,aux367_BOOL]);
constraint bool_clause([],[aux90_BOOL,aux355_BOOL]);
constraint bool_clause([],[aux355_BOOL,aux358_BOOL]);
constraint bool_clause([],[aux358_BOOL,aux357_BOOL]);
constraint bool_clause([],[aux357_BOOL,aux356_BOOL]);
constraint bool_clause([],[aux356_BOOL,aux94_BOOL]);
constraint bool_clause([],[aux180_BOOL,aux81_BOOL]);
constraint bool_clause([],[aux81_BOOL,aux83_BOOL]);
constraint bool_clause([],[aux83_BOOL,aux82_BOOL]);
constraint bool_clause([],[aux82_BOOL,aux84_BOOL]);
constraint bool_clause([],[aux84_BOOL,aux191_BOOL]);
constraint bool_clause([],[aux162_BOOL,aux210_BOOL]);
constraint bool_clause([],[aux210_BOOL,aux209_BOOL]);
constraint bool_clause([],[aux209_BOOL,aux208_BOOL]);
constraint bool_clause([],[aux208_BOOL,aux207_BOOL]);
constraint bool_clause([],[aux207_BOOL,aux247_BOOL]);
constraint bool_clause([],[aux234_BOOL,aux40_BOOL]);
constraint bool_clause([],[aux40_BOOL,aux41_BOOL]);
constraint bool_clause([],[aux41_BOOL,aux38_BOOL]);
constraint bool_clause([],[aux38_BOOL,aux39_BOOL]);
constraint bool_clause([],[aux39_BOOL,aux230_BOOL]);
constraint bool_clause([],[aux18_BOOL,aux240_BOOL]);
constraint bool_clause([],[aux240_BOOL,aux239_BOOL]);
constraint bool_clause([],[aux239_BOOL,aux242_BOOL]);
constraint bool_clause([],[aux242_BOOL,aux241_BOOL]);
constraint bool_clause([],[aux241_BOOL,aux185_BOOL]);
constraint bool_clause([],[aux222_BOOL,aux28_BOOL]);
constraint bool_clause([],[aux28_BOOL,aux29_BOOL]);
constraint bool_clause([],[aux29_BOOL,aux26_BOOL]);
constraint bool_clause([],[aux26_BOOL,aux27_BOOL]);
constraint bool_clause([],[aux27_BOOL,aux291_BOOL]);
constraint bool_clause([],[aux96_BOOL,aux251_BOOL]);
constraint bool_clause([],[aux251_BOOL,aux253_BOOL]);
constraint bool_clause([],[aux253_BOOL,aux254_BOOL]);
constraint bool_clause([],[aux254_BOOL,aux252_BOOL]);
constraint bool_clause([],[aux252_BOOL,aux363_BOOL]);
constraint bool_clause([],[aux152_BOOL,aux46_BOOL]);
constraint bool_clause([],[aux46_BOOL,aux48_BOOL]);
constraint bool_clause([],[aux48_BOOL,aux47_BOOL]);
constraint bool_clause([],[aux47_BOOL,aux49_BOOL]);
constraint bool_clause([],[aux49_BOOL,aux265_BOOL]);
constraint bool_clause([],[aux101_BOOL,aux143_BOOL]);
constraint bool_clause([],[aux143_BOOL,aux144_BOOL]);
constraint bool_clause([],[aux144_BOOL,aux145_BOOL]);
constraint bool_clause([],[aux145_BOOL,aux146_BOOL]);
constraint bool_clause([],[aux146_BOOL,aux255_BOOL]);
constraint bool_clause([],[aux350_BOOL,aux142_BOOL]);
constraint bool_clause([],[aux142_BOOL,aux141_BOOL]);
constraint bool_clause([],[aux141_BOOL,aux140_BOOL]);
constraint bool_clause([],[aux140_BOOL,aux139_BOOL]);
constraint bool_clause([],[aux139_BOOL,aux160_BOOL]);
constraint bool_clause([],[aux53_BOOL,aux339_BOOL]);
constraint bool_clause([],[aux339_BOOL,aux340_BOOL]);
constraint bool_clause([],[aux340_BOOL,aux337_BOOL]);
constraint bool_clause([],[aux337_BOOL,aux338_BOOL]);
constraint bool_clause([],[aux338_BOOL,aux269_BOOL]);
constraint int_lin_le([-1,-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux399_INTEGER,aux410_INTEGER,aux422_INTEGER,aux435_INTEGER,aux446_INTEGER,aux452_INTEGER,aux466_INTEGER,aux473_INTEGER,aux477_INTEGER,aux486_INTEGER,aux513_INTEGER,aux531_INTEGER,aux551_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux391_INTEGER,aux399_INTEGER,aux410_INTEGER,aux422_INTEGER,aux435_INTEGER,aux446_INTEGER,aux452_INTEGER,aux466_INTEGER,aux473_INTEGER,aux477_INTEGER,aux486_INTEGER,aux531_INTEGER,aux551_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux391_INTEGER,aux399_INTEGER,aux410_INTEGER,aux422_INTEGER,aux435_INTEGER,aux445_INTEGER,aux446_INTEGER,aux452_INTEGER,aux466_INTEGER,aux473_INTEGER,aux477_INTEGER,aux486_INTEGER,aux551_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux391_INTEGER,aux399_INTEGER,aux410_INTEGER,aux422_INTEGER,aux435_INTEGER,aux445_INTEGER,aux446_INTEGER,aux452_INTEGER,aux455_INTEGER,aux466_INTEGER,aux473_INTEGER,aux477_INTEGER,aux551_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux391_INTEGER,aux399_INTEGER,aux410_INTEGER,aux422_INTEGER,aux435_INTEGER,aux445_INTEGER,aux446_INTEGER,aux452_INTEGER,aux455_INTEGER,aux466_INTEGER,aux477_INTEGER,aux512_INTEGER,aux551_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,1],[aux391_INTEGER,aux395_INTEGER,aux399_INTEGER,aux410_INTEGER,aux422_INTEGER,aux435_INTEGER,aux445_INTEGER,aux446_INTEGER,aux452_INTEGER,aux455_INTEGER,aux477_INTEGER,aux512_INTEGER,aux551_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux391_INTEGER,aux395_INTEGER,aux399_INTEGER,aux410_INTEGER,aux422_INTEGER,aux435_INTEGER,aux445_INTEGER,aux446_INTEGER,aux452_INTEGER,aux455_INTEGER,aux477_INTEGER,aux512_INTEGER,aux551_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux391_INTEGER,aux395_INTEGER,aux399_INTEGER,aux410_INTEGER,aux422_INTEGER,aux434_INTEGER,aux435_INTEGER,aux445_INTEGER,aux452_INTEGER,aux455_INTEGER,aux477_INTEGER,aux512_INTEGER,aux551_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux391_INTEGER,aux395_INTEGER,aux399_INTEGER,aux410_INTEGER,aux422_INTEGER,aux434_INTEGER,aux435_INTEGER,aux445_INTEGER,aux455_INTEGER,aux477_INTEGER,aux497_INTEGER,aux512_INTEGER,aux551_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux391_INTEGER,aux395_INTEGER,aux399_INTEGER,aux410_INTEGER,aux422_INTEGER,aux434_INTEGER,aux435_INTEGER,aux445_INTEGER,aux455_INTEGER,aux488_INTEGER,aux497_INTEGER,aux512_INTEGER,aux551_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux391_INTEGER,aux395_INTEGER,aux410_INTEGER,aux422_INTEGER,aux434_INTEGER,aux435_INTEGER,aux445_INTEGER,aux455_INTEGER,aux488_INTEGER,aux497_INTEGER,aux512_INTEGER,aux545_INTEGER,aux551_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux391_INTEGER,aux395_INTEGER,aux422_INTEGER,aux434_INTEGER,aux435_INTEGER,aux445_INTEGER,aux455_INTEGER,aux488_INTEGER,aux497_INTEGER,aux512_INTEGER,aux527_INTEGER,aux545_INTEGER,aux551_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux391_INTEGER,aux395_INTEGER,aux409_INTEGER,aux434_INTEGER,aux435_INTEGER,aux445_INTEGER,aux455_INTEGER,aux488_INTEGER,aux497_INTEGER,aux512_INTEGER,aux527_INTEGER,aux545_INTEGER,aux551_INTEGER,2],0);
constraint int_lin_le([-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux391_INTEGER,aux395_INTEGER,aux409_INTEGER,aux434_INTEGER,aux435_INTEGER,aux445_INTEGER,aux455_INTEGER,aux488_INTEGER,aux497_INTEGER,aux512_INTEGER,aux527_INTEGER,aux545_INTEGER,aux551_INTEGER,2],0);
constraint int_lin_le([-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux391_INTEGER,aux395_INTEGER,aux409_INTEGER,aux417_INTEGER,aux434_INTEGER,aux445_INTEGER,aux455_INTEGER,aux488_INTEGER,aux497_INTEGER,aux512_INTEGER,aux527_INTEGER,aux545_INTEGER,aux551_INTEGER,2],0);
constraint int_lin_le([-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux391_INTEGER,aux395_INTEGER,aux409_INTEGER,aux417_INTEGER,aux434_INTEGER,aux438_INTEGER,aux445_INTEGER,aux455_INTEGER,aux488_INTEGER,aux497_INTEGER,aux512_INTEGER,aux527_INTEGER,aux545_INTEGER,2],0);
constraint int_lin_le([-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux395_INTEGER,aux409_INTEGER,aux417_INTEGER,aux434_INTEGER,aux438_INTEGER,aux445_INTEGER,aux455_INTEGER,aux458_INTEGER,aux488_INTEGER,aux497_INTEGER,aux512_INTEGER,aux527_INTEGER,aux545_INTEGER,2],0);
constraint int_lin_le([-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux395_INTEGER,aux409_INTEGER,aux417_INTEGER,aux434_INTEGER,aux438_INTEGER,aux455_INTEGER,aux458_INTEGER,aux481_INTEGER,aux488_INTEGER,aux497_INTEGER,aux512_INTEGER,aux527_INTEGER,aux545_INTEGER,2],0);
constraint int_lin_le([-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux395_INTEGER,aux409_INTEGER,aux417_INTEGER,aux434_INTEGER,aux438_INTEGER,aux458_INTEGER,aux481_INTEGER,aux488_INTEGER,aux497_INTEGER,aux500_INTEGER,aux512_INTEGER,aux527_INTEGER,aux545_INTEGER,2],0);
constraint int_lin_le([-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux395_INTEGER,aux409_INTEGER,aux417_INTEGER,aux434_INTEGER,aux438_INTEGER,aux458_INTEGER,aux481_INTEGER,aux488_INTEGER,aux497_INTEGER,aux500_INTEGER,aux527_INTEGER,aux545_INTEGER,aux552_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux395_INTEGER,aux409_INTEGER,aux417_INTEGER,aux434_INTEGER,aux438_INTEGER,aux458_INTEGER,aux481_INTEGER,aux488_INTEGER,aux497_INTEGER,aux500_INTEGER,aux527_INTEGER,aux545_INTEGER,aux552_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux404_INTEGER,aux409_INTEGER,aux417_INTEGER,aux434_INTEGER,aux438_INTEGER,aux458_INTEGER,aux481_INTEGER,aux488_INTEGER,aux497_INTEGER,aux500_INTEGER,aux527_INTEGER,aux545_INTEGER,aux552_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux404_INTEGER,aux409_INTEGER,aux417_INTEGER,aux438_INTEGER,aux458_INTEGER,aux481_INTEGER,aux488_INTEGER,aux497_INTEGER,aux500_INTEGER,aux527_INTEGER,aux538_INTEGER,aux545_INTEGER,aux552_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux404_INTEGER,aux409_INTEGER,aux417_INTEGER,aux438_INTEGER,aux458_INTEGER,aux481_INTEGER,aux488_INTEGER,aux500_INTEGER,aux507_INTEGER,aux527_INTEGER,aux538_INTEGER,aux545_INTEGER,aux552_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux404_INTEGER,aux409_INTEGER,aux417_INTEGER,aux438_INTEGER,aux458_INTEGER,aux478_INTEGER,aux481_INTEGER,aux500_INTEGER,aux507_INTEGER,aux527_INTEGER,aux538_INTEGER,aux545_INTEGER,aux552_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux404_INTEGER,aux409_INTEGER,aux417_INTEGER,aux438_INTEGER,aux447_INTEGER,aux458_INTEGER,aux478_INTEGER,aux481_INTEGER,aux500_INTEGER,aux507_INTEGER,aux527_INTEGER,aux538_INTEGER,aux552_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux404_INTEGER,aux409_INTEGER,aux417_INTEGER,aux438_INTEGER,aux447_INTEGER,aux458_INTEGER,aux478_INTEGER,aux481_INTEGER,aux500_INTEGER,aux507_INTEGER,aux518_INTEGER,aux538_INTEGER,aux552_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,1],[aux404_INTEGER,aux409_INTEGER,aux417_INTEGER,aux438_INTEGER,aux447_INTEGER,aux458_INTEGER,aux478_INTEGER,aux481_INTEGER,aux500_INTEGER,aux507_INTEGER,aux518_INTEGER,aux538_INTEGER,aux552_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,1],[aux394_INTEGER,aux404_INTEGER,aux417_INTEGER,aux438_INTEGER,aux447_INTEGER,aux458_INTEGER,aux478_INTEGER,aux481_INTEGER,aux500_INTEGER,aux507_INTEGER,aux518_INTEGER,aux538_INTEGER,aux552_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,1],[aux394_INTEGER,aux404_INTEGER,aux438_INTEGER,aux447_INTEGER,aux448_INTEGER,aux458_INTEGER,aux478_INTEGER,aux481_INTEGER,aux500_INTEGER,aux507_INTEGER,aux518_INTEGER,aux538_INTEGER,aux552_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,1],[aux394_INTEGER,aux404_INTEGER,aux447_INTEGER,aux448_INTEGER,aux458_INTEGER,aux478_INTEGER,aux481_INTEGER,aux500_INTEGER,aux503_INTEGER,aux507_INTEGER,aux518_INTEGER,aux538_INTEGER,aux552_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,-1,1],[aux394_INTEGER,aux404_INTEGER,aux447_INTEGER,aux448_INTEGER,aux478_INTEGER,aux481_INTEGER,aux500_INTEGER,aux503_INTEGER,aux507_INTEGER,aux518_INTEGER,aux538_INTEGER,aux552_INTEGER,aux553_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,1],[aux394_INTEGER,aux404_INTEGER,aux447_INTEGER,aux448_INTEGER,aux478_INTEGER,aux500_INTEGER,aux503_INTEGER,aux507_INTEGER,aux518_INTEGER,aux523_INTEGER,aux538_INTEGER,aux552_INTEGER,aux553_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,1],[aux394_INTEGER,aux404_INTEGER,aux447_INTEGER,aux448_INTEGER,aux475_INTEGER,aux478_INTEGER,aux503_INTEGER,aux507_INTEGER,aux518_INTEGER,aux523_INTEGER,aux538_INTEGER,aux552_INTEGER,aux553_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux394_INTEGER,aux404_INTEGER,aux447_INTEGER,aux448_INTEGER,aux475_INTEGER,aux478_INTEGER,aux503_INTEGER,aux507_INTEGER,aux518_INTEGER,aux523_INTEGER,aux538_INTEGER,aux552_INTEGER,aux553_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,1],[aux389_INTEGER,aux394_INTEGER,aux404_INTEGER,aux447_INTEGER,aux448_INTEGER,aux475_INTEGER,aux478_INTEGER,aux503_INTEGER,aux507_INTEGER,aux518_INTEGER,aux523_INTEGER,aux538_INTEGER,aux553_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,1],[aux389_INTEGER,aux394_INTEGER,aux429_INTEGER,aux447_INTEGER,aux448_INTEGER,aux475_INTEGER,aux478_INTEGER,aux503_INTEGER,aux507_INTEGER,aux518_INTEGER,aux523_INTEGER,aux538_INTEGER,aux553_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,1],[aux389_INTEGER,aux394_INTEGER,aux429_INTEGER,aux447_INTEGER,aux448_INTEGER,aux459_INTEGER,aux475_INTEGER,aux478_INTEGER,aux503_INTEGER,aux507_INTEGER,aux518_INTEGER,aux523_INTEGER,aux553_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,1],[aux389_INTEGER,aux394_INTEGER,aux429_INTEGER,aux447_INTEGER,aux448_INTEGER,aux459_INTEGER,aux475_INTEGER,aux478_INTEGER,aux490_INTEGER,aux503_INTEGER,aux518_INTEGER,aux523_INTEGER,aux553_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,1],[aux389_INTEGER,aux394_INTEGER,aux429_INTEGER,aux447_INTEGER,aux448_INTEGER,aux459_INTEGER,aux475_INTEGER,aux490_INTEGER,aux503_INTEGER,aux518_INTEGER,aux519_INTEGER,aux523_INTEGER,aux553_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,1],[aux389_INTEGER,aux394_INTEGER,aux429_INTEGER,aux448_INTEGER,aux459_INTEGER,aux475_INTEGER,aux490_INTEGER,aux503_INTEGER,aux518_INTEGER,aux519_INTEGER,aux520_INTEGER,aux523_INTEGER,aux553_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,1],[aux389_INTEGER,aux394_INTEGER,aux429_INTEGER,aux448_INTEGER,aux459_INTEGER,aux475_INTEGER,aux490_INTEGER,aux503_INTEGER,aux518_INTEGER,aux519_INTEGER,aux520_INTEGER,aux523_INTEGER,aux553_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,1],[aux389_INTEGER,aux394_INTEGER,aux429_INTEGER,aux448_INTEGER,aux459_INTEGER,aux475_INTEGER,aux483_INTEGER,aux490_INTEGER,aux503_INTEGER,aux519_INTEGER,aux520_INTEGER,aux523_INTEGER,aux553_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux389_INTEGER,aux429_INTEGER,aux448_INTEGER,aux459_INTEGER,aux475_INTEGER,aux483_INTEGER,aux490_INTEGER,aux503_INTEGER,aux519_INTEGER,aux520_INTEGER,aux523_INTEGER,aux539_INTEGER,aux553_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux389_INTEGER,aux429_INTEGER,aux459_INTEGER,aux475_INTEGER,aux483_INTEGER,aux490_INTEGER,aux503_INTEGER,aux519_INTEGER,aux520_INTEGER,aux521_INTEGER,aux523_INTEGER,aux539_INTEGER,aux553_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux389_INTEGER,aux419_INTEGER,aux429_INTEGER,aux459_INTEGER,aux475_INTEGER,aux483_INTEGER,aux490_INTEGER,aux519_INTEGER,aux520_INTEGER,aux521_INTEGER,aux523_INTEGER,aux539_INTEGER,aux553_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,1],[aux389_INTEGER,aux393_INTEGER,aux419_INTEGER,aux429_INTEGER,aux459_INTEGER,aux475_INTEGER,aux483_INTEGER,aux490_INTEGER,aux519_INTEGER,aux520_INTEGER,aux521_INTEGER,aux523_INTEGER,aux539_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,1],[aux389_INTEGER,aux393_INTEGER,aux419_INTEGER,aux429_INTEGER,aux454_INTEGER,aux459_INTEGER,aux475_INTEGER,aux483_INTEGER,aux490_INTEGER,aux519_INTEGER,aux520_INTEGER,aux521_INTEGER,aux539_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux389_INTEGER,aux393_INTEGER,aux419_INTEGER,aux429_INTEGER,aux454_INTEGER,aux459_INTEGER,aux475_INTEGER,aux483_INTEGER,aux490_INTEGER,aux519_INTEGER,aux520_INTEGER,aux521_INTEGER,aux539_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux389_INTEGER,aux393_INTEGER,aux419_INTEGER,aux429_INTEGER,aux454_INTEGER,aux459_INTEGER,aux464_INTEGER,aux483_INTEGER,aux490_INTEGER,aux519_INTEGER,aux520_INTEGER,aux521_INTEGER,aux539_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux393_INTEGER,aux411_INTEGER,aux419_INTEGER,aux429_INTEGER,aux454_INTEGER,aux459_INTEGER,aux464_INTEGER,aux483_INTEGER,aux490_INTEGER,aux519_INTEGER,aux520_INTEGER,aux521_INTEGER,aux539_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux393_INTEGER,aux411_INTEGER,aux419_INTEGER,aux454_INTEGER,aux459_INTEGER,aux464_INTEGER,aux483_INTEGER,aux490_INTEGER,aux519_INTEGER,aux520_INTEGER,aux521_INTEGER,aux526_INTEGER,aux539_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux393_INTEGER,aux411_INTEGER,aux419_INTEGER,aux454_INTEGER,aux464_INTEGER,aux483_INTEGER,aux490_INTEGER,aux519_INTEGER,aux520_INTEGER,aux521_INTEGER,aux526_INTEGER,aux539_INTEGER,aux556_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux393_INTEGER,aux411_INTEGER,aux419_INTEGER,aux454_INTEGER,aux464_INTEGER,aux483_INTEGER,aux505_INTEGER,aux519_INTEGER,aux520_INTEGER,aux521_INTEGER,aux526_INTEGER,aux539_INTEGER,aux556_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux393_INTEGER,aux411_INTEGER,aux419_INTEGER,aux454_INTEGER,aux464_INTEGER,aux468_INTEGER,aux483_INTEGER,aux505_INTEGER,aux520_INTEGER,aux521_INTEGER,aux526_INTEGER,aux539_INTEGER,aux556_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux393_INTEGER,aux411_INTEGER,aux419_INTEGER,aux454_INTEGER,aux464_INTEGER,aux468_INTEGER,aux483_INTEGER,aux505_INTEGER,aux520_INTEGER,aux521_INTEGER,aux526_INTEGER,aux539_INTEGER,aux556_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux393_INTEGER,aux411_INTEGER,aux419_INTEGER,aux454_INTEGER,aux464_INTEGER,aux468_INTEGER,aux483_INTEGER,aux505_INTEGER,aux521_INTEGER,aux526_INTEGER,aux539_INTEGER,aux542_INTEGER,aux556_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux393_INTEGER,aux411_INTEGER,aux419_INTEGER,aux430_INTEGER,aux454_INTEGER,aux464_INTEGER,aux468_INTEGER,aux505_INTEGER,aux521_INTEGER,aux526_INTEGER,aux539_INTEGER,aux542_INTEGER,aux556_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,1],[aux393_INTEGER,aux411_INTEGER,aux419_INTEGER,aux430_INTEGER,aux439_INTEGER,aux454_INTEGER,aux464_INTEGER,aux468_INTEGER,aux505_INTEGER,aux521_INTEGER,aux526_INTEGER,aux542_INTEGER,aux556_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,1],[aux393_INTEGER,aux411_INTEGER,aux419_INTEGER,aux430_INTEGER,aux439_INTEGER,aux454_INTEGER,aux464_INTEGER,aux468_INTEGER,aux492_INTEGER,aux505_INTEGER,aux526_INTEGER,aux542_INTEGER,aux556_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux393_INTEGER,aux411_INTEGER,aux430_INTEGER,aux439_INTEGER,aux454_INTEGER,aux464_INTEGER,aux468_INTEGER,aux492_INTEGER,aux505_INTEGER,aux506_INTEGER,aux526_INTEGER,aux542_INTEGER,aux556_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux411_INTEGER,aux430_INTEGER,aux439_INTEGER,aux454_INTEGER,aux464_INTEGER,aux468_INTEGER,aux492_INTEGER,aux505_INTEGER,aux506_INTEGER,aux526_INTEGER,aux532_INTEGER,aux542_INTEGER,aux556_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,1],[aux411_INTEGER,aux430_INTEGER,aux439_INTEGER,aux454_INTEGER,aux464_INTEGER,aux468_INTEGER,aux492_INTEGER,aux505_INTEGER,aux506_INTEGER,aux526_INTEGER,aux532_INTEGER,aux542_INTEGER,aux556_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,1],[aux411_INTEGER,aux428_INTEGER,aux430_INTEGER,aux439_INTEGER,aux464_INTEGER,aux468_INTEGER,aux492_INTEGER,aux505_INTEGER,aux506_INTEGER,aux526_INTEGER,aux532_INTEGER,aux542_INTEGER,aux556_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,1],[aux405_INTEGER,aux411_INTEGER,aux428_INTEGER,aux430_INTEGER,aux439_INTEGER,aux468_INTEGER,aux492_INTEGER,aux505_INTEGER,aux506_INTEGER,aux526_INTEGER,aux532_INTEGER,aux542_INTEGER,aux556_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux405_INTEGER,aux428_INTEGER,aux430_INTEGER,aux439_INTEGER,aux468_INTEGER,aux492_INTEGER,aux505_INTEGER,aux506_INTEGER,aux526_INTEGER,aux532_INTEGER,aux542_INTEGER,aux547_INTEGER,aux556_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux405_INTEGER,aux428_INTEGER,aux430_INTEGER,aux439_INTEGER,aux468_INTEGER,aux492_INTEGER,aux505_INTEGER,aux506_INTEGER,aux528_INTEGER,aux532_INTEGER,aux542_INTEGER,aux547_INTEGER,aux556_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux405_INTEGER,aux428_INTEGER,aux430_INTEGER,aux439_INTEGER,aux468_INTEGER,aux492_INTEGER,aux505_INTEGER,aux506_INTEGER,aux509_INTEGER,aux528_INTEGER,aux532_INTEGER,aux542_INTEGER,aux547_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux405_INTEGER,aux428_INTEGER,aux430_INTEGER,aux439_INTEGER,aux468_INTEGER,aux492_INTEGER,aux506_INTEGER,aux509_INTEGER,aux528_INTEGER,aux532_INTEGER,aux542_INTEGER,aux547_INTEGER,aux549_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,1],[aux405_INTEGER,aux428_INTEGER,aux430_INTEGER,aux439_INTEGER,aux468_INTEGER,aux492_INTEGER,aux506_INTEGER,aux509_INTEGER,aux528_INTEGER,aux532_INTEGER,aux542_INTEGER,aux547_INTEGER,aux549_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,1],[aux405_INTEGER,aux428_INTEGER,aux430_INTEGER,aux439_INTEGER,aux462_INTEGER,aux492_INTEGER,aux506_INTEGER,aux509_INTEGER,aux528_INTEGER,aux532_INTEGER,aux542_INTEGER,aux547_INTEGER,aux549_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,1],[aux405_INTEGER,aux428_INTEGER,aux430_INTEGER,aux439_INTEGER,aux440_INTEGER,aux462_INTEGER,aux492_INTEGER,aux506_INTEGER,aux509_INTEGER,aux528_INTEGER,aux532_INTEGER,aux547_INTEGER,aux549_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,1],[aux405_INTEGER,aux426_INTEGER,aux428_INTEGER,aux439_INTEGER,aux440_INTEGER,aux462_INTEGER,aux492_INTEGER,aux506_INTEGER,aux509_INTEGER,aux528_INTEGER,aux532_INTEGER,aux547_INTEGER,aux549_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,1],[aux402_INTEGER,aux405_INTEGER,aux426_INTEGER,aux428_INTEGER,aux440_INTEGER,aux462_INTEGER,aux492_INTEGER,aux506_INTEGER,aux509_INTEGER,aux528_INTEGER,aux532_INTEGER,aux547_INTEGER,aux549_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,1],[aux402_INTEGER,aux405_INTEGER,aux426_INTEGER,aux428_INTEGER,aux440_INTEGER,aux462_INTEGER,aux506_INTEGER,aux509_INTEGER,aux528_INTEGER,aux532_INTEGER,aux546_INTEGER,aux547_INTEGER,aux549_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,1],[aux402_INTEGER,aux405_INTEGER,aux421_INTEGER,aux426_INTEGER,aux428_INTEGER,aux440_INTEGER,aux462_INTEGER,aux509_INTEGER,aux528_INTEGER,aux532_INTEGER,aux546_INTEGER,aux547_INTEGER,aux549_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux402_INTEGER,aux405_INTEGER,aux421_INTEGER,aux426_INTEGER,aux428_INTEGER,aux440_INTEGER,aux462_INTEGER,aux509_INTEGER,aux528_INTEGER,aux532_INTEGER,aux546_INTEGER,aux547_INTEGER,aux549_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux398_INTEGER,aux402_INTEGER,aux405_INTEGER,aux421_INTEGER,aux426_INTEGER,aux428_INTEGER,aux440_INTEGER,aux462_INTEGER,aux509_INTEGER,aux528_INTEGER,aux546_INTEGER,aux547_INTEGER,aux549_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux398_INTEGER,aux402_INTEGER,aux405_INTEGER,aux421_INTEGER,aux426_INTEGER,aux440_INTEGER,aux462_INTEGER,aux509_INTEGER,aux528_INTEGER,aux536_INTEGER,aux546_INTEGER,aux547_INTEGER,aux549_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux398_INTEGER,aux402_INTEGER,aux421_INTEGER,aux426_INTEGER,aux440_INTEGER,aux462_INTEGER,aux504_INTEGER,aux509_INTEGER,aux528_INTEGER,aux536_INTEGER,aux546_INTEGER,aux547_INTEGER,aux549_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux398_INTEGER,aux402_INTEGER,aux421_INTEGER,aux426_INTEGER,aux440_INTEGER,aux462_INTEGER,aux476_INTEGER,aux504_INTEGER,aux509_INTEGER,aux528_INTEGER,aux536_INTEGER,aux546_INTEGER,aux549_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux398_INTEGER,aux402_INTEGER,aux421_INTEGER,aux426_INTEGER,aux440_INTEGER,aux443_INTEGER,aux462_INTEGER,aux476_INTEGER,aux504_INTEGER,aux509_INTEGER,aux536_INTEGER,aux546_INTEGER,aux549_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux398_INTEGER,aux402_INTEGER,aux407_INTEGER,aux421_INTEGER,aux426_INTEGER,aux440_INTEGER,aux443_INTEGER,aux462_INTEGER,aux476_INTEGER,aux504_INTEGER,aux536_INTEGER,aux546_INTEGER,aux549_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux398_INTEGER,aux402_INTEGER,aux407_INTEGER,aux421_INTEGER,aux426_INTEGER,aux440_INTEGER,aux443_INTEGER,aux462_INTEGER,aux476_INTEGER,aux504_INTEGER,aux536_INTEGER,aux546_INTEGER,aux549_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux396_INTEGER,aux398_INTEGER,aux402_INTEGER,aux407_INTEGER,aux421_INTEGER,aux426_INTEGER,aux440_INTEGER,aux443_INTEGER,aux462_INTEGER,aux476_INTEGER,aux504_INTEGER,aux536_INTEGER,aux546_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux396_INTEGER,aux398_INTEGER,aux402_INTEGER,aux407_INTEGER,aux421_INTEGER,aux426_INTEGER,aux432_INTEGER,aux440_INTEGER,aux443_INTEGER,aux476_INTEGER,aux504_INTEGER,aux536_INTEGER,aux546_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux396_INTEGER,aux398_INTEGER,aux402_INTEGER,aux407_INTEGER,aux421_INTEGER,aux426_INTEGER,aux432_INTEGER,aux443_INTEGER,aux476_INTEGER,aux504_INTEGER,aux536_INTEGER,aux544_INTEGER,aux546_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux396_INTEGER,aux398_INTEGER,aux402_INTEGER,aux407_INTEGER,aux421_INTEGER,aux432_INTEGER,aux443_INTEGER,aux476_INTEGER,aux495_INTEGER,aux504_INTEGER,aux536_INTEGER,aux544_INTEGER,aux546_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux396_INTEGER,aux398_INTEGER,aux407_INTEGER,aux421_INTEGER,aux432_INTEGER,aux441_INTEGER,aux443_INTEGER,aux476_INTEGER,aux495_INTEGER,aux504_INTEGER,aux536_INTEGER,aux544_INTEGER,aux546_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux396_INTEGER,aux398_INTEGER,aux407_INTEGER,aux421_INTEGER,aux432_INTEGER,aux441_INTEGER,aux443_INTEGER,aux476_INTEGER,aux495_INTEGER,aux504_INTEGER,aux508_INTEGER,aux536_INTEGER,aux544_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux396_INTEGER,aux398_INTEGER,aux407_INTEGER,aux421_INTEGER,aux432_INTEGER,aux441_INTEGER,aux443_INTEGER,aux476_INTEGER,aux495_INTEGER,aux504_INTEGER,aux508_INTEGER,aux536_INTEGER,aux544_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux396_INTEGER,aux398_INTEGER,aux407_INTEGER,aux424_INTEGER,aux432_INTEGER,aux441_INTEGER,aux443_INTEGER,aux476_INTEGER,aux495_INTEGER,aux504_INTEGER,aux508_INTEGER,aux536_INTEGER,aux544_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux396_INTEGER,aux407_INTEGER,aux424_INTEGER,aux432_INTEGER,aux441_INTEGER,aux443_INTEGER,aux449_INTEGER,aux476_INTEGER,aux495_INTEGER,aux504_INTEGER,aux508_INTEGER,aux536_INTEGER,aux544_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,1],[aux396_INTEGER,aux407_INTEGER,aux424_INTEGER,aux432_INTEGER,aux441_INTEGER,aux443_INTEGER,aux449_INTEGER,aux476_INTEGER,aux485_INTEGER,aux495_INTEGER,aux504_INTEGER,aux508_INTEGER,aux544_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux396_INTEGER,aux407_INTEGER,aux424_INTEGER,aux432_INTEGER,aux441_INTEGER,aux443_INTEGER,aux449_INTEGER,aux476_INTEGER,aux485_INTEGER,aux495_INTEGER,aux508_INTEGER,aux514_INTEGER,aux544_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux396_INTEGER,aux407_INTEGER,aux424_INTEGER,aux432_INTEGER,aux441_INTEGER,aux443_INTEGER,aux449_INTEGER,aux485_INTEGER,aux495_INTEGER,aux508_INTEGER,aux514_INTEGER,aux541_INTEGER,aux544_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux396_INTEGER,aux407_INTEGER,aux424_INTEGER,aux432_INTEGER,aux441_INTEGER,aux449_INTEGER,aux467_INTEGER,aux485_INTEGER,aux495_INTEGER,aux508_INTEGER,aux514_INTEGER,aux541_INTEGER,aux544_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,1],[aux396_INTEGER,aux407_INTEGER,aux424_INTEGER,aux432_INTEGER,aux441_INTEGER,aux449_INTEGER,aux467_INTEGER,aux485_INTEGER,aux495_INTEGER,aux508_INTEGER,aux514_INTEGER,aux541_INTEGER,aux544_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,1],[aux396_INTEGER,aux403_INTEGER,aux424_INTEGER,aux432_INTEGER,aux441_INTEGER,aux449_INTEGER,aux467_INTEGER,aux485_INTEGER,aux495_INTEGER,aux508_INTEGER,aux514_INTEGER,aux541_INTEGER,aux544_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,1],[aux403_INTEGER,aux424_INTEGER,aux427_INTEGER,aux432_INTEGER,aux441_INTEGER,aux449_INTEGER,aux467_INTEGER,aux485_INTEGER,aux495_INTEGER,aux508_INTEGER,aux514_INTEGER,aux541_INTEGER,aux544_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,1],[aux403_INTEGER,aux424_INTEGER,aux427_INTEGER,aux441_INTEGER,aux442_INTEGER,aux449_INTEGER,aux467_INTEGER,aux485_INTEGER,aux495_INTEGER,aux508_INTEGER,aux514_INTEGER,aux541_INTEGER,aux544_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,1],[aux403_INTEGER,aux424_INTEGER,aux427_INTEGER,aux441_INTEGER,aux442_INTEGER,aux449_INTEGER,aux465_INTEGER,aux467_INTEGER,aux485_INTEGER,aux495_INTEGER,aux508_INTEGER,aux514_INTEGER,aux541_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,1],[aux403_INTEGER,aux424_INTEGER,aux427_INTEGER,aux441_INTEGER,aux442_INTEGER,aux449_INTEGER,aux465_INTEGER,aux467_INTEGER,aux485_INTEGER,aux489_INTEGER,aux508_INTEGER,aux514_INTEGER,aux541_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,1],[aux403_INTEGER,aux424_INTEGER,aux427_INTEGER,aux433_INTEGER,aux442_INTEGER,aux449_INTEGER,aux465_INTEGER,aux467_INTEGER,aux485_INTEGER,aux489_INTEGER,aux508_INTEGER,aux514_INTEGER,aux541_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,1],[aux403_INTEGER,aux424_INTEGER,aux427_INTEGER,aux433_INTEGER,aux442_INTEGER,aux449_INTEGER,aux465_INTEGER,aux467_INTEGER,aux485_INTEGER,aux489_INTEGER,aux508_INTEGER,aux514_INTEGER,aux541_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux403_INTEGER,aux418_INTEGER,aux424_INTEGER,aux427_INTEGER,aux433_INTEGER,aux442_INTEGER,aux449_INTEGER,aux465_INTEGER,aux467_INTEGER,aux485_INTEGER,aux489_INTEGER,aux514_INTEGER,aux541_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux392_INTEGER,aux403_INTEGER,aux418_INTEGER,aux427_INTEGER,aux433_INTEGER,aux442_INTEGER,aux449_INTEGER,aux465_INTEGER,aux467_INTEGER,aux485_INTEGER,aux489_INTEGER,aux514_INTEGER,aux541_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,1],[aux392_INTEGER,aux403_INTEGER,aux418_INTEGER,aux427_INTEGER,aux433_INTEGER,aux442_INTEGER,aux465_INTEGER,aux467_INTEGER,aux485_INTEGER,aux489_INTEGER,aux514_INTEGER,aux540_INTEGER,aux541_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,1],[aux392_INTEGER,aux403_INTEGER,aux418_INTEGER,aux427_INTEGER,aux433_INTEGER,aux442_INTEGER,aux465_INTEGER,aux467_INTEGER,aux489_INTEGER,aux514_INTEGER,aux522_INTEGER,aux540_INTEGER,aux541_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,1],[aux392_INTEGER,aux403_INTEGER,aux418_INTEGER,aux427_INTEGER,aux433_INTEGER,aux442_INTEGER,aux465_INTEGER,aux467_INTEGER,aux489_INTEGER,aux501_INTEGER,aux522_INTEGER,aux540_INTEGER,aux541_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,1],[aux392_INTEGER,aux403_INTEGER,aux406_INTEGER,aux418_INTEGER,aux427_INTEGER,aux433_INTEGER,aux442_INTEGER,aux465_INTEGER,aux467_INTEGER,aux489_INTEGER,aux501_INTEGER,aux522_INTEGER,aux540_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux392_INTEGER,aux403_INTEGER,aux406_INTEGER,aux418_INTEGER,aux427_INTEGER,aux433_INTEGER,aux442_INTEGER,aux465_INTEGER,aux467_INTEGER,aux489_INTEGER,aux501_INTEGER,aux522_INTEGER,aux540_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux392_INTEGER,aux403_INTEGER,aux406_INTEGER,aux418_INTEGER,aux427_INTEGER,aux433_INTEGER,aux442_INTEGER,aux465_INTEGER,aux489_INTEGER,aux501_INTEGER,aux522_INTEGER,aux540_INTEGER,aux548_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux392_INTEGER,aux406_INTEGER,aux418_INTEGER,aux427_INTEGER,aux433_INTEGER,aux442_INTEGER,aux465_INTEGER,aux489_INTEGER,aux498_INTEGER,aux501_INTEGER,aux522_INTEGER,aux540_INTEGER,aux548_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux392_INTEGER,aux406_INTEGER,aux418_INTEGER,aux433_INTEGER,aux442_INTEGER,aux463_INTEGER,aux465_INTEGER,aux489_INTEGER,aux498_INTEGER,aux501_INTEGER,aux522_INTEGER,aux540_INTEGER,aux548_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux392_INTEGER,aux406_INTEGER,aux418_INTEGER,aux433_INTEGER,aux451_INTEGER,aux463_INTEGER,aux465_INTEGER,aux489_INTEGER,aux498_INTEGER,aux501_INTEGER,aux522_INTEGER,aux540_INTEGER,aux548_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux392_INTEGER,aux400_INTEGER,aux406_INTEGER,aux418_INTEGER,aux433_INTEGER,aux451_INTEGER,aux463_INTEGER,aux489_INTEGER,aux498_INTEGER,aux501_INTEGER,aux522_INTEGER,aux540_INTEGER,aux548_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux392_INTEGER,aux400_INTEGER,aux406_INTEGER,aux418_INTEGER,aux433_INTEGER,aux451_INTEGER,aux463_INTEGER,aux471_INTEGER,aux498_INTEGER,aux501_INTEGER,aux522_INTEGER,aux540_INTEGER,aux548_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,1],[aux392_INTEGER,aux400_INTEGER,aux406_INTEGER,aux418_INTEGER,aux433_INTEGER,aux451_INTEGER,aux463_INTEGER,aux471_INTEGER,aux498_INTEGER,aux501_INTEGER,aux522_INTEGER,aux540_INTEGER,aux548_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux392_INTEGER,aux400_INTEGER,aux406_INTEGER,aux418_INTEGER,aux451_INTEGER,aux463_INTEGER,aux471_INTEGER,aux496_INTEGER,aux498_INTEGER,aux501_INTEGER,aux522_INTEGER,aux540_INTEGER,aux548_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux392_INTEGER,aux400_INTEGER,aux406_INTEGER,aux451_INTEGER,aux463_INTEGER,aux471_INTEGER,aux479_INTEGER,aux496_INTEGER,aux498_INTEGER,aux501_INTEGER,aux522_INTEGER,aux540_INTEGER,aux548_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux400_INTEGER,aux406_INTEGER,aux451_INTEGER,aux463_INTEGER,aux471_INTEGER,aux479_INTEGER,aux496_INTEGER,aux498_INTEGER,aux501_INTEGER,aux522_INTEGER,aux537_INTEGER,aux540_INTEGER,aux548_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux400_INTEGER,aux406_INTEGER,aux451_INTEGER,aux463_INTEGER,aux471_INTEGER,aux479_INTEGER,aux496_INTEGER,aux498_INTEGER,aux501_INTEGER,aux516_INTEGER,aux522_INTEGER,aux537_INTEGER,aux548_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux400_INTEGER,aux406_INTEGER,aux412_INTEGER,aux451_INTEGER,aux463_INTEGER,aux471_INTEGER,aux479_INTEGER,aux496_INTEGER,aux498_INTEGER,aux501_INTEGER,aux516_INTEGER,aux537_INTEGER,aux548_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux400_INTEGER,aux406_INTEGER,aux412_INTEGER,aux444_INTEGER,aux451_INTEGER,aux463_INTEGER,aux471_INTEGER,aux479_INTEGER,aux496_INTEGER,aux498_INTEGER,aux516_INTEGER,aux537_INTEGER,aux548_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux400_INTEGER,aux406_INTEGER,aux412_INTEGER,aux444_INTEGER,aux451_INTEGER,aux463_INTEGER,aux471_INTEGER,aux479_INTEGER,aux496_INTEGER,aux498_INTEGER,aux516_INTEGER,aux537_INTEGER,aux548_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux400_INTEGER,aux412_INTEGER,aux444_INTEGER,aux451_INTEGER,aux463_INTEGER,aux471_INTEGER,aux474_INTEGER,aux479_INTEGER,aux496_INTEGER,aux498_INTEGER,aux516_INTEGER,aux537_INTEGER,aux548_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux400_INTEGER,aux412_INTEGER,aux444_INTEGER,aux450_INTEGER,aux451_INTEGER,aux463_INTEGER,aux471_INTEGER,aux474_INTEGER,aux479_INTEGER,aux496_INTEGER,aux498_INTEGER,aux516_INTEGER,aux537_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux400_INTEGER,aux412_INTEGER,aux444_INTEGER,aux450_INTEGER,aux451_INTEGER,aux463_INTEGER,aux471_INTEGER,aux474_INTEGER,aux479_INTEGER,aux496_INTEGER,aux515_INTEGER,aux516_INTEGER,aux537_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux400_INTEGER,aux412_INTEGER,aux444_INTEGER,aux450_INTEGER,aux451_INTEGER,aux471_INTEGER,aux474_INTEGER,aux479_INTEGER,aux494_INTEGER,aux496_INTEGER,aux515_INTEGER,aux516_INTEGER,aux537_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux400_INTEGER,aux412_INTEGER,aux444_INTEGER,aux450_INTEGER,aux471_INTEGER,aux474_INTEGER,aux479_INTEGER,aux494_INTEGER,aux496_INTEGER,aux515_INTEGER,aux516_INTEGER,aux537_INTEGER,aux554_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux401_INTEGER,aux412_INTEGER,aux444_INTEGER,aux450_INTEGER,aux471_INTEGER,aux474_INTEGER,aux479_INTEGER,aux494_INTEGER,aux496_INTEGER,aux515_INTEGER,aux516_INTEGER,aux537_INTEGER,aux554_INTEGER,2],0);
constraint int_lin_le([-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux401_INTEGER,aux412_INTEGER,aux444_INTEGER,aux450_INTEGER,aux471_INTEGER,aux474_INTEGER,aux479_INTEGER,aux494_INTEGER,aux496_INTEGER,aux515_INTEGER,aux516_INTEGER,aux537_INTEGER,aux554_INTEGER,2],0);
constraint int_lin_le([-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux401_INTEGER,aux412_INTEGER,aux444_INTEGER,aux450_INTEGER,aux474_INTEGER,aux479_INTEGER,aux494_INTEGER,aux496_INTEGER,aux515_INTEGER,aux516_INTEGER,aux537_INTEGER,aux554_INTEGER,aux555_INTEGER,2],0);
constraint int_lin_le([-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux401_INTEGER,aux412_INTEGER,aux444_INTEGER,aux450_INTEGER,aux474_INTEGER,aux479_INTEGER,aux494_INTEGER,aux515_INTEGER,aux516_INTEGER,aux524_INTEGER,aux537_INTEGER,aux554_INTEGER,aux555_INTEGER,2],0);
constraint int_lin_le([-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux401_INTEGER,aux412_INTEGER,aux444_INTEGER,aux450_INTEGER,aux474_INTEGER,aux493_INTEGER,aux494_INTEGER,aux515_INTEGER,aux516_INTEGER,aux524_INTEGER,aux537_INTEGER,aux554_INTEGER,aux555_INTEGER,2],0);
constraint int_lin_le([-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux401_INTEGER,aux412_INTEGER,aux444_INTEGER,aux450_INTEGER,aux461_INTEGER,aux474_INTEGER,aux493_INTEGER,aux494_INTEGER,aux515_INTEGER,aux516_INTEGER,aux524_INTEGER,aux554_INTEGER,aux555_INTEGER,2],0);
constraint int_lin_le([-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux401_INTEGER,aux412_INTEGER,aux420_INTEGER,aux444_INTEGER,aux450_INTEGER,aux461_INTEGER,aux474_INTEGER,aux493_INTEGER,aux494_INTEGER,aux515_INTEGER,aux524_INTEGER,aux554_INTEGER,aux555_INTEGER,2],0);
constraint int_lin_le([-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux401_INTEGER,aux420_INTEGER,aux444_INTEGER,aux450_INTEGER,aux453_INTEGER,aux461_INTEGER,aux474_INTEGER,aux493_INTEGER,aux494_INTEGER,aux515_INTEGER,aux524_INTEGER,aux554_INTEGER,aux555_INTEGER,2],0);
constraint int_lin_le([-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux401_INTEGER,aux420_INTEGER,aux444_INTEGER,aux450_INTEGER,aux453_INTEGER,aux461_INTEGER,aux474_INTEGER,aux493_INTEGER,aux494_INTEGER,aux515_INTEGER,aux524_INTEGER,aux554_INTEGER,aux555_INTEGER,2],0);
constraint int_lin_le([-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux401_INTEGER,aux413_INTEGER,aux420_INTEGER,aux450_INTEGER,aux453_INTEGER,aux461_INTEGER,aux474_INTEGER,aux493_INTEGER,aux494_INTEGER,aux515_INTEGER,aux524_INTEGER,aux554_INTEGER,aux555_INTEGER,2],0);
constraint int_lin_le([-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux401_INTEGER,aux413_INTEGER,aux420_INTEGER,aux450_INTEGER,aux453_INTEGER,aux461_INTEGER,aux493_INTEGER,aux494_INTEGER,aux515_INTEGER,aux524_INTEGER,aux529_INTEGER,aux554_INTEGER,aux555_INTEGER,2],0);
constraint int_lin_le([-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux401_INTEGER,aux413_INTEGER,aux420_INTEGER,aux453_INTEGER,aux461_INTEGER,aux482_INTEGER,aux493_INTEGER,aux494_INTEGER,aux515_INTEGER,aux524_INTEGER,aux529_INTEGER,aux554_INTEGER,aux555_INTEGER,2],0);
constraint int_lin_le([-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux401_INTEGER,aux413_INTEGER,aux420_INTEGER,aux453_INTEGER,aux461_INTEGER,aux482_INTEGER,aux493_INTEGER,aux494_INTEGER,aux511_INTEGER,aux524_INTEGER,aux529_INTEGER,aux554_INTEGER,aux555_INTEGER,2],0);
constraint int_lin_le([-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux401_INTEGER,aux413_INTEGER,aux420_INTEGER,aux453_INTEGER,aux460_INTEGER,aux461_INTEGER,aux482_INTEGER,aux493_INTEGER,aux511_INTEGER,aux524_INTEGER,aux529_INTEGER,aux554_INTEGER,aux555_INTEGER,2],0);
constraint int_lin_le([-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux401_INTEGER,aux413_INTEGER,aux420_INTEGER,aux453_INTEGER,aux460_INTEGER,aux461_INTEGER,aux482_INTEGER,aux493_INTEGER,aux511_INTEGER,aux524_INTEGER,aux529_INTEGER,aux535_INTEGER,aux555_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-2,-1,1],[aux401_INTEGER,aux413_INTEGER,aux420_INTEGER,aux453_INTEGER,aux460_INTEGER,aux461_INTEGER,aux482_INTEGER,aux493_INTEGER,aux511_INTEGER,aux524_INTEGER,aux529_INTEGER,aux535_INTEGER,aux555_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-2,-1,1],[aux413_INTEGER,aux420_INTEGER,aux431_INTEGER,aux453_INTEGER,aux460_INTEGER,aux461_INTEGER,aux482_INTEGER,aux493_INTEGER,aux511_INTEGER,aux524_INTEGER,aux529_INTEGER,aux535_INTEGER,aux555_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux413_INTEGER,aux420_INTEGER,aux431_INTEGER,aux453_INTEGER,aux457_INTEGER,aux460_INTEGER,aux461_INTEGER,aux482_INTEGER,aux493_INTEGER,aux511_INTEGER,aux524_INTEGER,aux529_INTEGER,aux535_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux413_INTEGER,aux420_INTEGER,aux431_INTEGER,aux453_INTEGER,aux457_INTEGER,aux460_INTEGER,aux461_INTEGER,aux482_INTEGER,aux491_INTEGER,aux493_INTEGER,aux511_INTEGER,aux529_INTEGER,aux535_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux413_INTEGER,aux420_INTEGER,aux431_INTEGER,aux453_INTEGER,aux457_INTEGER,aux460_INTEGER,aux461_INTEGER,aux482_INTEGER,aux491_INTEGER,aux511_INTEGER,aux517_INTEGER,aux529_INTEGER,aux535_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-2,-1,1],[aux413_INTEGER,aux420_INTEGER,aux431_INTEGER,aux453_INTEGER,aux457_INTEGER,aux460_INTEGER,aux482_INTEGER,aux491_INTEGER,aux511_INTEGER,aux517_INTEGER,aux529_INTEGER,aux535_INTEGER,aux550_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-2,-1,1],[aux413_INTEGER,aux416_INTEGER,aux431_INTEGER,aux453_INTEGER,aux457_INTEGER,aux460_INTEGER,aux482_INTEGER,aux491_INTEGER,aux511_INTEGER,aux517_INTEGER,aux529_INTEGER,aux535_INTEGER,aux550_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,1],[aux413_INTEGER,aux416_INTEGER,aux431_INTEGER,aux453_INTEGER,aux457_INTEGER,aux460_INTEGER,aux482_INTEGER,aux491_INTEGER,aux511_INTEGER,aux517_INTEGER,aux529_INTEGER,aux535_INTEGER,aux550_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,1],[aux413_INTEGER,aux416_INTEGER,aux431_INTEGER,aux457_INTEGER,aux460_INTEGER,aux482_INTEGER,aux491_INTEGER,aux499_INTEGER,aux511_INTEGER,aux517_INTEGER,aux529_INTEGER,aux535_INTEGER,aux550_INTEGER,2],0);
constraint int_lin_le([-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,1],[aux416_INTEGER,aux431_INTEGER,aux436_INTEGER,aux457_INTEGER,aux460_INTEGER,aux482_INTEGER,aux491_INTEGER,aux499_INTEGER,aux511_INTEGER,aux517_INTEGER,aux529_INTEGER,aux535_INTEGER,aux550_INTEGER,2],0);
constraint int_lin_le([-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,1],[aux416_INTEGER,aux431_INTEGER,aux436_INTEGER,aux456_INTEGER,aux457_INTEGER,aux460_INTEGER,aux482_INTEGER,aux491_INTEGER,aux499_INTEGER,aux511_INTEGER,aux517_INTEGER,aux535_INTEGER,aux550_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,1],[aux390_INTEGER,aux416_INTEGER,aux431_INTEGER,aux436_INTEGER,aux456_INTEGER,aux457_INTEGER,aux460_INTEGER,aux491_INTEGER,aux499_INTEGER,aux511_INTEGER,aux517_INTEGER,aux535_INTEGER,aux550_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,1],[aux390_INTEGER,aux415_INTEGER,aux416_INTEGER,aux431_INTEGER,aux436_INTEGER,aux456_INTEGER,aux457_INTEGER,aux460_INTEGER,aux491_INTEGER,aux499_INTEGER,aux517_INTEGER,aux535_INTEGER,aux550_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,1],[aux390_INTEGER,aux415_INTEGER,aux416_INTEGER,aux431_INTEGER,aux436_INTEGER,aux456_INTEGER,aux457_INTEGER,aux491_INTEGER,aux499_INTEGER,aux517_INTEGER,aux534_INTEGER,aux535_INTEGER,aux550_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux390_INTEGER,aux415_INTEGER,aux416_INTEGER,aux431_INTEGER,aux436_INTEGER,aux456_INTEGER,aux457_INTEGER,aux491_INTEGER,aux499_INTEGER,aux517_INTEGER,aux534_INTEGER,aux535_INTEGER,aux550_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,1],[aux390_INTEGER,aux415_INTEGER,aux416_INTEGER,aux431_INTEGER,aux436_INTEGER,aux456_INTEGER,aux457_INTEGER,aux487_INTEGER,aux491_INTEGER,aux499_INTEGER,aux517_INTEGER,aux534_INTEGER,aux550_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux390_INTEGER,aux415_INTEGER,aux416_INTEGER,aux436_INTEGER,aux456_INTEGER,aux457_INTEGER,aux487_INTEGER,aux491_INTEGER,aux499_INTEGER,aux517_INTEGER,aux534_INTEGER,aux543_INTEGER,aux550_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux390_INTEGER,aux415_INTEGER,aux416_INTEGER,aux436_INTEGER,aux456_INTEGER,aux487_INTEGER,aux491_INTEGER,aux499_INTEGER,aux517_INTEGER,aux525_INTEGER,aux534_INTEGER,aux543_INTEGER,aux550_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux390_INTEGER,aux415_INTEGER,aux416_INTEGER,aux425_INTEGER,aux436_INTEGER,aux456_INTEGER,aux487_INTEGER,aux499_INTEGER,aux517_INTEGER,aux525_INTEGER,aux534_INTEGER,aux543_INTEGER,aux550_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux390_INTEGER,aux397_INTEGER,aux415_INTEGER,aux416_INTEGER,aux425_INTEGER,aux436_INTEGER,aux456_INTEGER,aux487_INTEGER,aux499_INTEGER,aux525_INTEGER,aux534_INTEGER,aux543_INTEGER,aux550_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-2,-1,1],[aux390_INTEGER,aux397_INTEGER,aux415_INTEGER,aux416_INTEGER,aux425_INTEGER,aux436_INTEGER,aux456_INTEGER,aux469_INTEGER,aux487_INTEGER,aux499_INTEGER,aux525_INTEGER,aux534_INTEGER,aux543_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,1],[aux390_INTEGER,aux397_INTEGER,aux415_INTEGER,aux416_INTEGER,aux425_INTEGER,aux436_INTEGER,aux456_INTEGER,aux469_INTEGER,aux487_INTEGER,aux499_INTEGER,aux525_INTEGER,aux534_INTEGER,aux543_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,1],[aux390_INTEGER,aux397_INTEGER,aux415_INTEGER,aux425_INTEGER,aux436_INTEGER,aux456_INTEGER,aux469_INTEGER,aux487_INTEGER,aux499_INTEGER,aux525_INTEGER,aux533_INTEGER,aux534_INTEGER,aux543_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,1],[aux390_INTEGER,aux397_INTEGER,aux415_INTEGER,aux425_INTEGER,aux436_INTEGER,aux456_INTEGER,aux469_INTEGER,aux484_INTEGER,aux487_INTEGER,aux525_INTEGER,aux533_INTEGER,aux534_INTEGER,aux543_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,1],[aux390_INTEGER,aux397_INTEGER,aux415_INTEGER,aux425_INTEGER,aux456_INTEGER,aux469_INTEGER,aux472_INTEGER,aux484_INTEGER,aux487_INTEGER,aux525_INTEGER,aux533_INTEGER,aux534_INTEGER,aux543_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,1],[aux390_INTEGER,aux397_INTEGER,aux415_INTEGER,aux423_INTEGER,aux425_INTEGER,aux469_INTEGER,aux472_INTEGER,aux484_INTEGER,aux487_INTEGER,aux525_INTEGER,aux533_INTEGER,aux534_INTEGER,aux543_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,1],[aux397_INTEGER,aux408_INTEGER,aux415_INTEGER,aux423_INTEGER,aux425_INTEGER,aux469_INTEGER,aux472_INTEGER,aux484_INTEGER,aux487_INTEGER,aux525_INTEGER,aux533_INTEGER,aux534_INTEGER,aux543_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-2,-1,1],[aux397_INTEGER,aux408_INTEGER,aux423_INTEGER,aux425_INTEGER,aux469_INTEGER,aux472_INTEGER,aux484_INTEGER,aux487_INTEGER,aux502_INTEGER,aux525_INTEGER,aux533_INTEGER,aux534_INTEGER,aux543_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux397_INTEGER,aux408_INTEGER,aux423_INTEGER,aux425_INTEGER,aux469_INTEGER,aux472_INTEGER,aux484_INTEGER,aux487_INTEGER,aux502_INTEGER,aux525_INTEGER,aux533_INTEGER,aux534_INTEGER,aux543_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux397_INTEGER,aux408_INTEGER,aux423_INTEGER,aux425_INTEGER,aux469_INTEGER,aux472_INTEGER,aux484_INTEGER,aux487_INTEGER,aux502_INTEGER,aux510_INTEGER,aux525_INTEGER,aux533_INTEGER,aux543_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux397_INTEGER,aux408_INTEGER,aux423_INTEGER,aux425_INTEGER,aux469_INTEGER,aux472_INTEGER,aux480_INTEGER,aux484_INTEGER,aux502_INTEGER,aux510_INTEGER,aux525_INTEGER,aux533_INTEGER,aux543_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux397_INTEGER,aux408_INTEGER,aux423_INTEGER,aux425_INTEGER,aux469_INTEGER,aux472_INTEGER,aux480_INTEGER,aux484_INTEGER,aux502_INTEGER,aux510_INTEGER,aux525_INTEGER,aux530_INTEGER,aux533_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,1],[aux397_INTEGER,aux408_INTEGER,aux414_INTEGER,aux423_INTEGER,aux425_INTEGER,aux469_INTEGER,aux472_INTEGER,aux480_INTEGER,aux484_INTEGER,aux502_INTEGER,aux510_INTEGER,aux530_INTEGER,aux533_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux397_INTEGER,aux408_INTEGER,aux414_INTEGER,aux423_INTEGER,aux469_INTEGER,aux470_INTEGER,aux472_INTEGER,aux480_INTEGER,aux484_INTEGER,aux502_INTEGER,aux510_INTEGER,aux530_INTEGER,aux533_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux408_INTEGER,aux414_INTEGER,aux423_INTEGER,aux437_INTEGER,aux469_INTEGER,aux470_INTEGER,aux472_INTEGER,aux480_INTEGER,aux484_INTEGER,aux502_INTEGER,aux510_INTEGER,aux530_INTEGER,aux533_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux408_INTEGER,aux414_INTEGER,aux423_INTEGER,aux437_INTEGER,aux469_INTEGER,aux470_INTEGER,aux472_INTEGER,aux480_INTEGER,aux484_INTEGER,aux502_INTEGER,aux510_INTEGER,aux530_INTEGER,aux533_INTEGER,2],0);
constraint array_bool_or([aux486_BOOL,aux953_BOOL],true);
constraint array_bool_or([aux473_BOOL,aux954_BOOL],true);
constraint array_bool_or([aux466_BOOL,aux955_BOOL],true);
constraint array_bool_or([aux446_BOOL,aux956_BOOL],true);
constraint array_bool_or([aux452_BOOL,aux957_BOOL],true);
constraint array_bool_or([aux477_BOOL,aux958_BOOL],true);
constraint array_bool_or([aux399_BOOL,aux959_BOOL],true);
constraint array_bool_or([aux410_BOOL,aux960_BOOL],true);
constraint array_bool_or([aux422_BOOL,aux961_BOOL],true);
constraint array_bool_or([aux435_BOOL,aux962_BOOL],true);
constraint array_bool_or([aux963_BOOL,aux551_BOOL],true);
constraint array_bool_or([aux391_BOOL,aux964_BOOL],true);
constraint array_bool_or([aux445_BOOL,aux965_BOOL],true);
constraint array_bool_or([aux455_BOOL,aux966_BOOL],true);
constraint array_bool_or([aux512_BOOL,aux967_BOOL],true);
constraint array_bool_or([aux395_BOOL,aux968_BOOL],true);
constraint array_bool_or([aux434_BOOL,aux969_BOOL],true);
constraint array_bool_or([aux970_BOOL,aux497_BOOL],true);
constraint array_bool_or([aux971_BOOL,aux488_BOOL],true);
constraint array_bool_or([aux972_BOOL,aux545_BOOL],true);
constraint array_bool_or([aux973_BOOL,aux527_BOOL],true);
constraint array_bool_or([aux974_BOOL,aux409_BOOL],true);
constraint array_bool_or([aux417_BOOL,aux975_BOOL],true);
constraint array_bool_or([aux438_BOOL,aux976_BOOL],true);
constraint array_bool_or([aux458_BOOL,aux977_BOOL],true);
constraint array_bool_or([aux481_BOOL,aux978_BOOL],true);
constraint array_bool_or([aux500_BOOL,aux979_BOOL],true);
constraint array_bool_or([aux552_BOOL,aux980_BOOL],true);
constraint array_bool_or([aux404_BOOL,aux981_BOOL],true);
constraint array_bool_or([aux538_BOOL,aux982_BOOL],true);
constraint array_bool_or([aux507_BOOL,aux983_BOOL],true);
constraint array_bool_or([aux478_BOOL,aux984_BOOL],true);
constraint array_bool_or([aux447_BOOL,aux985_BOOL],true);
constraint array_bool_or([aux518_BOOL,aux986_BOOL],true);
constraint array_bool_or([aux394_BOOL,aux987_BOOL],true);
constraint array_bool_or([aux448_BOOL,aux988_BOOL],true);
constraint array_bool_or([aux503_BOOL,aux989_BOOL],true);
constraint array_bool_or([aux553_BOOL,aux990_BOOL],true);
constraint array_bool_or([aux523_BOOL,aux991_BOOL],true);
constraint array_bool_or([aux475_BOOL,aux992_BOOL],true);
constraint array_bool_or([aux993_BOOL,aux389_BOOL],true);
constraint array_bool_or([aux429_BOOL,aux994_BOOL],true);
constraint array_bool_or([aux459_BOOL,aux995_BOOL],true);
constraint array_bool_or([aux490_BOOL,aux996_BOOL],true);
constraint array_bool_or([aux519_BOOL,aux997_BOOL],true);
constraint array_bool_or([aux520_BOOL,aux998_BOOL],true);
constraint array_bool_or([aux483_BOOL,aux999_BOOL],true);
constraint array_bool_or([aux1000_BOOL,aux539_BOOL],true);
constraint array_bool_or([aux1001_BOOL,aux521_BOOL],true);
constraint array_bool_or([aux1002_BOOL,aux419_BOOL],true);
constraint array_bool_or([aux1003_BOOL,aux393_BOOL],true);
constraint array_bool_or([aux1004_BOOL,aux454_BOOL],true);
constraint array_bool_or([aux464_BOOL,aux1005_BOOL],true);
constraint array_bool_or([aux411_BOOL,aux1006_BOOL],true);
constraint array_bool_or([aux526_BOOL,aux1007_BOOL],true);
constraint array_bool_or([aux556_BOOL,aux1008_BOOL],true);
constraint array_bool_or([aux505_BOOL,aux1009_BOOL],true);
constraint array_bool_or([aux468_BOOL,aux1010_BOOL],true);
constraint array_bool_or([aux542_BOOL,aux1011_BOOL],true);
constraint array_bool_or([aux1012_BOOL,aux430_BOOL],true);
constraint array_bool_or([aux1013_BOOL,aux439_BOOL],true);
constraint array_bool_or([aux1014_BOOL,aux492_BOOL],true);
constraint array_bool_or([aux1015_BOOL,aux506_BOOL],true);
constraint array_bool_or([aux1016_BOOL,aux532_BOOL],true);
constraint array_bool_or([aux428_BOOL,aux1017_BOOL],true);
constraint array_bool_or([aux405_BOOL,aux1018_BOOL],true);
constraint array_bool_or([aux547_BOOL,aux1019_BOOL],true);
constraint array_bool_or([aux528_BOOL,aux1020_BOOL],true);
constraint array_bool_or([aux509_BOOL,aux1021_BOOL],true);
constraint array_bool_or([aux549_BOOL,aux1022_BOOL],true);
constraint array_bool_or([aux1023_BOOL,aux462_BOOL],true);
constraint array_bool_or([aux1024_BOOL,aux440_BOOL],true);
constraint array_bool_or([aux1025_BOOL,aux426_BOOL],true);
constraint array_bool_or([aux1026_BOOL,aux402_BOOL],true);
constraint array_bool_or([aux1027_BOOL,aux546_BOOL],true);
constraint array_bool_or([aux1028_BOOL,aux421_BOOL],true);
constraint array_bool_or([aux398_BOOL,aux1029_BOOL],true);
constraint array_bool_or([aux536_BOOL,aux1030_BOOL],true);
constraint array_bool_or([aux504_BOOL,aux1031_BOOL],true);
constraint array_bool_or([aux476_BOOL,aux1032_BOOL],true);
constraint array_bool_or([aux443_BOOL,aux1033_BOOL],true);
constraint array_bool_or([aux407_BOOL,aux1034_BOOL],true);
constraint array_bool_or([aux396_BOOL,aux1035_BOOL],true);
constraint array_bool_or([aux432_BOOL,aux1036_BOOL],true);
constraint array_bool_or([aux544_BOOL,aux1037_BOOL],true);
constraint array_bool_or([aux495_BOOL,aux1038_BOOL],true);
constraint array_bool_or([aux441_BOOL,aux1039_BOOL],true);
constraint array_bool_or([aux508_BOOL,aux1040_BOOL],true);
constraint array_bool_or([aux424_BOOL,aux1041_BOOL],true);
constraint array_bool_or([aux1042_BOOL,aux449_BOOL],true);
constraint array_bool_or([aux1043_BOOL,aux485_BOOL],true);
constraint array_bool_or([aux1044_BOOL,aux514_BOOL],true);
constraint array_bool_or([aux1045_BOOL,aux541_BOOL],true);
constraint array_bool_or([aux1046_BOOL,aux467_BOOL],true);
constraint array_bool_or([aux403_BOOL,aux1047_BOOL],true);
constraint array_bool_or([aux427_BOOL,aux1048_BOOL],true);
constraint array_bool_or([aux442_BOOL,aux1049_BOOL],true);
constraint array_bool_or([aux465_BOOL,aux1050_BOOL],true);
constraint array_bool_or([aux489_BOOL,aux1051_BOOL],true);
constraint array_bool_or([aux433_BOOL,aux1052_BOOL],true);
constraint array_bool_or([aux1053_BOOL,aux418_BOOL],true);
constraint array_bool_or([aux1054_BOOL,aux392_BOOL],true);
constraint array_bool_or([aux1055_BOOL,aux540_BOOL],true);
constraint array_bool_or([aux1056_BOOL,aux522_BOOL],true);
constraint array_bool_or([aux1057_BOOL,aux501_BOOL],true);
constraint array_bool_or([aux1058_BOOL,aux406_BOOL],true);
constraint array_bool_or([aux548_BOOL,aux1059_BOOL],true);
constraint array_bool_or([aux498_BOOL,aux1060_BOOL],true);
constraint array_bool_or([aux463_BOOL,aux1061_BOOL],true);
constraint array_bool_or([aux451_BOOL,aux1062_BOOL],true);
constraint array_bool_or([aux400_BOOL,aux1063_BOOL],true);
constraint array_bool_or([aux471_BOOL,aux1064_BOOL],true);
constraint array_bool_or([aux496_BOOL,aux1065_BOOL],true);
constraint array_bool_or([aux479_BOOL,aux1066_BOOL],true);
constraint array_bool_or([aux537_BOOL,aux1067_BOOL],true);
constraint array_bool_or([aux516_BOOL,aux1068_BOOL],true);
constraint array_bool_or([aux412_BOOL,aux1069_BOOL],true);
constraint array_bool_or([aux444_BOOL,aux1070_BOOL],true);
constraint array_bool_or([aux474_BOOL,aux1071_BOOL],true);
constraint array_bool_or([aux1072_BOOL,aux450_BOOL],true);
constraint array_bool_or([aux1073_BOOL,aux515_BOOL],true);
constraint array_bool_or([aux1074_BOOL,aux494_BOOL],true);
constraint array_bool_or([aux1075_BOOL,aux554_BOOL],true);
constraint array_bool_or([aux1076_BOOL,aux401_BOOL],true);
constraint array_bool_or([aux555_BOOL,aux1077_BOOL],true);
constraint array_bool_or([aux524_BOOL,aux1078_BOOL],true);
constraint array_bool_or([aux493_BOOL,aux1079_BOOL],true);
constraint array_bool_or([aux461_BOOL,aux1080_BOOL],true);
constraint array_bool_or([aux420_BOOL,aux1081_BOOL],true);
constraint array_bool_or([aux453_BOOL,aux1082_BOOL],true);
constraint array_bool_or([aux1083_BOOL,aux413_BOOL],true);
constraint array_bool_or([aux529_BOOL,aux1084_BOOL],true);
constraint array_bool_or([aux482_BOOL,aux1085_BOOL],true);
constraint array_bool_or([aux511_BOOL,aux1086_BOOL],true);
constraint array_bool_or([aux460_BOOL,aux1087_BOOL],true);
constraint array_bool_or([aux535_BOOL,aux1088_BOOL],true);
constraint array_bool_or([aux431_BOOL,aux1089_BOOL],true);
constraint array_bool_or([aux1090_BOOL,aux457_BOOL],true);
constraint array_bool_or([aux1091_BOOL,aux491_BOOL],true);
constraint array_bool_or([aux1092_BOOL,aux517_BOOL],true);
constraint array_bool_or([aux1093_BOOL,aux550_BOOL],true);
constraint array_bool_or([aux1094_BOOL,aux416_BOOL],true);
constraint array_bool_or([aux499_BOOL,aux1095_BOOL],true);
constraint array_bool_or([aux436_BOOL,aux1096_BOOL],true);
constraint array_bool_or([aux456_BOOL,aux1097_BOOL],true);
constraint array_bool_or([aux390_BOOL,aux1098_BOOL],true);
constraint array_bool_or([aux415_BOOL,aux1099_BOOL],true);
constraint array_bool_or([aux534_BOOL,aux1100_BOOL],true);
constraint array_bool_or([aux487_BOOL,aux1101_BOOL],true);
constraint array_bool_or([aux1102_BOOL,aux543_BOOL],true);
constraint array_bool_or([aux1103_BOOL,aux525_BOOL],true);
constraint array_bool_or([aux1104_BOOL,aux425_BOOL],true);
constraint array_bool_or([aux1105_BOOL,aux397_BOOL],true);
constraint array_bool_or([aux1106_BOOL,aux469_BOOL],true);
constraint array_bool_or([aux533_BOOL,aux1107_BOOL],true);
constraint array_bool_or([aux484_BOOL,aux1108_BOOL],true);
constraint array_bool_or([aux472_BOOL,aux1109_BOOL],true);
constraint array_bool_or([aux423_BOOL,aux1110_BOOL],true);
constraint array_bool_or([aux408_BOOL,aux1111_BOOL],true);
constraint array_bool_or([aux502_BOOL,aux1112_BOOL],true);
constraint array_bool_or([aux1113_BOOL,aux510_BOOL],true);
constraint array_bool_or([aux480_BOOL,aux1114_BOOL],true);
constraint array_bool_or([aux530_BOOL,aux1115_BOOL],true);
constraint array_bool_or([aux414_BOOL,aux1116_BOOL],true);
constraint array_bool_or([aux470_BOOL,aux1117_BOOL],true);
constraint array_bool_or([aux437_BOOL,aux1118_BOOL],true);

solve :: int_search([plan2d_00001_00001, plan2d_00001_00002, plan2d_00001_00003, plan2d_00001_00004, plan2d_00001_00005, plan2d_00001_00006, plan2d_00001_00006, plan2d_00002_00001, plan2d_00002_00002, plan2d_00002_00003, plan2d_00002_00004, plan2d_00002_00005, plan2d_00002_00006, plan2d_00002_00006, plan2d_00003_00001, plan2d_00003_00002, plan2d_00003_00003, plan2d_00003_00004, plan2d_00003_00005, plan2d_00003_00006, plan2d_00003_00006, plan2d_00004_00001, plan2d_00004_00002, plan2d_00004_00003, plan2d_00004_00004, plan2d_00004_00005, plan2d_00004_00006, plan2d_00004_00006, plan2d_00005_00001, plan2d_00005_00002, plan2d_00005_00003, plan2d_00005_00004, plan2d_00005_00005, plan2d_00005_00006, plan2d_00005_00006, plan2d_00006_00001, plan2d_00006_00002, plan2d_00006_00003, plan2d_00006_00004, plan2d_00006_00005, plan2d_00006_00006, plan2d_00006_00006, plan2d_00007_00001, plan2d_00007_00002, plan2d_00007_00003, plan2d_00007_00004, plan2d_00007_00005, plan2d_00007_00006, plan2d_00007_00006, plan2d_00008_00001, plan2d_00008_00002, plan2d_00008_00003, plan2d_00008_00004, plan2d_00008_00005, plan2d_00008_00006, plan2d_00008_00006, plan2d_00009_00001, plan2d_00009_00002, plan2d_00009_00003, plan2d_00009_00004, plan2d_00009_00005, plan2d_00009_00006, plan2d_00009_00006, plan2d_00010_00001, plan2d_00010_00002, plan2d_00010_00003, plan2d_00010_00004, plan2d_00010_00005, plan2d_00010_00006, plan2d_00010_00006, plan2d_00011_00001, plan2d_00011_00002, plan2d_00011_00003, plan2d_00011_00004, plan2d_00011_00005, plan2d_00011_00006, plan2d_00011_00006, plan2d_00012_00001, plan2d_00012_00002, plan2d_00012_00003, plan2d_00012_00004, plan2d_00012_00005, plan2d_00012_00006, plan2d_00012_00006, plan2d_00013_00001, plan2d_00013_00002, plan2d_00013_00003, plan2d_00013_00004, plan2d_00013_00005, plan2d_00013_00006, plan2d_00013_00006, plan2d_00014_00001, plan2d_00014_00002, plan2d_00014_00003, plan2d_00014_00004, plan2d_00014_00005, plan2d_00014_00006, plan2d_00014_00006, plan2d_00015_00001, plan2d_00015_00002, plan2d_00015_00003, plan2d_00015_00004, plan2d_00015_00005, plan2d_00015_00006, plan2d_00015_00006, plan2d_00016_00001, plan2d_00016_00002, plan2d_00016_00003, plan2d_00016_00004, plan2d_00016_00005, plan2d_00016_00006, plan2d_00016_00006, plan2d_00017_00001, plan2d_00017_00002, plan2d_00017_00003, plan2d_00017_00004, plan2d_00017_00005, plan2d_00017_00006, plan2d_00017_00006, plan2d_00018_00001, plan2d_00018_00002, plan2d_00018_00003, plan2d_00018_00004, plan2d_00018_00005, plan2d_00018_00006, plan2d_00018_00006, plan2d_00019_00001, plan2d_00019_00002, plan2d_00019_00003, plan2d_00019_00004, plan2d_00019_00005, plan2d_00019_00006, plan2d_00019_00006, plan2d_00020_00001, plan2d_00020_00002, plan2d_00020_00003, plan2d_00020_00004, plan2d_00020_00005, plan2d_00020_00006, plan2d_00020_00006, plan2d_00021_00001, plan2d_00021_00002, plan2d_00021_00003, plan2d_00021_00004, plan2d_00021_00005, plan2d_00021_00006, plan2d_00021_00006, plan2d_00022_00001, plan2d_00022_00002, plan2d_00022_00003, plan2d_00022_00004, plan2d_00022_00005, plan2d_00022_00006, plan2d_00022_00006, plan2d_00023_00001, plan2d_00023_00002, plan2d_00023_00003, plan2d_00023_00004, plan2d_00023_00005, plan2d_00023_00006, plan2d_00023_00006, plan2d_00024_00001, plan2d_00024_00002, plan2d_00024_00003, plan2d_00024_00004, plan2d_00024_00005, plan2d_00024_00006, plan2d_00024_00006, plan2d_00025_00001, plan2d_00025_00002, plan2d_00025_00003, plan2d_00025_00004, plan2d_00025_00005, plan2d_00025_00006, plan2d_00025_00006, plan2d_00026_00001, plan2d_00026_00002, plan2d_00026_00003, plan2d_00026_00004, plan2d_00026_00005, plan2d_00026_00006, plan2d_00026_00006, plan2d_00027_00001, plan2d_00027_00002, plan2d_00027_00003, plan2d_00027_00004, plan2d_00027_00005, plan2d_00027_00006, plan2d_00027_00006, plan2d_00028_00001, plan2d_00028_00002, plan2d_00028_00003, plan2d_00028_00004, plan2d_00028_00005, plan2d_00028_00006, plan2d_00028_00006], input_order, indomain_min, complete)
 satisfy;
