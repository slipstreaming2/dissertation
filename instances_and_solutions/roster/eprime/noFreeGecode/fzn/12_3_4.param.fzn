predicate gecode_global_cardinality(array[int] of var int: x, array[int] of int: cover, array[int] of var int: counts);
var 0..3: plan2d_00001_00001:: output_var ;
var 0..3: plan2d_00001_00002:: output_var ;
var 0..3: plan2d_00001_00003:: output_var ;
var 0..3: plan2d_00001_00004:: output_var ;
var 0..3: plan2d_00001_00005:: output_var ;
var 0..3: plan2d_00001_00006:: output_var ;
var 0..3: plan2d_00002_00001:: output_var ;
var 0..3: plan2d_00002_00002:: output_var ;
var 0..3: plan2d_00002_00003:: output_var ;
var 0..3: plan2d_00002_00004:: output_var ;
var 0..3: plan2d_00002_00005:: output_var ;
var 0..3: plan2d_00002_00006:: output_var ;
var 0..3: plan2d_00003_00001:: output_var ;
var 0..3: plan2d_00003_00002:: output_var ;
var 0..3: plan2d_00003_00003:: output_var ;
var 0..3: plan2d_00003_00004:: output_var ;
var 0..3: plan2d_00003_00005:: output_var ;
var 0..3: plan2d_00003_00006:: output_var ;
var 0..3: plan2d_00004_00001:: output_var ;
var 0..3: plan2d_00004_00002:: output_var ;
var 0..3: plan2d_00004_00003:: output_var ;
var 0..3: plan2d_00004_00004:: output_var ;
var 0..3: plan2d_00004_00005:: output_var ;
var 0..3: plan2d_00004_00006:: output_var ;
var 0..3: plan2d_00005_00001:: output_var ;
var 0..3: plan2d_00005_00002:: output_var ;
var 0..3: plan2d_00005_00003:: output_var ;
var 0..3: plan2d_00005_00004:: output_var ;
var 0..3: plan2d_00005_00005:: output_var ;
var 0..3: plan2d_00005_00006:: output_var ;
var 0..3: plan2d_00006_00001:: output_var ;
var 0..3: plan2d_00006_00002:: output_var ;
var 0..3: plan2d_00006_00003:: output_var ;
var 0..3: plan2d_00006_00004:: output_var ;
var 0..3: plan2d_00006_00005:: output_var ;
var 0..3: plan2d_00006_00006:: output_var ;
var 0..3: plan2d_00007_00001:: output_var ;
var 0..3: plan2d_00007_00002:: output_var ;
var 0..3: plan2d_00007_00003:: output_var ;
var 0..3: plan2d_00007_00004:: output_var ;
var 0..3: plan2d_00007_00005:: output_var ;
var 0..3: plan2d_00007_00006:: output_var ;
var 0..3: plan2d_00008_00001:: output_var ;
var 0..3: plan2d_00008_00002:: output_var ;
var 0..3: plan2d_00008_00003:: output_var ;
var 0..3: plan2d_00008_00004:: output_var ;
var 0..3: plan2d_00008_00005:: output_var ;
var 0..3: plan2d_00008_00006:: output_var ;
var 0..3: plan2d_00009_00001:: output_var ;
var 0..3: plan2d_00009_00002:: output_var ;
var 0..3: plan2d_00009_00003:: output_var ;
var 0..3: plan2d_00009_00004:: output_var ;
var 0..3: plan2d_00009_00005:: output_var ;
var 0..3: plan2d_00009_00006:: output_var ;
var 0..3: plan2d_00010_00001:: output_var ;
var 0..3: plan2d_00010_00002:: output_var ;
var 0..3: plan2d_00010_00003:: output_var ;
var 0..3: plan2d_00010_00004:: output_var ;
var 0..3: plan2d_00010_00005:: output_var ;
var 0..3: plan2d_00010_00006:: output_var ;
var 0..3: plan2d_00011_00001:: output_var ;
var 0..3: plan2d_00011_00002:: output_var ;
var 0..3: plan2d_00011_00003:: output_var ;
var 0..3: plan2d_00011_00004:: output_var ;
var 0..3: plan2d_00011_00005:: output_var ;
var 0..3: plan2d_00011_00006:: output_var ;
var 0..3: plan2d_00012_00001:: output_var ;
var 0..3: plan2d_00012_00002:: output_var ;
var 0..3: plan2d_00012_00003:: output_var ;
var 0..3: plan2d_00012_00004:: output_var ;
var 0..3: plan2d_00012_00005:: output_var ;
var 0..3: plan2d_00012_00006:: output_var ;
var bool: aux0_BOOL:: var_is_introduced ;
var {0,1}: aux0_INTEGER :: var_is_introduced ;
var bool: aux1_BOOL:: var_is_introduced ;
var {0,1}: aux1_INTEGER :: var_is_introduced ;
var bool: aux2_BOOL:: var_is_introduced ;
var {0,1}: aux2_INTEGER :: var_is_introduced ;
var bool: aux3_BOOL:: var_is_introduced ;
var {0,1}: aux3_INTEGER :: var_is_introduced ;
var bool: aux4_BOOL:: var_is_introduced ;
var {0,1}: aux4_INTEGER :: var_is_introduced ;
var bool: aux5_BOOL:: var_is_introduced ;
var {0,1}: aux5_INTEGER :: var_is_introduced ;
var bool: aux6_BOOL:: var_is_introduced ;
var {0,1}: aux6_INTEGER :: var_is_introduced ;
var bool: aux7_BOOL:: var_is_introduced ;
var {0,1}: aux7_INTEGER :: var_is_introduced ;
var bool: aux8_BOOL:: var_is_introduced ;
var {0,1}: aux8_INTEGER :: var_is_introduced ;
var bool: aux9_BOOL:: var_is_introduced ;
var {0,1}: aux9_INTEGER :: var_is_introduced ;
var bool: aux10_BOOL:: var_is_introduced ;
var {0,1}: aux10_INTEGER :: var_is_introduced ;
var bool: aux11_BOOL:: var_is_introduced ;
var {0,1}: aux11_INTEGER :: var_is_introduced ;
var bool: aux12_BOOL:: var_is_introduced ;
var {0,1}: aux12_INTEGER :: var_is_introduced ;
var bool: aux13_BOOL:: var_is_introduced ;
var {0,1}: aux13_INTEGER :: var_is_introduced ;
var bool: aux14_BOOL:: var_is_introduced ;
var {0,1}: aux14_INTEGER :: var_is_introduced ;
var bool: aux15_BOOL:: var_is_introduced ;
var {0,1}: aux15_INTEGER :: var_is_introduced ;
var bool: aux16_BOOL:: var_is_introduced ;
var {0,1}: aux16_INTEGER :: var_is_introduced ;
var bool: aux17_BOOL:: var_is_introduced ;
var {0,1}: aux17_INTEGER :: var_is_introduced ;
var bool: aux18_BOOL:: var_is_introduced ;
var {0,1}: aux18_INTEGER :: var_is_introduced ;
var bool: aux19_BOOL:: var_is_introduced ;
var {0,1}: aux19_INTEGER :: var_is_introduced ;
var bool: aux20_BOOL:: var_is_introduced ;
var {0,1}: aux20_INTEGER :: var_is_introduced ;
var bool: aux21_BOOL:: var_is_introduced ;
var {0,1}: aux21_INTEGER :: var_is_introduced ;
var bool: aux22_BOOL:: var_is_introduced ;
var {0,1}: aux22_INTEGER :: var_is_introduced ;
var bool: aux23_BOOL:: var_is_introduced ;
var {0,1}: aux23_INTEGER :: var_is_introduced ;
var bool: aux24_BOOL:: var_is_introduced ;
var {0,1}: aux24_INTEGER :: var_is_introduced ;
var bool: aux25_BOOL:: var_is_introduced ;
var {0,1}: aux25_INTEGER :: var_is_introduced ;
var bool: aux26_BOOL:: var_is_introduced ;
var {0,1}: aux26_INTEGER :: var_is_introduced ;
var bool: aux27_BOOL:: var_is_introduced ;
var {0,1}: aux27_INTEGER :: var_is_introduced ;
var bool: aux28_BOOL:: var_is_introduced ;
var {0,1}: aux28_INTEGER :: var_is_introduced ;
var bool: aux29_BOOL:: var_is_introduced ;
var {0,1}: aux29_INTEGER :: var_is_introduced ;
var bool: aux30_BOOL:: var_is_introduced ;
var {0,1}: aux30_INTEGER :: var_is_introduced ;
var bool: aux31_BOOL:: var_is_introduced ;
var {0,1}: aux31_INTEGER :: var_is_introduced ;
var bool: aux32_BOOL:: var_is_introduced ;
var {0,1}: aux32_INTEGER :: var_is_introduced ;
var bool: aux33_BOOL:: var_is_introduced ;
var {0,1}: aux33_INTEGER :: var_is_introduced ;
var bool: aux34_BOOL:: var_is_introduced ;
var {0,1}: aux34_INTEGER :: var_is_introduced ;
var bool: aux35_BOOL:: var_is_introduced ;
var {0,1}: aux35_INTEGER :: var_is_introduced ;
var bool: aux36_BOOL:: var_is_introduced ;
var {0,1}: aux36_INTEGER :: var_is_introduced ;
var bool: aux37_BOOL:: var_is_introduced ;
var {0,1}: aux37_INTEGER :: var_is_introduced ;
var bool: aux38_BOOL:: var_is_introduced ;
var {0,1}: aux38_INTEGER :: var_is_introduced ;
var bool: aux39_BOOL:: var_is_introduced ;
var {0,1}: aux39_INTEGER :: var_is_introduced ;
var bool: aux40_BOOL:: var_is_introduced ;
var {0,1}: aux40_INTEGER :: var_is_introduced ;
var bool: aux41_BOOL:: var_is_introduced ;
var {0,1}: aux41_INTEGER :: var_is_introduced ;
var bool: aux42_BOOL:: var_is_introduced ;
var {0,1}: aux42_INTEGER :: var_is_introduced ;
var bool: aux43_BOOL:: var_is_introduced ;
var {0,1}: aux43_INTEGER :: var_is_introduced ;
var bool: aux44_BOOL:: var_is_introduced ;
var {0,1}: aux44_INTEGER :: var_is_introduced ;
var bool: aux45_BOOL:: var_is_introduced ;
var {0,1}: aux45_INTEGER :: var_is_introduced ;
var bool: aux46_BOOL:: var_is_introduced ;
var {0,1}: aux46_INTEGER :: var_is_introduced ;
var bool: aux47_BOOL:: var_is_introduced ;
var {0,1}: aux47_INTEGER :: var_is_introduced ;
var bool: aux48_BOOL:: var_is_introduced ;
var {0,1}: aux48_INTEGER :: var_is_introduced ;
var bool: aux49_BOOL:: var_is_introduced ;
var {0,1}: aux49_INTEGER :: var_is_introduced ;
var bool: aux50_BOOL:: var_is_introduced ;
var {0,1}: aux50_INTEGER :: var_is_introduced ;
var bool: aux51_BOOL:: var_is_introduced ;
var {0,1}: aux51_INTEGER :: var_is_introduced ;
var bool: aux52_BOOL:: var_is_introduced ;
var {0,1}: aux52_INTEGER :: var_is_introduced ;
var bool: aux53_BOOL:: var_is_introduced ;
var {0,1}: aux53_INTEGER :: var_is_introduced ;
var bool: aux54_BOOL:: var_is_introduced ;
var {0,1}: aux54_INTEGER :: var_is_introduced ;
var bool: aux55_BOOL:: var_is_introduced ;
var {0,1}: aux55_INTEGER :: var_is_introduced ;
var bool: aux56_BOOL:: var_is_introduced ;
var {0,1}: aux56_INTEGER :: var_is_introduced ;
var bool: aux57_BOOL:: var_is_introduced ;
var {0,1}: aux57_INTEGER :: var_is_introduced ;
var bool: aux58_BOOL:: var_is_introduced ;
var {0,1}: aux58_INTEGER :: var_is_introduced ;
var bool: aux59_BOOL:: var_is_introduced ;
var {0,1}: aux59_INTEGER :: var_is_introduced ;
var bool: aux60_BOOL:: var_is_introduced ;
var {0,1}: aux60_INTEGER :: var_is_introduced ;
var bool: aux61_BOOL:: var_is_introduced ;
var {0,1}: aux61_INTEGER :: var_is_introduced ;
var bool: aux62_BOOL:: var_is_introduced ;
var {0,1}: aux62_INTEGER :: var_is_introduced ;
var bool: aux63_BOOL:: var_is_introduced ;
var {0,1}: aux63_INTEGER :: var_is_introduced ;
var bool: aux64_BOOL:: var_is_introduced ;
var {0,1}: aux64_INTEGER :: var_is_introduced ;
var bool: aux65_BOOL:: var_is_introduced ;
var {0,1}: aux65_INTEGER :: var_is_introduced ;
var bool: aux66_BOOL:: var_is_introduced ;
var {0,1}: aux66_INTEGER :: var_is_introduced ;
var bool: aux67_BOOL:: var_is_introduced ;
var {0,1}: aux67_INTEGER :: var_is_introduced ;
var bool: aux68_BOOL:: var_is_introduced ;
var {0,1}: aux68_INTEGER :: var_is_introduced ;
var bool: aux69_BOOL:: var_is_introduced ;
var {0,1}: aux69_INTEGER :: var_is_introduced ;
var bool: aux70_BOOL:: var_is_introduced ;
var {0,1}: aux70_INTEGER :: var_is_introduced ;
var bool: aux71_BOOL:: var_is_introduced ;
var {0,1}: aux71_INTEGER :: var_is_introduced ;
var bool: aux72_BOOL:: var_is_introduced ;
var {0,1}: aux72_INTEGER :: var_is_introduced ;
var bool: aux73_BOOL:: var_is_introduced ;
var {0,1}: aux73_INTEGER :: var_is_introduced ;
var bool: aux74_BOOL:: var_is_introduced ;
var {0,1}: aux74_INTEGER :: var_is_introduced ;
var bool: aux75_BOOL:: var_is_introduced ;
var {0,1}: aux75_INTEGER :: var_is_introduced ;
var bool: aux76_BOOL:: var_is_introduced ;
var {0,1}: aux76_INTEGER :: var_is_introduced ;
var bool: aux77_BOOL:: var_is_introduced ;
var {0,1}: aux77_INTEGER :: var_is_introduced ;
var bool: aux78_BOOL:: var_is_introduced ;
var {0,1}: aux78_INTEGER :: var_is_introduced ;
var bool: aux79_BOOL:: var_is_introduced ;
var {0,1}: aux79_INTEGER :: var_is_introduced ;
var bool: aux80_BOOL:: var_is_introduced ;
var {0,1}: aux80_INTEGER :: var_is_introduced ;
var bool: aux81_BOOL:: var_is_introduced ;
var {0,1}: aux81_INTEGER :: var_is_introduced ;
var bool: aux82_BOOL:: var_is_introduced ;
var {0,1}: aux82_INTEGER :: var_is_introduced ;
var bool: aux83_BOOL:: var_is_introduced ;
var {0,1}: aux83_INTEGER :: var_is_introduced ;
var bool: aux84_BOOL:: var_is_introduced ;
var {0,1}: aux84_INTEGER :: var_is_introduced ;
var bool: aux85_BOOL:: var_is_introduced ;
var {0,1}: aux85_INTEGER :: var_is_introduced ;
var bool: aux86_BOOL:: var_is_introduced ;
var {0,1}: aux86_INTEGER :: var_is_introduced ;
var bool: aux87_BOOL:: var_is_introduced ;
var {0,1}: aux87_INTEGER :: var_is_introduced ;
var bool: aux88_BOOL:: var_is_introduced ;
var {0,1}: aux88_INTEGER :: var_is_introduced ;
var bool: aux89_BOOL:: var_is_introduced ;
var {0,1}: aux89_INTEGER :: var_is_introduced ;
var bool: aux90_BOOL:: var_is_introduced ;
var {0,1}: aux90_INTEGER :: var_is_introduced ;
var bool: aux91_BOOL:: var_is_introduced ;
var {0,1}: aux91_INTEGER :: var_is_introduced ;
var bool: aux92_BOOL:: var_is_introduced ;
var {0,1}: aux92_INTEGER :: var_is_introduced ;
var bool: aux93_BOOL:: var_is_introduced ;
var {0,1}: aux93_INTEGER :: var_is_introduced ;
var bool: aux94_BOOL:: var_is_introduced ;
var {0,1}: aux94_INTEGER :: var_is_introduced ;
var bool: aux95_BOOL:: var_is_introduced ;
var {0,1}: aux95_INTEGER :: var_is_introduced ;
var bool: aux96_BOOL:: var_is_introduced ;
var {0,1}: aux96_INTEGER :: var_is_introduced ;
var bool: aux97_BOOL:: var_is_introduced ;
var {0,1}: aux97_INTEGER :: var_is_introduced ;
var bool: aux98_BOOL:: var_is_introduced ;
var {0,1}: aux98_INTEGER :: var_is_introduced ;
var bool: aux99_BOOL:: var_is_introduced ;
var {0,1}: aux99_INTEGER :: var_is_introduced ;
var bool: aux100_BOOL:: var_is_introduced ;
var {0,1}: aux100_INTEGER :: var_is_introduced ;
var bool: aux101_BOOL:: var_is_introduced ;
var {0,1}: aux101_INTEGER :: var_is_introduced ;
var bool: aux102_BOOL:: var_is_introduced ;
var {0,1}: aux102_INTEGER :: var_is_introduced ;
var bool: aux103_BOOL:: var_is_introduced ;
var {0,1}: aux103_INTEGER :: var_is_introduced ;
var bool: aux104_BOOL:: var_is_introduced ;
var {0,1}: aux104_INTEGER :: var_is_introduced ;
var bool: aux105_BOOL:: var_is_introduced ;
var {0,1}: aux105_INTEGER :: var_is_introduced ;
var bool: aux106_BOOL:: var_is_introduced ;
var {0,1}: aux106_INTEGER :: var_is_introduced ;
var bool: aux107_BOOL:: var_is_introduced ;
var {0,1}: aux107_INTEGER :: var_is_introduced ;
var bool: aux108_BOOL:: var_is_introduced ;
var {0,1}: aux108_INTEGER :: var_is_introduced ;
var bool: aux109_BOOL:: var_is_introduced ;
var {0,1}: aux109_INTEGER :: var_is_introduced ;
var bool: aux110_BOOL:: var_is_introduced ;
var {0,1}: aux110_INTEGER :: var_is_introduced ;
var bool: aux111_BOOL:: var_is_introduced ;
var {0,1}: aux111_INTEGER :: var_is_introduced ;
var bool: aux112_BOOL:: var_is_introduced ;
var {0,1}: aux112_INTEGER :: var_is_introduced ;
var bool: aux113_BOOL:: var_is_introduced ;
var {0,1}: aux113_INTEGER :: var_is_introduced ;
var bool: aux114_BOOL:: var_is_introduced ;
var {0,1}: aux114_INTEGER :: var_is_introduced ;
var bool: aux115_BOOL:: var_is_introduced ;
var {0,1}: aux115_INTEGER :: var_is_introduced ;
var bool: aux116_BOOL:: var_is_introduced ;
var {0,1}: aux116_INTEGER :: var_is_introduced ;
var bool: aux117_BOOL:: var_is_introduced ;
var {0,1}: aux117_INTEGER :: var_is_introduced ;
var bool: aux118_BOOL:: var_is_introduced ;
var {0,1}: aux118_INTEGER :: var_is_introduced ;
var bool: aux119_BOOL:: var_is_introduced ;
var {0,1}: aux119_INTEGER :: var_is_introduced ;
var bool: aux120_BOOL:: var_is_introduced ;
var {0,1}: aux120_INTEGER :: var_is_introduced ;
var bool: aux121_BOOL:: var_is_introduced ;
var {0,1}: aux121_INTEGER :: var_is_introduced ;
var bool: aux122_BOOL:: var_is_introduced ;
var {0,1}: aux122_INTEGER :: var_is_introduced ;
var bool: aux123_BOOL:: var_is_introduced ;
var {0,1}: aux123_INTEGER :: var_is_introduced ;
var bool: aux124_BOOL:: var_is_introduced ;
var {0,1}: aux124_INTEGER :: var_is_introduced ;
var bool: aux125_BOOL:: var_is_introduced ;
var {0,1}: aux125_INTEGER :: var_is_introduced ;
var bool: aux126_BOOL:: var_is_introduced ;
var {0,1}: aux126_INTEGER :: var_is_introduced ;
var bool: aux127_BOOL:: var_is_introduced ;
var {0,1}: aux127_INTEGER :: var_is_introduced ;
var bool: aux128_BOOL:: var_is_introduced ;
var {0,1}: aux128_INTEGER :: var_is_introduced ;
var bool: aux129_BOOL:: var_is_introduced ;
var {0,1}: aux129_INTEGER :: var_is_introduced ;
var bool: aux130_BOOL:: var_is_introduced ;
var {0,1}: aux130_INTEGER :: var_is_introduced ;
var bool: aux131_BOOL:: var_is_introduced ;
var {0,1}: aux131_INTEGER :: var_is_introduced ;
var bool: aux132_BOOL:: var_is_introduced ;
var {0,1}: aux132_INTEGER :: var_is_introduced ;
var bool: aux133_BOOL:: var_is_introduced ;
var {0,1}: aux133_INTEGER :: var_is_introduced ;
var bool: aux134_BOOL:: var_is_introduced ;
var {0,1}: aux134_INTEGER :: var_is_introduced ;
var bool: aux135_BOOL:: var_is_introduced ;
var {0,1}: aux135_INTEGER :: var_is_introduced ;
var bool: aux136_BOOL:: var_is_introduced ;
var {0,1}: aux136_INTEGER :: var_is_introduced ;
var bool: aux137_BOOL:: var_is_introduced ;
var {0,1}: aux137_INTEGER :: var_is_introduced ;
var bool: aux138_BOOL:: var_is_introduced ;
var {0,1}: aux138_INTEGER :: var_is_introduced ;
var bool: aux139_BOOL:: var_is_introduced ;
var {0,1}: aux139_INTEGER :: var_is_introduced ;
var bool: aux140_BOOL:: var_is_introduced ;
var {0,1}: aux140_INTEGER :: var_is_introduced ;
var bool: aux141_BOOL:: var_is_introduced ;
var {0,1}: aux141_INTEGER :: var_is_introduced ;
var bool: aux142_BOOL:: var_is_introduced ;
var {0,1}: aux142_INTEGER :: var_is_introduced ;
var bool: aux143_BOOL:: var_is_introduced ;
var {0,1}: aux143_INTEGER :: var_is_introduced ;
var bool: aux144_BOOL:: var_is_introduced ;
var {0,1}: aux144_INTEGER :: var_is_introduced ;
var bool: aux145_BOOL:: var_is_introduced ;
var {0,1}: aux145_INTEGER :: var_is_introduced ;
var bool: aux146_BOOL:: var_is_introduced ;
var {0,1}: aux146_INTEGER :: var_is_introduced ;
var bool: aux147_BOOL:: var_is_introduced ;
var {0,1}: aux147_INTEGER :: var_is_introduced ;
var bool: aux148_BOOL:: var_is_introduced ;
var {0,1}: aux148_INTEGER :: var_is_introduced ;
var bool: aux149_BOOL:: var_is_introduced ;
var {0,1}: aux149_INTEGER :: var_is_introduced ;
var bool: aux150_BOOL:: var_is_introduced ;
var {0,1}: aux150_INTEGER :: var_is_introduced ;
var bool: aux151_BOOL:: var_is_introduced ;
var {0,1}: aux151_INTEGER :: var_is_introduced ;
var bool: aux152_BOOL:: var_is_introduced ;
var {0,1}: aux152_INTEGER :: var_is_introduced ;
var bool: aux153_BOOL:: var_is_introduced ;
var {0,1}: aux153_INTEGER :: var_is_introduced ;
var bool: aux154_BOOL:: var_is_introduced ;
var {0,1}: aux154_INTEGER :: var_is_introduced ;
var bool: aux155_BOOL:: var_is_introduced ;
var {0,1}: aux155_INTEGER :: var_is_introduced ;
var bool: aux156_BOOL:: var_is_introduced ;
var {0,1}: aux156_INTEGER :: var_is_introduced ;
var bool: aux157_BOOL:: var_is_introduced ;
var {0,1}: aux157_INTEGER :: var_is_introduced ;
var bool: aux158_BOOL:: var_is_introduced ;
var {0,1}: aux158_INTEGER :: var_is_introduced ;
var bool: aux159_BOOL:: var_is_introduced ;
var {0,1}: aux159_INTEGER :: var_is_introduced ;
var bool: aux160_BOOL:: var_is_introduced ;
var {0,1}: aux160_INTEGER :: var_is_introduced ;
var bool: aux161_BOOL:: var_is_introduced ;
var {0,1}: aux161_INTEGER :: var_is_introduced ;
var bool: aux162_BOOL:: var_is_introduced ;
var {0,1}: aux162_INTEGER :: var_is_introduced ;
var bool: aux163_BOOL:: var_is_introduced ;
var {0,1}: aux163_INTEGER :: var_is_introduced ;
var bool: aux164_BOOL:: var_is_introduced ;
var {0,1}: aux164_INTEGER :: var_is_introduced ;
var bool: aux165_BOOL:: var_is_introduced ;
var {0,1}: aux165_INTEGER :: var_is_introduced ;
var bool: aux166_BOOL:: var_is_introduced ;
var {0,1}: aux166_INTEGER :: var_is_introduced ;
var bool: aux167_BOOL:: var_is_introduced ;
var {0,1}: aux167_INTEGER :: var_is_introduced ;
var bool: aux168_BOOL:: var_is_introduced ;
var {0,1}: aux168_INTEGER :: var_is_introduced ;
var bool: aux169_BOOL:: var_is_introduced ;
var {0,1}: aux169_INTEGER :: var_is_introduced ;
var bool: aux170_BOOL:: var_is_introduced ;
var {0,1}: aux170_INTEGER :: var_is_introduced ;
var bool: aux171_BOOL:: var_is_introduced ;
var {0,1}: aux171_INTEGER :: var_is_introduced ;
var bool: aux172_BOOL:: var_is_introduced ;
var {0,1}: aux172_INTEGER :: var_is_introduced ;
var bool: aux173_BOOL:: var_is_introduced ;
var {0,1}: aux173_INTEGER :: var_is_introduced ;
var bool: aux174_BOOL:: var_is_introduced ;
var {0,1}: aux174_INTEGER :: var_is_introduced ;
var bool: aux175_BOOL:: var_is_introduced ;
var {0,1}: aux175_INTEGER :: var_is_introduced ;
var bool: aux176_BOOL:: var_is_introduced ;
var {0,1}: aux176_INTEGER :: var_is_introduced ;
var bool: aux177_BOOL:: var_is_introduced ;
var {0,1}: aux177_INTEGER :: var_is_introduced ;
var bool: aux178_BOOL:: var_is_introduced ;
var {0,1}: aux178_INTEGER :: var_is_introduced ;
var bool: aux179_BOOL:: var_is_introduced ;
var {0,1}: aux179_INTEGER :: var_is_introduced ;
var bool: aux180_BOOL:: var_is_introduced ;
var {0,1}: aux180_INTEGER :: var_is_introduced ;
var bool: aux181_BOOL:: var_is_introduced ;
var {0,1}: aux181_INTEGER :: var_is_introduced ;
var bool: aux182_BOOL:: var_is_introduced ;
var {0,1}: aux182_INTEGER :: var_is_introduced ;
var bool: aux183_BOOL:: var_is_introduced ;
var {0,1}: aux183_INTEGER :: var_is_introduced ;
var bool: aux184_BOOL:: var_is_introduced ;
var {0,1}: aux184_INTEGER :: var_is_introduced ;
var bool: aux185_BOOL:: var_is_introduced ;
var {0,1}: aux185_INTEGER :: var_is_introduced ;
var bool: aux186_BOOL:: var_is_introduced ;
var {0,1}: aux186_INTEGER :: var_is_introduced ;
var bool: aux187_BOOL:: var_is_introduced ;
var {0,1}: aux187_INTEGER :: var_is_introduced ;
var bool: aux188_BOOL:: var_is_introduced ;
var {0,1}: aux188_INTEGER :: var_is_introduced ;
var bool: aux189_BOOL:: var_is_introduced ;
var {0,1}: aux189_INTEGER :: var_is_introduced ;
var bool: aux190_BOOL:: var_is_introduced ;
var {0,1}: aux190_INTEGER :: var_is_introduced ;
var bool: aux191_BOOL:: var_is_introduced ;
var {0,1}: aux191_INTEGER :: var_is_introduced ;
var bool: aux192_BOOL:: var_is_introduced ;
var {0,1}: aux192_INTEGER :: var_is_introduced ;
var bool: aux193_BOOL:: var_is_introduced ;
var {0,1}: aux193_INTEGER :: var_is_introduced ;
var bool: aux194_BOOL:: var_is_introduced ;
var {0,1}: aux194_INTEGER :: var_is_introduced ;
var bool: aux195_BOOL:: var_is_introduced ;
var {0,1}: aux195_INTEGER :: var_is_introduced ;
var bool: aux196_BOOL:: var_is_introduced ;
var {0,1}: aux196_INTEGER :: var_is_introduced ;
var bool: aux197_BOOL:: var_is_introduced ;
var {0,1}: aux197_INTEGER :: var_is_introduced ;
var bool: aux198_BOOL:: var_is_introduced ;
var {0,1}: aux198_INTEGER :: var_is_introduced ;
var bool: aux199_BOOL:: var_is_introduced ;
var {0,1}: aux199_INTEGER :: var_is_introduced ;
var bool: aux200_BOOL:: var_is_introduced ;
var {0,1}: aux200_INTEGER :: var_is_introduced ;
var bool: aux201_BOOL:: var_is_introduced ;
var {0,1}: aux201_INTEGER :: var_is_introduced ;
var bool: aux202_BOOL:: var_is_introduced ;
var {0,1}: aux202_INTEGER :: var_is_introduced ;
var bool: aux203_BOOL:: var_is_introduced ;
var {0,1}: aux203_INTEGER :: var_is_introduced ;
var bool: aux204_BOOL:: var_is_introduced ;
var {0,1}: aux204_INTEGER :: var_is_introduced ;
var bool: aux205_BOOL:: var_is_introduced ;
var {0,1}: aux205_INTEGER :: var_is_introduced ;
var bool: aux206_BOOL:: var_is_introduced ;
var {0,1}: aux206_INTEGER :: var_is_introduced ;
var bool: aux207_BOOL:: var_is_introduced ;
var {0,1}: aux207_INTEGER :: var_is_introduced ;
var bool: aux208_BOOL:: var_is_introduced ;
var {0,1}: aux208_INTEGER :: var_is_introduced ;
var bool: aux209_BOOL:: var_is_introduced ;
var {0,1}: aux209_INTEGER :: var_is_introduced ;
var bool: aux210_BOOL:: var_is_introduced ;
var {0,1}: aux210_INTEGER :: var_is_introduced ;
var bool: aux211_BOOL:: var_is_introduced ;
var {0,1}: aux211_INTEGER :: var_is_introduced ;
var bool: aux212_BOOL:: var_is_introduced ;
var {0,1}: aux212_INTEGER :: var_is_introduced ;
var bool: aux213_BOOL:: var_is_introduced ;
var {0,1}: aux213_INTEGER :: var_is_introduced ;
var bool: aux214_BOOL:: var_is_introduced ;
var {0,1}: aux214_INTEGER :: var_is_introduced ;
var bool: aux215_BOOL:: var_is_introduced ;
var {0,1}: aux215_INTEGER :: var_is_introduced ;
var bool: aux216_BOOL:: var_is_introduced ;
var {0,1}: aux216_INTEGER :: var_is_introduced ;
var bool: aux217_BOOL:: var_is_introduced ;
var {0,1}: aux217_INTEGER :: var_is_introduced ;
var bool: aux218_BOOL:: var_is_introduced ;
var {0,1}: aux218_INTEGER :: var_is_introduced ;
var bool: aux219_BOOL:: var_is_introduced ;
var {0,1}: aux219_INTEGER :: var_is_introduced ;
var bool: aux220_BOOL:: var_is_introduced ;
var {0,1}: aux220_INTEGER :: var_is_introduced ;
var bool: aux221_BOOL:: var_is_introduced ;
var {0,1}: aux221_INTEGER :: var_is_introduced ;
var bool: aux222_BOOL:: var_is_introduced ;
var {0,1}: aux222_INTEGER :: var_is_introduced ;
var bool: aux223_BOOL:: var_is_introduced ;
var {0,1}: aux223_INTEGER :: var_is_introduced ;
var bool: aux224_BOOL:: var_is_introduced ;
var {0,1}: aux224_INTEGER :: var_is_introduced ;
var bool: aux225_BOOL:: var_is_introduced ;
var {0,1}: aux225_INTEGER :: var_is_introduced ;
var bool: aux226_BOOL:: var_is_introduced ;
var {0,1}: aux226_INTEGER :: var_is_introduced ;
var bool: aux227_BOOL:: var_is_introduced ;
var {0,1}: aux227_INTEGER :: var_is_introduced ;
var bool: aux228_BOOL:: var_is_introduced ;
var {0,1}: aux228_INTEGER :: var_is_introduced ;
var bool: aux229_BOOL:: var_is_introduced ;
var {0,1}: aux229_INTEGER :: var_is_introduced ;
var bool: aux230_BOOL:: var_is_introduced ;
var {0,1}: aux230_INTEGER :: var_is_introduced ;
var bool: aux231_BOOL:: var_is_introduced ;
var {0,1}: aux231_INTEGER :: var_is_introduced ;
var bool: aux232_BOOL:: var_is_introduced ;
var {0,1}: aux232_INTEGER :: var_is_introduced ;
var bool: aux233_BOOL:: var_is_introduced ;
var {0,1}: aux233_INTEGER :: var_is_introduced ;
var bool: aux234_BOOL:: var_is_introduced ;
var {0,1}: aux234_INTEGER :: var_is_introduced ;
var bool: aux235_BOOL:: var_is_introduced ;
var {0,1}: aux235_INTEGER :: var_is_introduced ;
var bool: aux236_BOOL:: var_is_introduced ;
var {0,1}: aux236_INTEGER :: var_is_introduced ;
var bool: aux237_BOOL:: var_is_introduced ;
var {0,1}: aux237_INTEGER :: var_is_introduced ;
var bool: aux238_BOOL:: var_is_introduced ;
var {0,1}: aux238_INTEGER :: var_is_introduced ;
var bool: aux239_BOOL:: var_is_introduced ;
var {0,1}: aux239_INTEGER :: var_is_introduced ;
var bool: aux240_BOOL:: var_is_introduced ;
var {0,1}: aux240_INTEGER :: var_is_introduced ;
var bool: aux241_BOOL:: var_is_introduced ;
var {0,1}: aux241_INTEGER :: var_is_introduced ;
var bool: aux242_BOOL:: var_is_introduced ;
var {0,1}: aux242_INTEGER :: var_is_introduced ;
var bool: aux243_BOOL:: var_is_introduced ;
var {0,1}: aux243_INTEGER :: var_is_introduced ;
var bool: aux244_BOOL:: var_is_introduced ;
var {0,1}: aux244_INTEGER :: var_is_introduced ;
var bool: aux245_BOOL:: var_is_introduced ;
var {0,1}: aux245_INTEGER :: var_is_introduced ;
var bool: aux246_BOOL:: var_is_introduced ;
var {0,1}: aux246_INTEGER :: var_is_introduced ;
var bool: aux247_BOOL:: var_is_introduced ;
var {0,1}: aux247_INTEGER :: var_is_introduced ;
var bool: aux248_BOOL:: var_is_introduced ;
var {0,1}: aux248_INTEGER :: var_is_introduced ;
var bool: aux249_BOOL:: var_is_introduced ;
var {0,1}: aux249_INTEGER :: var_is_introduced ;
var bool: aux250_BOOL:: var_is_introduced ;
var {0,1}: aux250_INTEGER :: var_is_introduced ;
var bool: aux251_BOOL:: var_is_introduced ;
var {0,1}: aux251_INTEGER :: var_is_introduced ;
var bool: aux252_BOOL:: var_is_introduced ;
var {0,1}: aux252_INTEGER :: var_is_introduced ;
var bool: aux253_BOOL:: var_is_introduced ;
var {0,1}: aux253_INTEGER :: var_is_introduced ;
var bool: aux254_BOOL:: var_is_introduced ;
var {0,1}: aux254_INTEGER :: var_is_introduced ;
var bool: aux255_BOOL:: var_is_introduced ;
var {0,1}: aux255_INTEGER :: var_is_introduced ;
var bool: aux256_BOOL:: var_is_introduced ;
var {0,1}: aux256_INTEGER :: var_is_introduced ;
var bool: aux257_BOOL:: var_is_introduced ;
var {0,1}: aux257_INTEGER :: var_is_introduced ;
var bool: aux258_BOOL:: var_is_introduced ;
var {0,1}: aux258_INTEGER :: var_is_introduced ;
var bool: aux259_BOOL:: var_is_introduced ;
var {0,1}: aux259_INTEGER :: var_is_introduced ;
var bool: aux260_BOOL:: var_is_introduced ;
var {0,1}: aux260_INTEGER :: var_is_introduced ;
var bool: aux261_BOOL:: var_is_introduced ;
var {0,1}: aux261_INTEGER :: var_is_introduced ;
var bool: aux262_BOOL:: var_is_introduced ;
var {0,1}: aux262_INTEGER :: var_is_introduced ;
var bool: aux263_BOOL:: var_is_introduced ;
var {0,1}: aux263_INTEGER :: var_is_introduced ;
var bool: aux264_BOOL:: var_is_introduced ;
var {0,1}: aux264_INTEGER :: var_is_introduced ;
var bool: aux265_BOOL:: var_is_introduced ;
var {0,1}: aux265_INTEGER :: var_is_introduced ;
var bool: aux266_BOOL:: var_is_introduced ;
var {0,1}: aux266_INTEGER :: var_is_introduced ;
var bool: aux267_BOOL:: var_is_introduced ;
var {0,1}: aux267_INTEGER :: var_is_introduced ;
var bool: aux268_BOOL:: var_is_introduced ;
var {0,1}: aux268_INTEGER :: var_is_introduced ;
var bool: aux269_BOOL:: var_is_introduced ;
var {0,1}: aux269_INTEGER :: var_is_introduced ;
var bool: aux270_BOOL:: var_is_introduced ;
var {0,1}: aux270_INTEGER :: var_is_introduced ;
var bool: aux271_BOOL:: var_is_introduced ;
var {0,1}: aux271_INTEGER :: var_is_introduced ;
var bool: aux272_BOOL:: var_is_introduced ;
var {0,1}: aux272_INTEGER :: var_is_introduced ;
var bool: aux273_BOOL:: var_is_introduced ;
var {0,1}: aux273_INTEGER :: var_is_introduced ;
var bool: aux274_BOOL:: var_is_introduced ;
var {0,1}: aux274_INTEGER :: var_is_introduced ;
var bool: aux275_BOOL:: var_is_introduced ;
var {0,1}: aux275_INTEGER :: var_is_introduced ;
var bool: aux276_BOOL:: var_is_introduced ;
var {0,1}: aux276_INTEGER :: var_is_introduced ;
var bool: aux277_BOOL:: var_is_introduced ;
var {0,1}: aux277_INTEGER :: var_is_introduced ;
var bool: aux278_BOOL:: var_is_introduced ;
var {0,1}: aux278_INTEGER :: var_is_introduced ;
var bool: aux279_BOOL:: var_is_introduced ;
var {0,1}: aux279_INTEGER :: var_is_introduced ;
var bool: aux280_BOOL:: var_is_introduced ;
var {0,1}: aux280_INTEGER :: var_is_introduced ;
var bool: aux281_BOOL:: var_is_introduced ;
var {0,1}: aux281_INTEGER :: var_is_introduced ;
var bool: aux282_BOOL:: var_is_introduced ;
var {0,1}: aux282_INTEGER :: var_is_introduced ;
var bool: aux283_BOOL:: var_is_introduced ;
var {0,1}: aux283_INTEGER :: var_is_introduced ;
var bool: aux284_BOOL:: var_is_introduced ;
var {0,1}: aux284_INTEGER :: var_is_introduced ;
var bool: aux285_BOOL:: var_is_introduced ;
var bool: aux286_BOOL:: var_is_introduced ;
var bool: aux287_BOOL:: var_is_introduced ;
var bool: aux288_BOOL:: var_is_introduced ;
var bool: aux289_BOOL:: var_is_introduced ;
var bool: aux290_BOOL:: var_is_introduced ;
var bool: aux291_BOOL:: var_is_introduced ;
var bool: aux292_BOOL:: var_is_introduced ;
var bool: aux293_BOOL:: var_is_introduced ;
var bool: aux294_BOOL:: var_is_introduced ;
var bool: aux295_BOOL:: var_is_introduced ;
var bool: aux296_BOOL:: var_is_introduced ;
var bool: aux297_BOOL:: var_is_introduced ;
var bool: aux298_BOOL:: var_is_introduced ;
var bool: aux299_BOOL:: var_is_introduced ;
var bool: aux300_BOOL:: var_is_introduced ;
var bool: aux301_BOOL:: var_is_introduced ;
var bool: aux302_BOOL:: var_is_introduced ;
var bool: aux303_BOOL:: var_is_introduced ;
var bool: aux304_BOOL:: var_is_introduced ;
var bool: aux305_BOOL:: var_is_introduced ;
var bool: aux306_BOOL:: var_is_introduced ;
var bool: aux307_BOOL:: var_is_introduced ;
var bool: aux308_BOOL:: var_is_introduced ;
var bool: aux309_BOOL:: var_is_introduced ;
var bool: aux310_BOOL:: var_is_introduced ;
var bool: aux311_BOOL:: var_is_introduced ;
var bool: aux312_BOOL:: var_is_introduced ;
var bool: aux313_BOOL:: var_is_introduced ;
var bool: aux314_BOOL:: var_is_introduced ;
var bool: aux315_BOOL:: var_is_introduced ;
var bool: aux316_BOOL:: var_is_introduced ;
var bool: aux317_BOOL:: var_is_introduced ;
var bool: aux318_BOOL:: var_is_introduced ;
var bool: aux319_BOOL:: var_is_introduced ;
var bool: aux320_BOOL:: var_is_introduced ;
var bool: aux321_BOOL:: var_is_introduced ;
var bool: aux322_BOOL:: var_is_introduced ;
var bool: aux323_BOOL:: var_is_introduced ;
var bool: aux324_BOOL:: var_is_introduced ;
var bool: aux325_BOOL:: var_is_introduced ;
var bool: aux326_BOOL:: var_is_introduced ;
var bool: aux327_BOOL:: var_is_introduced ;
var bool: aux328_BOOL:: var_is_introduced ;
var bool: aux329_BOOL:: var_is_introduced ;
var bool: aux330_BOOL:: var_is_introduced ;
var bool: aux331_BOOL:: var_is_introduced ;
var bool: aux332_BOOL:: var_is_introduced ;
var bool: aux333_BOOL:: var_is_introduced ;
var bool: aux334_BOOL:: var_is_introduced ;
var {0,1}: aux334_INTEGER :: var_is_introduced ;
var bool: aux336_BOOL:: var_is_introduced ;
var {0,1}: aux336_INTEGER :: var_is_introduced ;
var bool: aux340_BOOL:: var_is_introduced ;
var {0,1}: aux340_INTEGER :: var_is_introduced ;
var bool: aux344_BOOL:: var_is_introduced ;
var {0,1}: aux344_INTEGER :: var_is_introduced ;
var bool: aux346_BOOL:: var_is_introduced ;
var {0,1}: aux346_INTEGER :: var_is_introduced ;
var bool: aux350_BOOL:: var_is_introduced ;
var {0,1}: aux350_INTEGER :: var_is_introduced ;
var bool: aux354_BOOL:: var_is_introduced ;
var {0,1}: aux354_INTEGER :: var_is_introduced ;
var bool: aux356_BOOL:: var_is_introduced ;
var {0,1}: aux356_INTEGER :: var_is_introduced ;
var bool: aux360_BOOL:: var_is_introduced ;
var {0,1}: aux360_INTEGER :: var_is_introduced ;
var bool: aux364_BOOL:: var_is_introduced ;
var {0,1}: aux364_INTEGER :: var_is_introduced ;
var bool: aux366_BOOL:: var_is_introduced ;
var {0,1}: aux366_INTEGER :: var_is_introduced ;
var bool: aux370_BOOL:: var_is_introduced ;
var {0,1}: aux370_INTEGER :: var_is_introduced ;
var bool: aux374_BOOL:: var_is_introduced ;
var {0,1}: aux374_INTEGER :: var_is_introduced ;
var bool: aux376_BOOL:: var_is_introduced ;
var {0,1}: aux376_INTEGER :: var_is_introduced ;
var bool: aux380_BOOL:: var_is_introduced ;
var {0,1}: aux380_INTEGER :: var_is_introduced ;
var bool: aux384_BOOL:: var_is_introduced ;
var {0,1}: aux384_INTEGER :: var_is_introduced ;
var bool: aux386_BOOL:: var_is_introduced ;
var {0,1}: aux386_INTEGER :: var_is_introduced ;
var bool: aux390_BOOL:: var_is_introduced ;
var {0,1}: aux390_INTEGER :: var_is_introduced ;
var bool: aux394_BOOL:: var_is_introduced ;
var {0,1}: aux394_INTEGER :: var_is_introduced ;
var bool: aux396_BOOL:: var_is_introduced ;
var {0,1}: aux396_INTEGER :: var_is_introduced ;
var bool: aux400_BOOL:: var_is_introduced ;
var {0,1}: aux400_INTEGER :: var_is_introduced ;
var bool: aux404_BOOL:: var_is_introduced ;
var {0,1}: aux404_INTEGER :: var_is_introduced ;
var bool: aux406_BOOL:: var_is_introduced ;
var {0,1}: aux406_INTEGER :: var_is_introduced ;
var bool: aux410_BOOL:: var_is_introduced ;
var {0,1}: aux410_INTEGER :: var_is_introduced ;
var bool: aux414_BOOL:: var_is_introduced ;
var {0,1}: aux414_INTEGER :: var_is_introduced ;
var bool: aux416_BOOL:: var_is_introduced ;
var {0,1}: aux416_INTEGER :: var_is_introduced ;
var bool: aux420_BOOL:: var_is_introduced ;
var {0,1}: aux420_INTEGER :: var_is_introduced ;
var bool: aux424_BOOL:: var_is_introduced ;
var {0,1}: aux424_INTEGER :: var_is_introduced ;
var bool: aux426_BOOL:: var_is_introduced ;
var {0,1}: aux426_INTEGER :: var_is_introduced ;
var bool: aux430_BOOL:: var_is_introduced ;
var {0,1}: aux430_INTEGER :: var_is_introduced ;
var bool: aux434_BOOL:: var_is_introduced ;
var {0,1}: aux434_INTEGER :: var_is_introduced ;
var bool: aux436_BOOL:: var_is_introduced ;
var {0,1}: aux436_INTEGER :: var_is_introduced ;
var bool: aux440_BOOL:: var_is_introduced ;
var {0,1}: aux440_INTEGER :: var_is_introduced ;
var bool: aux444_BOOL:: var_is_introduced ;
var {0,1}: aux444_INTEGER :: var_is_introduced ;
var bool: aux446_BOOL:: var_is_introduced ;
var {0,1}: aux446_INTEGER :: var_is_introduced ;
var bool: aux449_BOOL:: var_is_introduced ;
var bool: aux450_BOOL:: var_is_introduced ;
var bool: aux451_BOOL:: var_is_introduced ;
var {0,1}: aux451_INTEGER :: var_is_introduced ;
var bool: aux452_BOOL:: var_is_introduced ;
var bool: aux453_BOOL:: var_is_introduced ;
var bool: aux454_BOOL:: var_is_introduced ;
var bool: aux456_BOOL:: var_is_introduced ;
var bool: aux457_BOOL:: var_is_introduced ;
var bool: aux458_BOOL:: var_is_introduced ;
var bool: aux459_BOOL:: var_is_introduced ;
var bool: aux460_BOOL:: var_is_introduced ;
var bool: aux461_BOOL:: var_is_introduced ;
var bool: aux462_BOOL:: var_is_introduced ;
var bool: aux463_BOOL:: var_is_introduced ;
var bool: aux464_BOOL:: var_is_introduced ;
var bool: aux465_BOOL:: var_is_introduced ;
var bool: aux466_BOOL:: var_is_introduced ;
var bool: aux467_BOOL:: var_is_introduced ;
var bool: aux468_BOOL:: var_is_introduced ;
var bool: aux469_BOOL:: var_is_introduced ;
var bool: aux470_BOOL:: var_is_introduced ;
var bool: aux471_BOOL:: var_is_introduced ;
var bool: aux472_BOOL:: var_is_introduced ;
var bool: aux473_BOOL:: var_is_introduced ;
var bool: aux474_BOOL:: var_is_introduced ;
var bool: aux475_BOOL:: var_is_introduced ;
var bool: aux476_BOOL:: var_is_introduced ;
var bool: aux477_BOOL:: var_is_introduced ;
var bool: aux478_BOOL:: var_is_introduced ;
var bool: aux479_BOOL:: var_is_introduced ;
var bool: aux480_BOOL:: var_is_introduced ;
var bool: aux481_BOOL:: var_is_introduced ;
var bool: aux482_BOOL:: var_is_introduced ;
var bool: aux483_BOOL:: var_is_introduced ;
var bool: aux484_BOOL:: var_is_introduced ;
var bool: aux485_BOOL:: var_is_introduced ;
var bool: aux486_BOOL:: var_is_introduced ;
var bool: aux487_BOOL:: var_is_introduced ;
var bool: aux488_BOOL:: var_is_introduced ;
var bool: aux489_BOOL:: var_is_introduced ;
var bool: aux490_BOOL:: var_is_introduced ;
var bool: aux491_BOOL:: var_is_introduced ;
var bool: aux492_BOOL:: var_is_introduced ;
var bool: aux493_BOOL:: var_is_introduced ;
var bool: aux494_BOOL:: var_is_introduced ;
var bool: aux495_BOOL:: var_is_introduced ;
var bool: aux496_BOOL:: var_is_introduced ;
var bool: aux497_BOOL:: var_is_introduced ;
var bool: aux498_BOOL:: var_is_introduced ;
var bool: aux499_BOOL:: var_is_introduced ;
var bool: aux500_BOOL:: var_is_introduced ;
var bool: aux501_BOOL:: var_is_introduced ;
var bool: aux502_BOOL:: var_is_introduced ;
var bool: aux503_BOOL:: var_is_introduced ;
var bool: aux504_BOOL:: var_is_introduced ;
var bool: aux505_BOOL:: var_is_introduced ;
var bool: aux506_BOOL:: var_is_introduced ;
var bool: aux507_BOOL:: var_is_introduced ;
var bool: aux508_BOOL:: var_is_introduced ;
var bool: aux509_BOOL:: var_is_introduced ;
var bool: aux510_BOOL:: var_is_introduced ;
var bool: aux511_BOOL:: var_is_introduced ;
var bool: aux512_BOOL:: var_is_introduced ;
var bool: aux513_BOOL:: var_is_introduced ;
var bool: aux514_BOOL:: var_is_introduced ;
var bool: aux515_BOOL:: var_is_introduced ;
var bool: aux516_BOOL:: var_is_introduced ;
var bool: aux517_BOOL:: var_is_introduced ;
var bool: aux518_BOOL:: var_is_introduced ;
var bool: aux519_BOOL:: var_is_introduced ;
var bool: aux520_BOOL:: var_is_introduced ;
var bool: aux521_BOOL:: var_is_introduced ;
var bool: aux522_BOOL:: var_is_introduced ;
var bool: aux523_BOOL:: var_is_introduced ;
var bool: aux524_BOOL:: var_is_introduced ;
var bool: aux525_BOOL:: var_is_introduced ;
var bool: aux526_BOOL:: var_is_introduced ;
constraint bool2int(aux0_BOOL,aux0_INTEGER);
constraint bool2int(aux1_BOOL,aux1_INTEGER);
constraint bool2int(aux2_BOOL,aux2_INTEGER);
constraint bool2int(aux3_BOOL,aux3_INTEGER);
constraint bool2int(aux4_BOOL,aux4_INTEGER);
constraint bool2int(aux5_BOOL,aux5_INTEGER);
constraint bool2int(aux6_BOOL,aux6_INTEGER);
constraint bool2int(aux7_BOOL,aux7_INTEGER);
constraint bool2int(aux8_BOOL,aux8_INTEGER);
constraint bool2int(aux9_BOOL,aux9_INTEGER);
constraint bool2int(aux10_BOOL,aux10_INTEGER);
constraint bool2int(aux11_BOOL,aux11_INTEGER);
constraint bool2int(aux12_BOOL,aux12_INTEGER);
constraint bool2int(aux13_BOOL,aux13_INTEGER);
constraint bool2int(aux14_BOOL,aux14_INTEGER);
constraint bool2int(aux15_BOOL,aux15_INTEGER);
constraint bool2int(aux16_BOOL,aux16_INTEGER);
constraint bool2int(aux17_BOOL,aux17_INTEGER);
constraint bool2int(aux18_BOOL,aux18_INTEGER);
constraint bool2int(aux19_BOOL,aux19_INTEGER);
constraint bool2int(aux20_BOOL,aux20_INTEGER);
constraint bool2int(aux21_BOOL,aux21_INTEGER);
constraint bool2int(aux22_BOOL,aux22_INTEGER);
constraint bool2int(aux23_BOOL,aux23_INTEGER);
constraint bool2int(aux24_BOOL,aux24_INTEGER);
constraint bool2int(aux25_BOOL,aux25_INTEGER);
constraint bool2int(aux26_BOOL,aux26_INTEGER);
constraint bool2int(aux27_BOOL,aux27_INTEGER);
constraint bool2int(aux28_BOOL,aux28_INTEGER);
constraint bool2int(aux29_BOOL,aux29_INTEGER);
constraint bool2int(aux30_BOOL,aux30_INTEGER);
constraint bool2int(aux31_BOOL,aux31_INTEGER);
constraint bool2int(aux32_BOOL,aux32_INTEGER);
constraint bool2int(aux33_BOOL,aux33_INTEGER);
constraint bool2int(aux34_BOOL,aux34_INTEGER);
constraint bool2int(aux35_BOOL,aux35_INTEGER);
constraint bool2int(aux36_BOOL,aux36_INTEGER);
constraint bool2int(aux37_BOOL,aux37_INTEGER);
constraint bool2int(aux38_BOOL,aux38_INTEGER);
constraint bool2int(aux39_BOOL,aux39_INTEGER);
constraint bool2int(aux40_BOOL,aux40_INTEGER);
constraint bool2int(aux41_BOOL,aux41_INTEGER);
constraint bool2int(aux42_BOOL,aux42_INTEGER);
constraint bool2int(aux43_BOOL,aux43_INTEGER);
constraint bool2int(aux44_BOOL,aux44_INTEGER);
constraint bool2int(aux45_BOOL,aux45_INTEGER);
constraint bool2int(aux46_BOOL,aux46_INTEGER);
constraint bool2int(aux47_BOOL,aux47_INTEGER);
constraint bool2int(aux48_BOOL,aux48_INTEGER);
constraint bool2int(aux49_BOOL,aux49_INTEGER);
constraint bool2int(aux50_BOOL,aux50_INTEGER);
constraint bool2int(aux51_BOOL,aux51_INTEGER);
constraint bool2int(aux52_BOOL,aux52_INTEGER);
constraint bool2int(aux53_BOOL,aux53_INTEGER);
constraint bool2int(aux54_BOOL,aux54_INTEGER);
constraint bool2int(aux55_BOOL,aux55_INTEGER);
constraint bool2int(aux56_BOOL,aux56_INTEGER);
constraint bool2int(aux57_BOOL,aux57_INTEGER);
constraint bool2int(aux58_BOOL,aux58_INTEGER);
constraint bool2int(aux59_BOOL,aux59_INTEGER);
constraint bool2int(aux60_BOOL,aux60_INTEGER);
constraint bool2int(aux61_BOOL,aux61_INTEGER);
constraint bool2int(aux62_BOOL,aux62_INTEGER);
constraint bool2int(aux63_BOOL,aux63_INTEGER);
constraint bool2int(aux64_BOOL,aux64_INTEGER);
constraint bool2int(aux65_BOOL,aux65_INTEGER);
constraint bool2int(aux66_BOOL,aux66_INTEGER);
constraint bool2int(aux67_BOOL,aux67_INTEGER);
constraint bool2int(aux68_BOOL,aux68_INTEGER);
constraint bool2int(aux69_BOOL,aux69_INTEGER);
constraint bool2int(aux70_BOOL,aux70_INTEGER);
constraint bool2int(aux71_BOOL,aux71_INTEGER);
constraint bool2int(aux72_BOOL,aux72_INTEGER);
constraint bool2int(aux73_BOOL,aux73_INTEGER);
constraint bool2int(aux74_BOOL,aux74_INTEGER);
constraint bool2int(aux75_BOOL,aux75_INTEGER);
constraint bool2int(aux76_BOOL,aux76_INTEGER);
constraint bool2int(aux77_BOOL,aux77_INTEGER);
constraint bool2int(aux78_BOOL,aux78_INTEGER);
constraint bool2int(aux79_BOOL,aux79_INTEGER);
constraint bool2int(aux80_BOOL,aux80_INTEGER);
constraint bool2int(aux81_BOOL,aux81_INTEGER);
constraint bool2int(aux82_BOOL,aux82_INTEGER);
constraint bool2int(aux83_BOOL,aux83_INTEGER);
constraint bool2int(aux84_BOOL,aux84_INTEGER);
constraint bool2int(aux85_BOOL,aux85_INTEGER);
constraint bool2int(aux86_BOOL,aux86_INTEGER);
constraint bool2int(aux87_BOOL,aux87_INTEGER);
constraint bool2int(aux88_BOOL,aux88_INTEGER);
constraint bool2int(aux89_BOOL,aux89_INTEGER);
constraint bool2int(aux90_BOOL,aux90_INTEGER);
constraint bool2int(aux91_BOOL,aux91_INTEGER);
constraint bool2int(aux92_BOOL,aux92_INTEGER);
constraint bool2int(aux93_BOOL,aux93_INTEGER);
constraint bool2int(aux94_BOOL,aux94_INTEGER);
constraint bool2int(aux95_BOOL,aux95_INTEGER);
constraint bool2int(aux96_BOOL,aux96_INTEGER);
constraint bool2int(aux97_BOOL,aux97_INTEGER);
constraint bool2int(aux98_BOOL,aux98_INTEGER);
constraint bool2int(aux99_BOOL,aux99_INTEGER);
constraint bool2int(aux100_BOOL,aux100_INTEGER);
constraint bool2int(aux101_BOOL,aux101_INTEGER);
constraint bool2int(aux102_BOOL,aux102_INTEGER);
constraint bool2int(aux103_BOOL,aux103_INTEGER);
constraint bool2int(aux104_BOOL,aux104_INTEGER);
constraint bool2int(aux105_BOOL,aux105_INTEGER);
constraint bool2int(aux106_BOOL,aux106_INTEGER);
constraint bool2int(aux107_BOOL,aux107_INTEGER);
constraint bool2int(aux108_BOOL,aux108_INTEGER);
constraint bool2int(aux109_BOOL,aux109_INTEGER);
constraint bool2int(aux110_BOOL,aux110_INTEGER);
constraint bool2int(aux111_BOOL,aux111_INTEGER);
constraint bool2int(aux112_BOOL,aux112_INTEGER);
constraint bool2int(aux113_BOOL,aux113_INTEGER);
constraint bool2int(aux114_BOOL,aux114_INTEGER);
constraint bool2int(aux115_BOOL,aux115_INTEGER);
constraint bool2int(aux116_BOOL,aux116_INTEGER);
constraint bool2int(aux117_BOOL,aux117_INTEGER);
constraint bool2int(aux118_BOOL,aux118_INTEGER);
constraint bool2int(aux119_BOOL,aux119_INTEGER);
constraint bool2int(aux120_BOOL,aux120_INTEGER);
constraint bool2int(aux121_BOOL,aux121_INTEGER);
constraint bool2int(aux122_BOOL,aux122_INTEGER);
constraint bool2int(aux123_BOOL,aux123_INTEGER);
constraint bool2int(aux124_BOOL,aux124_INTEGER);
constraint bool2int(aux125_BOOL,aux125_INTEGER);
constraint bool2int(aux126_BOOL,aux126_INTEGER);
constraint bool2int(aux127_BOOL,aux127_INTEGER);
constraint bool2int(aux128_BOOL,aux128_INTEGER);
constraint bool2int(aux129_BOOL,aux129_INTEGER);
constraint bool2int(aux130_BOOL,aux130_INTEGER);
constraint bool2int(aux131_BOOL,aux131_INTEGER);
constraint bool2int(aux132_BOOL,aux132_INTEGER);
constraint bool2int(aux133_BOOL,aux133_INTEGER);
constraint bool2int(aux134_BOOL,aux134_INTEGER);
constraint bool2int(aux135_BOOL,aux135_INTEGER);
constraint bool2int(aux136_BOOL,aux136_INTEGER);
constraint bool2int(aux137_BOOL,aux137_INTEGER);
constraint bool2int(aux138_BOOL,aux138_INTEGER);
constraint bool2int(aux139_BOOL,aux139_INTEGER);
constraint bool2int(aux140_BOOL,aux140_INTEGER);
constraint bool2int(aux141_BOOL,aux141_INTEGER);
constraint bool2int(aux142_BOOL,aux142_INTEGER);
constraint bool2int(aux143_BOOL,aux143_INTEGER);
constraint bool2int(aux144_BOOL,aux144_INTEGER);
constraint bool2int(aux145_BOOL,aux145_INTEGER);
constraint bool2int(aux146_BOOL,aux146_INTEGER);
constraint bool2int(aux147_BOOL,aux147_INTEGER);
constraint bool2int(aux148_BOOL,aux148_INTEGER);
constraint bool2int(aux149_BOOL,aux149_INTEGER);
constraint bool2int(aux150_BOOL,aux150_INTEGER);
constraint bool2int(aux151_BOOL,aux151_INTEGER);
constraint bool2int(aux152_BOOL,aux152_INTEGER);
constraint bool2int(aux153_BOOL,aux153_INTEGER);
constraint bool2int(aux154_BOOL,aux154_INTEGER);
constraint bool2int(aux155_BOOL,aux155_INTEGER);
constraint bool2int(aux156_BOOL,aux156_INTEGER);
constraint bool2int(aux157_BOOL,aux157_INTEGER);
constraint bool2int(aux158_BOOL,aux158_INTEGER);
constraint bool2int(aux159_BOOL,aux159_INTEGER);
constraint bool2int(aux160_BOOL,aux160_INTEGER);
constraint bool2int(aux161_BOOL,aux161_INTEGER);
constraint bool2int(aux162_BOOL,aux162_INTEGER);
constraint bool2int(aux163_BOOL,aux163_INTEGER);
constraint bool2int(aux164_BOOL,aux164_INTEGER);
constraint bool2int(aux165_BOOL,aux165_INTEGER);
constraint bool2int(aux166_BOOL,aux166_INTEGER);
constraint bool2int(aux167_BOOL,aux167_INTEGER);
constraint bool2int(aux168_BOOL,aux168_INTEGER);
constraint bool2int(aux169_BOOL,aux169_INTEGER);
constraint bool2int(aux170_BOOL,aux170_INTEGER);
constraint bool2int(aux171_BOOL,aux171_INTEGER);
constraint bool2int(aux172_BOOL,aux172_INTEGER);
constraint bool2int(aux173_BOOL,aux173_INTEGER);
constraint bool2int(aux174_BOOL,aux174_INTEGER);
constraint bool2int(aux175_BOOL,aux175_INTEGER);
constraint bool2int(aux176_BOOL,aux176_INTEGER);
constraint bool2int(aux177_BOOL,aux177_INTEGER);
constraint bool2int(aux178_BOOL,aux178_INTEGER);
constraint bool2int(aux179_BOOL,aux179_INTEGER);
constraint bool2int(aux180_BOOL,aux180_INTEGER);
constraint bool2int(aux181_BOOL,aux181_INTEGER);
constraint bool2int(aux182_BOOL,aux182_INTEGER);
constraint bool2int(aux183_BOOL,aux183_INTEGER);
constraint bool2int(aux184_BOOL,aux184_INTEGER);
constraint bool2int(aux185_BOOL,aux185_INTEGER);
constraint bool2int(aux186_BOOL,aux186_INTEGER);
constraint bool2int(aux187_BOOL,aux187_INTEGER);
constraint bool2int(aux188_BOOL,aux188_INTEGER);
constraint bool2int(aux189_BOOL,aux189_INTEGER);
constraint bool2int(aux190_BOOL,aux190_INTEGER);
constraint bool2int(aux191_BOOL,aux191_INTEGER);
constraint bool2int(aux192_BOOL,aux192_INTEGER);
constraint bool2int(aux193_BOOL,aux193_INTEGER);
constraint bool2int(aux194_BOOL,aux194_INTEGER);
constraint bool2int(aux195_BOOL,aux195_INTEGER);
constraint bool2int(aux196_BOOL,aux196_INTEGER);
constraint bool2int(aux197_BOOL,aux197_INTEGER);
constraint bool2int(aux198_BOOL,aux198_INTEGER);
constraint bool2int(aux199_BOOL,aux199_INTEGER);
constraint bool2int(aux200_BOOL,aux200_INTEGER);
constraint bool2int(aux201_BOOL,aux201_INTEGER);
constraint bool2int(aux202_BOOL,aux202_INTEGER);
constraint bool2int(aux203_BOOL,aux203_INTEGER);
constraint bool2int(aux204_BOOL,aux204_INTEGER);
constraint bool2int(aux205_BOOL,aux205_INTEGER);
constraint bool2int(aux206_BOOL,aux206_INTEGER);
constraint bool2int(aux207_BOOL,aux207_INTEGER);
constraint bool2int(aux208_BOOL,aux208_INTEGER);
constraint bool2int(aux209_BOOL,aux209_INTEGER);
constraint bool2int(aux210_BOOL,aux210_INTEGER);
constraint bool2int(aux211_BOOL,aux211_INTEGER);
constraint bool2int(aux212_BOOL,aux212_INTEGER);
constraint bool2int(aux213_BOOL,aux213_INTEGER);
constraint bool2int(aux214_BOOL,aux214_INTEGER);
constraint bool2int(aux215_BOOL,aux215_INTEGER);
constraint bool2int(aux216_BOOL,aux216_INTEGER);
constraint bool2int(aux217_BOOL,aux217_INTEGER);
constraint bool2int(aux218_BOOL,aux218_INTEGER);
constraint bool2int(aux219_BOOL,aux219_INTEGER);
constraint bool2int(aux220_BOOL,aux220_INTEGER);
constraint bool2int(aux221_BOOL,aux221_INTEGER);
constraint bool2int(aux222_BOOL,aux222_INTEGER);
constraint bool2int(aux223_BOOL,aux223_INTEGER);
constraint bool2int(aux224_BOOL,aux224_INTEGER);
constraint bool2int(aux225_BOOL,aux225_INTEGER);
constraint bool2int(aux226_BOOL,aux226_INTEGER);
constraint bool2int(aux227_BOOL,aux227_INTEGER);
constraint bool2int(aux228_BOOL,aux228_INTEGER);
constraint bool2int(aux229_BOOL,aux229_INTEGER);
constraint bool2int(aux230_BOOL,aux230_INTEGER);
constraint bool2int(aux231_BOOL,aux231_INTEGER);
constraint bool2int(aux232_BOOL,aux232_INTEGER);
constraint bool2int(aux233_BOOL,aux233_INTEGER);
constraint bool2int(aux234_BOOL,aux234_INTEGER);
constraint bool2int(aux235_BOOL,aux235_INTEGER);
constraint bool2int(aux236_BOOL,aux236_INTEGER);
constraint bool2int(aux237_BOOL,aux237_INTEGER);
constraint bool2int(aux238_BOOL,aux238_INTEGER);
constraint bool2int(aux239_BOOL,aux239_INTEGER);
constraint bool2int(aux240_BOOL,aux240_INTEGER);
constraint bool2int(aux241_BOOL,aux241_INTEGER);
constraint bool2int(aux242_BOOL,aux242_INTEGER);
constraint bool2int(aux243_BOOL,aux243_INTEGER);
constraint bool2int(aux244_BOOL,aux244_INTEGER);
constraint bool2int(aux245_BOOL,aux245_INTEGER);
constraint bool2int(aux246_BOOL,aux246_INTEGER);
constraint bool2int(aux247_BOOL,aux247_INTEGER);
constraint bool2int(aux248_BOOL,aux248_INTEGER);
constraint bool2int(aux249_BOOL,aux249_INTEGER);
constraint bool2int(aux250_BOOL,aux250_INTEGER);
constraint bool2int(aux251_BOOL,aux251_INTEGER);
constraint bool2int(aux252_BOOL,aux252_INTEGER);
constraint bool2int(aux253_BOOL,aux253_INTEGER);
constraint bool2int(aux254_BOOL,aux254_INTEGER);
constraint bool2int(aux255_BOOL,aux255_INTEGER);
constraint bool2int(aux256_BOOL,aux256_INTEGER);
constraint bool2int(aux257_BOOL,aux257_INTEGER);
constraint bool2int(aux258_BOOL,aux258_INTEGER);
constraint bool2int(aux259_BOOL,aux259_INTEGER);
constraint bool2int(aux260_BOOL,aux260_INTEGER);
constraint bool2int(aux261_BOOL,aux261_INTEGER);
constraint bool2int(aux262_BOOL,aux262_INTEGER);
constraint bool2int(aux263_BOOL,aux263_INTEGER);
constraint bool2int(aux264_BOOL,aux264_INTEGER);
constraint bool2int(aux265_BOOL,aux265_INTEGER);
constraint bool2int(aux266_BOOL,aux266_INTEGER);
constraint bool2int(aux267_BOOL,aux267_INTEGER);
constraint bool2int(aux268_BOOL,aux268_INTEGER);
constraint bool2int(aux269_BOOL,aux269_INTEGER);
constraint bool2int(aux270_BOOL,aux270_INTEGER);
constraint bool2int(aux271_BOOL,aux271_INTEGER);
constraint bool2int(aux272_BOOL,aux272_INTEGER);
constraint bool2int(aux273_BOOL,aux273_INTEGER);
constraint bool2int(aux274_BOOL,aux274_INTEGER);
constraint bool2int(aux275_BOOL,aux275_INTEGER);
constraint bool2int(aux276_BOOL,aux276_INTEGER);
constraint bool2int(aux277_BOOL,aux277_INTEGER);
constraint bool2int(aux278_BOOL,aux278_INTEGER);
constraint bool2int(aux279_BOOL,aux279_INTEGER);
constraint bool2int(aux280_BOOL,aux280_INTEGER);
constraint bool2int(aux281_BOOL,aux281_INTEGER);
constraint bool2int(aux282_BOOL,aux282_INTEGER);
constraint bool2int(aux283_BOOL,aux283_INTEGER);
constraint bool2int(aux284_BOOL,aux284_INTEGER);
constraint bool2int(aux334_BOOL,aux334_INTEGER);
constraint bool2int(aux336_BOOL,aux336_INTEGER);
constraint bool2int(aux340_BOOL,aux340_INTEGER);
constraint bool2int(aux344_BOOL,aux344_INTEGER);
constraint bool2int(aux346_BOOL,aux346_INTEGER);
constraint bool2int(aux350_BOOL,aux350_INTEGER);
constraint bool2int(aux354_BOOL,aux354_INTEGER);
constraint bool2int(aux356_BOOL,aux356_INTEGER);
constraint bool2int(aux360_BOOL,aux360_INTEGER);
constraint bool2int(aux364_BOOL,aux364_INTEGER);
constraint bool2int(aux366_BOOL,aux366_INTEGER);
constraint bool2int(aux370_BOOL,aux370_INTEGER);
constraint bool2int(aux374_BOOL,aux374_INTEGER);
constraint bool2int(aux376_BOOL,aux376_INTEGER);
constraint bool2int(aux380_BOOL,aux380_INTEGER);
constraint bool2int(aux384_BOOL,aux384_INTEGER);
constraint bool2int(aux386_BOOL,aux386_INTEGER);
constraint bool2int(aux390_BOOL,aux390_INTEGER);
constraint bool2int(aux394_BOOL,aux394_INTEGER);
constraint bool2int(aux396_BOOL,aux396_INTEGER);
constraint bool2int(aux400_BOOL,aux400_INTEGER);
constraint bool2int(aux404_BOOL,aux404_INTEGER);
constraint bool2int(aux406_BOOL,aux406_INTEGER);
constraint bool2int(aux410_BOOL,aux410_INTEGER);
constraint bool2int(aux414_BOOL,aux414_INTEGER);
constraint bool2int(aux416_BOOL,aux416_INTEGER);
constraint bool2int(aux420_BOOL,aux420_INTEGER);
constraint bool2int(aux424_BOOL,aux424_INTEGER);
constraint bool2int(aux426_BOOL,aux426_INTEGER);
constraint bool2int(aux430_BOOL,aux430_INTEGER);
constraint bool2int(aux434_BOOL,aux434_INTEGER);
constraint bool2int(aux436_BOOL,aux436_INTEGER);
constraint bool2int(aux440_BOOL,aux440_INTEGER);
constraint bool2int(aux444_BOOL,aux444_INTEGER);
constraint bool2int(aux446_BOOL,aux446_INTEGER);
constraint bool2int(aux451_BOOL,aux451_INTEGER);
constraint int_le_reif(plan2d_00012_00006, plan2d_00001_00001,aux285_BOOL);
constraint int_lin_eq_reif([1,1],[aux145_INTEGER,aux35_INTEGER],0,aux286_BOOL);
constraint int_lin_eq_reif([1,1],[aux143_INTEGER,aux36_INTEGER],0,aux287_BOOL);
constraint int_lin_eq_reif([1,1],[aux142_INTEGER,aux37_INTEGER],0,aux288_BOOL);
constraint int_lin_eq_reif([1,1],[aux103_INTEGER,aux90_INTEGER],0,aux289_BOOL);
constraint int_lin_eq_reif([1,1],[aux101_INTEGER,aux89_INTEGER],0,aux290_BOOL);
constraint int_lin_eq_reif([1,1],[aux102_INTEGER,aux94_INTEGER],0,aux291_BOOL);
constraint int_lin_eq_reif([1,1],[aux92_INTEGER,aux99_INTEGER],0,aux292_BOOL);
constraint int_lin_eq_reif([1,1],[aux154_INTEGER,aux57_INTEGER],0,aux293_BOOL);
constraint int_lin_eq_reif([1,1],[aux152_INTEGER,aux54_INTEGER],0,aux294_BOOL);
constraint int_lin_eq_reif([1,1],[aux149_INTEGER,aux53_INTEGER],0,aux295_BOOL);
constraint int_lin_eq_reif([1,1],[aux148_INTEGER,aux56_INTEGER],0,aux296_BOOL);
constraint int_lin_eq_reif([1,1],[aux130_INTEGER,aux193_INTEGER],0,aux297_BOOL);
constraint int_lin_eq_reif([1,1],[aux131_INTEGER,aux191_INTEGER],0,aux298_BOOL);
constraint int_lin_eq_reif([1,1],[aux132_INTEGER,aux189_INTEGER],0,aux299_BOOL);
constraint int_lin_eq_reif([1,1],[aux128_INTEGER,aux187_INTEGER],0,aux300_BOOL);
constraint int_lin_eq_reif([1,1],[aux175_INTEGER,aux6_INTEGER],0,aux301_BOOL);
constraint int_lin_eq_reif([1,1],[aux180_INTEGER,aux10_INTEGER],0,aux302_BOOL);
constraint int_lin_eq_reif([1,1],[aux177_INTEGER,aux9_INTEGER],0,aux303_BOOL);
constraint int_lin_eq_reif([1,1],[aux176_INTEGER,aux8_INTEGER],0,aux304_BOOL);
constraint int_lin_eq_reif([1,1],[aux115_INTEGER,aux79_INTEGER],0,aux305_BOOL);
constraint int_lin_eq_reif([1,1],[aux116_INTEGER,aux76_INTEGER],0,aux306_BOOL);
constraint int_lin_eq_reif([1,1],[aux113_INTEGER,aux82_INTEGER],0,aux307_BOOL);
constraint int_lin_eq_reif([1,1],[aux114_INTEGER,aux80_INTEGER],0,aux308_BOOL);
constraint int_lin_eq_reif([1,1],[aux0_INTEGER,aux74_INTEGER],0,aux309_BOOL);
constraint int_lin_eq_reif([1,1],[aux1_INTEGER,aux72_INTEGER],0,aux310_BOOL);
constraint int_lin_eq_reif([1,1],[aux2_INTEGER,aux70_INTEGER],0,aux311_BOOL);
constraint int_lin_eq_reif([1,1],[aux3_INTEGER,aux69_INTEGER],0,aux312_BOOL);
constraint int_lin_eq_reif([1,1],[aux126_INTEGER,aux165_INTEGER],0,aux313_BOOL);
constraint int_lin_eq_reif([1,1],[aux125_INTEGER,aux163_INTEGER],0,aux314_BOOL);
constraint int_lin_eq_reif([1,1],[aux124_INTEGER,aux169_INTEGER],0,aux315_BOOL);
constraint int_lin_eq_reif([1,1],[aux123_INTEGER,aux167_INTEGER],0,aux316_BOOL);
constraint int_lin_eq_reif([1,1],[aux206_INTEGER,aux58_INTEGER],0,aux317_BOOL);
constraint int_lin_eq_reif([1,1],[aux211_INTEGER,aux59_INTEGER],0,aux318_BOOL);
constraint int_lin_eq_reif([1,1],[aux209_INTEGER,aux61_INTEGER],0,aux319_BOOL);
constraint int_lin_eq_reif([1,1],[aux208_INTEGER,aux62_INTEGER],0,aux320_BOOL);
constraint int_lin_eq_reif([1,1],[aux137_INTEGER,aux19_INTEGER],0,aux321_BOOL);
constraint int_lin_eq_reif([1,1],[aux138_INTEGER,aux21_INTEGER],0,aux322_BOOL);
constraint int_lin_eq_reif([1,1],[aux139_INTEGER,aux23_INTEGER],0,aux323_BOOL);
constraint int_lin_eq_reif([1,1],[aux135_INTEGER,aux25_INTEGER],0,aux324_BOOL);
constraint int_lin_eq_reif([1,1],[aux27_INTEGER,aux39_INTEGER],0,aux325_BOOL);
constraint int_lin_eq_reif([1,1],[aux31_INTEGER,aux41_INTEGER],0,aux326_BOOL);
constraint int_lin_eq_reif([1,1],[aux30_INTEGER,aux46_INTEGER],0,aux327_BOOL);
constraint int_lin_eq_reif([1,1],[aux29_INTEGER,aux47_INTEGER],0,aux328_BOOL);
constraint int_lin_eq_reif([1,1],[aux120_INTEGER,aux204_INTEGER],0,aux329_BOOL);
constraint int_lin_eq_reif([1,1],[aux117_INTEGER,aux199_INTEGER],0,aux330_BOOL);
constraint int_lin_eq_reif([1,1],[aux118_INTEGER,aux201_INTEGER],0,aux331_BOOL);
constraint int_lin_eq_reif([1,1],[aux119_INTEGER,aux203_INTEGER],0,aux332_BOOL);
constraint int_lin_eq_reif([1,1],[aux140_INTEGER,aux34_INTEGER],0,aux333_BOOL);
constraint int_ne_reif(plan2d_00001_00001,plan2d_00001_00004,aux334_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux140_INTEGER,aux141_INTEGER,aux334_INTEGER,aux34_INTEGER],0,false);
constraint int_ne_reif(plan2d_00001_00002,plan2d_00001_00005,aux336_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux145_INTEGER,aux146_INTEGER,aux336_INTEGER,aux35_INTEGER],0,false);
constraint int_lin_eq_reif([1,2,1],[aux143_INTEGER,aux144_INTEGER,aux36_INTEGER],0,false);
constraint int_lin_eq_reif([2,1,1],[aux142_INTEGER,aux183_INTEGER,aux37_INTEGER],0,false);
constraint int_ne_reif(plan2d_00001_00005,plan2d_00002_00001,aux340_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux184_INTEGER,aux340_INTEGER,aux38_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux181_INTEGER,aux198_INTEGER,aux33_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux181_INTEGER,aux182_INTEGER,aux198_INTEGER,aux33_INTEGER],0,false);
constraint int_ne_reif(plan2d_00002_00001,plan2d_00002_00004,aux344_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux103_INTEGER,aux344_INTEGER,aux90_INTEGER,aux91_INTEGER],0,false);
constraint int_ne_reif(plan2d_00002_00002,plan2d_00002_00005,aux346_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux101_INTEGER,aux346_INTEGER,aux88_INTEGER,aux89_INTEGER],0,false);
constraint int_lin_eq_reif([1,2,1],[aux102_INTEGER,aux93_INTEGER,aux94_INTEGER],0,false);
constraint int_lin_eq_reif([1,2,1],[aux65_INTEGER,aux92_INTEGER,aux99_INTEGER],0,false);
constraint int_ne_reif(plan2d_00002_00005,plan2d_00003_00001,aux350_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux100_INTEGER,aux350_INTEGER,aux66_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux186_INTEGER,aux64_INTEGER,aux68_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux186_INTEGER,aux64_INTEGER,aux67_INTEGER,aux68_INTEGER],0,false);
constraint int_ne_reif(plan2d_00003_00001,plan2d_00003_00004,aux354_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux153_INTEGER,aux154_INTEGER,aux354_INTEGER,aux57_INTEGER],0,false);
constraint int_ne_reif(plan2d_00003_00002,plan2d_00003_00005,aux356_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux151_INTEGER,aux152_INTEGER,aux356_INTEGER,aux54_INTEGER],0,false);
constraint int_lin_eq_reif([1,2,1],[aux149_INTEGER,aux150_INTEGER,aux53_INTEGER],0,false);
constraint int_lin_eq_reif([2,1,1],[aux148_INTEGER,aux16_INTEGER,aux56_INTEGER],0,false);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00003_00005,aux360_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux360_INTEGER,aux17_INTEGER,aux55_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux127_INTEGER,aux11_INTEGER,aux18_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux127_INTEGER,aux11_INTEGER,aux15_INTEGER,aux18_INTEGER],0,false);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00004_00004,aux364_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux130_INTEGER,aux192_INTEGER,aux193_INTEGER,aux364_INTEGER],0,false);
constraint int_ne_reif(plan2d_00004_00002,plan2d_00004_00005,aux366_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux131_INTEGER,aux190_INTEGER,aux191_INTEGER,aux366_INTEGER],0,false);
constraint int_lin_eq_reif([1,2,1],[aux132_INTEGER,aux188_INTEGER,aux189_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,2],[aux128_INTEGER,aux155_INTEGER,aux187_INTEGER],0,false);
constraint int_ne_reif(plan2d_00004_00005,plan2d_00005_00001,aux370_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux129_INTEGER,aux156_INTEGER,aux370_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux104_INTEGER,aux157_INTEGER,aux185_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux104_INTEGER,aux157_INTEGER,aux158_INTEGER,aux185_INTEGER],0,false);
constraint int_ne_reif(plan2d_00005_00001,plan2d_00005_00004,aux374_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux174_INTEGER,aux175_INTEGER,aux374_INTEGER,aux6_INTEGER],0,false);
constraint int_ne_reif(plan2d_00005_00002,plan2d_00005_00005,aux376_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux179_INTEGER,aux180_INTEGER,aux376_INTEGER,aux10_INTEGER],0,false);
constraint int_lin_eq_reif([1,2,1],[aux177_INTEGER,aux178_INTEGER,aux9_INTEGER],0,false);
constraint int_lin_eq_reif([1,2,1],[aux161_INTEGER,aux176_INTEGER,aux8_INTEGER],0,false);
constraint int_ne_reif(plan2d_00005_00005,plan2d_00006_00001,aux380_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux162_INTEGER,aux380_INTEGER,aux7_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux159_INTEGER,aux12_INTEGER,aux26_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux159_INTEGER,aux160_INTEGER,aux12_INTEGER,aux26_INTEGER],0,false);
constraint int_ne_reif(plan2d_00006_00001,plan2d_00006_00004,aux384_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux115_INTEGER,aux384_INTEGER,aux78_INTEGER,aux79_INTEGER],0,false);
constraint int_ne_reif(plan2d_00006_00002,plan2d_00006_00005,aux386_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux116_INTEGER,aux386_INTEGER,aux76_INTEGER,aux77_INTEGER],0,false);
constraint int_lin_eq_reif([1,2,1],[aux113_INTEGER,aux81_INTEGER,aux82_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,2],[aux114_INTEGER,aux170_INTEGER,aux80_INTEGER],0,false);
constraint int_ne_reif(plan2d_00006_00005,plan2d_00007_00001,aux390_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux112_INTEGER,aux171_INTEGER,aux390_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux133_INTEGER,aux173_INTEGER,aux14_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux133_INTEGER,aux172_INTEGER,aux173_INTEGER,aux14_INTEGER],0,false);
constraint int_ne_reif(plan2d_00007_00001,plan2d_00007_00004,aux394_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux394_INTEGER,aux0_INTEGER,aux74_INTEGER,aux75_INTEGER],0,false);
constraint int_ne_reif(plan2d_00007_00002,plan2d_00007_00005,aux396_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux396_INTEGER,aux1_INTEGER,aux72_INTEGER,aux73_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,2],[aux2_INTEGER,aux70_INTEGER,aux71_INTEGER],0,false);
constraint int_lin_eq_reif([1,2,1],[aux3_INTEGER,aux69_INTEGER,aux83_INTEGER],0,false);
constraint int_ne_reif(plan2d_00007_00005,plan2d_00008_00001,aux400_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux400_INTEGER,aux4_INTEGER,aux84_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux5_INTEGER,aux13_INTEGER,aux86_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux5_INTEGER,aux13_INTEGER,aux85_INTEGER,aux86_INTEGER],0,false);
constraint int_ne_reif(plan2d_00008_00001,plan2d_00008_00004,aux404_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux126_INTEGER,aux165_INTEGER,aux166_INTEGER,aux404_INTEGER],0,false);
constraint int_ne_reif(plan2d_00008_00002,plan2d_00008_00005,aux406_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux125_INTEGER,aux163_INTEGER,aux164_INTEGER,aux406_INTEGER],0,false);
constraint int_lin_eq_reif([1,2,1],[aux124_INTEGER,aux168_INTEGER,aux169_INTEGER],0,false);
constraint int_lin_eq_reif([1,2,1],[aux123_INTEGER,aux167_INTEGER,aux49_INTEGER],0,false);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00008_00005,aux410_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux122_INTEGER,aux410_INTEGER,aux51_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux32_INTEGER,aux50_INTEGER,aux63_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux32_INTEGER,aux48_INTEGER,aux50_INTEGER,aux63_INTEGER],0,false);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00009_00004,aux414_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux206_INTEGER,aux207_INTEGER,aux414_INTEGER,aux58_INTEGER],0,false);
constraint int_ne_reif(plan2d_00009_00002,plan2d_00009_00005,aux416_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux211_INTEGER,aux212_INTEGER,aux416_INTEGER,aux59_INTEGER],0,false);
constraint int_lin_eq_reif([1,2,1],[aux209_INTEGER,aux210_INTEGER,aux61_INTEGER],0,false);
constraint int_lin_eq_reif([1,2,1],[aux195_INTEGER,aux208_INTEGER,aux62_INTEGER],0,false);
constraint int_ne_reif(plan2d_00009_00005,plan2d_00010_00001,aux420_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux194_INTEGER,aux420_INTEGER,aux60_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux106_INTEGER,aux196_INTEGER,aux52_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux106_INTEGER,aux196_INTEGER,aux197_INTEGER,aux52_INTEGER],0,false);
constraint int_ne_reif(plan2d_00010_00001,plan2d_00010_00004,aux424_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux137_INTEGER,aux424_INTEGER,aux19_INTEGER,aux20_INTEGER],0,false);
constraint int_ne_reif(plan2d_00010_00002,plan2d_00010_00005,aux426_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux138_INTEGER,aux426_INTEGER,aux21_INTEGER,aux22_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,2],[aux139_INTEGER,aux23_INTEGER,aux24_INTEGER],0,false);
constraint int_lin_eq_reif([1,2,1],[aux135_INTEGER,aux25_INTEGER,aux98_INTEGER],0,false);
constraint int_ne_reif(plan2d_00010_00005,plan2d_00011_00001,aux430_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux136_INTEGER,aux430_INTEGER,aux97_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux105_INTEGER,aux87_INTEGER,aux96_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux105_INTEGER,aux87_INTEGER,aux95_INTEGER,aux96_INTEGER],0,false);
constraint int_ne_reif(plan2d_00011_00001,plan2d_00011_00004,aux434_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux434_INTEGER,aux27_INTEGER,aux39_INTEGER,aux40_INTEGER],0,false);
constraint int_ne_reif(plan2d_00011_00002,plan2d_00011_00005,aux436_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux436_INTEGER,aux31_INTEGER,aux41_INTEGER,aux42_INTEGER],0,false);
constraint int_lin_eq_reif([1,2,1],[aux30_INTEGER,aux45_INTEGER,aux46_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,2],[aux108_INTEGER,aux29_INTEGER,aux47_INTEGER],0,false);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00011_00005,aux440_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux110_INTEGER,aux440_INTEGER,aux28_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux109_INTEGER,aux111_INTEGER,aux147_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux107_INTEGER,aux109_INTEGER,aux111_INTEGER,aux147_INTEGER],0,false);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00012_00004,aux444_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux120_INTEGER,aux204_INTEGER,aux205_INTEGER,aux444_INTEGER],0,false);
constraint int_ne_reif(plan2d_00012_00002,plan2d_00012_00005,aux446_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux117_INTEGER,aux199_INTEGER,aux200_INTEGER,aux446_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,2],[aux118_INTEGER,aux201_INTEGER,aux202_INTEGER],0,false);
constraint int_lin_eq_reif([1,2],[aux119_INTEGER,aux203_INTEGER],0,aux449_BOOL);
constraint int_ne_reif(plan2d_00012_00004,plan2d_00001_00001,aux450_BOOL);
constraint int_ne_reif(plan2d_00012_00005,plan2d_00001_00001,aux451_BOOL);
constraint int_lin_eq_reif([2,1],[aux121_INTEGER,aux451_INTEGER],0,aux452_BOOL);
constraint int_ne_reif(plan2d_00012_00005,plan2d_00001_00002,aux453_BOOL);
constraint int_lin_eq_reif([1,1],[aux134_INTEGER,aux43_INTEGER],0,aux454_BOOL);
constraint int_lin_eq_reif([1,1,1],[aux134_INTEGER,aux43_INTEGER,aux44_INTEGER],0,false);
constraint int_ne_reif(plan2d_00012_00006,plan2d_00001_00004,aux456_BOOL);
constraint int_le_reif(plan2d_00001_00002, plan2d_00001_00003,aux457_BOOL);
constraint int_le_reif(plan2d_00001_00003, plan2d_00001_00004,aux458_BOOL);
constraint int_le_reif(plan2d_00001_00004, plan2d_00001_00005,aux459_BOOL);
constraint int_le_reif(plan2d_00001_00005, plan2d_00001_00006,aux460_BOOL);
constraint int_le_reif(plan2d_00001_00006, plan2d_00002_00001,aux461_BOOL);
constraint int_le_reif(plan2d_00002_00001, plan2d_00002_00002,aux462_BOOL);
constraint int_le_reif(plan2d_00002_00002, plan2d_00002_00003,aux463_BOOL);
constraint int_le_reif(plan2d_00002_00003, plan2d_00002_00004,aux464_BOOL);
constraint int_le_reif(plan2d_00002_00004, plan2d_00002_00005,aux465_BOOL);
constraint int_le_reif(plan2d_00002_00005, plan2d_00002_00006,aux466_BOOL);
constraint int_le_reif(plan2d_00002_00006, plan2d_00003_00001,aux467_BOOL);
constraint int_le_reif(plan2d_00003_00001, plan2d_00003_00002,aux468_BOOL);
constraint int_le_reif(plan2d_00003_00002, plan2d_00003_00003,aux469_BOOL);
constraint int_le_reif(plan2d_00003_00003, plan2d_00003_00004,aux470_BOOL);
constraint int_le_reif(plan2d_00003_00004, plan2d_00003_00005,aux471_BOOL);
constraint int_le_reif(plan2d_00003_00005, plan2d_00003_00006,aux472_BOOL);
constraint int_le_reif(plan2d_00003_00006, plan2d_00004_00001,aux473_BOOL);
constraint int_le_reif(plan2d_00004_00001, plan2d_00004_00002,aux474_BOOL);
constraint int_le_reif(plan2d_00004_00002, plan2d_00004_00003,aux475_BOOL);
constraint int_le_reif(plan2d_00004_00003, plan2d_00004_00004,aux476_BOOL);
constraint int_le_reif(plan2d_00004_00004, plan2d_00004_00005,aux477_BOOL);
constraint int_le_reif(plan2d_00004_00005, plan2d_00004_00006,aux478_BOOL);
constraint int_le_reif(plan2d_00004_00006, plan2d_00005_00001,aux479_BOOL);
constraint int_le_reif(plan2d_00005_00001, plan2d_00005_00002,aux480_BOOL);
constraint int_le_reif(plan2d_00005_00002, plan2d_00005_00003,aux481_BOOL);
constraint int_le_reif(plan2d_00005_00003, plan2d_00005_00004,aux482_BOOL);
constraint int_le_reif(plan2d_00005_00004, plan2d_00005_00005,aux483_BOOL);
constraint int_le_reif(plan2d_00005_00005, plan2d_00005_00006,aux484_BOOL);
constraint int_le_reif(plan2d_00005_00006, plan2d_00006_00001,aux485_BOOL);
constraint int_le_reif(plan2d_00006_00001, plan2d_00006_00002,aux486_BOOL);
constraint int_le_reif(plan2d_00006_00002, plan2d_00006_00003,aux487_BOOL);
constraint int_le_reif(plan2d_00006_00003, plan2d_00006_00004,aux488_BOOL);
constraint int_le_reif(plan2d_00006_00004, plan2d_00006_00005,aux489_BOOL);
constraint int_le_reif(plan2d_00006_00005, plan2d_00006_00006,aux490_BOOL);
constraint int_le_reif(plan2d_00006_00006, plan2d_00007_00001,aux491_BOOL);
constraint int_le_reif(plan2d_00007_00001, plan2d_00007_00002,aux492_BOOL);
constraint int_le_reif(plan2d_00007_00002, plan2d_00007_00003,aux493_BOOL);
constraint int_le_reif(plan2d_00007_00003, plan2d_00007_00004,aux494_BOOL);
constraint int_le_reif(plan2d_00007_00004, plan2d_00007_00005,aux495_BOOL);
constraint int_le_reif(plan2d_00007_00005, plan2d_00007_00006,aux496_BOOL);
constraint int_le_reif(plan2d_00007_00006, plan2d_00008_00001,aux497_BOOL);
constraint int_le_reif(plan2d_00008_00001, plan2d_00008_00002,aux498_BOOL);
constraint int_le_reif(plan2d_00008_00002, plan2d_00008_00003,aux499_BOOL);
constraint int_le_reif(plan2d_00008_00003, plan2d_00008_00004,aux500_BOOL);
constraint int_le_reif(plan2d_00008_00004, plan2d_00008_00005,aux501_BOOL);
constraint int_le_reif(plan2d_00008_00005, plan2d_00008_00006,aux502_BOOL);
constraint int_le_reif(plan2d_00008_00006, plan2d_00009_00001,aux503_BOOL);
constraint int_le_reif(plan2d_00009_00001, plan2d_00009_00002,aux504_BOOL);
constraint int_le_reif(plan2d_00009_00002, plan2d_00009_00003,aux505_BOOL);
constraint int_le_reif(plan2d_00009_00003, plan2d_00009_00004,aux506_BOOL);
constraint int_le_reif(plan2d_00009_00004, plan2d_00009_00005,aux507_BOOL);
constraint int_le_reif(plan2d_00009_00005, plan2d_00009_00006,aux508_BOOL);
constraint int_le_reif(plan2d_00009_00006, plan2d_00010_00001,aux509_BOOL);
constraint int_le_reif(plan2d_00010_00001, plan2d_00010_00002,aux510_BOOL);
constraint int_le_reif(plan2d_00010_00002, plan2d_00010_00003,aux511_BOOL);
constraint int_le_reif(plan2d_00010_00003, plan2d_00010_00004,aux512_BOOL);
constraint int_le_reif(plan2d_00010_00004, plan2d_00010_00005,aux513_BOOL);
constraint int_le_reif(plan2d_00010_00005, plan2d_00010_00006,aux514_BOOL);
constraint int_le_reif(plan2d_00010_00006, plan2d_00011_00001,aux515_BOOL);
constraint int_le_reif(plan2d_00011_00001, plan2d_00011_00002,aux516_BOOL);
constraint int_le_reif(plan2d_00011_00002, plan2d_00011_00003,aux517_BOOL);
constraint int_le_reif(plan2d_00011_00003, plan2d_00011_00004,aux518_BOOL);
constraint int_le_reif(plan2d_00011_00004, plan2d_00011_00005,aux519_BOOL);
constraint int_le_reif(plan2d_00011_00005, plan2d_00011_00006,aux520_BOOL);
constraint int_le_reif(plan2d_00011_00006, plan2d_00012_00001,aux521_BOOL);
constraint int_le_reif(plan2d_00012_00001, plan2d_00012_00002,aux522_BOOL);
constraint int_le_reif(plan2d_00012_00002, plan2d_00012_00003,aux523_BOOL);
constraint int_le_reif(plan2d_00012_00003, plan2d_00012_00004,aux524_BOOL);
constraint int_le_reif(plan2d_00012_00004, plan2d_00012_00005,aux525_BOOL);
constraint int_le_reif(plan2d_00012_00005, plan2d_00012_00006,aux526_BOOL);
constraint int_ne_reif(plan2d_00007_00001,plan2d_00007_00002,aux0_BOOL);
constraint int_ne_reif(plan2d_00007_00002,plan2d_00007_00003,aux1_BOOL);
constraint int_ne_reif(plan2d_00007_00003,plan2d_00007_00004,aux2_BOOL);
constraint int_ne_reif(plan2d_00007_00004,plan2d_00007_00005,aux3_BOOL);
constraint int_ne_reif(plan2d_00007_00005,plan2d_00007_00006,aux4_BOOL);
constraint int_ne_reif(plan2d_00007_00006,plan2d_00008_00001,aux5_BOOL);
constraint int_ne_reif(plan2d_00005_00001,plan2d_00005_00002,aux6_BOOL);
constraint int_ne_reif(plan2d_00005_00005,plan2d_00005_00006,aux7_BOOL);
constraint int_ne_reif(plan2d_00005_00004,plan2d_00005_00005,aux8_BOOL);
constraint int_ne_reif(plan2d_00005_00003,plan2d_00005_00004,aux9_BOOL);
constraint int_ne_reif(plan2d_00005_00002,plan2d_00005_00003,aux10_BOOL);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00003_00006,aux11_BOOL);
constraint int_ne_reif(plan2d_00005_00006,plan2d_00006_00003,aux12_BOOL);
constraint int_ne_reif(plan2d_00007_00006,plan2d_00008_00003,aux13_BOOL);
constraint int_ne_reif(plan2d_00006_00006,plan2d_00007_00001,aux14_BOOL);
constraint int_ne_reif(plan2d_00004_00004,plan2d_00003_00006,aux15_BOOL);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00003_00004,aux16_BOOL);
constraint int_ne_reif(plan2d_00004_00002,plan2d_00003_00005,aux17_BOOL);
constraint int_ne_reif(plan2d_00004_00002,plan2d_00003_00006,aux18_BOOL);
constraint int_ne_reif(plan2d_00010_00001,plan2d_00010_00003,aux19_BOOL);
constraint int_ne_reif(plan2d_00010_00001,plan2d_00010_00005,aux20_BOOL);
constraint int_ne_reif(plan2d_00010_00002,plan2d_00010_00004,aux21_BOOL);
constraint int_ne_reif(plan2d_00010_00002,plan2d_00010_00006,aux22_BOOL);
constraint int_ne_reif(plan2d_00010_00003,plan2d_00010_00005,aux23_BOOL);
constraint int_ne_reif(plan2d_00010_00003,plan2d_00010_00006,aux24_BOOL);
constraint int_ne_reif(plan2d_00010_00004,plan2d_00010_00006,aux25_BOOL);
constraint int_ne_reif(plan2d_00005_00006,plan2d_00006_00001,aux26_BOOL);
constraint int_ne_reif(plan2d_00011_00001,plan2d_00011_00002,aux27_BOOL);
constraint int_ne_reif(plan2d_00011_00005,plan2d_00011_00006,aux28_BOOL);
constraint int_ne_reif(plan2d_00011_00004,plan2d_00011_00005,aux29_BOOL);
constraint int_ne_reif(plan2d_00011_00003,plan2d_00011_00004,aux30_BOOL);
constraint int_ne_reif(plan2d_00011_00002,plan2d_00011_00003,aux31_BOOL);
constraint int_ne_reif(plan2d_00009_00003,plan2d_00008_00006,aux32_BOOL);
constraint int_ne_reif(plan2d_00001_00006,plan2d_00002_00003,aux33_BOOL);
constraint int_ne_reif(plan2d_00001_00001,plan2d_00001_00002,aux34_BOOL);
constraint int_ne_reif(plan2d_00001_00002,plan2d_00001_00003,aux35_BOOL);
constraint int_ne_reif(plan2d_00001_00003,plan2d_00001_00004,aux36_BOOL);
constraint int_ne_reif(plan2d_00001_00004,plan2d_00001_00005,aux37_BOOL);
constraint int_ne_reif(plan2d_00001_00005,plan2d_00001_00006,aux38_BOOL);
constraint int_ne_reif(plan2d_00011_00001,plan2d_00011_00003,aux39_BOOL);
constraint int_ne_reif(plan2d_00011_00001,plan2d_00011_00005,aux40_BOOL);
constraint int_ne_reif(plan2d_00011_00002,plan2d_00011_00004,aux41_BOOL);
constraint int_ne_reif(plan2d_00011_00002,plan2d_00011_00006,aux42_BOOL);
constraint int_ne_reif(plan2d_00012_00006,plan2d_00001_00002,aux43_BOOL);
constraint int_ne_reif(plan2d_00012_00006,plan2d_00001_00003,aux44_BOOL);
constraint int_ne_reif(plan2d_00011_00003,plan2d_00011_00006,aux45_BOOL);
constraint int_ne_reif(plan2d_00011_00003,plan2d_00011_00005,aux46_BOOL);
constraint int_ne_reif(plan2d_00011_00004,plan2d_00011_00006,aux47_BOOL);
constraint int_ne_reif(plan2d_00009_00004,plan2d_00008_00006,aux48_BOOL);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00008_00004,aux49_BOOL);
constraint int_ne_reif(plan2d_00009_00002,plan2d_00008_00006,aux50_BOOL);
constraint int_ne_reif(plan2d_00009_00002,plan2d_00008_00005,aux51_BOOL);
constraint int_ne_reif(plan2d_00009_00006,plan2d_00010_00001,aux52_BOOL);
constraint int_ne_reif(plan2d_00003_00003,plan2d_00003_00004,aux53_BOOL);
constraint int_ne_reif(plan2d_00003_00002,plan2d_00003_00003,aux54_BOOL);
constraint int_ne_reif(plan2d_00003_00005,plan2d_00003_00006,aux55_BOOL);
constraint int_ne_reif(plan2d_00003_00004,plan2d_00003_00005,aux56_BOOL);
constraint int_ne_reif(plan2d_00003_00001,plan2d_00003_00002,aux57_BOOL);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00009_00002,aux58_BOOL);
constraint int_ne_reif(plan2d_00009_00002,plan2d_00009_00003,aux59_BOOL);
constraint int_ne_reif(plan2d_00009_00005,plan2d_00009_00006,aux60_BOOL);
constraint int_ne_reif(plan2d_00009_00003,plan2d_00009_00004,aux61_BOOL);
constraint int_ne_reif(plan2d_00009_00004,plan2d_00009_00005,aux62_BOOL);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00008_00006,aux63_BOOL);
constraint int_ne_reif(plan2d_00002_00006,plan2d_00003_00001,aux64_BOOL);
constraint int_ne_reif(plan2d_00002_00004,plan2d_00003_00001,aux65_BOOL);
constraint int_ne_reif(plan2d_00002_00005,plan2d_00003_00002,aux66_BOOL);
constraint int_ne_reif(plan2d_00002_00006,plan2d_00003_00004,aux67_BOOL);
constraint int_ne_reif(plan2d_00002_00006,plan2d_00003_00002,aux68_BOOL);
constraint int_ne_reif(plan2d_00007_00004,plan2d_00007_00006,aux69_BOOL);
constraint int_ne_reif(plan2d_00007_00003,plan2d_00007_00005,aux70_BOOL);
constraint int_ne_reif(plan2d_00007_00003,plan2d_00007_00006,aux71_BOOL);
constraint int_ne_reif(plan2d_00007_00002,plan2d_00007_00004,aux72_BOOL);
constraint int_ne_reif(plan2d_00007_00002,plan2d_00007_00006,aux73_BOOL);
constraint int_ne_reif(plan2d_00007_00001,plan2d_00007_00003,aux74_BOOL);
constraint int_ne_reif(plan2d_00007_00001,plan2d_00007_00005,aux75_BOOL);
constraint int_ne_reif(plan2d_00006_00002,plan2d_00006_00004,aux76_BOOL);
constraint int_ne_reif(plan2d_00006_00002,plan2d_00006_00006,aux77_BOOL);
constraint int_ne_reif(plan2d_00006_00001,plan2d_00006_00005,aux78_BOOL);
constraint int_ne_reif(plan2d_00006_00001,plan2d_00006_00003,aux79_BOOL);
constraint int_ne_reif(plan2d_00006_00004,plan2d_00006_00006,aux80_BOOL);
constraint int_ne_reif(plan2d_00006_00003,plan2d_00006_00006,aux81_BOOL);
constraint int_ne_reif(plan2d_00006_00003,plan2d_00006_00005,aux82_BOOL);
constraint int_ne_reif(plan2d_00007_00004,plan2d_00008_00001,aux83_BOOL);
constraint int_ne_reif(plan2d_00007_00005,plan2d_00008_00002,aux84_BOOL);
constraint int_ne_reif(plan2d_00007_00006,plan2d_00008_00004,aux85_BOOL);
constraint int_ne_reif(plan2d_00007_00006,plan2d_00008_00002,aux86_BOOL);
constraint int_ne_reif(plan2d_00010_00006,plan2d_00011_00001,aux87_BOOL);
constraint int_ne_reif(plan2d_00002_00002,plan2d_00002_00006,aux88_BOOL);
constraint int_ne_reif(plan2d_00002_00002,plan2d_00002_00004,aux89_BOOL);
constraint int_ne_reif(plan2d_00002_00001,plan2d_00002_00003,aux90_BOOL);
constraint int_ne_reif(plan2d_00002_00001,plan2d_00002_00005,aux91_BOOL);
constraint int_ne_reif(plan2d_00002_00004,plan2d_00002_00006,aux92_BOOL);
constraint int_ne_reif(plan2d_00002_00003,plan2d_00002_00006,aux93_BOOL);
constraint int_ne_reif(plan2d_00002_00003,plan2d_00002_00005,aux94_BOOL);
constraint int_ne_reif(plan2d_00010_00006,plan2d_00011_00004,aux95_BOOL);
constraint int_ne_reif(plan2d_00010_00006,plan2d_00011_00002,aux96_BOOL);
constraint int_ne_reif(plan2d_00010_00005,plan2d_00011_00002,aux97_BOOL);
constraint int_ne_reif(plan2d_00010_00004,plan2d_00011_00001,aux98_BOOL);
constraint int_ne_reif(plan2d_00002_00004,plan2d_00002_00005,aux99_BOOL);
constraint int_ne_reif(plan2d_00002_00005,plan2d_00002_00006,aux100_BOOL);
constraint int_ne_reif(plan2d_00002_00002,plan2d_00002_00003,aux101_BOOL);
constraint int_ne_reif(plan2d_00002_00003,plan2d_00002_00004,aux102_BOOL);
constraint int_ne_reif(plan2d_00002_00001,plan2d_00002_00002,aux103_BOOL);
constraint int_ne_reif(plan2d_00004_00006,plan2d_00005_00003,aux104_BOOL);
constraint int_ne_reif(plan2d_00010_00006,plan2d_00011_00003,aux105_BOOL);
constraint int_ne_reif(plan2d_00009_00006,plan2d_00010_00003,aux106_BOOL);
constraint int_ne_reif(plan2d_00012_00004,plan2d_00011_00006,aux107_BOOL);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00011_00004,aux108_BOOL);
constraint int_ne_reif(plan2d_00012_00002,plan2d_00011_00006,aux109_BOOL);
constraint int_ne_reif(plan2d_00012_00002,plan2d_00011_00005,aux110_BOOL);
constraint int_ne_reif(plan2d_00012_00003,plan2d_00011_00006,aux111_BOOL);
constraint int_ne_reif(plan2d_00006_00005,plan2d_00006_00006,aux112_BOOL);
constraint int_ne_reif(plan2d_00006_00003,plan2d_00006_00004,aux113_BOOL);
constraint int_ne_reif(plan2d_00006_00004,plan2d_00006_00005,aux114_BOOL);
constraint int_ne_reif(plan2d_00006_00001,plan2d_00006_00002,aux115_BOOL);
constraint int_ne_reif(plan2d_00006_00002,plan2d_00006_00003,aux116_BOOL);
constraint int_ne_reif(plan2d_00012_00002,plan2d_00012_00003,aux117_BOOL);
constraint int_ne_reif(plan2d_00012_00003,plan2d_00012_00004,aux118_BOOL);
constraint int_ne_reif(plan2d_00012_00004,plan2d_00012_00005,aux119_BOOL);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00012_00002,aux120_BOOL);
constraint int_ne_reif(plan2d_00012_00005,plan2d_00012_00006,aux121_BOOL);
constraint int_ne_reif(plan2d_00008_00005,plan2d_00008_00006,aux122_BOOL);
constraint int_ne_reif(plan2d_00008_00004,plan2d_00008_00005,aux123_BOOL);
constraint int_ne_reif(plan2d_00008_00003,plan2d_00008_00004,aux124_BOOL);
constraint int_ne_reif(plan2d_00008_00002,plan2d_00008_00003,aux125_BOOL);
constraint int_ne_reif(plan2d_00008_00001,plan2d_00008_00002,aux126_BOOL);
constraint int_ne_reif(plan2d_00004_00003,plan2d_00003_00006,aux127_BOOL);
constraint int_ne_reif(plan2d_00004_00004,plan2d_00004_00005,aux128_BOOL);
constraint int_ne_reif(plan2d_00004_00005,plan2d_00004_00006,aux129_BOOL);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00004_00002,aux130_BOOL);
constraint int_ne_reif(plan2d_00004_00002,plan2d_00004_00003,aux131_BOOL);
constraint int_ne_reif(plan2d_00004_00003,plan2d_00004_00004,aux132_BOOL);
constraint int_ne_reif(plan2d_00006_00006,plan2d_00007_00003,aux133_BOOL);
constraint int_ne_reif(plan2d_00012_00006,plan2d_00001_00001,aux134_BOOL);
constraint int_ne_reif(plan2d_00010_00004,plan2d_00010_00005,aux135_BOOL);
constraint int_ne_reif(plan2d_00010_00005,plan2d_00010_00006,aux136_BOOL);
constraint int_ne_reif(plan2d_00010_00001,plan2d_00010_00002,aux137_BOOL);
constraint int_ne_reif(plan2d_00010_00002,plan2d_00010_00003,aux138_BOOL);
constraint int_ne_reif(plan2d_00010_00003,plan2d_00010_00004,aux139_BOOL);
constraint int_ne_reif(plan2d_00001_00001,plan2d_00001_00003,aux140_BOOL);
constraint int_ne_reif(plan2d_00001_00001,plan2d_00001_00005,aux141_BOOL);
constraint int_ne_reif(plan2d_00001_00004,plan2d_00001_00006,aux142_BOOL);
constraint int_ne_reif(plan2d_00001_00003,plan2d_00001_00005,aux143_BOOL);
constraint int_ne_reif(plan2d_00001_00003,plan2d_00001_00006,aux144_BOOL);
constraint int_ne_reif(plan2d_00001_00002,plan2d_00001_00004,aux145_BOOL);
constraint int_ne_reif(plan2d_00001_00002,plan2d_00001_00006,aux146_BOOL);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00011_00006,aux147_BOOL);
constraint int_ne_reif(plan2d_00003_00004,plan2d_00003_00006,aux148_BOOL);
constraint int_ne_reif(plan2d_00003_00003,plan2d_00003_00005,aux149_BOOL);
constraint int_ne_reif(plan2d_00003_00003,plan2d_00003_00006,aux150_BOOL);
constraint int_ne_reif(plan2d_00003_00002,plan2d_00003_00006,aux151_BOOL);
constraint int_ne_reif(plan2d_00003_00002,plan2d_00003_00004,aux152_BOOL);
constraint int_ne_reif(plan2d_00003_00001,plan2d_00003_00005,aux153_BOOL);
constraint int_ne_reif(plan2d_00003_00001,plan2d_00003_00003,aux154_BOOL);
constraint int_ne_reif(plan2d_00004_00004,plan2d_00005_00001,aux155_BOOL);
constraint int_ne_reif(plan2d_00004_00005,plan2d_00005_00002,aux156_BOOL);
constraint int_ne_reif(plan2d_00004_00006,plan2d_00005_00002,aux157_BOOL);
constraint int_ne_reif(plan2d_00004_00006,plan2d_00005_00004,aux158_BOOL);
constraint int_ne_reif(plan2d_00005_00006,plan2d_00006_00002,aux159_BOOL);
constraint int_ne_reif(plan2d_00005_00006,plan2d_00006_00004,aux160_BOOL);
constraint int_ne_reif(plan2d_00005_00004,plan2d_00006_00001,aux161_BOOL);
constraint int_ne_reif(plan2d_00005_00005,plan2d_00006_00002,aux162_BOOL);
constraint int_ne_reif(plan2d_00008_00002,plan2d_00008_00004,aux163_BOOL);
constraint int_ne_reif(plan2d_00008_00002,plan2d_00008_00006,aux164_BOOL);
constraint int_ne_reif(plan2d_00008_00001,plan2d_00008_00003,aux165_BOOL);
constraint int_ne_reif(plan2d_00008_00001,plan2d_00008_00005,aux166_BOOL);
constraint int_ne_reif(plan2d_00008_00004,plan2d_00008_00006,aux167_BOOL);
constraint int_ne_reif(plan2d_00008_00003,plan2d_00008_00006,aux168_BOOL);
constraint int_ne_reif(plan2d_00008_00003,plan2d_00008_00005,aux169_BOOL);
constraint int_ne_reif(plan2d_00006_00004,plan2d_00007_00001,aux170_BOOL);
constraint int_ne_reif(plan2d_00006_00005,plan2d_00007_00002,aux171_BOOL);
constraint int_ne_reif(plan2d_00006_00006,plan2d_00007_00004,aux172_BOOL);
constraint int_ne_reif(plan2d_00006_00006,plan2d_00007_00002,aux173_BOOL);
constraint int_ne_reif(plan2d_00005_00001,plan2d_00005_00005,aux174_BOOL);
constraint int_ne_reif(plan2d_00005_00001,plan2d_00005_00003,aux175_BOOL);
constraint int_ne_reif(plan2d_00005_00004,plan2d_00005_00006,aux176_BOOL);
constraint int_ne_reif(plan2d_00005_00003,plan2d_00005_00005,aux177_BOOL);
constraint int_ne_reif(plan2d_00005_00003,plan2d_00005_00006,aux178_BOOL);
constraint int_ne_reif(plan2d_00005_00002,plan2d_00005_00006,aux179_BOOL);
constraint int_ne_reif(plan2d_00005_00002,plan2d_00005_00004,aux180_BOOL);
constraint int_ne_reif(plan2d_00001_00006,plan2d_00002_00002,aux181_BOOL);
constraint int_ne_reif(plan2d_00001_00006,plan2d_00002_00004,aux182_BOOL);
constraint int_ne_reif(plan2d_00001_00004,plan2d_00002_00001,aux183_BOOL);
constraint int_ne_reif(plan2d_00001_00005,plan2d_00002_00002,aux184_BOOL);
constraint int_ne_reif(plan2d_00004_00006,plan2d_00005_00001,aux185_BOOL);
constraint int_ne_reif(plan2d_00002_00006,plan2d_00003_00003,aux186_BOOL);
constraint int_ne_reif(plan2d_00004_00004,plan2d_00004_00006,aux187_BOOL);
constraint int_ne_reif(plan2d_00004_00003,plan2d_00004_00006,aux188_BOOL);
constraint int_ne_reif(plan2d_00004_00003,plan2d_00004_00005,aux189_BOOL);
constraint int_ne_reif(plan2d_00004_00002,plan2d_00004_00006,aux190_BOOL);
constraint int_ne_reif(plan2d_00004_00002,plan2d_00004_00004,aux191_BOOL);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00004_00005,aux192_BOOL);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00004_00003,aux193_BOOL);
constraint int_ne_reif(plan2d_00009_00005,plan2d_00010_00002,aux194_BOOL);
constraint int_ne_reif(plan2d_00009_00004,plan2d_00010_00001,aux195_BOOL);
constraint int_ne_reif(plan2d_00009_00006,plan2d_00010_00002,aux196_BOOL);
constraint int_ne_reif(plan2d_00009_00006,plan2d_00010_00004,aux197_BOOL);
constraint int_ne_reif(plan2d_00001_00006,plan2d_00002_00001,aux198_BOOL);
constraint int_ne_reif(plan2d_00012_00002,plan2d_00012_00004,aux199_BOOL);
constraint int_ne_reif(plan2d_00012_00002,plan2d_00012_00006,aux200_BOOL);
constraint int_ne_reif(plan2d_00012_00003,plan2d_00012_00005,aux201_BOOL);
constraint int_ne_reif(plan2d_00012_00003,plan2d_00012_00006,aux202_BOOL);
constraint int_ne_reif(plan2d_00012_00004,plan2d_00012_00006,aux203_BOOL);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00012_00003,aux204_BOOL);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00012_00005,aux205_BOOL);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00009_00003,aux206_BOOL);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00009_00005,aux207_BOOL);
constraint int_ne_reif(plan2d_00009_00004,plan2d_00009_00006,aux208_BOOL);
constraint int_ne_reif(plan2d_00009_00003,plan2d_00009_00005,aux209_BOOL);
constraint int_ne_reif(plan2d_00009_00003,plan2d_00009_00006,aux210_BOOL);
constraint int_ne_reif(plan2d_00009_00002,plan2d_00009_00004,aux211_BOOL);
constraint int_ne_reif(plan2d_00009_00002,plan2d_00009_00006,aux212_BOOL);
constraint int_eq_reif(0,plan2d_00008_00001,aux213_BOOL);
constraint int_eq_reif(0,plan2d_00003_00002,aux214_BOOL);
constraint int_eq_reif(plan2d_00009_00005,0,aux215_BOOL);
constraint int_eq_reif(0,plan2d_00007_00001,aux216_BOOL);
constraint int_eq_reif(0,plan2d_00003_00006,aux217_BOOL);
constraint int_eq_reif(0,plan2d_00002_00003,aux218_BOOL);
constraint int_eq_reif(0,plan2d_00006_00001,aux219_BOOL);
constraint int_eq_reif(plan2d_00012_00002,0,aux220_BOOL);
constraint int_eq_reif(plan2d_00004_00006,0,aux221_BOOL);
constraint int_eq_reif(0,plan2d_00002_00004,aux222_BOOL);
constraint int_eq_reif(0,plan2d_00010_00002,aux223_BOOL);
constraint int_eq_reif(plan2d_00005_00001,0,aux224_BOOL);
constraint int_eq_reif(plan2d_00009_00004,0,aux225_BOOL);
constraint int_eq_reif(0,plan2d_00002_00005,aux226_BOOL);
constraint int_eq_reif(plan2d_00012_00001,0,aux227_BOOL);
constraint int_eq_reif(0,plan2d_00008_00002,aux228_BOOL);
constraint int_eq_reif(0,plan2d_00011_00002,aux229_BOOL);
constraint int_eq_reif(plan2d_00004_00001,0,aux230_BOOL);
constraint int_eq_reif(0,plan2d_00002_00006,aux231_BOOL);
constraint int_eq_reif(plan2d_00005_00002,0,aux232_BOOL);
constraint int_eq_reif(0,plan2d_00011_00003,aux233_BOOL);
constraint int_eq_reif(0,plan2d_00003_00003,aux234_BOOL);
constraint int_eq_reif(0,plan2d_00001_00006,aux235_BOOL);
constraint int_eq_reif(0,plan2d_00006_00005,aux236_BOOL);
constraint int_eq_reif(0,plan2d_00007_00002,aux237_BOOL);
constraint int_eq_reif(0,plan2d_00002_00001,aux238_BOOL);
constraint int_eq_reif(plan2d_00009_00006,0,aux239_BOOL);
constraint int_eq_reif(0,plan2d_00003_00004,aux240_BOOL);
constraint int_eq_reif(plan2d_00005_00003,0,aux241_BOOL);
constraint int_eq_reif(0,plan2d_00008_00003,aux242_BOOL);
constraint int_eq_reif(0,plan2d_00010_00001,aux243_BOOL);
constraint int_eq_reif(0,plan2d_00001_00005,aux244_BOOL);
constraint int_eq_reif(0,plan2d_00010_00006,aux245_BOOL);
constraint int_eq_reif(0,plan2d_00001_00004,aux246_BOOL);
constraint int_eq_reif(0,plan2d_00007_00006,aux247_BOOL);
constraint int_eq_reif(0,plan2d_00002_00002,aux248_BOOL);
constraint int_eq_reif(0,plan2d_00006_00004,aux249_BOOL);
constraint int_eq_reif(plan2d_00005_00004,0,aux250_BOOL);
constraint int_eq_reif(plan2d_00009_00001,0,aux251_BOOL);
constraint int_eq_reif(0,plan2d_00001_00003,aux252_BOOL);
constraint int_eq_reif(plan2d_00004_00003,0,aux253_BOOL);
constraint int_eq_reif(0,plan2d_00008_00004,aux254_BOOL);
constraint int_eq_reif(plan2d_00012_00006,0,aux255_BOOL);
constraint int_eq_reif(0,plan2d_00011_00004,aux256_BOOL);
constraint int_eq_reif(plan2d_00004_00002,0,aux257_BOOL);
constraint int_eq_reif(plan2d_00005_00005,0,aux258_BOOL);
constraint int_eq_reif(0,plan2d_00007_00003,aux259_BOOL);
constraint int_eq_reif(0,plan2d_00010_00005,aux260_BOOL);
constraint int_eq_reif(0,plan2d_00011_00005,aux261_BOOL);
constraint int_eq_reif(0,plan2d_00006_00003,aux262_BOOL);
constraint int_eq_reif(plan2d_00012_00005,0,aux263_BOOL);
constraint int_eq_reif(0,plan2d_00003_00005,aux264_BOOL);
constraint int_eq_reif(0,plan2d_00001_00001,aux265_BOOL);
constraint int_eq_reif(0,plan2d_00006_00006,aux266_BOOL);
constraint int_eq_reif(0,plan2d_00008_00005,aux267_BOOL);
constraint int_eq_reif(0,plan2d_00008_00006,aux268_BOOL);
constraint int_eq_reif(plan2d_00009_00003,0,aux269_BOOL);
constraint int_eq_reif(0,plan2d_00007_00005,aux270_BOOL);
constraint int_eq_reif(0,plan2d_00010_00003,aux271_BOOL);
constraint int_eq_reif(plan2d_00004_00005,0,aux272_BOOL);
constraint int_eq_reif(plan2d_00012_00004,0,aux273_BOOL);
constraint int_eq_reif(0,plan2d_00001_00002,aux274_BOOL);
constraint int_eq_reif(0,plan2d_00011_00006,aux275_BOOL);
constraint int_eq_reif(0,plan2d_00006_00002,aux276_BOOL);
constraint int_eq_reif(plan2d_00009_00002,0,aux277_BOOL);
constraint int_eq_reif(0,plan2d_00011_00001,aux278_BOOL);
constraint int_eq_reif(plan2d_00004_00004,0,aux279_BOOL);
constraint int_eq_reif(plan2d_00012_00003,0,aux280_BOOL);
constraint int_eq_reif(0,plan2d_00003_00001,aux281_BOOL);
constraint int_eq_reif(plan2d_00005_00006,0,aux282_BOOL);
constraint int_eq_reif(0,plan2d_00007_00004,aux283_BOOL);
constraint int_eq_reif(0,plan2d_00010_00004,aux284_BOOL);
constraint array_bool_or([aux265_BOOL,aux285_BOOL],true);
constraint bool_clause([aux286_BOOL],[aux34_BOOL]);
constraint bool_clause([aux287_BOOL],[aux35_BOOL]);
constraint bool_clause([aux288_BOOL],[aux36_BOOL]);
constraint bool_clause([],[aux37_BOOL,aux38_BOOL]);
constraint bool_clause([],[aux38_BOOL,aux198_BOOL]);
constraint bool_clause([aux289_BOOL],[aux198_BOOL]);
constraint bool_clause([aux290_BOOL],[aux103_BOOL]);
constraint bool_clause([aux291_BOOL],[aux101_BOOL]);
constraint bool_clause([aux292_BOOL],[aux102_BOOL]);
constraint bool_clause([],[aux99_BOOL,aux100_BOOL]);
constraint bool_clause([],[aux100_BOOL,aux64_BOOL]);
constraint bool_clause([aux293_BOOL],[aux64_BOOL]);
constraint bool_clause([aux294_BOOL],[aux57_BOOL]);
constraint bool_clause([aux295_BOOL],[aux54_BOOL]);
constraint bool_clause([aux296_BOOL],[aux53_BOOL]);
constraint bool_clause([],[aux56_BOOL,aux55_BOOL]);
constraint bool_clause([],[aux55_BOOL,aux11_BOOL]);
constraint bool_clause([aux297_BOOL],[aux11_BOOL]);
constraint bool_clause([aux298_BOOL],[aux130_BOOL]);
constraint bool_clause([aux299_BOOL],[aux131_BOOL]);
constraint bool_clause([aux300_BOOL],[aux132_BOOL]);
constraint bool_clause([],[aux128_BOOL,aux129_BOOL]);
constraint bool_clause([],[aux129_BOOL,aux185_BOOL]);
constraint bool_clause([aux301_BOOL],[aux185_BOOL]);
constraint bool_clause([aux302_BOOL],[aux6_BOOL]);
constraint bool_clause([aux303_BOOL],[aux10_BOOL]);
constraint bool_clause([aux304_BOOL],[aux9_BOOL]);
constraint bool_clause([],[aux8_BOOL,aux7_BOOL]);
constraint bool_clause([],[aux7_BOOL,aux26_BOOL]);
constraint bool_clause([aux305_BOOL],[aux26_BOOL]);
constraint bool_clause([aux306_BOOL],[aux115_BOOL]);
constraint bool_clause([aux307_BOOL],[aux116_BOOL]);
constraint bool_clause([aux308_BOOL],[aux113_BOOL]);
constraint bool_clause([],[aux114_BOOL,aux112_BOOL]);
constraint bool_clause([],[aux112_BOOL,aux14_BOOL]);
constraint bool_clause([aux309_BOOL],[aux14_BOOL]);
constraint bool_clause([aux310_BOOL],[aux0_BOOL]);
constraint bool_clause([aux311_BOOL],[aux1_BOOL]);
constraint bool_clause([aux312_BOOL],[aux2_BOOL]);
constraint bool_clause([],[aux3_BOOL,aux4_BOOL]);
constraint bool_clause([],[aux4_BOOL,aux5_BOOL]);
constraint bool_clause([aux313_BOOL],[aux5_BOOL]);
constraint bool_clause([aux314_BOOL],[aux126_BOOL]);
constraint bool_clause([aux315_BOOL],[aux125_BOOL]);
constraint bool_clause([aux316_BOOL],[aux124_BOOL]);
constraint bool_clause([],[aux123_BOOL,aux122_BOOL]);
constraint bool_clause([],[aux122_BOOL,aux63_BOOL]);
constraint bool_clause([aux317_BOOL],[aux63_BOOL]);
constraint bool_clause([aux318_BOOL],[aux58_BOOL]);
constraint bool_clause([aux319_BOOL],[aux59_BOOL]);
constraint bool_clause([aux320_BOOL],[aux61_BOOL]);
constraint bool_clause([],[aux62_BOOL,aux60_BOOL]);
constraint bool_clause([],[aux60_BOOL,aux52_BOOL]);
constraint bool_clause([aux321_BOOL],[aux52_BOOL]);
constraint bool_clause([aux322_BOOL],[aux137_BOOL]);
constraint bool_clause([aux323_BOOL],[aux138_BOOL]);
constraint bool_clause([aux324_BOOL],[aux139_BOOL]);
constraint bool_clause([],[aux135_BOOL,aux136_BOOL]);
constraint bool_clause([],[aux136_BOOL,aux87_BOOL]);
constraint bool_clause([aux325_BOOL],[aux87_BOOL]);
constraint bool_clause([aux326_BOOL],[aux27_BOOL]);
constraint bool_clause([aux327_BOOL],[aux31_BOOL]);
constraint bool_clause([aux328_BOOL],[aux30_BOOL]);
constraint bool_clause([],[aux29_BOOL,aux28_BOOL]);
constraint bool_clause([],[aux28_BOOL,aux147_BOOL]);
constraint bool_clause([aux329_BOOL],[aux147_BOOL]);
constraint bool_clause([aux330_BOOL],[aux120_BOOL]);
constraint bool_clause([aux331_BOOL],[aux117_BOOL]);
constraint bool_clause([aux332_BOOL],[aux118_BOOL]);
constraint bool_clause([],[aux119_BOOL,aux121_BOOL]);
constraint bool_clause([],[aux121_BOOL,aux134_BOOL]);
constraint bool_clause([aux333_BOOL],[aux134_BOOL]);
constraint bool_clause([aux450_BOOL],[aux449_BOOL]);
constraint bool_clause([aux453_BOOL],[aux452_BOOL]);
constraint bool_clause([aux44_BOOL],[aux454_BOOL]);
constraint int_lin_le([-1,-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux218_INTEGER,aux222_INTEGER,aux226_INTEGER,aux231_INTEGER,aux235_INTEGER,aux238_INTEGER,aux244_INTEGER,aux246_INTEGER,aux248_INTEGER,aux252_INTEGER,aux265_INTEGER,aux274_INTEGER,aux281_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux214_INTEGER,aux218_INTEGER,aux222_INTEGER,aux226_INTEGER,aux231_INTEGER,aux235_INTEGER,aux238_INTEGER,aux244_INTEGER,aux246_INTEGER,aux248_INTEGER,aux252_INTEGER,aux274_INTEGER,aux281_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux214_INTEGER,aux218_INTEGER,aux222_INTEGER,aux226_INTEGER,aux231_INTEGER,aux234_INTEGER,aux235_INTEGER,aux238_INTEGER,aux244_INTEGER,aux246_INTEGER,aux248_INTEGER,aux252_INTEGER,aux281_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux214_INTEGER,aux218_INTEGER,aux222_INTEGER,aux226_INTEGER,aux231_INTEGER,aux234_INTEGER,aux235_INTEGER,aux238_INTEGER,aux240_INTEGER,aux244_INTEGER,aux246_INTEGER,aux248_INTEGER,aux281_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux214_INTEGER,aux218_INTEGER,aux222_INTEGER,aux226_INTEGER,aux231_INTEGER,aux234_INTEGER,aux235_INTEGER,aux238_INTEGER,aux240_INTEGER,aux244_INTEGER,aux248_INTEGER,aux264_INTEGER,aux281_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,1],[aux214_INTEGER,aux217_INTEGER,aux218_INTEGER,aux222_INTEGER,aux226_INTEGER,aux231_INTEGER,aux234_INTEGER,aux235_INTEGER,aux238_INTEGER,aux240_INTEGER,aux248_INTEGER,aux264_INTEGER,aux281_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux214_INTEGER,aux217_INTEGER,aux218_INTEGER,aux222_INTEGER,aux226_INTEGER,aux231_INTEGER,aux234_INTEGER,aux235_INTEGER,aux238_INTEGER,aux240_INTEGER,aux248_INTEGER,aux264_INTEGER,aux281_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux214_INTEGER,aux217_INTEGER,aux218_INTEGER,aux222_INTEGER,aux226_INTEGER,aux230_INTEGER,aux231_INTEGER,aux234_INTEGER,aux238_INTEGER,aux240_INTEGER,aux248_INTEGER,aux264_INTEGER,aux281_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux214_INTEGER,aux217_INTEGER,aux218_INTEGER,aux222_INTEGER,aux226_INTEGER,aux230_INTEGER,aux231_INTEGER,aux234_INTEGER,aux240_INTEGER,aux248_INTEGER,aux257_INTEGER,aux264_INTEGER,aux281_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux214_INTEGER,aux217_INTEGER,aux218_INTEGER,aux222_INTEGER,aux226_INTEGER,aux230_INTEGER,aux231_INTEGER,aux234_INTEGER,aux240_INTEGER,aux253_INTEGER,aux257_INTEGER,aux264_INTEGER,aux281_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux214_INTEGER,aux217_INTEGER,aux222_INTEGER,aux226_INTEGER,aux230_INTEGER,aux231_INTEGER,aux234_INTEGER,aux240_INTEGER,aux253_INTEGER,aux257_INTEGER,aux264_INTEGER,aux279_INTEGER,aux281_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux214_INTEGER,aux217_INTEGER,aux226_INTEGER,aux230_INTEGER,aux231_INTEGER,aux234_INTEGER,aux240_INTEGER,aux253_INTEGER,aux257_INTEGER,aux264_INTEGER,aux272_INTEGER,aux279_INTEGER,aux281_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux214_INTEGER,aux217_INTEGER,aux221_INTEGER,aux230_INTEGER,aux231_INTEGER,aux234_INTEGER,aux240_INTEGER,aux253_INTEGER,aux257_INTEGER,aux264_INTEGER,aux272_INTEGER,aux279_INTEGER,aux281_INTEGER,2],0);
constraint int_lin_le([-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux214_INTEGER,aux217_INTEGER,aux221_INTEGER,aux230_INTEGER,aux231_INTEGER,aux234_INTEGER,aux240_INTEGER,aux253_INTEGER,aux257_INTEGER,aux264_INTEGER,aux272_INTEGER,aux279_INTEGER,aux281_INTEGER,2],0);
constraint int_lin_le([-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux214_INTEGER,aux217_INTEGER,aux221_INTEGER,aux224_INTEGER,aux230_INTEGER,aux234_INTEGER,aux240_INTEGER,aux253_INTEGER,aux257_INTEGER,aux264_INTEGER,aux272_INTEGER,aux279_INTEGER,aux281_INTEGER,2],0);
constraint int_lin_le([-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux214_INTEGER,aux217_INTEGER,aux221_INTEGER,aux224_INTEGER,aux230_INTEGER,aux232_INTEGER,aux234_INTEGER,aux240_INTEGER,aux253_INTEGER,aux257_INTEGER,aux264_INTEGER,aux272_INTEGER,aux279_INTEGER,2],0);
constraint int_lin_le([-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux217_INTEGER,aux221_INTEGER,aux224_INTEGER,aux230_INTEGER,aux232_INTEGER,aux234_INTEGER,aux240_INTEGER,aux241_INTEGER,aux253_INTEGER,aux257_INTEGER,aux264_INTEGER,aux272_INTEGER,aux279_INTEGER,2],0);
constraint int_lin_le([-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux217_INTEGER,aux221_INTEGER,aux224_INTEGER,aux230_INTEGER,aux232_INTEGER,aux240_INTEGER,aux241_INTEGER,aux250_INTEGER,aux253_INTEGER,aux257_INTEGER,aux264_INTEGER,aux272_INTEGER,aux279_INTEGER,2],0);
constraint int_lin_le([-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux217_INTEGER,aux221_INTEGER,aux224_INTEGER,aux230_INTEGER,aux232_INTEGER,aux241_INTEGER,aux250_INTEGER,aux253_INTEGER,aux257_INTEGER,aux258_INTEGER,aux264_INTEGER,aux272_INTEGER,aux279_INTEGER,2],0);
constraint int_lin_le([-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux217_INTEGER,aux221_INTEGER,aux224_INTEGER,aux230_INTEGER,aux232_INTEGER,aux241_INTEGER,aux250_INTEGER,aux253_INTEGER,aux257_INTEGER,aux258_INTEGER,aux272_INTEGER,aux279_INTEGER,aux282_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux217_INTEGER,aux221_INTEGER,aux224_INTEGER,aux230_INTEGER,aux232_INTEGER,aux241_INTEGER,aux250_INTEGER,aux253_INTEGER,aux257_INTEGER,aux258_INTEGER,aux272_INTEGER,aux279_INTEGER,aux282_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux219_INTEGER,aux221_INTEGER,aux224_INTEGER,aux230_INTEGER,aux232_INTEGER,aux241_INTEGER,aux250_INTEGER,aux253_INTEGER,aux257_INTEGER,aux258_INTEGER,aux272_INTEGER,aux279_INTEGER,aux282_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux219_INTEGER,aux221_INTEGER,aux224_INTEGER,aux232_INTEGER,aux241_INTEGER,aux250_INTEGER,aux253_INTEGER,aux257_INTEGER,aux258_INTEGER,aux272_INTEGER,aux276_INTEGER,aux279_INTEGER,aux282_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux219_INTEGER,aux221_INTEGER,aux224_INTEGER,aux232_INTEGER,aux241_INTEGER,aux250_INTEGER,aux253_INTEGER,aux258_INTEGER,aux262_INTEGER,aux272_INTEGER,aux276_INTEGER,aux279_INTEGER,aux282_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux219_INTEGER,aux221_INTEGER,aux224_INTEGER,aux232_INTEGER,aux241_INTEGER,aux249_INTEGER,aux250_INTEGER,aux258_INTEGER,aux262_INTEGER,aux272_INTEGER,aux276_INTEGER,aux279_INTEGER,aux282_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux219_INTEGER,aux221_INTEGER,aux224_INTEGER,aux232_INTEGER,aux236_INTEGER,aux241_INTEGER,aux249_INTEGER,aux250_INTEGER,aux258_INTEGER,aux262_INTEGER,aux272_INTEGER,aux276_INTEGER,aux282_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux219_INTEGER,aux221_INTEGER,aux224_INTEGER,aux232_INTEGER,aux236_INTEGER,aux241_INTEGER,aux249_INTEGER,aux250_INTEGER,aux258_INTEGER,aux262_INTEGER,aux266_INTEGER,aux276_INTEGER,aux282_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,1],[aux219_INTEGER,aux221_INTEGER,aux224_INTEGER,aux232_INTEGER,aux236_INTEGER,aux241_INTEGER,aux249_INTEGER,aux250_INTEGER,aux258_INTEGER,aux262_INTEGER,aux266_INTEGER,aux276_INTEGER,aux282_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,1],[aux216_INTEGER,aux219_INTEGER,aux224_INTEGER,aux232_INTEGER,aux236_INTEGER,aux241_INTEGER,aux249_INTEGER,aux250_INTEGER,aux258_INTEGER,aux262_INTEGER,aux266_INTEGER,aux276_INTEGER,aux282_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,1],[aux216_INTEGER,aux219_INTEGER,aux232_INTEGER,aux236_INTEGER,aux237_INTEGER,aux241_INTEGER,aux249_INTEGER,aux250_INTEGER,aux258_INTEGER,aux262_INTEGER,aux266_INTEGER,aux276_INTEGER,aux282_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,1],[aux216_INTEGER,aux219_INTEGER,aux236_INTEGER,aux237_INTEGER,aux241_INTEGER,aux249_INTEGER,aux250_INTEGER,aux258_INTEGER,aux259_INTEGER,aux262_INTEGER,aux266_INTEGER,aux276_INTEGER,aux282_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,-1,1],[aux216_INTEGER,aux219_INTEGER,aux236_INTEGER,aux237_INTEGER,aux249_INTEGER,aux250_INTEGER,aux258_INTEGER,aux259_INTEGER,aux262_INTEGER,aux266_INTEGER,aux276_INTEGER,aux282_INTEGER,aux283_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,1],[aux216_INTEGER,aux219_INTEGER,aux236_INTEGER,aux237_INTEGER,aux249_INTEGER,aux258_INTEGER,aux259_INTEGER,aux262_INTEGER,aux266_INTEGER,aux270_INTEGER,aux276_INTEGER,aux282_INTEGER,aux283_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,1],[aux216_INTEGER,aux219_INTEGER,aux236_INTEGER,aux237_INTEGER,aux247_INTEGER,aux249_INTEGER,aux259_INTEGER,aux262_INTEGER,aux266_INTEGER,aux270_INTEGER,aux276_INTEGER,aux282_INTEGER,aux283_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux216_INTEGER,aux219_INTEGER,aux236_INTEGER,aux237_INTEGER,aux247_INTEGER,aux249_INTEGER,aux259_INTEGER,aux262_INTEGER,aux266_INTEGER,aux270_INTEGER,aux276_INTEGER,aux282_INTEGER,aux283_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,1],[aux213_INTEGER,aux216_INTEGER,aux219_INTEGER,aux236_INTEGER,aux237_INTEGER,aux247_INTEGER,aux249_INTEGER,aux259_INTEGER,aux262_INTEGER,aux266_INTEGER,aux270_INTEGER,aux276_INTEGER,aux283_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,1],[aux213_INTEGER,aux216_INTEGER,aux228_INTEGER,aux236_INTEGER,aux237_INTEGER,aux247_INTEGER,aux249_INTEGER,aux259_INTEGER,aux262_INTEGER,aux266_INTEGER,aux270_INTEGER,aux276_INTEGER,aux283_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,1],[aux213_INTEGER,aux216_INTEGER,aux228_INTEGER,aux236_INTEGER,aux237_INTEGER,aux242_INTEGER,aux247_INTEGER,aux249_INTEGER,aux259_INTEGER,aux262_INTEGER,aux266_INTEGER,aux270_INTEGER,aux283_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,1],[aux213_INTEGER,aux216_INTEGER,aux228_INTEGER,aux236_INTEGER,aux237_INTEGER,aux242_INTEGER,aux247_INTEGER,aux249_INTEGER,aux254_INTEGER,aux259_INTEGER,aux266_INTEGER,aux270_INTEGER,aux283_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,1],[aux213_INTEGER,aux216_INTEGER,aux228_INTEGER,aux236_INTEGER,aux237_INTEGER,aux242_INTEGER,aux247_INTEGER,aux254_INTEGER,aux259_INTEGER,aux266_INTEGER,aux267_INTEGER,aux270_INTEGER,aux283_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,1],[aux213_INTEGER,aux216_INTEGER,aux228_INTEGER,aux237_INTEGER,aux242_INTEGER,aux247_INTEGER,aux254_INTEGER,aux259_INTEGER,aux266_INTEGER,aux267_INTEGER,aux268_INTEGER,aux270_INTEGER,aux283_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,1],[aux213_INTEGER,aux216_INTEGER,aux228_INTEGER,aux237_INTEGER,aux242_INTEGER,aux247_INTEGER,aux254_INTEGER,aux259_INTEGER,aux266_INTEGER,aux267_INTEGER,aux268_INTEGER,aux270_INTEGER,aux283_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,1],[aux213_INTEGER,aux216_INTEGER,aux228_INTEGER,aux237_INTEGER,aux242_INTEGER,aux247_INTEGER,aux251_INTEGER,aux254_INTEGER,aux259_INTEGER,aux267_INTEGER,aux268_INTEGER,aux270_INTEGER,aux283_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux213_INTEGER,aux228_INTEGER,aux237_INTEGER,aux242_INTEGER,aux247_INTEGER,aux251_INTEGER,aux254_INTEGER,aux259_INTEGER,aux267_INTEGER,aux268_INTEGER,aux270_INTEGER,aux277_INTEGER,aux283_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux213_INTEGER,aux228_INTEGER,aux242_INTEGER,aux247_INTEGER,aux251_INTEGER,aux254_INTEGER,aux259_INTEGER,aux267_INTEGER,aux268_INTEGER,aux269_INTEGER,aux270_INTEGER,aux277_INTEGER,aux283_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux213_INTEGER,aux225_INTEGER,aux228_INTEGER,aux242_INTEGER,aux247_INTEGER,aux251_INTEGER,aux254_INTEGER,aux267_INTEGER,aux268_INTEGER,aux269_INTEGER,aux270_INTEGER,aux277_INTEGER,aux283_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,1],[aux213_INTEGER,aux215_INTEGER,aux225_INTEGER,aux228_INTEGER,aux242_INTEGER,aux247_INTEGER,aux251_INTEGER,aux254_INTEGER,aux267_INTEGER,aux268_INTEGER,aux269_INTEGER,aux270_INTEGER,aux277_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,1],[aux213_INTEGER,aux215_INTEGER,aux225_INTEGER,aux228_INTEGER,aux239_INTEGER,aux242_INTEGER,aux247_INTEGER,aux251_INTEGER,aux254_INTEGER,aux267_INTEGER,aux268_INTEGER,aux269_INTEGER,aux277_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux213_INTEGER,aux215_INTEGER,aux225_INTEGER,aux228_INTEGER,aux239_INTEGER,aux242_INTEGER,aux247_INTEGER,aux251_INTEGER,aux254_INTEGER,aux267_INTEGER,aux268_INTEGER,aux269_INTEGER,aux277_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux213_INTEGER,aux215_INTEGER,aux225_INTEGER,aux228_INTEGER,aux239_INTEGER,aux242_INTEGER,aux243_INTEGER,aux251_INTEGER,aux254_INTEGER,aux267_INTEGER,aux268_INTEGER,aux269_INTEGER,aux277_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux215_INTEGER,aux223_INTEGER,aux225_INTEGER,aux228_INTEGER,aux239_INTEGER,aux242_INTEGER,aux243_INTEGER,aux251_INTEGER,aux254_INTEGER,aux267_INTEGER,aux268_INTEGER,aux269_INTEGER,aux277_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux215_INTEGER,aux223_INTEGER,aux225_INTEGER,aux239_INTEGER,aux242_INTEGER,aux243_INTEGER,aux251_INTEGER,aux254_INTEGER,aux267_INTEGER,aux268_INTEGER,aux269_INTEGER,aux271_INTEGER,aux277_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux215_INTEGER,aux223_INTEGER,aux225_INTEGER,aux239_INTEGER,aux243_INTEGER,aux251_INTEGER,aux254_INTEGER,aux267_INTEGER,aux268_INTEGER,aux269_INTEGER,aux271_INTEGER,aux277_INTEGER,aux284_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux215_INTEGER,aux223_INTEGER,aux225_INTEGER,aux239_INTEGER,aux243_INTEGER,aux251_INTEGER,aux260_INTEGER,aux267_INTEGER,aux268_INTEGER,aux269_INTEGER,aux271_INTEGER,aux277_INTEGER,aux284_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux215_INTEGER,aux223_INTEGER,aux225_INTEGER,aux239_INTEGER,aux243_INTEGER,aux245_INTEGER,aux251_INTEGER,aux260_INTEGER,aux268_INTEGER,aux269_INTEGER,aux271_INTEGER,aux277_INTEGER,aux284_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux215_INTEGER,aux223_INTEGER,aux225_INTEGER,aux239_INTEGER,aux243_INTEGER,aux245_INTEGER,aux251_INTEGER,aux260_INTEGER,aux268_INTEGER,aux269_INTEGER,aux271_INTEGER,aux277_INTEGER,aux284_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux215_INTEGER,aux223_INTEGER,aux225_INTEGER,aux239_INTEGER,aux243_INTEGER,aux245_INTEGER,aux251_INTEGER,aux260_INTEGER,aux269_INTEGER,aux271_INTEGER,aux277_INTEGER,aux278_INTEGER,aux284_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux215_INTEGER,aux223_INTEGER,aux225_INTEGER,aux229_INTEGER,aux239_INTEGER,aux243_INTEGER,aux245_INTEGER,aux260_INTEGER,aux269_INTEGER,aux271_INTEGER,aux277_INTEGER,aux278_INTEGER,aux284_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,1],[aux215_INTEGER,aux223_INTEGER,aux225_INTEGER,aux229_INTEGER,aux233_INTEGER,aux239_INTEGER,aux243_INTEGER,aux245_INTEGER,aux260_INTEGER,aux269_INTEGER,aux271_INTEGER,aux278_INTEGER,aux284_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,1],[aux215_INTEGER,aux223_INTEGER,aux225_INTEGER,aux229_INTEGER,aux233_INTEGER,aux239_INTEGER,aux243_INTEGER,aux245_INTEGER,aux256_INTEGER,aux260_INTEGER,aux271_INTEGER,aux278_INTEGER,aux284_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux215_INTEGER,aux223_INTEGER,aux229_INTEGER,aux233_INTEGER,aux239_INTEGER,aux243_INTEGER,aux245_INTEGER,aux256_INTEGER,aux260_INTEGER,aux261_INTEGER,aux271_INTEGER,aux278_INTEGER,aux284_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux223_INTEGER,aux229_INTEGER,aux233_INTEGER,aux239_INTEGER,aux243_INTEGER,aux245_INTEGER,aux256_INTEGER,aux260_INTEGER,aux261_INTEGER,aux271_INTEGER,aux275_INTEGER,aux278_INTEGER,aux284_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,1],[aux223_INTEGER,aux229_INTEGER,aux233_INTEGER,aux239_INTEGER,aux243_INTEGER,aux245_INTEGER,aux256_INTEGER,aux260_INTEGER,aux261_INTEGER,aux271_INTEGER,aux275_INTEGER,aux278_INTEGER,aux284_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,1],[aux223_INTEGER,aux227_INTEGER,aux229_INTEGER,aux233_INTEGER,aux243_INTEGER,aux245_INTEGER,aux256_INTEGER,aux260_INTEGER,aux261_INTEGER,aux271_INTEGER,aux275_INTEGER,aux278_INTEGER,aux284_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,1],[aux220_INTEGER,aux223_INTEGER,aux227_INTEGER,aux229_INTEGER,aux233_INTEGER,aux245_INTEGER,aux256_INTEGER,aux260_INTEGER,aux261_INTEGER,aux271_INTEGER,aux275_INTEGER,aux278_INTEGER,aux284_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux220_INTEGER,aux227_INTEGER,aux229_INTEGER,aux233_INTEGER,aux245_INTEGER,aux256_INTEGER,aux260_INTEGER,aux261_INTEGER,aux271_INTEGER,aux275_INTEGER,aux278_INTEGER,aux280_INTEGER,aux284_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux220_INTEGER,aux227_INTEGER,aux229_INTEGER,aux233_INTEGER,aux245_INTEGER,aux256_INTEGER,aux260_INTEGER,aux261_INTEGER,aux273_INTEGER,aux275_INTEGER,aux278_INTEGER,aux280_INTEGER,aux284_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux220_INTEGER,aux227_INTEGER,aux229_INTEGER,aux233_INTEGER,aux245_INTEGER,aux256_INTEGER,aux260_INTEGER,aux261_INTEGER,aux263_INTEGER,aux273_INTEGER,aux275_INTEGER,aux278_INTEGER,aux280_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux220_INTEGER,aux227_INTEGER,aux229_INTEGER,aux233_INTEGER,aux245_INTEGER,aux255_INTEGER,aux256_INTEGER,aux261_INTEGER,aux263_INTEGER,aux273_INTEGER,aux275_INTEGER,aux278_INTEGER,aux280_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,1],[aux220_INTEGER,aux227_INTEGER,aux229_INTEGER,aux233_INTEGER,aux245_INTEGER,aux255_INTEGER,aux256_INTEGER,aux261_INTEGER,aux263_INTEGER,aux273_INTEGER,aux275_INTEGER,aux278_INTEGER,aux280_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux218_INTEGER,aux222_INTEGER,aux226_INTEGER,aux231_INTEGER,aux235_INTEGER,aux238_INTEGER,aux244_INTEGER,aux246_INTEGER,aux248_INTEGER,aux252_INTEGER,aux255_INTEGER,aux265_INTEGER,aux274_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux218_INTEGER,aux222_INTEGER,aux226_INTEGER,aux235_INTEGER,aux238_INTEGER,aux244_INTEGER,aux246_INTEGER,aux248_INTEGER,aux252_INTEGER,aux255_INTEGER,aux263_INTEGER,aux265_INTEGER,aux274_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux218_INTEGER,aux222_INTEGER,aux235_INTEGER,aux238_INTEGER,aux244_INTEGER,aux246_INTEGER,aux248_INTEGER,aux252_INTEGER,aux255_INTEGER,aux263_INTEGER,aux265_INTEGER,aux273_INTEGER,aux274_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,1],[aux218_INTEGER,aux235_INTEGER,aux238_INTEGER,aux244_INTEGER,aux246_INTEGER,aux248_INTEGER,aux252_INTEGER,aux255_INTEGER,aux263_INTEGER,aux265_INTEGER,aux273_INTEGER,aux274_INTEGER,aux280_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,1],[aux220_INTEGER,aux235_INTEGER,aux238_INTEGER,aux244_INTEGER,aux246_INTEGER,aux248_INTEGER,aux252_INTEGER,aux255_INTEGER,aux263_INTEGER,aux265_INTEGER,aux273_INTEGER,aux274_INTEGER,aux280_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,1],[aux220_INTEGER,aux227_INTEGER,aux235_INTEGER,aux238_INTEGER,aux244_INTEGER,aux246_INTEGER,aux252_INTEGER,aux255_INTEGER,aux263_INTEGER,aux265_INTEGER,aux273_INTEGER,aux274_INTEGER,aux280_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux220_INTEGER,aux227_INTEGER,aux235_INTEGER,aux244_INTEGER,aux246_INTEGER,aux252_INTEGER,aux255_INTEGER,aux263_INTEGER,aux265_INTEGER,aux273_INTEGER,aux274_INTEGER,aux275_INTEGER,aux280_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,1],[aux220_INTEGER,aux227_INTEGER,aux235_INTEGER,aux244_INTEGER,aux246_INTEGER,aux252_INTEGER,aux255_INTEGER,aux263_INTEGER,aux265_INTEGER,aux273_INTEGER,aux274_INTEGER,aux275_INTEGER,aux280_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,1],[aux220_INTEGER,aux227_INTEGER,aux244_INTEGER,aux246_INTEGER,aux252_INTEGER,aux255_INTEGER,aux261_INTEGER,aux263_INTEGER,aux265_INTEGER,aux273_INTEGER,aux274_INTEGER,aux275_INTEGER,aux280_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-2,-1,1],[aux220_INTEGER,aux227_INTEGER,aux246_INTEGER,aux252_INTEGER,aux255_INTEGER,aux256_INTEGER,aux261_INTEGER,aux263_INTEGER,aux265_INTEGER,aux273_INTEGER,aux274_INTEGER,aux275_INTEGER,aux280_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-2,-1,1],[aux220_INTEGER,aux227_INTEGER,aux233_INTEGER,aux252_INTEGER,aux255_INTEGER,aux256_INTEGER,aux261_INTEGER,aux263_INTEGER,aux265_INTEGER,aux273_INTEGER,aux274_INTEGER,aux275_INTEGER,aux280_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-2,-1,1],[aux220_INTEGER,aux227_INTEGER,aux229_INTEGER,aux233_INTEGER,aux255_INTEGER,aux256_INTEGER,aux261_INTEGER,aux263_INTEGER,aux265_INTEGER,aux273_INTEGER,aux274_INTEGER,aux275_INTEGER,aux280_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux220_INTEGER,aux227_INTEGER,aux229_INTEGER,aux233_INTEGER,aux255_INTEGER,aux256_INTEGER,aux261_INTEGER,aux263_INTEGER,aux265_INTEGER,aux273_INTEGER,aux275_INTEGER,aux278_INTEGER,aux280_INTEGER,2],0);
constraint array_bool_or([aux252_BOOL,aux457_BOOL],true);
constraint array_bool_or([aux246_BOOL,aux458_BOOL],true);
constraint array_bool_or([aux244_BOOL,aux459_BOOL],true);
constraint array_bool_or([aux235_BOOL,aux460_BOOL],true);
constraint array_bool_or([aux238_BOOL,aux461_BOOL],true);
constraint array_bool_or([aux248_BOOL,aux462_BOOL],true);
constraint array_bool_or([aux218_BOOL,aux463_BOOL],true);
constraint array_bool_or([aux222_BOOL,aux464_BOOL],true);
constraint array_bool_or([aux226_BOOL,aux465_BOOL],true);
constraint array_bool_or([aux231_BOOL,aux466_BOOL],true);
constraint array_bool_or([aux467_BOOL,aux281_BOOL],true);
constraint array_bool_or([aux214_BOOL,aux468_BOOL],true);
constraint array_bool_or([aux234_BOOL,aux469_BOOL],true);
constraint array_bool_or([aux240_BOOL,aux470_BOOL],true);
constraint array_bool_or([aux264_BOOL,aux471_BOOL],true);
constraint array_bool_or([aux217_BOOL,aux472_BOOL],true);
constraint array_bool_or([aux230_BOOL,aux473_BOOL],true);
constraint array_bool_or([aux474_BOOL,aux257_BOOL],true);
constraint array_bool_or([aux475_BOOL,aux253_BOOL],true);
constraint array_bool_or([aux476_BOOL,aux279_BOOL],true);
constraint array_bool_or([aux477_BOOL,aux272_BOOL],true);
constraint array_bool_or([aux478_BOOL,aux221_BOOL],true);
constraint array_bool_or([aux224_BOOL,aux479_BOOL],true);
constraint array_bool_or([aux232_BOOL,aux480_BOOL],true);
constraint array_bool_or([aux241_BOOL,aux481_BOOL],true);
constraint array_bool_or([aux250_BOOL,aux482_BOOL],true);
constraint array_bool_or([aux258_BOOL,aux483_BOOL],true);
constraint array_bool_or([aux282_BOOL,aux484_BOOL],true);
constraint array_bool_or([aux219_BOOL,aux485_BOOL],true);
constraint array_bool_or([aux276_BOOL,aux486_BOOL],true);
constraint array_bool_or([aux262_BOOL,aux487_BOOL],true);
constraint array_bool_or([aux249_BOOL,aux488_BOOL],true);
constraint array_bool_or([aux236_BOOL,aux489_BOOL],true);
constraint array_bool_or([aux266_BOOL,aux490_BOOL],true);
constraint array_bool_or([aux216_BOOL,aux491_BOOL],true);
constraint array_bool_or([aux237_BOOL,aux492_BOOL],true);
constraint array_bool_or([aux259_BOOL,aux493_BOOL],true);
constraint array_bool_or([aux283_BOOL,aux494_BOOL],true);
constraint array_bool_or([aux270_BOOL,aux495_BOOL],true);
constraint array_bool_or([aux247_BOOL,aux496_BOOL],true);
constraint array_bool_or([aux497_BOOL,aux213_BOOL],true);
constraint array_bool_or([aux228_BOOL,aux498_BOOL],true);
constraint array_bool_or([aux242_BOOL,aux499_BOOL],true);
constraint array_bool_or([aux254_BOOL,aux500_BOOL],true);
constraint array_bool_or([aux267_BOOL,aux501_BOOL],true);
constraint array_bool_or([aux268_BOOL,aux502_BOOL],true);
constraint array_bool_or([aux251_BOOL,aux503_BOOL],true);
constraint array_bool_or([aux504_BOOL,aux277_BOOL],true);
constraint array_bool_or([aux505_BOOL,aux269_BOOL],true);
constraint array_bool_or([aux506_BOOL,aux225_BOOL],true);
constraint array_bool_or([aux507_BOOL,aux215_BOOL],true);
constraint array_bool_or([aux508_BOOL,aux239_BOOL],true);
constraint array_bool_or([aux243_BOOL,aux509_BOOL],true);
constraint array_bool_or([aux223_BOOL,aux510_BOOL],true);
constraint array_bool_or([aux271_BOOL,aux511_BOOL],true);
constraint array_bool_or([aux284_BOOL,aux512_BOOL],true);
constraint array_bool_or([aux260_BOOL,aux513_BOOL],true);
constraint array_bool_or([aux245_BOOL,aux514_BOOL],true);
constraint array_bool_or([aux278_BOOL,aux515_BOOL],true);
constraint array_bool_or([aux516_BOOL,aux229_BOOL],true);
constraint array_bool_or([aux517_BOOL,aux233_BOOL],true);
constraint array_bool_or([aux518_BOOL,aux256_BOOL],true);
constraint array_bool_or([aux519_BOOL,aux261_BOOL],true);
constraint array_bool_or([aux520_BOOL,aux275_BOOL],true);
constraint array_bool_or([aux227_BOOL,aux521_BOOL],true);
constraint array_bool_or([aux220_BOOL,aux522_BOOL],true);
constraint array_bool_or([aux280_BOOL,aux523_BOOL],true);
constraint array_bool_or([aux273_BOOL,aux524_BOOL],true);
constraint array_bool_or([aux263_BOOL,aux525_BOOL],true);
constraint array_bool_or([aux255_BOOL,aux526_BOOL],true);
constraint gecode_global_cardinality([plan2d_00012_00001, plan2d_00004_00001, plan2d_00009_00001, plan2d_00005_00001, plan2d_00001_00001, plan2d_00006_00001, plan2d_00010_00001, plan2d_00002_00001, plan2d_00007_00001, plan2d_00011_00001, plan2d_00003_00001, plan2d_00008_00001],[0, 1, 2, 3],[4, 2, 2, 4])::domain;
constraint gecode_global_cardinality([plan2d_00012_00002, plan2d_00004_00002, plan2d_00009_00002, plan2d_00005_00002, plan2d_00001_00002, plan2d_00006_00002, plan2d_00010_00002, plan2d_00002_00002, plan2d_00007_00002, plan2d_00011_00002, plan2d_00003_00002, plan2d_00008_00002],[0, 1, 2, 3],[5, 1, 2, 4])::domain;
constraint gecode_global_cardinality([plan2d_00012_00003, plan2d_00004_00003, plan2d_00009_00003, plan2d_00005_00003, plan2d_00001_00003, plan2d_00006_00003, plan2d_00010_00003, plan2d_00002_00003, plan2d_00007_00003, plan2d_00011_00003, plan2d_00003_00003, plan2d_00008_00003],[0, 1, 2, 3],[4, 1, 3, 4])::domain;
constraint gecode_global_cardinality([plan2d_00012_00004, plan2d_00004_00004, plan2d_00009_00004, plan2d_00005_00004, plan2d_00001_00004, plan2d_00006_00004, plan2d_00010_00004, plan2d_00002_00004, plan2d_00007_00004, plan2d_00011_00004, plan2d_00003_00004, plan2d_00008_00004],[0, 1, 2, 3],[4, 2, 2, 4])::domain;
constraint gecode_global_cardinality([plan2d_00012_00005, plan2d_00004_00005, plan2d_00009_00005, plan2d_00005_00005, plan2d_00001_00005, plan2d_00006_00005, plan2d_00010_00005, plan2d_00002_00005, plan2d_00007_00005, plan2d_00011_00005, plan2d_00003_00005, plan2d_00008_00005],[0, 1, 2, 3],[4, 2, 2, 4])::domain;
constraint gecode_global_cardinality([plan2d_00012_00006, plan2d_00004_00006, plan2d_00009_00006, plan2d_00005_00006, plan2d_00001_00006, plan2d_00006_00006, plan2d_00010_00006, plan2d_00002_00006, plan2d_00007_00006, plan2d_00011_00006, plan2d_00003_00006, plan2d_00008_00006],[0, 1, 2, 3],[6, 2, 1, 3])::domain;

solve :: int_search([plan2d_00001_00001, plan2d_00001_00002, plan2d_00001_00003, plan2d_00001_00004, plan2d_00001_00005, plan2d_00001_00006, plan2d_00001_00006, plan2d_00002_00001, plan2d_00002_00002, plan2d_00002_00003, plan2d_00002_00004, plan2d_00002_00005, plan2d_00002_00006, plan2d_00002_00006, plan2d_00003_00001, plan2d_00003_00002, plan2d_00003_00003, plan2d_00003_00004, plan2d_00003_00005, plan2d_00003_00006, plan2d_00003_00006, plan2d_00004_00001, plan2d_00004_00002, plan2d_00004_00003, plan2d_00004_00004, plan2d_00004_00005, plan2d_00004_00006, plan2d_00004_00006, plan2d_00005_00001, plan2d_00005_00002, plan2d_00005_00003, plan2d_00005_00004, plan2d_00005_00005, plan2d_00005_00006, plan2d_00005_00006, plan2d_00006_00001, plan2d_00006_00002, plan2d_00006_00003, plan2d_00006_00004, plan2d_00006_00005, plan2d_00006_00006, plan2d_00006_00006, plan2d_00007_00001, plan2d_00007_00002, plan2d_00007_00003, plan2d_00007_00004, plan2d_00007_00005, plan2d_00007_00006, plan2d_00007_00006, plan2d_00008_00001, plan2d_00008_00002, plan2d_00008_00003, plan2d_00008_00004, plan2d_00008_00005, plan2d_00008_00006, plan2d_00008_00006, plan2d_00009_00001, plan2d_00009_00002, plan2d_00009_00003, plan2d_00009_00004, plan2d_00009_00005, plan2d_00009_00006, plan2d_00009_00006, plan2d_00010_00001, plan2d_00010_00002, plan2d_00010_00003, plan2d_00010_00004, plan2d_00010_00005, plan2d_00010_00006, plan2d_00010_00006, plan2d_00011_00001, plan2d_00011_00002, plan2d_00011_00003, plan2d_00011_00004, plan2d_00011_00005, plan2d_00011_00006, plan2d_00011_00006, plan2d_00012_00001, plan2d_00012_00002, plan2d_00012_00003, plan2d_00012_00004, plan2d_00012_00005, plan2d_00012_00006, plan2d_00012_00006], input_order, indomain_min, complete)
 satisfy;
