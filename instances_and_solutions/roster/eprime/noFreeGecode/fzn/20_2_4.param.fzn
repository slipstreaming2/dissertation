predicate gecode_global_cardinality(array[int] of var int: x, array[int] of int: cover, array[int] of var int: counts);
var 0..3: plan2d_00001_00001:: output_var ;
var 0..3: plan2d_00001_00002:: output_var ;
var 0..3: plan2d_00001_00003:: output_var ;
var 0..3: plan2d_00001_00004:: output_var ;
var 0..3: plan2d_00001_00005:: output_var ;
var 0..3: plan2d_00001_00006:: output_var ;
var 0..3: plan2d_00002_00001:: output_var ;
var 0..3: plan2d_00002_00002:: output_var ;
var 0..3: plan2d_00002_00003:: output_var ;
var 0..3: plan2d_00002_00004:: output_var ;
var 0..3: plan2d_00002_00005:: output_var ;
var 0..3: plan2d_00002_00006:: output_var ;
var 0..3: plan2d_00003_00001:: output_var ;
var 0..3: plan2d_00003_00002:: output_var ;
var 0..3: plan2d_00003_00003:: output_var ;
var 0..3: plan2d_00003_00004:: output_var ;
var 0..3: plan2d_00003_00005:: output_var ;
var 0..3: plan2d_00003_00006:: output_var ;
var 0..3: plan2d_00004_00001:: output_var ;
var 0..3: plan2d_00004_00002:: output_var ;
var 0..3: plan2d_00004_00003:: output_var ;
var 0..3: plan2d_00004_00004:: output_var ;
var 0..3: plan2d_00004_00005:: output_var ;
var 0..3: plan2d_00004_00006:: output_var ;
var 0..3: plan2d_00005_00001:: output_var ;
var 0..3: plan2d_00005_00002:: output_var ;
var 0..3: plan2d_00005_00003:: output_var ;
var 0..3: plan2d_00005_00004:: output_var ;
var 0..3: plan2d_00005_00005:: output_var ;
var 0..3: plan2d_00005_00006:: output_var ;
var 0..3: plan2d_00006_00001:: output_var ;
var 0..3: plan2d_00006_00002:: output_var ;
var 0..3: plan2d_00006_00003:: output_var ;
var 0..3: plan2d_00006_00004:: output_var ;
var 0..3: plan2d_00006_00005:: output_var ;
var 0..3: plan2d_00006_00006:: output_var ;
var 0..3: plan2d_00007_00001:: output_var ;
var 0..3: plan2d_00007_00002:: output_var ;
var 0..3: plan2d_00007_00003:: output_var ;
var 0..3: plan2d_00007_00004:: output_var ;
var 0..3: plan2d_00007_00005:: output_var ;
var 0..3: plan2d_00007_00006:: output_var ;
var 0..3: plan2d_00008_00001:: output_var ;
var 0..3: plan2d_00008_00002:: output_var ;
var 0..3: plan2d_00008_00003:: output_var ;
var 0..3: plan2d_00008_00004:: output_var ;
var 0..3: plan2d_00008_00005:: output_var ;
var 0..3: plan2d_00008_00006:: output_var ;
var 0..3: plan2d_00009_00001:: output_var ;
var 0..3: plan2d_00009_00002:: output_var ;
var 0..3: plan2d_00009_00003:: output_var ;
var 0..3: plan2d_00009_00004:: output_var ;
var 0..3: plan2d_00009_00005:: output_var ;
var 0..3: plan2d_00009_00006:: output_var ;
var 0..3: plan2d_00010_00001:: output_var ;
var 0..3: plan2d_00010_00002:: output_var ;
var 0..3: plan2d_00010_00003:: output_var ;
var 0..3: plan2d_00010_00004:: output_var ;
var 0..3: plan2d_00010_00005:: output_var ;
var 0..3: plan2d_00010_00006:: output_var ;
var 0..3: plan2d_00011_00001:: output_var ;
var 0..3: plan2d_00011_00002:: output_var ;
var 0..3: plan2d_00011_00003:: output_var ;
var 0..3: plan2d_00011_00004:: output_var ;
var 0..3: plan2d_00011_00005:: output_var ;
var 0..3: plan2d_00011_00006:: output_var ;
var 0..3: plan2d_00012_00001:: output_var ;
var 0..3: plan2d_00012_00002:: output_var ;
var 0..3: plan2d_00012_00003:: output_var ;
var 0..3: plan2d_00012_00004:: output_var ;
var 0..3: plan2d_00012_00005:: output_var ;
var 0..3: plan2d_00012_00006:: output_var ;
var 0..3: plan2d_00013_00001:: output_var ;
var 0..3: plan2d_00013_00002:: output_var ;
var 0..3: plan2d_00013_00003:: output_var ;
var 0..3: plan2d_00013_00004:: output_var ;
var 0..3: plan2d_00013_00005:: output_var ;
var 0..3: plan2d_00013_00006:: output_var ;
var 0..3: plan2d_00014_00001:: output_var ;
var 0..3: plan2d_00014_00002:: output_var ;
var 0..3: plan2d_00014_00003:: output_var ;
var 0..3: plan2d_00014_00004:: output_var ;
var 0..3: plan2d_00014_00005:: output_var ;
var 0..3: plan2d_00014_00006:: output_var ;
var 0..3: plan2d_00015_00001:: output_var ;
var 0..3: plan2d_00015_00002:: output_var ;
var 0..3: plan2d_00015_00003:: output_var ;
var 0..3: plan2d_00015_00004:: output_var ;
var 0..3: plan2d_00015_00005:: output_var ;
var 0..3: plan2d_00015_00006:: output_var ;
var 0..3: plan2d_00016_00001:: output_var ;
var 0..3: plan2d_00016_00002:: output_var ;
var 0..3: plan2d_00016_00003:: output_var ;
var 0..3: plan2d_00016_00004:: output_var ;
var 0..3: plan2d_00016_00005:: output_var ;
var 0..3: plan2d_00016_00006:: output_var ;
var 0..3: plan2d_00017_00001:: output_var ;
var 0..3: plan2d_00017_00002:: output_var ;
var 0..3: plan2d_00017_00003:: output_var ;
var 0..3: plan2d_00017_00004:: output_var ;
var 0..3: plan2d_00017_00005:: output_var ;
var 0..3: plan2d_00017_00006:: output_var ;
var 0..3: plan2d_00018_00001:: output_var ;
var 0..3: plan2d_00018_00002:: output_var ;
var 0..3: plan2d_00018_00003:: output_var ;
var 0..3: plan2d_00018_00004:: output_var ;
var 0..3: plan2d_00018_00005:: output_var ;
var 0..3: plan2d_00018_00006:: output_var ;
var 0..3: plan2d_00019_00001:: output_var ;
var 0..3: plan2d_00019_00002:: output_var ;
var 0..3: plan2d_00019_00003:: output_var ;
var 0..3: plan2d_00019_00004:: output_var ;
var 0..3: plan2d_00019_00005:: output_var ;
var 0..3: plan2d_00019_00006:: output_var ;
var 0..3: plan2d_00020_00001:: output_var ;
var 0..3: plan2d_00020_00002:: output_var ;
var 0..3: plan2d_00020_00003:: output_var ;
var 0..3: plan2d_00020_00004:: output_var ;
var 0..3: plan2d_00020_00005:: output_var ;
var 0..3: plan2d_00020_00006:: output_var ;
var bool: aux0_BOOL:: var_is_introduced ;
var {0,1}: aux0_INTEGER :: var_is_introduced ;
var bool: aux1_BOOL:: var_is_introduced ;
var {0,1}: aux1_INTEGER :: var_is_introduced ;
var bool: aux2_BOOL:: var_is_introduced ;
var {0,1}: aux2_INTEGER :: var_is_introduced ;
var bool: aux3_BOOL:: var_is_introduced ;
var {0,1}: aux3_INTEGER :: var_is_introduced ;
var bool: aux4_BOOL:: var_is_introduced ;
var {0,1}: aux4_INTEGER :: var_is_introduced ;
var bool: aux5_BOOL:: var_is_introduced ;
var {0,1}: aux5_INTEGER :: var_is_introduced ;
var bool: aux6_BOOL:: var_is_introduced ;
var {0,1}: aux6_INTEGER :: var_is_introduced ;
var bool: aux7_BOOL:: var_is_introduced ;
var {0,1}: aux7_INTEGER :: var_is_introduced ;
var bool: aux8_BOOL:: var_is_introduced ;
var {0,1}: aux8_INTEGER :: var_is_introduced ;
var bool: aux9_BOOL:: var_is_introduced ;
var {0,1}: aux9_INTEGER :: var_is_introduced ;
var bool: aux10_BOOL:: var_is_introduced ;
var {0,1}: aux10_INTEGER :: var_is_introduced ;
var bool: aux11_BOOL:: var_is_introduced ;
var {0,1}: aux11_INTEGER :: var_is_introduced ;
var bool: aux12_BOOL:: var_is_introduced ;
var {0,1}: aux12_INTEGER :: var_is_introduced ;
var bool: aux13_BOOL:: var_is_introduced ;
var {0,1}: aux13_INTEGER :: var_is_introduced ;
var bool: aux14_BOOL:: var_is_introduced ;
var {0,1}: aux14_INTEGER :: var_is_introduced ;
var bool: aux15_BOOL:: var_is_introduced ;
var {0,1}: aux15_INTEGER :: var_is_introduced ;
var bool: aux16_BOOL:: var_is_introduced ;
var {0,1}: aux16_INTEGER :: var_is_introduced ;
var bool: aux17_BOOL:: var_is_introduced ;
var {0,1}: aux17_INTEGER :: var_is_introduced ;
var bool: aux18_BOOL:: var_is_introduced ;
var {0,1}: aux18_INTEGER :: var_is_introduced ;
var bool: aux19_BOOL:: var_is_introduced ;
var {0,1}: aux19_INTEGER :: var_is_introduced ;
var bool: aux20_BOOL:: var_is_introduced ;
var {0,1}: aux20_INTEGER :: var_is_introduced ;
var bool: aux21_BOOL:: var_is_introduced ;
var {0,1}: aux21_INTEGER :: var_is_introduced ;
var bool: aux22_BOOL:: var_is_introduced ;
var {0,1}: aux22_INTEGER :: var_is_introduced ;
var bool: aux23_BOOL:: var_is_introduced ;
var {0,1}: aux23_INTEGER :: var_is_introduced ;
var bool: aux24_BOOL:: var_is_introduced ;
var {0,1}: aux24_INTEGER :: var_is_introduced ;
var bool: aux25_BOOL:: var_is_introduced ;
var {0,1}: aux25_INTEGER :: var_is_introduced ;
var bool: aux26_BOOL:: var_is_introduced ;
var {0,1}: aux26_INTEGER :: var_is_introduced ;
var bool: aux27_BOOL:: var_is_introduced ;
var {0,1}: aux27_INTEGER :: var_is_introduced ;
var bool: aux28_BOOL:: var_is_introduced ;
var {0,1}: aux28_INTEGER :: var_is_introduced ;
var bool: aux29_BOOL:: var_is_introduced ;
var {0,1}: aux29_INTEGER :: var_is_introduced ;
var bool: aux30_BOOL:: var_is_introduced ;
var {0,1}: aux30_INTEGER :: var_is_introduced ;
var bool: aux31_BOOL:: var_is_introduced ;
var {0,1}: aux31_INTEGER :: var_is_introduced ;
var bool: aux32_BOOL:: var_is_introduced ;
var {0,1}: aux32_INTEGER :: var_is_introduced ;
var bool: aux33_BOOL:: var_is_introduced ;
var {0,1}: aux33_INTEGER :: var_is_introduced ;
var bool: aux34_BOOL:: var_is_introduced ;
var {0,1}: aux34_INTEGER :: var_is_introduced ;
var bool: aux35_BOOL:: var_is_introduced ;
var {0,1}: aux35_INTEGER :: var_is_introduced ;
var bool: aux36_BOOL:: var_is_introduced ;
var {0,1}: aux36_INTEGER :: var_is_introduced ;
var bool: aux37_BOOL:: var_is_introduced ;
var {0,1}: aux37_INTEGER :: var_is_introduced ;
var bool: aux38_BOOL:: var_is_introduced ;
var {0,1}: aux38_INTEGER :: var_is_introduced ;
var bool: aux39_BOOL:: var_is_introduced ;
var {0,1}: aux39_INTEGER :: var_is_introduced ;
var bool: aux40_BOOL:: var_is_introduced ;
var {0,1}: aux40_INTEGER :: var_is_introduced ;
var bool: aux41_BOOL:: var_is_introduced ;
var {0,1}: aux41_INTEGER :: var_is_introduced ;
var bool: aux42_BOOL:: var_is_introduced ;
var {0,1}: aux42_INTEGER :: var_is_introduced ;
var bool: aux43_BOOL:: var_is_introduced ;
var {0,1}: aux43_INTEGER :: var_is_introduced ;
var bool: aux44_BOOL:: var_is_introduced ;
var {0,1}: aux44_INTEGER :: var_is_introduced ;
var bool: aux45_BOOL:: var_is_introduced ;
var {0,1}: aux45_INTEGER :: var_is_introduced ;
var bool: aux46_BOOL:: var_is_introduced ;
var {0,1}: aux46_INTEGER :: var_is_introduced ;
var bool: aux47_BOOL:: var_is_introduced ;
var {0,1}: aux47_INTEGER :: var_is_introduced ;
var bool: aux48_BOOL:: var_is_introduced ;
var {0,1}: aux48_INTEGER :: var_is_introduced ;
var bool: aux49_BOOL:: var_is_introduced ;
var {0,1}: aux49_INTEGER :: var_is_introduced ;
var bool: aux50_BOOL:: var_is_introduced ;
var {0,1}: aux50_INTEGER :: var_is_introduced ;
var bool: aux51_BOOL:: var_is_introduced ;
var {0,1}: aux51_INTEGER :: var_is_introduced ;
var bool: aux52_BOOL:: var_is_introduced ;
var {0,1}: aux52_INTEGER :: var_is_introduced ;
var bool: aux53_BOOL:: var_is_introduced ;
var {0,1}: aux53_INTEGER :: var_is_introduced ;
var bool: aux54_BOOL:: var_is_introduced ;
var {0,1}: aux54_INTEGER :: var_is_introduced ;
var bool: aux55_BOOL:: var_is_introduced ;
var {0,1}: aux55_INTEGER :: var_is_introduced ;
var bool: aux56_BOOL:: var_is_introduced ;
var {0,1}: aux56_INTEGER :: var_is_introduced ;
var bool: aux57_BOOL:: var_is_introduced ;
var {0,1}: aux57_INTEGER :: var_is_introduced ;
var bool: aux58_BOOL:: var_is_introduced ;
var {0,1}: aux58_INTEGER :: var_is_introduced ;
var bool: aux59_BOOL:: var_is_introduced ;
var {0,1}: aux59_INTEGER :: var_is_introduced ;
var bool: aux60_BOOL:: var_is_introduced ;
var {0,1}: aux60_INTEGER :: var_is_introduced ;
var bool: aux61_BOOL:: var_is_introduced ;
var {0,1}: aux61_INTEGER :: var_is_introduced ;
var bool: aux62_BOOL:: var_is_introduced ;
var {0,1}: aux62_INTEGER :: var_is_introduced ;
var bool: aux63_BOOL:: var_is_introduced ;
var {0,1}: aux63_INTEGER :: var_is_introduced ;
var bool: aux64_BOOL:: var_is_introduced ;
var {0,1}: aux64_INTEGER :: var_is_introduced ;
var bool: aux65_BOOL:: var_is_introduced ;
var {0,1}: aux65_INTEGER :: var_is_introduced ;
var bool: aux66_BOOL:: var_is_introduced ;
var {0,1}: aux66_INTEGER :: var_is_introduced ;
var bool: aux67_BOOL:: var_is_introduced ;
var {0,1}: aux67_INTEGER :: var_is_introduced ;
var bool: aux68_BOOL:: var_is_introduced ;
var {0,1}: aux68_INTEGER :: var_is_introduced ;
var bool: aux69_BOOL:: var_is_introduced ;
var {0,1}: aux69_INTEGER :: var_is_introduced ;
var bool: aux70_BOOL:: var_is_introduced ;
var {0,1}: aux70_INTEGER :: var_is_introduced ;
var bool: aux71_BOOL:: var_is_introduced ;
var {0,1}: aux71_INTEGER :: var_is_introduced ;
var bool: aux72_BOOL:: var_is_introduced ;
var {0,1}: aux72_INTEGER :: var_is_introduced ;
var bool: aux73_BOOL:: var_is_introduced ;
var {0,1}: aux73_INTEGER :: var_is_introduced ;
var bool: aux74_BOOL:: var_is_introduced ;
var {0,1}: aux74_INTEGER :: var_is_introduced ;
var bool: aux75_BOOL:: var_is_introduced ;
var {0,1}: aux75_INTEGER :: var_is_introduced ;
var bool: aux76_BOOL:: var_is_introduced ;
var {0,1}: aux76_INTEGER :: var_is_introduced ;
var bool: aux77_BOOL:: var_is_introduced ;
var {0,1}: aux77_INTEGER :: var_is_introduced ;
var bool: aux78_BOOL:: var_is_introduced ;
var {0,1}: aux78_INTEGER :: var_is_introduced ;
var bool: aux79_BOOL:: var_is_introduced ;
var {0,1}: aux79_INTEGER :: var_is_introduced ;
var bool: aux80_BOOL:: var_is_introduced ;
var {0,1}: aux80_INTEGER :: var_is_introduced ;
var bool: aux81_BOOL:: var_is_introduced ;
var {0,1}: aux81_INTEGER :: var_is_introduced ;
var bool: aux82_BOOL:: var_is_introduced ;
var {0,1}: aux82_INTEGER :: var_is_introduced ;
var bool: aux83_BOOL:: var_is_introduced ;
var {0,1}: aux83_INTEGER :: var_is_introduced ;
var bool: aux84_BOOL:: var_is_introduced ;
var {0,1}: aux84_INTEGER :: var_is_introduced ;
var bool: aux85_BOOL:: var_is_introduced ;
var {0,1}: aux85_INTEGER :: var_is_introduced ;
var bool: aux86_BOOL:: var_is_introduced ;
var {0,1}: aux86_INTEGER :: var_is_introduced ;
var bool: aux87_BOOL:: var_is_introduced ;
var {0,1}: aux87_INTEGER :: var_is_introduced ;
var bool: aux88_BOOL:: var_is_introduced ;
var {0,1}: aux88_INTEGER :: var_is_introduced ;
var bool: aux89_BOOL:: var_is_introduced ;
var {0,1}: aux89_INTEGER :: var_is_introduced ;
var bool: aux90_BOOL:: var_is_introduced ;
var {0,1}: aux90_INTEGER :: var_is_introduced ;
var bool: aux91_BOOL:: var_is_introduced ;
var {0,1}: aux91_INTEGER :: var_is_introduced ;
var bool: aux92_BOOL:: var_is_introduced ;
var {0,1}: aux92_INTEGER :: var_is_introduced ;
var bool: aux93_BOOL:: var_is_introduced ;
var {0,1}: aux93_INTEGER :: var_is_introduced ;
var bool: aux94_BOOL:: var_is_introduced ;
var {0,1}: aux94_INTEGER :: var_is_introduced ;
var bool: aux95_BOOL:: var_is_introduced ;
var {0,1}: aux95_INTEGER :: var_is_introduced ;
var bool: aux96_BOOL:: var_is_introduced ;
var {0,1}: aux96_INTEGER :: var_is_introduced ;
var bool: aux97_BOOL:: var_is_introduced ;
var {0,1}: aux97_INTEGER :: var_is_introduced ;
var bool: aux98_BOOL:: var_is_introduced ;
var {0,1}: aux98_INTEGER :: var_is_introduced ;
var bool: aux99_BOOL:: var_is_introduced ;
var {0,1}: aux99_INTEGER :: var_is_introduced ;
var bool: aux100_BOOL:: var_is_introduced ;
var {0,1}: aux100_INTEGER :: var_is_introduced ;
var bool: aux101_BOOL:: var_is_introduced ;
var {0,1}: aux101_INTEGER :: var_is_introduced ;
var bool: aux102_BOOL:: var_is_introduced ;
var {0,1}: aux102_INTEGER :: var_is_introduced ;
var bool: aux103_BOOL:: var_is_introduced ;
var {0,1}: aux103_INTEGER :: var_is_introduced ;
var bool: aux104_BOOL:: var_is_introduced ;
var {0,1}: aux104_INTEGER :: var_is_introduced ;
var bool: aux105_BOOL:: var_is_introduced ;
var {0,1}: aux105_INTEGER :: var_is_introduced ;
var bool: aux106_BOOL:: var_is_introduced ;
var {0,1}: aux106_INTEGER :: var_is_introduced ;
var bool: aux107_BOOL:: var_is_introduced ;
var {0,1}: aux107_INTEGER :: var_is_introduced ;
var bool: aux108_BOOL:: var_is_introduced ;
var {0,1}: aux108_INTEGER :: var_is_introduced ;
var bool: aux109_BOOL:: var_is_introduced ;
var {0,1}: aux109_INTEGER :: var_is_introduced ;
var bool: aux110_BOOL:: var_is_introduced ;
var {0,1}: aux110_INTEGER :: var_is_introduced ;
var bool: aux111_BOOL:: var_is_introduced ;
var {0,1}: aux111_INTEGER :: var_is_introduced ;
var bool: aux112_BOOL:: var_is_introduced ;
var {0,1}: aux112_INTEGER :: var_is_introduced ;
var bool: aux113_BOOL:: var_is_introduced ;
var {0,1}: aux113_INTEGER :: var_is_introduced ;
var bool: aux114_BOOL:: var_is_introduced ;
var {0,1}: aux114_INTEGER :: var_is_introduced ;
var bool: aux115_BOOL:: var_is_introduced ;
var {0,1}: aux115_INTEGER :: var_is_introduced ;
var bool: aux116_BOOL:: var_is_introduced ;
var {0,1}: aux116_INTEGER :: var_is_introduced ;
var bool: aux117_BOOL:: var_is_introduced ;
var {0,1}: aux117_INTEGER :: var_is_introduced ;
var bool: aux118_BOOL:: var_is_introduced ;
var {0,1}: aux118_INTEGER :: var_is_introduced ;
var bool: aux119_BOOL:: var_is_introduced ;
var {0,1}: aux119_INTEGER :: var_is_introduced ;
var bool: aux120_BOOL:: var_is_introduced ;
var {0,1}: aux120_INTEGER :: var_is_introduced ;
var bool: aux121_BOOL:: var_is_introduced ;
var {0,1}: aux121_INTEGER :: var_is_introduced ;
var bool: aux122_BOOL:: var_is_introduced ;
var {0,1}: aux122_INTEGER :: var_is_introduced ;
var bool: aux123_BOOL:: var_is_introduced ;
var {0,1}: aux123_INTEGER :: var_is_introduced ;
var bool: aux124_BOOL:: var_is_introduced ;
var {0,1}: aux124_INTEGER :: var_is_introduced ;
var bool: aux125_BOOL:: var_is_introduced ;
var {0,1}: aux125_INTEGER :: var_is_introduced ;
var bool: aux126_BOOL:: var_is_introduced ;
var {0,1}: aux126_INTEGER :: var_is_introduced ;
var bool: aux127_BOOL:: var_is_introduced ;
var {0,1}: aux127_INTEGER :: var_is_introduced ;
var bool: aux128_BOOL:: var_is_introduced ;
var {0,1}: aux128_INTEGER :: var_is_introduced ;
var bool: aux129_BOOL:: var_is_introduced ;
var {0,1}: aux129_INTEGER :: var_is_introduced ;
var bool: aux130_BOOL:: var_is_introduced ;
var {0,1}: aux130_INTEGER :: var_is_introduced ;
var bool: aux131_BOOL:: var_is_introduced ;
var {0,1}: aux131_INTEGER :: var_is_introduced ;
var bool: aux132_BOOL:: var_is_introduced ;
var {0,1}: aux132_INTEGER :: var_is_introduced ;
var bool: aux133_BOOL:: var_is_introduced ;
var {0,1}: aux133_INTEGER :: var_is_introduced ;
var bool: aux134_BOOL:: var_is_introduced ;
var {0,1}: aux134_INTEGER :: var_is_introduced ;
var bool: aux135_BOOL:: var_is_introduced ;
var {0,1}: aux135_INTEGER :: var_is_introduced ;
var bool: aux136_BOOL:: var_is_introduced ;
var {0,1}: aux136_INTEGER :: var_is_introduced ;
var bool: aux137_BOOL:: var_is_introduced ;
var {0,1}: aux137_INTEGER :: var_is_introduced ;
var bool: aux138_BOOL:: var_is_introduced ;
var {0,1}: aux138_INTEGER :: var_is_introduced ;
var bool: aux139_BOOL:: var_is_introduced ;
var {0,1}: aux139_INTEGER :: var_is_introduced ;
var bool: aux140_BOOL:: var_is_introduced ;
var {0,1}: aux140_INTEGER :: var_is_introduced ;
var bool: aux141_BOOL:: var_is_introduced ;
var {0,1}: aux141_INTEGER :: var_is_introduced ;
var bool: aux142_BOOL:: var_is_introduced ;
var {0,1}: aux142_INTEGER :: var_is_introduced ;
var bool: aux143_BOOL:: var_is_introduced ;
var {0,1}: aux143_INTEGER :: var_is_introduced ;
var bool: aux144_BOOL:: var_is_introduced ;
var {0,1}: aux144_INTEGER :: var_is_introduced ;
var bool: aux145_BOOL:: var_is_introduced ;
var {0,1}: aux145_INTEGER :: var_is_introduced ;
var bool: aux146_BOOL:: var_is_introduced ;
var {0,1}: aux146_INTEGER :: var_is_introduced ;
var bool: aux147_BOOL:: var_is_introduced ;
var {0,1}: aux147_INTEGER :: var_is_introduced ;
var bool: aux148_BOOL:: var_is_introduced ;
var {0,1}: aux148_INTEGER :: var_is_introduced ;
var bool: aux149_BOOL:: var_is_introduced ;
var {0,1}: aux149_INTEGER :: var_is_introduced ;
var bool: aux150_BOOL:: var_is_introduced ;
var {0,1}: aux150_INTEGER :: var_is_introduced ;
var bool: aux151_BOOL:: var_is_introduced ;
var {0,1}: aux151_INTEGER :: var_is_introduced ;
var bool: aux152_BOOL:: var_is_introduced ;
var {0,1}: aux152_INTEGER :: var_is_introduced ;
var bool: aux153_BOOL:: var_is_introduced ;
var {0,1}: aux153_INTEGER :: var_is_introduced ;
var bool: aux154_BOOL:: var_is_introduced ;
var {0,1}: aux154_INTEGER :: var_is_introduced ;
var bool: aux155_BOOL:: var_is_introduced ;
var {0,1}: aux155_INTEGER :: var_is_introduced ;
var bool: aux156_BOOL:: var_is_introduced ;
var {0,1}: aux156_INTEGER :: var_is_introduced ;
var bool: aux157_BOOL:: var_is_introduced ;
var {0,1}: aux157_INTEGER :: var_is_introduced ;
var bool: aux158_BOOL:: var_is_introduced ;
var {0,1}: aux158_INTEGER :: var_is_introduced ;
var bool: aux159_BOOL:: var_is_introduced ;
var {0,1}: aux159_INTEGER :: var_is_introduced ;
var bool: aux160_BOOL:: var_is_introduced ;
var {0,1}: aux160_INTEGER :: var_is_introduced ;
var bool: aux161_BOOL:: var_is_introduced ;
var {0,1}: aux161_INTEGER :: var_is_introduced ;
var bool: aux162_BOOL:: var_is_introduced ;
var {0,1}: aux162_INTEGER :: var_is_introduced ;
var bool: aux163_BOOL:: var_is_introduced ;
var {0,1}: aux163_INTEGER :: var_is_introduced ;
var bool: aux164_BOOL:: var_is_introduced ;
var {0,1}: aux164_INTEGER :: var_is_introduced ;
var bool: aux165_BOOL:: var_is_introduced ;
var {0,1}: aux165_INTEGER :: var_is_introduced ;
var bool: aux166_BOOL:: var_is_introduced ;
var {0,1}: aux166_INTEGER :: var_is_introduced ;
var bool: aux167_BOOL:: var_is_introduced ;
var {0,1}: aux167_INTEGER :: var_is_introduced ;
var bool: aux168_BOOL:: var_is_introduced ;
var {0,1}: aux168_INTEGER :: var_is_introduced ;
var bool: aux169_BOOL:: var_is_introduced ;
var {0,1}: aux169_INTEGER :: var_is_introduced ;
var bool: aux170_BOOL:: var_is_introduced ;
var {0,1}: aux170_INTEGER :: var_is_introduced ;
var bool: aux171_BOOL:: var_is_introduced ;
var {0,1}: aux171_INTEGER :: var_is_introduced ;
var bool: aux172_BOOL:: var_is_introduced ;
var {0,1}: aux172_INTEGER :: var_is_introduced ;
var bool: aux173_BOOL:: var_is_introduced ;
var {0,1}: aux173_INTEGER :: var_is_introduced ;
var bool: aux174_BOOL:: var_is_introduced ;
var {0,1}: aux174_INTEGER :: var_is_introduced ;
var bool: aux175_BOOL:: var_is_introduced ;
var {0,1}: aux175_INTEGER :: var_is_introduced ;
var bool: aux176_BOOL:: var_is_introduced ;
var {0,1}: aux176_INTEGER :: var_is_introduced ;
var bool: aux177_BOOL:: var_is_introduced ;
var {0,1}: aux177_INTEGER :: var_is_introduced ;
var bool: aux178_BOOL:: var_is_introduced ;
var {0,1}: aux178_INTEGER :: var_is_introduced ;
var bool: aux179_BOOL:: var_is_introduced ;
var {0,1}: aux179_INTEGER :: var_is_introduced ;
var bool: aux180_BOOL:: var_is_introduced ;
var {0,1}: aux180_INTEGER :: var_is_introduced ;
var bool: aux181_BOOL:: var_is_introduced ;
var {0,1}: aux181_INTEGER :: var_is_introduced ;
var bool: aux182_BOOL:: var_is_introduced ;
var {0,1}: aux182_INTEGER :: var_is_introduced ;
var bool: aux183_BOOL:: var_is_introduced ;
var {0,1}: aux183_INTEGER :: var_is_introduced ;
var bool: aux184_BOOL:: var_is_introduced ;
var {0,1}: aux184_INTEGER :: var_is_introduced ;
var bool: aux185_BOOL:: var_is_introduced ;
var {0,1}: aux185_INTEGER :: var_is_introduced ;
var bool: aux186_BOOL:: var_is_introduced ;
var {0,1}: aux186_INTEGER :: var_is_introduced ;
var bool: aux187_BOOL:: var_is_introduced ;
var {0,1}: aux187_INTEGER :: var_is_introduced ;
var bool: aux188_BOOL:: var_is_introduced ;
var {0,1}: aux188_INTEGER :: var_is_introduced ;
var bool: aux189_BOOL:: var_is_introduced ;
var {0,1}: aux189_INTEGER :: var_is_introduced ;
var bool: aux190_BOOL:: var_is_introduced ;
var {0,1}: aux190_INTEGER :: var_is_introduced ;
var bool: aux191_BOOL:: var_is_introduced ;
var {0,1}: aux191_INTEGER :: var_is_introduced ;
var bool: aux192_BOOL:: var_is_introduced ;
var {0,1}: aux192_INTEGER :: var_is_introduced ;
var bool: aux193_BOOL:: var_is_introduced ;
var {0,1}: aux193_INTEGER :: var_is_introduced ;
var bool: aux194_BOOL:: var_is_introduced ;
var {0,1}: aux194_INTEGER :: var_is_introduced ;
var bool: aux195_BOOL:: var_is_introduced ;
var {0,1}: aux195_INTEGER :: var_is_introduced ;
var bool: aux196_BOOL:: var_is_introduced ;
var {0,1}: aux196_INTEGER :: var_is_introduced ;
var bool: aux197_BOOL:: var_is_introduced ;
var {0,1}: aux197_INTEGER :: var_is_introduced ;
var bool: aux198_BOOL:: var_is_introduced ;
var {0,1}: aux198_INTEGER :: var_is_introduced ;
var bool: aux199_BOOL:: var_is_introduced ;
var {0,1}: aux199_INTEGER :: var_is_introduced ;
var bool: aux200_BOOL:: var_is_introduced ;
var {0,1}: aux200_INTEGER :: var_is_introduced ;
var bool: aux201_BOOL:: var_is_introduced ;
var {0,1}: aux201_INTEGER :: var_is_introduced ;
var bool: aux202_BOOL:: var_is_introduced ;
var {0,1}: aux202_INTEGER :: var_is_introduced ;
var bool: aux203_BOOL:: var_is_introduced ;
var {0,1}: aux203_INTEGER :: var_is_introduced ;
var bool: aux204_BOOL:: var_is_introduced ;
var {0,1}: aux204_INTEGER :: var_is_introduced ;
var bool: aux205_BOOL:: var_is_introduced ;
var {0,1}: aux205_INTEGER :: var_is_introduced ;
var bool: aux206_BOOL:: var_is_introduced ;
var {0,1}: aux206_INTEGER :: var_is_introduced ;
var bool: aux207_BOOL:: var_is_introduced ;
var {0,1}: aux207_INTEGER :: var_is_introduced ;
var bool: aux208_BOOL:: var_is_introduced ;
var {0,1}: aux208_INTEGER :: var_is_introduced ;
var bool: aux209_BOOL:: var_is_introduced ;
var {0,1}: aux209_INTEGER :: var_is_introduced ;
var bool: aux210_BOOL:: var_is_introduced ;
var {0,1}: aux210_INTEGER :: var_is_introduced ;
var bool: aux211_BOOL:: var_is_introduced ;
var {0,1}: aux211_INTEGER :: var_is_introduced ;
var bool: aux212_BOOL:: var_is_introduced ;
var {0,1}: aux212_INTEGER :: var_is_introduced ;
var bool: aux213_BOOL:: var_is_introduced ;
var {0,1}: aux213_INTEGER :: var_is_introduced ;
var bool: aux214_BOOL:: var_is_introduced ;
var {0,1}: aux214_INTEGER :: var_is_introduced ;
var bool: aux215_BOOL:: var_is_introduced ;
var {0,1}: aux215_INTEGER :: var_is_introduced ;
var bool: aux216_BOOL:: var_is_introduced ;
var {0,1}: aux216_INTEGER :: var_is_introduced ;
var bool: aux217_BOOL:: var_is_introduced ;
var {0,1}: aux217_INTEGER :: var_is_introduced ;
var bool: aux218_BOOL:: var_is_introduced ;
var {0,1}: aux218_INTEGER :: var_is_introduced ;
var bool: aux219_BOOL:: var_is_introduced ;
var {0,1}: aux219_INTEGER :: var_is_introduced ;
var bool: aux220_BOOL:: var_is_introduced ;
var {0,1}: aux220_INTEGER :: var_is_introduced ;
var bool: aux221_BOOL:: var_is_introduced ;
var {0,1}: aux221_INTEGER :: var_is_introduced ;
var bool: aux222_BOOL:: var_is_introduced ;
var {0,1}: aux222_INTEGER :: var_is_introduced ;
var bool: aux223_BOOL:: var_is_introduced ;
var {0,1}: aux223_INTEGER :: var_is_introduced ;
var bool: aux224_BOOL:: var_is_introduced ;
var {0,1}: aux224_INTEGER :: var_is_introduced ;
var bool: aux225_BOOL:: var_is_introduced ;
var {0,1}: aux225_INTEGER :: var_is_introduced ;
var bool: aux226_BOOL:: var_is_introduced ;
var {0,1}: aux226_INTEGER :: var_is_introduced ;
var bool: aux227_BOOL:: var_is_introduced ;
var {0,1}: aux227_INTEGER :: var_is_introduced ;
var bool: aux228_BOOL:: var_is_introduced ;
var {0,1}: aux228_INTEGER :: var_is_introduced ;
var bool: aux229_BOOL:: var_is_introduced ;
var {0,1}: aux229_INTEGER :: var_is_introduced ;
var bool: aux230_BOOL:: var_is_introduced ;
var {0,1}: aux230_INTEGER :: var_is_introduced ;
var bool: aux231_BOOL:: var_is_introduced ;
var {0,1}: aux231_INTEGER :: var_is_introduced ;
var bool: aux232_BOOL:: var_is_introduced ;
var {0,1}: aux232_INTEGER :: var_is_introduced ;
var bool: aux233_BOOL:: var_is_introduced ;
var {0,1}: aux233_INTEGER :: var_is_introduced ;
var bool: aux234_BOOL:: var_is_introduced ;
var {0,1}: aux234_INTEGER :: var_is_introduced ;
var bool: aux235_BOOL:: var_is_introduced ;
var {0,1}: aux235_INTEGER :: var_is_introduced ;
var bool: aux236_BOOL:: var_is_introduced ;
var {0,1}: aux236_INTEGER :: var_is_introduced ;
var bool: aux237_BOOL:: var_is_introduced ;
var {0,1}: aux237_INTEGER :: var_is_introduced ;
var bool: aux238_BOOL:: var_is_introduced ;
var {0,1}: aux238_INTEGER :: var_is_introduced ;
var bool: aux239_BOOL:: var_is_introduced ;
var {0,1}: aux239_INTEGER :: var_is_introduced ;
var bool: aux240_BOOL:: var_is_introduced ;
var {0,1}: aux240_INTEGER :: var_is_introduced ;
var bool: aux241_BOOL:: var_is_introduced ;
var {0,1}: aux241_INTEGER :: var_is_introduced ;
var bool: aux242_BOOL:: var_is_introduced ;
var {0,1}: aux242_INTEGER :: var_is_introduced ;
var bool: aux243_BOOL:: var_is_introduced ;
var {0,1}: aux243_INTEGER :: var_is_introduced ;
var bool: aux244_BOOL:: var_is_introduced ;
var {0,1}: aux244_INTEGER :: var_is_introduced ;
var bool: aux245_BOOL:: var_is_introduced ;
var {0,1}: aux245_INTEGER :: var_is_introduced ;
var bool: aux246_BOOL:: var_is_introduced ;
var {0,1}: aux246_INTEGER :: var_is_introduced ;
var bool: aux247_BOOL:: var_is_introduced ;
var {0,1}: aux247_INTEGER :: var_is_introduced ;
var bool: aux248_BOOL:: var_is_introduced ;
var {0,1}: aux248_INTEGER :: var_is_introduced ;
var bool: aux249_BOOL:: var_is_introduced ;
var {0,1}: aux249_INTEGER :: var_is_introduced ;
var bool: aux250_BOOL:: var_is_introduced ;
var {0,1}: aux250_INTEGER :: var_is_introduced ;
var bool: aux251_BOOL:: var_is_introduced ;
var {0,1}: aux251_INTEGER :: var_is_introduced ;
var bool: aux252_BOOL:: var_is_introduced ;
var {0,1}: aux252_INTEGER :: var_is_introduced ;
var bool: aux253_BOOL:: var_is_introduced ;
var {0,1}: aux253_INTEGER :: var_is_introduced ;
var bool: aux254_BOOL:: var_is_introduced ;
var {0,1}: aux254_INTEGER :: var_is_introduced ;
var bool: aux255_BOOL:: var_is_introduced ;
var {0,1}: aux255_INTEGER :: var_is_introduced ;
var bool: aux256_BOOL:: var_is_introduced ;
var {0,1}: aux256_INTEGER :: var_is_introduced ;
var bool: aux257_BOOL:: var_is_introduced ;
var {0,1}: aux257_INTEGER :: var_is_introduced ;
var bool: aux258_BOOL:: var_is_introduced ;
var {0,1}: aux258_INTEGER :: var_is_introduced ;
var bool: aux259_BOOL:: var_is_introduced ;
var {0,1}: aux259_INTEGER :: var_is_introduced ;
var bool: aux260_BOOL:: var_is_introduced ;
var {0,1}: aux260_INTEGER :: var_is_introduced ;
var bool: aux261_BOOL:: var_is_introduced ;
var {0,1}: aux261_INTEGER :: var_is_introduced ;
var bool: aux262_BOOL:: var_is_introduced ;
var {0,1}: aux262_INTEGER :: var_is_introduced ;
var bool: aux263_BOOL:: var_is_introduced ;
var {0,1}: aux263_INTEGER :: var_is_introduced ;
var bool: aux264_BOOL:: var_is_introduced ;
var {0,1}: aux264_INTEGER :: var_is_introduced ;
var bool: aux265_BOOL:: var_is_introduced ;
var {0,1}: aux265_INTEGER :: var_is_introduced ;
var bool: aux266_BOOL:: var_is_introduced ;
var {0,1}: aux266_INTEGER :: var_is_introduced ;
var bool: aux267_BOOL:: var_is_introduced ;
var {0,1}: aux267_INTEGER :: var_is_introduced ;
var bool: aux268_BOOL:: var_is_introduced ;
var {0,1}: aux268_INTEGER :: var_is_introduced ;
var bool: aux269_BOOL:: var_is_introduced ;
var {0,1}: aux269_INTEGER :: var_is_introduced ;
var bool: aux270_BOOL:: var_is_introduced ;
var {0,1}: aux270_INTEGER :: var_is_introduced ;
var bool: aux271_BOOL:: var_is_introduced ;
var {0,1}: aux271_INTEGER :: var_is_introduced ;
var bool: aux272_BOOL:: var_is_introduced ;
var {0,1}: aux272_INTEGER :: var_is_introduced ;
var bool: aux273_BOOL:: var_is_introduced ;
var {0,1}: aux273_INTEGER :: var_is_introduced ;
var bool: aux274_BOOL:: var_is_introduced ;
var {0,1}: aux274_INTEGER :: var_is_introduced ;
var bool: aux275_BOOL:: var_is_introduced ;
var {0,1}: aux275_INTEGER :: var_is_introduced ;
var bool: aux276_BOOL:: var_is_introduced ;
var {0,1}: aux276_INTEGER :: var_is_introduced ;
var bool: aux277_BOOL:: var_is_introduced ;
var {0,1}: aux277_INTEGER :: var_is_introduced ;
var bool: aux278_BOOL:: var_is_introduced ;
var {0,1}: aux278_INTEGER :: var_is_introduced ;
var bool: aux279_BOOL:: var_is_introduced ;
var {0,1}: aux279_INTEGER :: var_is_introduced ;
var bool: aux280_BOOL:: var_is_introduced ;
var {0,1}: aux280_INTEGER :: var_is_introduced ;
var bool: aux281_BOOL:: var_is_introduced ;
var {0,1}: aux281_INTEGER :: var_is_introduced ;
var bool: aux282_BOOL:: var_is_introduced ;
var {0,1}: aux282_INTEGER :: var_is_introduced ;
var bool: aux283_BOOL:: var_is_introduced ;
var {0,1}: aux283_INTEGER :: var_is_introduced ;
var bool: aux284_BOOL:: var_is_introduced ;
var {0,1}: aux284_INTEGER :: var_is_introduced ;
var bool: aux285_BOOL:: var_is_introduced ;
var {0,1}: aux285_INTEGER :: var_is_introduced ;
var bool: aux286_BOOL:: var_is_introduced ;
var {0,1}: aux286_INTEGER :: var_is_introduced ;
var bool: aux287_BOOL:: var_is_introduced ;
var {0,1}: aux287_INTEGER :: var_is_introduced ;
var bool: aux288_BOOL:: var_is_introduced ;
var {0,1}: aux288_INTEGER :: var_is_introduced ;
var bool: aux289_BOOL:: var_is_introduced ;
var {0,1}: aux289_INTEGER :: var_is_introduced ;
var bool: aux290_BOOL:: var_is_introduced ;
var {0,1}: aux290_INTEGER :: var_is_introduced ;
var bool: aux291_BOOL:: var_is_introduced ;
var {0,1}: aux291_INTEGER :: var_is_introduced ;
var bool: aux292_BOOL:: var_is_introduced ;
var {0,1}: aux292_INTEGER :: var_is_introduced ;
var bool: aux293_BOOL:: var_is_introduced ;
var {0,1}: aux293_INTEGER :: var_is_introduced ;
var bool: aux294_BOOL:: var_is_introduced ;
var {0,1}: aux294_INTEGER :: var_is_introduced ;
var bool: aux295_BOOL:: var_is_introduced ;
var {0,1}: aux295_INTEGER :: var_is_introduced ;
var bool: aux296_BOOL:: var_is_introduced ;
var {0,1}: aux296_INTEGER :: var_is_introduced ;
var bool: aux297_BOOL:: var_is_introduced ;
var {0,1}: aux297_INTEGER :: var_is_introduced ;
var bool: aux298_BOOL:: var_is_introduced ;
var {0,1}: aux298_INTEGER :: var_is_introduced ;
var bool: aux299_BOOL:: var_is_introduced ;
var {0,1}: aux299_INTEGER :: var_is_introduced ;
var bool: aux300_BOOL:: var_is_introduced ;
var {0,1}: aux300_INTEGER :: var_is_introduced ;
var bool: aux301_BOOL:: var_is_introduced ;
var {0,1}: aux301_INTEGER :: var_is_introduced ;
var bool: aux302_BOOL:: var_is_introduced ;
var {0,1}: aux302_INTEGER :: var_is_introduced ;
var bool: aux303_BOOL:: var_is_introduced ;
var {0,1}: aux303_INTEGER :: var_is_introduced ;
var bool: aux304_BOOL:: var_is_introduced ;
var {0,1}: aux304_INTEGER :: var_is_introduced ;
var bool: aux305_BOOL:: var_is_introduced ;
var {0,1}: aux305_INTEGER :: var_is_introduced ;
var bool: aux306_BOOL:: var_is_introduced ;
var {0,1}: aux306_INTEGER :: var_is_introduced ;
var bool: aux307_BOOL:: var_is_introduced ;
var {0,1}: aux307_INTEGER :: var_is_introduced ;
var bool: aux308_BOOL:: var_is_introduced ;
var {0,1}: aux308_INTEGER :: var_is_introduced ;
var bool: aux309_BOOL:: var_is_introduced ;
var {0,1}: aux309_INTEGER :: var_is_introduced ;
var bool: aux310_BOOL:: var_is_introduced ;
var {0,1}: aux310_INTEGER :: var_is_introduced ;
var bool: aux311_BOOL:: var_is_introduced ;
var {0,1}: aux311_INTEGER :: var_is_introduced ;
var bool: aux312_BOOL:: var_is_introduced ;
var {0,1}: aux312_INTEGER :: var_is_introduced ;
var bool: aux313_BOOL:: var_is_introduced ;
var {0,1}: aux313_INTEGER :: var_is_introduced ;
var bool: aux314_BOOL:: var_is_introduced ;
var {0,1}: aux314_INTEGER :: var_is_introduced ;
var bool: aux315_BOOL:: var_is_introduced ;
var {0,1}: aux315_INTEGER :: var_is_introduced ;
var bool: aux316_BOOL:: var_is_introduced ;
var {0,1}: aux316_INTEGER :: var_is_introduced ;
var bool: aux317_BOOL:: var_is_introduced ;
var {0,1}: aux317_INTEGER :: var_is_introduced ;
var bool: aux318_BOOL:: var_is_introduced ;
var {0,1}: aux318_INTEGER :: var_is_introduced ;
var bool: aux319_BOOL:: var_is_introduced ;
var {0,1}: aux319_INTEGER :: var_is_introduced ;
var bool: aux320_BOOL:: var_is_introduced ;
var {0,1}: aux320_INTEGER :: var_is_introduced ;
var bool: aux321_BOOL:: var_is_introduced ;
var {0,1}: aux321_INTEGER :: var_is_introduced ;
var bool: aux322_BOOL:: var_is_introduced ;
var {0,1}: aux322_INTEGER :: var_is_introduced ;
var bool: aux323_BOOL:: var_is_introduced ;
var {0,1}: aux323_INTEGER :: var_is_introduced ;
var bool: aux324_BOOL:: var_is_introduced ;
var {0,1}: aux324_INTEGER :: var_is_introduced ;
var bool: aux325_BOOL:: var_is_introduced ;
var {0,1}: aux325_INTEGER :: var_is_introduced ;
var bool: aux326_BOOL:: var_is_introduced ;
var {0,1}: aux326_INTEGER :: var_is_introduced ;
var bool: aux327_BOOL:: var_is_introduced ;
var {0,1}: aux327_INTEGER :: var_is_introduced ;
var bool: aux328_BOOL:: var_is_introduced ;
var {0,1}: aux328_INTEGER :: var_is_introduced ;
var bool: aux329_BOOL:: var_is_introduced ;
var {0,1}: aux329_INTEGER :: var_is_introduced ;
var bool: aux330_BOOL:: var_is_introduced ;
var {0,1}: aux330_INTEGER :: var_is_introduced ;
var bool: aux331_BOOL:: var_is_introduced ;
var {0,1}: aux331_INTEGER :: var_is_introduced ;
var bool: aux332_BOOL:: var_is_introduced ;
var {0,1}: aux332_INTEGER :: var_is_introduced ;
var bool: aux333_BOOL:: var_is_introduced ;
var {0,1}: aux333_INTEGER :: var_is_introduced ;
var bool: aux334_BOOL:: var_is_introduced ;
var {0,1}: aux334_INTEGER :: var_is_introduced ;
var bool: aux335_BOOL:: var_is_introduced ;
var {0,1}: aux335_INTEGER :: var_is_introduced ;
var bool: aux336_BOOL:: var_is_introduced ;
var {0,1}: aux336_INTEGER :: var_is_introduced ;
var bool: aux337_BOOL:: var_is_introduced ;
var {0,1}: aux337_INTEGER :: var_is_introduced ;
var bool: aux338_BOOL:: var_is_introduced ;
var {0,1}: aux338_INTEGER :: var_is_introduced ;
var bool: aux339_BOOL:: var_is_introduced ;
var {0,1}: aux339_INTEGER :: var_is_introduced ;
var bool: aux340_BOOL:: var_is_introduced ;
var {0,1}: aux340_INTEGER :: var_is_introduced ;
var bool: aux341_BOOL:: var_is_introduced ;
var {0,1}: aux341_INTEGER :: var_is_introduced ;
var bool: aux342_BOOL:: var_is_introduced ;
var {0,1}: aux342_INTEGER :: var_is_introduced ;
var bool: aux343_BOOL:: var_is_introduced ;
var {0,1}: aux343_INTEGER :: var_is_introduced ;
var bool: aux344_BOOL:: var_is_introduced ;
var {0,1}: aux344_INTEGER :: var_is_introduced ;
var bool: aux345_BOOL:: var_is_introduced ;
var {0,1}: aux345_INTEGER :: var_is_introduced ;
var bool: aux346_BOOL:: var_is_introduced ;
var {0,1}: aux346_INTEGER :: var_is_introduced ;
var bool: aux347_BOOL:: var_is_introduced ;
var {0,1}: aux347_INTEGER :: var_is_introduced ;
var bool: aux348_BOOL:: var_is_introduced ;
var {0,1}: aux348_INTEGER :: var_is_introduced ;
var bool: aux349_BOOL:: var_is_introduced ;
var {0,1}: aux349_INTEGER :: var_is_introduced ;
var bool: aux350_BOOL:: var_is_introduced ;
var {0,1}: aux350_INTEGER :: var_is_introduced ;
var bool: aux351_BOOL:: var_is_introduced ;
var {0,1}: aux351_INTEGER :: var_is_introduced ;
var bool: aux352_BOOL:: var_is_introduced ;
var {0,1}: aux352_INTEGER :: var_is_introduced ;
var bool: aux353_BOOL:: var_is_introduced ;
var {0,1}: aux353_INTEGER :: var_is_introduced ;
var bool: aux354_BOOL:: var_is_introduced ;
var {0,1}: aux354_INTEGER :: var_is_introduced ;
var bool: aux355_BOOL:: var_is_introduced ;
var {0,1}: aux355_INTEGER :: var_is_introduced ;
var bool: aux356_BOOL:: var_is_introduced ;
var {0,1}: aux356_INTEGER :: var_is_introduced ;
var bool: aux357_BOOL:: var_is_introduced ;
var {0,1}: aux357_INTEGER :: var_is_introduced ;
var bool: aux358_BOOL:: var_is_introduced ;
var {0,1}: aux358_INTEGER :: var_is_introduced ;
var bool: aux359_BOOL:: var_is_introduced ;
var {0,1}: aux359_INTEGER :: var_is_introduced ;
var bool: aux360_BOOL:: var_is_introduced ;
var {0,1}: aux360_INTEGER :: var_is_introduced ;
var bool: aux361_BOOL:: var_is_introduced ;
var {0,1}: aux361_INTEGER :: var_is_introduced ;
var bool: aux362_BOOL:: var_is_introduced ;
var {0,1}: aux362_INTEGER :: var_is_introduced ;
var bool: aux363_BOOL:: var_is_introduced ;
var {0,1}: aux363_INTEGER :: var_is_introduced ;
var bool: aux364_BOOL:: var_is_introduced ;
var {0,1}: aux364_INTEGER :: var_is_introduced ;
var bool: aux365_BOOL:: var_is_introduced ;
var {0,1}: aux365_INTEGER :: var_is_introduced ;
var bool: aux366_BOOL:: var_is_introduced ;
var {0,1}: aux366_INTEGER :: var_is_introduced ;
var bool: aux367_BOOL:: var_is_introduced ;
var {0,1}: aux367_INTEGER :: var_is_introduced ;
var bool: aux368_BOOL:: var_is_introduced ;
var {0,1}: aux368_INTEGER :: var_is_introduced ;
var bool: aux369_BOOL:: var_is_introduced ;
var {0,1}: aux369_INTEGER :: var_is_introduced ;
var bool: aux370_BOOL:: var_is_introduced ;
var {0,1}: aux370_INTEGER :: var_is_introduced ;
var bool: aux371_BOOL:: var_is_introduced ;
var {0,1}: aux371_INTEGER :: var_is_introduced ;
var bool: aux372_BOOL:: var_is_introduced ;
var {0,1}: aux372_INTEGER :: var_is_introduced ;
var bool: aux373_BOOL:: var_is_introduced ;
var {0,1}: aux373_INTEGER :: var_is_introduced ;
var bool: aux374_BOOL:: var_is_introduced ;
var {0,1}: aux374_INTEGER :: var_is_introduced ;
var bool: aux375_BOOL:: var_is_introduced ;
var {0,1}: aux375_INTEGER :: var_is_introduced ;
var bool: aux376_BOOL:: var_is_introduced ;
var {0,1}: aux376_INTEGER :: var_is_introduced ;
var bool: aux377_BOOL:: var_is_introduced ;
var {0,1}: aux377_INTEGER :: var_is_introduced ;
var bool: aux378_BOOL:: var_is_introduced ;
var {0,1}: aux378_INTEGER :: var_is_introduced ;
var bool: aux379_BOOL:: var_is_introduced ;
var {0,1}: aux379_INTEGER :: var_is_introduced ;
var bool: aux380_BOOL:: var_is_introduced ;
var {0,1}: aux380_INTEGER :: var_is_introduced ;
var bool: aux381_BOOL:: var_is_introduced ;
var {0,1}: aux381_INTEGER :: var_is_introduced ;
var bool: aux382_BOOL:: var_is_introduced ;
var {0,1}: aux382_INTEGER :: var_is_introduced ;
var bool: aux383_BOOL:: var_is_introduced ;
var {0,1}: aux383_INTEGER :: var_is_introduced ;
var bool: aux384_BOOL:: var_is_introduced ;
var {0,1}: aux384_INTEGER :: var_is_introduced ;
var bool: aux385_BOOL:: var_is_introduced ;
var {0,1}: aux385_INTEGER :: var_is_introduced ;
var bool: aux386_BOOL:: var_is_introduced ;
var {0,1}: aux386_INTEGER :: var_is_introduced ;
var bool: aux387_BOOL:: var_is_introduced ;
var {0,1}: aux387_INTEGER :: var_is_introduced ;
var bool: aux388_BOOL:: var_is_introduced ;
var {0,1}: aux388_INTEGER :: var_is_introduced ;
var bool: aux389_BOOL:: var_is_introduced ;
var {0,1}: aux389_INTEGER :: var_is_introduced ;
var bool: aux390_BOOL:: var_is_introduced ;
var {0,1}: aux390_INTEGER :: var_is_introduced ;
var bool: aux391_BOOL:: var_is_introduced ;
var {0,1}: aux391_INTEGER :: var_is_introduced ;
var bool: aux392_BOOL:: var_is_introduced ;
var {0,1}: aux392_INTEGER :: var_is_introduced ;
var bool: aux393_BOOL:: var_is_introduced ;
var {0,1}: aux393_INTEGER :: var_is_introduced ;
var bool: aux394_BOOL:: var_is_introduced ;
var {0,1}: aux394_INTEGER :: var_is_introduced ;
var bool: aux395_BOOL:: var_is_introduced ;
var {0,1}: aux395_INTEGER :: var_is_introduced ;
var bool: aux396_BOOL:: var_is_introduced ;
var {0,1}: aux396_INTEGER :: var_is_introduced ;
var bool: aux397_BOOL:: var_is_introduced ;
var bool: aux398_BOOL:: var_is_introduced ;
var {0,1}: aux398_INTEGER :: var_is_introduced ;
var bool: aux399_BOOL:: var_is_introduced ;
var bool: aux400_BOOL:: var_is_introduced ;
var bool: aux401_BOOL:: var_is_introduced ;
var {0,1}: aux401_INTEGER :: var_is_introduced ;
var bool: aux402_BOOL:: var_is_introduced ;
var bool: aux403_BOOL:: var_is_introduced ;
var bool: aux404_BOOL:: var_is_introduced ;
var bool: aux406_BOOL:: var_is_introduced ;
var bool: aux407_BOOL:: var_is_introduced ;
var {0,1}: aux407_INTEGER :: var_is_introduced ;
var bool: aux408_BOOL:: var_is_introduced ;
var {0,1}: aux408_INTEGER :: var_is_introduced ;
var bool: aux410_BOOL:: var_is_introduced ;
var {0,1}: aux410_INTEGER :: var_is_introduced ;
var bool: aux411_BOOL:: var_is_introduced ;
var {0,1}: aux411_INTEGER :: var_is_introduced ;
var bool: aux413_BOOL:: var_is_introduced ;
var {0,1}: aux413_INTEGER :: var_is_introduced ;
var bool: aux415_BOOL:: var_is_introduced ;
var {0,1}: aux415_INTEGER :: var_is_introduced ;
var bool: aux417_BOOL:: var_is_introduced ;
var {0,1}: aux417_INTEGER :: var_is_introduced ;
var bool: aux421_BOOL:: var_is_introduced ;
var {0,1}: aux421_INTEGER :: var_is_introduced ;
var bool: aux422_BOOL:: var_is_introduced ;
var {0,1}: aux422_INTEGER :: var_is_introduced ;
var bool: aux424_BOOL:: var_is_introduced ;
var {0,1}: aux424_INTEGER :: var_is_introduced ;
var bool: aux425_BOOL:: var_is_introduced ;
var {0,1}: aux425_INTEGER :: var_is_introduced ;
var bool: aux427_BOOL:: var_is_introduced ;
var {0,1}: aux427_INTEGER :: var_is_introduced ;
var bool: aux429_BOOL:: var_is_introduced ;
var {0,1}: aux429_INTEGER :: var_is_introduced ;
var bool: aux431_BOOL:: var_is_introduced ;
var {0,1}: aux431_INTEGER :: var_is_introduced ;
var bool: aux435_BOOL:: var_is_introduced ;
var {0,1}: aux435_INTEGER :: var_is_introduced ;
var bool: aux436_BOOL:: var_is_introduced ;
var {0,1}: aux436_INTEGER :: var_is_introduced ;
var bool: aux438_BOOL:: var_is_introduced ;
var {0,1}: aux438_INTEGER :: var_is_introduced ;
var bool: aux439_BOOL:: var_is_introduced ;
var {0,1}: aux439_INTEGER :: var_is_introduced ;
var bool: aux441_BOOL:: var_is_introduced ;
var {0,1}: aux441_INTEGER :: var_is_introduced ;
var bool: aux443_BOOL:: var_is_introduced ;
var {0,1}: aux443_INTEGER :: var_is_introduced ;
var bool: aux445_BOOL:: var_is_introduced ;
var {0,1}: aux445_INTEGER :: var_is_introduced ;
var bool: aux449_BOOL:: var_is_introduced ;
var {0,1}: aux449_INTEGER :: var_is_introduced ;
var bool: aux450_BOOL:: var_is_introduced ;
var {0,1}: aux450_INTEGER :: var_is_introduced ;
var bool: aux452_BOOL:: var_is_introduced ;
var {0,1}: aux452_INTEGER :: var_is_introduced ;
var bool: aux453_BOOL:: var_is_introduced ;
var {0,1}: aux453_INTEGER :: var_is_introduced ;
var bool: aux455_BOOL:: var_is_introduced ;
var {0,1}: aux455_INTEGER :: var_is_introduced ;
var bool: aux457_BOOL:: var_is_introduced ;
var {0,1}: aux457_INTEGER :: var_is_introduced ;
var bool: aux459_BOOL:: var_is_introduced ;
var {0,1}: aux459_INTEGER :: var_is_introduced ;
var bool: aux463_BOOL:: var_is_introduced ;
var {0,1}: aux463_INTEGER :: var_is_introduced ;
var bool: aux464_BOOL:: var_is_introduced ;
var {0,1}: aux464_INTEGER :: var_is_introduced ;
var bool: aux466_BOOL:: var_is_introduced ;
var {0,1}: aux466_INTEGER :: var_is_introduced ;
var bool: aux467_BOOL:: var_is_introduced ;
var {0,1}: aux467_INTEGER :: var_is_introduced ;
var bool: aux469_BOOL:: var_is_introduced ;
var {0,1}: aux469_INTEGER :: var_is_introduced ;
var bool: aux471_BOOL:: var_is_introduced ;
var {0,1}: aux471_INTEGER :: var_is_introduced ;
var bool: aux473_BOOL:: var_is_introduced ;
var {0,1}: aux473_INTEGER :: var_is_introduced ;
var bool: aux477_BOOL:: var_is_introduced ;
var {0,1}: aux477_INTEGER :: var_is_introduced ;
var bool: aux478_BOOL:: var_is_introduced ;
var {0,1}: aux478_INTEGER :: var_is_introduced ;
var bool: aux480_BOOL:: var_is_introduced ;
var {0,1}: aux480_INTEGER :: var_is_introduced ;
var bool: aux481_BOOL:: var_is_introduced ;
var {0,1}: aux481_INTEGER :: var_is_introduced ;
var bool: aux483_BOOL:: var_is_introduced ;
var {0,1}: aux483_INTEGER :: var_is_introduced ;
var bool: aux485_BOOL:: var_is_introduced ;
var {0,1}: aux485_INTEGER :: var_is_introduced ;
var bool: aux487_BOOL:: var_is_introduced ;
var {0,1}: aux487_INTEGER :: var_is_introduced ;
var bool: aux491_BOOL:: var_is_introduced ;
var {0,1}: aux491_INTEGER :: var_is_introduced ;
var bool: aux492_BOOL:: var_is_introduced ;
var {0,1}: aux492_INTEGER :: var_is_introduced ;
var bool: aux494_BOOL:: var_is_introduced ;
var {0,1}: aux494_INTEGER :: var_is_introduced ;
var bool: aux495_BOOL:: var_is_introduced ;
var {0,1}: aux495_INTEGER :: var_is_introduced ;
var bool: aux497_BOOL:: var_is_introduced ;
var {0,1}: aux497_INTEGER :: var_is_introduced ;
var bool: aux499_BOOL:: var_is_introduced ;
var {0,1}: aux499_INTEGER :: var_is_introduced ;
var bool: aux501_BOOL:: var_is_introduced ;
var {0,1}: aux501_INTEGER :: var_is_introduced ;
var bool: aux505_BOOL:: var_is_introduced ;
var {0,1}: aux505_INTEGER :: var_is_introduced ;
var bool: aux506_BOOL:: var_is_introduced ;
var {0,1}: aux506_INTEGER :: var_is_introduced ;
var bool: aux508_BOOL:: var_is_introduced ;
var {0,1}: aux508_INTEGER :: var_is_introduced ;
var bool: aux509_BOOL:: var_is_introduced ;
var {0,1}: aux509_INTEGER :: var_is_introduced ;
var bool: aux511_BOOL:: var_is_introduced ;
var {0,1}: aux511_INTEGER :: var_is_introduced ;
var bool: aux513_BOOL:: var_is_introduced ;
var {0,1}: aux513_INTEGER :: var_is_introduced ;
var bool: aux515_BOOL:: var_is_introduced ;
var {0,1}: aux515_INTEGER :: var_is_introduced ;
var bool: aux519_BOOL:: var_is_introduced ;
var {0,1}: aux519_INTEGER :: var_is_introduced ;
var bool: aux520_BOOL:: var_is_introduced ;
var {0,1}: aux520_INTEGER :: var_is_introduced ;
var bool: aux522_BOOL:: var_is_introduced ;
var {0,1}: aux522_INTEGER :: var_is_introduced ;
var bool: aux523_BOOL:: var_is_introduced ;
var {0,1}: aux523_INTEGER :: var_is_introduced ;
var bool: aux525_BOOL:: var_is_introduced ;
var {0,1}: aux525_INTEGER :: var_is_introduced ;
var bool: aux527_BOOL:: var_is_introduced ;
var {0,1}: aux527_INTEGER :: var_is_introduced ;
var bool: aux529_BOOL:: var_is_introduced ;
var {0,1}: aux529_INTEGER :: var_is_introduced ;
var bool: aux533_BOOL:: var_is_introduced ;
var {0,1}: aux533_INTEGER :: var_is_introduced ;
var bool: aux534_BOOL:: var_is_introduced ;
var {0,1}: aux534_INTEGER :: var_is_introduced ;
var bool: aux536_BOOL:: var_is_introduced ;
var {0,1}: aux536_INTEGER :: var_is_introduced ;
var bool: aux537_BOOL:: var_is_introduced ;
var {0,1}: aux537_INTEGER :: var_is_introduced ;
var bool: aux539_BOOL:: var_is_introduced ;
var {0,1}: aux539_INTEGER :: var_is_introduced ;
var bool: aux541_BOOL:: var_is_introduced ;
var {0,1}: aux541_INTEGER :: var_is_introduced ;
var bool: aux543_BOOL:: var_is_introduced ;
var {0,1}: aux543_INTEGER :: var_is_introduced ;
var bool: aux547_BOOL:: var_is_introduced ;
var {0,1}: aux547_INTEGER :: var_is_introduced ;
var bool: aux548_BOOL:: var_is_introduced ;
var {0,1}: aux548_INTEGER :: var_is_introduced ;
var bool: aux550_BOOL:: var_is_introduced ;
var {0,1}: aux550_INTEGER :: var_is_introduced ;
var bool: aux551_BOOL:: var_is_introduced ;
var {0,1}: aux551_INTEGER :: var_is_introduced ;
var bool: aux553_BOOL:: var_is_introduced ;
var {0,1}: aux553_INTEGER :: var_is_introduced ;
var bool: aux555_BOOL:: var_is_introduced ;
var {0,1}: aux555_INTEGER :: var_is_introduced ;
var bool: aux557_BOOL:: var_is_introduced ;
var {0,1}: aux557_INTEGER :: var_is_introduced ;
var bool: aux561_BOOL:: var_is_introduced ;
var {0,1}: aux561_INTEGER :: var_is_introduced ;
var bool: aux562_BOOL:: var_is_introduced ;
var {0,1}: aux562_INTEGER :: var_is_introduced ;
var bool: aux564_BOOL:: var_is_introduced ;
var {0,1}: aux564_INTEGER :: var_is_introduced ;
var bool: aux565_BOOL:: var_is_introduced ;
var {0,1}: aux565_INTEGER :: var_is_introduced ;
var bool: aux567_BOOL:: var_is_introduced ;
var {0,1}: aux567_INTEGER :: var_is_introduced ;
var bool: aux569_BOOL:: var_is_introduced ;
var {0,1}: aux569_INTEGER :: var_is_introduced ;
var bool: aux571_BOOL:: var_is_introduced ;
var {0,1}: aux571_INTEGER :: var_is_introduced ;
var bool: aux575_BOOL:: var_is_introduced ;
var {0,1}: aux575_INTEGER :: var_is_introduced ;
var bool: aux576_BOOL:: var_is_introduced ;
var {0,1}: aux576_INTEGER :: var_is_introduced ;
var bool: aux578_BOOL:: var_is_introduced ;
var {0,1}: aux578_INTEGER :: var_is_introduced ;
var bool: aux579_BOOL:: var_is_introduced ;
var {0,1}: aux579_INTEGER :: var_is_introduced ;
var bool: aux581_BOOL:: var_is_introduced ;
var {0,1}: aux581_INTEGER :: var_is_introduced ;
var bool: aux583_BOOL:: var_is_introduced ;
var {0,1}: aux583_INTEGER :: var_is_introduced ;
var bool: aux585_BOOL:: var_is_introduced ;
var {0,1}: aux585_INTEGER :: var_is_introduced ;
var bool: aux589_BOOL:: var_is_introduced ;
var {0,1}: aux589_INTEGER :: var_is_introduced ;
var bool: aux590_BOOL:: var_is_introduced ;
var {0,1}: aux590_INTEGER :: var_is_introduced ;
var bool: aux592_BOOL:: var_is_introduced ;
var {0,1}: aux592_INTEGER :: var_is_introduced ;
var bool: aux593_BOOL:: var_is_introduced ;
var {0,1}: aux593_INTEGER :: var_is_introduced ;
var bool: aux595_BOOL:: var_is_introduced ;
var {0,1}: aux595_INTEGER :: var_is_introduced ;
var bool: aux597_BOOL:: var_is_introduced ;
var {0,1}: aux597_INTEGER :: var_is_introduced ;
var bool: aux599_BOOL:: var_is_introduced ;
var {0,1}: aux599_INTEGER :: var_is_introduced ;
var bool: aux603_BOOL:: var_is_introduced ;
var {0,1}: aux603_INTEGER :: var_is_introduced ;
var bool: aux604_BOOL:: var_is_introduced ;
var {0,1}: aux604_INTEGER :: var_is_introduced ;
var bool: aux606_BOOL:: var_is_introduced ;
var {0,1}: aux606_INTEGER :: var_is_introduced ;
var bool: aux607_BOOL:: var_is_introduced ;
var {0,1}: aux607_INTEGER :: var_is_introduced ;
var bool: aux609_BOOL:: var_is_introduced ;
var {0,1}: aux609_INTEGER :: var_is_introduced ;
var bool: aux611_BOOL:: var_is_introduced ;
var {0,1}: aux611_INTEGER :: var_is_introduced ;
var bool: aux613_BOOL:: var_is_introduced ;
var {0,1}: aux613_INTEGER :: var_is_introduced ;
var bool: aux617_BOOL:: var_is_introduced ;
var {0,1}: aux617_INTEGER :: var_is_introduced ;
var bool: aux618_BOOL:: var_is_introduced ;
var {0,1}: aux618_INTEGER :: var_is_introduced ;
var bool: aux620_BOOL:: var_is_introduced ;
var {0,1}: aux620_INTEGER :: var_is_introduced ;
var bool: aux621_BOOL:: var_is_introduced ;
var {0,1}: aux621_INTEGER :: var_is_introduced ;
var bool: aux623_BOOL:: var_is_introduced ;
var {0,1}: aux623_INTEGER :: var_is_introduced ;
var bool: aux625_BOOL:: var_is_introduced ;
var {0,1}: aux625_INTEGER :: var_is_introduced ;
var bool: aux627_BOOL:: var_is_introduced ;
var {0,1}: aux627_INTEGER :: var_is_introduced ;
var bool: aux631_BOOL:: var_is_introduced ;
var {0,1}: aux631_INTEGER :: var_is_introduced ;
var bool: aux632_BOOL:: var_is_introduced ;
var {0,1}: aux632_INTEGER :: var_is_introduced ;
var bool: aux634_BOOL:: var_is_introduced ;
var {0,1}: aux634_INTEGER :: var_is_introduced ;
var bool: aux635_BOOL:: var_is_introduced ;
var {0,1}: aux635_INTEGER :: var_is_introduced ;
var bool: aux637_BOOL:: var_is_introduced ;
var {0,1}: aux637_INTEGER :: var_is_introduced ;
var bool: aux639_BOOL:: var_is_introduced ;
var {0,1}: aux639_INTEGER :: var_is_introduced ;
var bool: aux641_BOOL:: var_is_introduced ;
var {0,1}: aux641_INTEGER :: var_is_introduced ;
var bool: aux645_BOOL:: var_is_introduced ;
var {0,1}: aux645_INTEGER :: var_is_introduced ;
var bool: aux646_BOOL:: var_is_introduced ;
var {0,1}: aux646_INTEGER :: var_is_introduced ;
var bool: aux648_BOOL:: var_is_introduced ;
var {0,1}: aux648_INTEGER :: var_is_introduced ;
var bool: aux649_BOOL:: var_is_introduced ;
var {0,1}: aux649_INTEGER :: var_is_introduced ;
var bool: aux651_BOOL:: var_is_introduced ;
var {0,1}: aux651_INTEGER :: var_is_introduced ;
var bool: aux653_BOOL:: var_is_introduced ;
var {0,1}: aux653_INTEGER :: var_is_introduced ;
var bool: aux655_BOOL:: var_is_introduced ;
var {0,1}: aux655_INTEGER :: var_is_introduced ;
var bool: aux659_BOOL:: var_is_introduced ;
var {0,1}: aux659_INTEGER :: var_is_introduced ;
var bool: aux660_BOOL:: var_is_introduced ;
var {0,1}: aux660_INTEGER :: var_is_introduced ;
var bool: aux662_BOOL:: var_is_introduced ;
var {0,1}: aux662_INTEGER :: var_is_introduced ;
var bool: aux663_BOOL:: var_is_introduced ;
var {0,1}: aux663_INTEGER :: var_is_introduced ;
var bool: aux665_BOOL:: var_is_introduced ;
var {0,1}: aux665_INTEGER :: var_is_introduced ;
var bool: aux667_BOOL:: var_is_introduced ;
var {0,1}: aux667_INTEGER :: var_is_introduced ;
var bool: aux669_BOOL:: var_is_introduced ;
var {0,1}: aux669_INTEGER :: var_is_introduced ;
var bool: aux673_BOOL:: var_is_introduced ;
var {0,1}: aux673_INTEGER :: var_is_introduced ;
var bool: aux674_BOOL:: var_is_introduced ;
var {0,1}: aux674_INTEGER :: var_is_introduced ;
var bool: aux676_BOOL:: var_is_introduced ;
var {0,1}: aux676_INTEGER :: var_is_introduced ;
var bool: aux677_BOOL:: var_is_introduced ;
var {0,1}: aux677_INTEGER :: var_is_introduced ;
var bool: aux679_BOOL:: var_is_introduced ;
var {0,1}: aux679_INTEGER :: var_is_introduced ;
var bool: aux681_BOOL:: var_is_introduced ;
var bool: aux682_BOOL:: var_is_introduced ;
var bool: aux683_BOOL:: var_is_introduced ;
var bool: aux684_BOOL:: var_is_introduced ;
var bool: aux685_BOOL:: var_is_introduced ;
var bool: aux686_BOOL:: var_is_introduced ;
var bool: aux687_BOOL:: var_is_introduced ;
var bool: aux688_BOOL:: var_is_introduced ;
var bool: aux689_BOOL:: var_is_introduced ;
var bool: aux690_BOOL:: var_is_introduced ;
var bool: aux691_BOOL:: var_is_introduced ;
var bool: aux692_BOOL:: var_is_introduced ;
var bool: aux693_BOOL:: var_is_introduced ;
var bool: aux694_BOOL:: var_is_introduced ;
var bool: aux695_BOOL:: var_is_introduced ;
var bool: aux696_BOOL:: var_is_introduced ;
var bool: aux697_BOOL:: var_is_introduced ;
var bool: aux698_BOOL:: var_is_introduced ;
var bool: aux699_BOOL:: var_is_introduced ;
var bool: aux700_BOOL:: var_is_introduced ;
var bool: aux701_BOOL:: var_is_introduced ;
var bool: aux702_BOOL:: var_is_introduced ;
var bool: aux703_BOOL:: var_is_introduced ;
var bool: aux704_BOOL:: var_is_introduced ;
var bool: aux705_BOOL:: var_is_introduced ;
var bool: aux706_BOOL:: var_is_introduced ;
var bool: aux707_BOOL:: var_is_introduced ;
var bool: aux708_BOOL:: var_is_introduced ;
var bool: aux709_BOOL:: var_is_introduced ;
var bool: aux710_BOOL:: var_is_introduced ;
var bool: aux711_BOOL:: var_is_introduced ;
var bool: aux712_BOOL:: var_is_introduced ;
var bool: aux713_BOOL:: var_is_introduced ;
var bool: aux714_BOOL:: var_is_introduced ;
var bool: aux715_BOOL:: var_is_introduced ;
var bool: aux716_BOOL:: var_is_introduced ;
var bool: aux717_BOOL:: var_is_introduced ;
var bool: aux718_BOOL:: var_is_introduced ;
var bool: aux719_BOOL:: var_is_introduced ;
var bool: aux720_BOOL:: var_is_introduced ;
var bool: aux721_BOOL:: var_is_introduced ;
var bool: aux722_BOOL:: var_is_introduced ;
var bool: aux723_BOOL:: var_is_introduced ;
var bool: aux724_BOOL:: var_is_introduced ;
var bool: aux725_BOOL:: var_is_introduced ;
var bool: aux726_BOOL:: var_is_introduced ;
var bool: aux727_BOOL:: var_is_introduced ;
var bool: aux728_BOOL:: var_is_introduced ;
var bool: aux729_BOOL:: var_is_introduced ;
var bool: aux730_BOOL:: var_is_introduced ;
var bool: aux731_BOOL:: var_is_introduced ;
var bool: aux732_BOOL:: var_is_introduced ;
var bool: aux733_BOOL:: var_is_introduced ;
var bool: aux734_BOOL:: var_is_introduced ;
var bool: aux735_BOOL:: var_is_introduced ;
var bool: aux736_BOOL:: var_is_introduced ;
var bool: aux737_BOOL:: var_is_introduced ;
var bool: aux738_BOOL:: var_is_introduced ;
var bool: aux739_BOOL:: var_is_introduced ;
var bool: aux740_BOOL:: var_is_introduced ;
var bool: aux741_BOOL:: var_is_introduced ;
var bool: aux742_BOOL:: var_is_introduced ;
var bool: aux743_BOOL:: var_is_introduced ;
var bool: aux744_BOOL:: var_is_introduced ;
var bool: aux745_BOOL:: var_is_introduced ;
var bool: aux746_BOOL:: var_is_introduced ;
var bool: aux747_BOOL:: var_is_introduced ;
var bool: aux748_BOOL:: var_is_introduced ;
var bool: aux749_BOOL:: var_is_introduced ;
var bool: aux750_BOOL:: var_is_introduced ;
var bool: aux751_BOOL:: var_is_introduced ;
var bool: aux752_BOOL:: var_is_introduced ;
var bool: aux753_BOOL:: var_is_introduced ;
var bool: aux754_BOOL:: var_is_introduced ;
var bool: aux755_BOOL:: var_is_introduced ;
var bool: aux756_BOOL:: var_is_introduced ;
var bool: aux757_BOOL:: var_is_introduced ;
var bool: aux758_BOOL:: var_is_introduced ;
var bool: aux759_BOOL:: var_is_introduced ;
var bool: aux760_BOOL:: var_is_introduced ;
var bool: aux761_BOOL:: var_is_introduced ;
var bool: aux762_BOOL:: var_is_introduced ;
var bool: aux763_BOOL:: var_is_introduced ;
var bool: aux764_BOOL:: var_is_introduced ;
var bool: aux765_BOOL:: var_is_introduced ;
var bool: aux766_BOOL:: var_is_introduced ;
var bool: aux767_BOOL:: var_is_introduced ;
var bool: aux768_BOOL:: var_is_introduced ;
var bool: aux769_BOOL:: var_is_introduced ;
var bool: aux770_BOOL:: var_is_introduced ;
var bool: aux771_BOOL:: var_is_introduced ;
var bool: aux772_BOOL:: var_is_introduced ;
var bool: aux773_BOOL:: var_is_introduced ;
var bool: aux774_BOOL:: var_is_introduced ;
var bool: aux775_BOOL:: var_is_introduced ;
var bool: aux776_BOOL:: var_is_introduced ;
var bool: aux777_BOOL:: var_is_introduced ;
var bool: aux778_BOOL:: var_is_introduced ;
var bool: aux779_BOOL:: var_is_introduced ;
var bool: aux780_BOOL:: var_is_introduced ;
var bool: aux781_BOOL:: var_is_introduced ;
var bool: aux782_BOOL:: var_is_introduced ;
var bool: aux783_BOOL:: var_is_introduced ;
var bool: aux784_BOOL:: var_is_introduced ;
var bool: aux785_BOOL:: var_is_introduced ;
var bool: aux786_BOOL:: var_is_introduced ;
var bool: aux787_BOOL:: var_is_introduced ;
var bool: aux788_BOOL:: var_is_introduced ;
var bool: aux789_BOOL:: var_is_introduced ;
var bool: aux790_BOOL:: var_is_introduced ;
var bool: aux791_BOOL:: var_is_introduced ;
var bool: aux792_BOOL:: var_is_introduced ;
var bool: aux793_BOOL:: var_is_introduced ;
var bool: aux794_BOOL:: var_is_introduced ;
var bool: aux795_BOOL:: var_is_introduced ;
var bool: aux796_BOOL:: var_is_introduced ;
var bool: aux797_BOOL:: var_is_introduced ;
var bool: aux798_BOOL:: var_is_introduced ;
constraint bool2int(aux0_BOOL,aux0_INTEGER);
constraint bool2int(aux1_BOOL,aux1_INTEGER);
constraint bool2int(aux2_BOOL,aux2_INTEGER);
constraint bool2int(aux3_BOOL,aux3_INTEGER);
constraint bool2int(aux4_BOOL,aux4_INTEGER);
constraint bool2int(aux5_BOOL,aux5_INTEGER);
constraint bool2int(aux6_BOOL,aux6_INTEGER);
constraint bool2int(aux7_BOOL,aux7_INTEGER);
constraint bool2int(aux8_BOOL,aux8_INTEGER);
constraint bool2int(aux9_BOOL,aux9_INTEGER);
constraint bool2int(aux10_BOOL,aux10_INTEGER);
constraint bool2int(aux11_BOOL,aux11_INTEGER);
constraint bool2int(aux12_BOOL,aux12_INTEGER);
constraint bool2int(aux13_BOOL,aux13_INTEGER);
constraint bool2int(aux14_BOOL,aux14_INTEGER);
constraint bool2int(aux15_BOOL,aux15_INTEGER);
constraint bool2int(aux16_BOOL,aux16_INTEGER);
constraint bool2int(aux17_BOOL,aux17_INTEGER);
constraint bool2int(aux18_BOOL,aux18_INTEGER);
constraint bool2int(aux19_BOOL,aux19_INTEGER);
constraint bool2int(aux20_BOOL,aux20_INTEGER);
constraint bool2int(aux21_BOOL,aux21_INTEGER);
constraint bool2int(aux22_BOOL,aux22_INTEGER);
constraint bool2int(aux23_BOOL,aux23_INTEGER);
constraint bool2int(aux24_BOOL,aux24_INTEGER);
constraint bool2int(aux25_BOOL,aux25_INTEGER);
constraint bool2int(aux26_BOOL,aux26_INTEGER);
constraint bool2int(aux27_BOOL,aux27_INTEGER);
constraint bool2int(aux28_BOOL,aux28_INTEGER);
constraint bool2int(aux29_BOOL,aux29_INTEGER);
constraint bool2int(aux30_BOOL,aux30_INTEGER);
constraint bool2int(aux31_BOOL,aux31_INTEGER);
constraint bool2int(aux32_BOOL,aux32_INTEGER);
constraint bool2int(aux33_BOOL,aux33_INTEGER);
constraint bool2int(aux34_BOOL,aux34_INTEGER);
constraint bool2int(aux35_BOOL,aux35_INTEGER);
constraint bool2int(aux36_BOOL,aux36_INTEGER);
constraint bool2int(aux37_BOOL,aux37_INTEGER);
constraint bool2int(aux38_BOOL,aux38_INTEGER);
constraint bool2int(aux39_BOOL,aux39_INTEGER);
constraint bool2int(aux40_BOOL,aux40_INTEGER);
constraint bool2int(aux41_BOOL,aux41_INTEGER);
constraint bool2int(aux42_BOOL,aux42_INTEGER);
constraint bool2int(aux43_BOOL,aux43_INTEGER);
constraint bool2int(aux44_BOOL,aux44_INTEGER);
constraint bool2int(aux45_BOOL,aux45_INTEGER);
constraint bool2int(aux46_BOOL,aux46_INTEGER);
constraint bool2int(aux47_BOOL,aux47_INTEGER);
constraint bool2int(aux48_BOOL,aux48_INTEGER);
constraint bool2int(aux49_BOOL,aux49_INTEGER);
constraint bool2int(aux50_BOOL,aux50_INTEGER);
constraint bool2int(aux51_BOOL,aux51_INTEGER);
constraint bool2int(aux52_BOOL,aux52_INTEGER);
constraint bool2int(aux53_BOOL,aux53_INTEGER);
constraint bool2int(aux54_BOOL,aux54_INTEGER);
constraint bool2int(aux55_BOOL,aux55_INTEGER);
constraint bool2int(aux56_BOOL,aux56_INTEGER);
constraint bool2int(aux57_BOOL,aux57_INTEGER);
constraint bool2int(aux58_BOOL,aux58_INTEGER);
constraint bool2int(aux59_BOOL,aux59_INTEGER);
constraint bool2int(aux60_BOOL,aux60_INTEGER);
constraint bool2int(aux61_BOOL,aux61_INTEGER);
constraint bool2int(aux62_BOOL,aux62_INTEGER);
constraint bool2int(aux63_BOOL,aux63_INTEGER);
constraint bool2int(aux64_BOOL,aux64_INTEGER);
constraint bool2int(aux65_BOOL,aux65_INTEGER);
constraint bool2int(aux66_BOOL,aux66_INTEGER);
constraint bool2int(aux67_BOOL,aux67_INTEGER);
constraint bool2int(aux68_BOOL,aux68_INTEGER);
constraint bool2int(aux69_BOOL,aux69_INTEGER);
constraint bool2int(aux70_BOOL,aux70_INTEGER);
constraint bool2int(aux71_BOOL,aux71_INTEGER);
constraint bool2int(aux72_BOOL,aux72_INTEGER);
constraint bool2int(aux73_BOOL,aux73_INTEGER);
constraint bool2int(aux74_BOOL,aux74_INTEGER);
constraint bool2int(aux75_BOOL,aux75_INTEGER);
constraint bool2int(aux76_BOOL,aux76_INTEGER);
constraint bool2int(aux77_BOOL,aux77_INTEGER);
constraint bool2int(aux78_BOOL,aux78_INTEGER);
constraint bool2int(aux79_BOOL,aux79_INTEGER);
constraint bool2int(aux80_BOOL,aux80_INTEGER);
constraint bool2int(aux81_BOOL,aux81_INTEGER);
constraint bool2int(aux82_BOOL,aux82_INTEGER);
constraint bool2int(aux83_BOOL,aux83_INTEGER);
constraint bool2int(aux84_BOOL,aux84_INTEGER);
constraint bool2int(aux85_BOOL,aux85_INTEGER);
constraint bool2int(aux86_BOOL,aux86_INTEGER);
constraint bool2int(aux87_BOOL,aux87_INTEGER);
constraint bool2int(aux88_BOOL,aux88_INTEGER);
constraint bool2int(aux89_BOOL,aux89_INTEGER);
constraint bool2int(aux90_BOOL,aux90_INTEGER);
constraint bool2int(aux91_BOOL,aux91_INTEGER);
constraint bool2int(aux92_BOOL,aux92_INTEGER);
constraint bool2int(aux93_BOOL,aux93_INTEGER);
constraint bool2int(aux94_BOOL,aux94_INTEGER);
constraint bool2int(aux95_BOOL,aux95_INTEGER);
constraint bool2int(aux96_BOOL,aux96_INTEGER);
constraint bool2int(aux97_BOOL,aux97_INTEGER);
constraint bool2int(aux98_BOOL,aux98_INTEGER);
constraint bool2int(aux99_BOOL,aux99_INTEGER);
constraint bool2int(aux100_BOOL,aux100_INTEGER);
constraint bool2int(aux101_BOOL,aux101_INTEGER);
constraint bool2int(aux102_BOOL,aux102_INTEGER);
constraint bool2int(aux103_BOOL,aux103_INTEGER);
constraint bool2int(aux104_BOOL,aux104_INTEGER);
constraint bool2int(aux105_BOOL,aux105_INTEGER);
constraint bool2int(aux106_BOOL,aux106_INTEGER);
constraint bool2int(aux107_BOOL,aux107_INTEGER);
constraint bool2int(aux108_BOOL,aux108_INTEGER);
constraint bool2int(aux109_BOOL,aux109_INTEGER);
constraint bool2int(aux110_BOOL,aux110_INTEGER);
constraint bool2int(aux111_BOOL,aux111_INTEGER);
constraint bool2int(aux112_BOOL,aux112_INTEGER);
constraint bool2int(aux113_BOOL,aux113_INTEGER);
constraint bool2int(aux114_BOOL,aux114_INTEGER);
constraint bool2int(aux115_BOOL,aux115_INTEGER);
constraint bool2int(aux116_BOOL,aux116_INTEGER);
constraint bool2int(aux117_BOOL,aux117_INTEGER);
constraint bool2int(aux118_BOOL,aux118_INTEGER);
constraint bool2int(aux119_BOOL,aux119_INTEGER);
constraint bool2int(aux120_BOOL,aux120_INTEGER);
constraint bool2int(aux121_BOOL,aux121_INTEGER);
constraint bool2int(aux122_BOOL,aux122_INTEGER);
constraint bool2int(aux123_BOOL,aux123_INTEGER);
constraint bool2int(aux124_BOOL,aux124_INTEGER);
constraint bool2int(aux125_BOOL,aux125_INTEGER);
constraint bool2int(aux126_BOOL,aux126_INTEGER);
constraint bool2int(aux127_BOOL,aux127_INTEGER);
constraint bool2int(aux128_BOOL,aux128_INTEGER);
constraint bool2int(aux129_BOOL,aux129_INTEGER);
constraint bool2int(aux130_BOOL,aux130_INTEGER);
constraint bool2int(aux131_BOOL,aux131_INTEGER);
constraint bool2int(aux132_BOOL,aux132_INTEGER);
constraint bool2int(aux133_BOOL,aux133_INTEGER);
constraint bool2int(aux134_BOOL,aux134_INTEGER);
constraint bool2int(aux135_BOOL,aux135_INTEGER);
constraint bool2int(aux136_BOOL,aux136_INTEGER);
constraint bool2int(aux137_BOOL,aux137_INTEGER);
constraint bool2int(aux138_BOOL,aux138_INTEGER);
constraint bool2int(aux139_BOOL,aux139_INTEGER);
constraint bool2int(aux140_BOOL,aux140_INTEGER);
constraint bool2int(aux141_BOOL,aux141_INTEGER);
constraint bool2int(aux142_BOOL,aux142_INTEGER);
constraint bool2int(aux143_BOOL,aux143_INTEGER);
constraint bool2int(aux144_BOOL,aux144_INTEGER);
constraint bool2int(aux145_BOOL,aux145_INTEGER);
constraint bool2int(aux146_BOOL,aux146_INTEGER);
constraint bool2int(aux147_BOOL,aux147_INTEGER);
constraint bool2int(aux148_BOOL,aux148_INTEGER);
constraint bool2int(aux149_BOOL,aux149_INTEGER);
constraint bool2int(aux150_BOOL,aux150_INTEGER);
constraint bool2int(aux151_BOOL,aux151_INTEGER);
constraint bool2int(aux152_BOOL,aux152_INTEGER);
constraint bool2int(aux153_BOOL,aux153_INTEGER);
constraint bool2int(aux154_BOOL,aux154_INTEGER);
constraint bool2int(aux155_BOOL,aux155_INTEGER);
constraint bool2int(aux156_BOOL,aux156_INTEGER);
constraint bool2int(aux157_BOOL,aux157_INTEGER);
constraint bool2int(aux158_BOOL,aux158_INTEGER);
constraint bool2int(aux159_BOOL,aux159_INTEGER);
constraint bool2int(aux160_BOOL,aux160_INTEGER);
constraint bool2int(aux161_BOOL,aux161_INTEGER);
constraint bool2int(aux162_BOOL,aux162_INTEGER);
constraint bool2int(aux163_BOOL,aux163_INTEGER);
constraint bool2int(aux164_BOOL,aux164_INTEGER);
constraint bool2int(aux165_BOOL,aux165_INTEGER);
constraint bool2int(aux166_BOOL,aux166_INTEGER);
constraint bool2int(aux167_BOOL,aux167_INTEGER);
constraint bool2int(aux168_BOOL,aux168_INTEGER);
constraint bool2int(aux169_BOOL,aux169_INTEGER);
constraint bool2int(aux170_BOOL,aux170_INTEGER);
constraint bool2int(aux171_BOOL,aux171_INTEGER);
constraint bool2int(aux172_BOOL,aux172_INTEGER);
constraint bool2int(aux173_BOOL,aux173_INTEGER);
constraint bool2int(aux174_BOOL,aux174_INTEGER);
constraint bool2int(aux175_BOOL,aux175_INTEGER);
constraint bool2int(aux176_BOOL,aux176_INTEGER);
constraint bool2int(aux177_BOOL,aux177_INTEGER);
constraint bool2int(aux178_BOOL,aux178_INTEGER);
constraint bool2int(aux179_BOOL,aux179_INTEGER);
constraint bool2int(aux180_BOOL,aux180_INTEGER);
constraint bool2int(aux181_BOOL,aux181_INTEGER);
constraint bool2int(aux182_BOOL,aux182_INTEGER);
constraint bool2int(aux183_BOOL,aux183_INTEGER);
constraint bool2int(aux184_BOOL,aux184_INTEGER);
constraint bool2int(aux185_BOOL,aux185_INTEGER);
constraint bool2int(aux186_BOOL,aux186_INTEGER);
constraint bool2int(aux187_BOOL,aux187_INTEGER);
constraint bool2int(aux188_BOOL,aux188_INTEGER);
constraint bool2int(aux189_BOOL,aux189_INTEGER);
constraint bool2int(aux190_BOOL,aux190_INTEGER);
constraint bool2int(aux191_BOOL,aux191_INTEGER);
constraint bool2int(aux192_BOOL,aux192_INTEGER);
constraint bool2int(aux193_BOOL,aux193_INTEGER);
constraint bool2int(aux194_BOOL,aux194_INTEGER);
constraint bool2int(aux195_BOOL,aux195_INTEGER);
constraint bool2int(aux196_BOOL,aux196_INTEGER);
constraint bool2int(aux197_BOOL,aux197_INTEGER);
constraint bool2int(aux198_BOOL,aux198_INTEGER);
constraint bool2int(aux199_BOOL,aux199_INTEGER);
constraint bool2int(aux200_BOOL,aux200_INTEGER);
constraint bool2int(aux201_BOOL,aux201_INTEGER);
constraint bool2int(aux202_BOOL,aux202_INTEGER);
constraint bool2int(aux203_BOOL,aux203_INTEGER);
constraint bool2int(aux204_BOOL,aux204_INTEGER);
constraint bool2int(aux205_BOOL,aux205_INTEGER);
constraint bool2int(aux206_BOOL,aux206_INTEGER);
constraint bool2int(aux207_BOOL,aux207_INTEGER);
constraint bool2int(aux208_BOOL,aux208_INTEGER);
constraint bool2int(aux209_BOOL,aux209_INTEGER);
constraint bool2int(aux210_BOOL,aux210_INTEGER);
constraint bool2int(aux211_BOOL,aux211_INTEGER);
constraint bool2int(aux212_BOOL,aux212_INTEGER);
constraint bool2int(aux213_BOOL,aux213_INTEGER);
constraint bool2int(aux214_BOOL,aux214_INTEGER);
constraint bool2int(aux215_BOOL,aux215_INTEGER);
constraint bool2int(aux216_BOOL,aux216_INTEGER);
constraint bool2int(aux217_BOOL,aux217_INTEGER);
constraint bool2int(aux218_BOOL,aux218_INTEGER);
constraint bool2int(aux219_BOOL,aux219_INTEGER);
constraint bool2int(aux220_BOOL,aux220_INTEGER);
constraint bool2int(aux221_BOOL,aux221_INTEGER);
constraint bool2int(aux222_BOOL,aux222_INTEGER);
constraint bool2int(aux223_BOOL,aux223_INTEGER);
constraint bool2int(aux224_BOOL,aux224_INTEGER);
constraint bool2int(aux225_BOOL,aux225_INTEGER);
constraint bool2int(aux226_BOOL,aux226_INTEGER);
constraint bool2int(aux227_BOOL,aux227_INTEGER);
constraint bool2int(aux228_BOOL,aux228_INTEGER);
constraint bool2int(aux229_BOOL,aux229_INTEGER);
constraint bool2int(aux230_BOOL,aux230_INTEGER);
constraint bool2int(aux231_BOOL,aux231_INTEGER);
constraint bool2int(aux232_BOOL,aux232_INTEGER);
constraint bool2int(aux233_BOOL,aux233_INTEGER);
constraint bool2int(aux234_BOOL,aux234_INTEGER);
constraint bool2int(aux235_BOOL,aux235_INTEGER);
constraint bool2int(aux236_BOOL,aux236_INTEGER);
constraint bool2int(aux237_BOOL,aux237_INTEGER);
constraint bool2int(aux238_BOOL,aux238_INTEGER);
constraint bool2int(aux239_BOOL,aux239_INTEGER);
constraint bool2int(aux240_BOOL,aux240_INTEGER);
constraint bool2int(aux241_BOOL,aux241_INTEGER);
constraint bool2int(aux242_BOOL,aux242_INTEGER);
constraint bool2int(aux243_BOOL,aux243_INTEGER);
constraint bool2int(aux244_BOOL,aux244_INTEGER);
constraint bool2int(aux245_BOOL,aux245_INTEGER);
constraint bool2int(aux246_BOOL,aux246_INTEGER);
constraint bool2int(aux247_BOOL,aux247_INTEGER);
constraint bool2int(aux248_BOOL,aux248_INTEGER);
constraint bool2int(aux249_BOOL,aux249_INTEGER);
constraint bool2int(aux250_BOOL,aux250_INTEGER);
constraint bool2int(aux251_BOOL,aux251_INTEGER);
constraint bool2int(aux252_BOOL,aux252_INTEGER);
constraint bool2int(aux253_BOOL,aux253_INTEGER);
constraint bool2int(aux254_BOOL,aux254_INTEGER);
constraint bool2int(aux255_BOOL,aux255_INTEGER);
constraint bool2int(aux256_BOOL,aux256_INTEGER);
constraint bool2int(aux257_BOOL,aux257_INTEGER);
constraint bool2int(aux258_BOOL,aux258_INTEGER);
constraint bool2int(aux259_BOOL,aux259_INTEGER);
constraint bool2int(aux260_BOOL,aux260_INTEGER);
constraint bool2int(aux261_BOOL,aux261_INTEGER);
constraint bool2int(aux262_BOOL,aux262_INTEGER);
constraint bool2int(aux263_BOOL,aux263_INTEGER);
constraint bool2int(aux264_BOOL,aux264_INTEGER);
constraint bool2int(aux265_BOOL,aux265_INTEGER);
constraint bool2int(aux266_BOOL,aux266_INTEGER);
constraint bool2int(aux267_BOOL,aux267_INTEGER);
constraint bool2int(aux268_BOOL,aux268_INTEGER);
constraint bool2int(aux269_BOOL,aux269_INTEGER);
constraint bool2int(aux270_BOOL,aux270_INTEGER);
constraint bool2int(aux271_BOOL,aux271_INTEGER);
constraint bool2int(aux272_BOOL,aux272_INTEGER);
constraint bool2int(aux273_BOOL,aux273_INTEGER);
constraint bool2int(aux274_BOOL,aux274_INTEGER);
constraint bool2int(aux275_BOOL,aux275_INTEGER);
constraint bool2int(aux276_BOOL,aux276_INTEGER);
constraint bool2int(aux277_BOOL,aux277_INTEGER);
constraint bool2int(aux278_BOOL,aux278_INTEGER);
constraint bool2int(aux279_BOOL,aux279_INTEGER);
constraint bool2int(aux280_BOOL,aux280_INTEGER);
constraint bool2int(aux281_BOOL,aux281_INTEGER);
constraint bool2int(aux282_BOOL,aux282_INTEGER);
constraint bool2int(aux283_BOOL,aux283_INTEGER);
constraint bool2int(aux284_BOOL,aux284_INTEGER);
constraint bool2int(aux285_BOOL,aux285_INTEGER);
constraint bool2int(aux286_BOOL,aux286_INTEGER);
constraint bool2int(aux287_BOOL,aux287_INTEGER);
constraint bool2int(aux288_BOOL,aux288_INTEGER);
constraint bool2int(aux289_BOOL,aux289_INTEGER);
constraint bool2int(aux290_BOOL,aux290_INTEGER);
constraint bool2int(aux291_BOOL,aux291_INTEGER);
constraint bool2int(aux292_BOOL,aux292_INTEGER);
constraint bool2int(aux293_BOOL,aux293_INTEGER);
constraint bool2int(aux294_BOOL,aux294_INTEGER);
constraint bool2int(aux295_BOOL,aux295_INTEGER);
constraint bool2int(aux296_BOOL,aux296_INTEGER);
constraint bool2int(aux297_BOOL,aux297_INTEGER);
constraint bool2int(aux298_BOOL,aux298_INTEGER);
constraint bool2int(aux299_BOOL,aux299_INTEGER);
constraint bool2int(aux300_BOOL,aux300_INTEGER);
constraint bool2int(aux301_BOOL,aux301_INTEGER);
constraint bool2int(aux302_BOOL,aux302_INTEGER);
constraint bool2int(aux303_BOOL,aux303_INTEGER);
constraint bool2int(aux304_BOOL,aux304_INTEGER);
constraint bool2int(aux305_BOOL,aux305_INTEGER);
constraint bool2int(aux306_BOOL,aux306_INTEGER);
constraint bool2int(aux307_BOOL,aux307_INTEGER);
constraint bool2int(aux308_BOOL,aux308_INTEGER);
constraint bool2int(aux309_BOOL,aux309_INTEGER);
constraint bool2int(aux310_BOOL,aux310_INTEGER);
constraint bool2int(aux311_BOOL,aux311_INTEGER);
constraint bool2int(aux312_BOOL,aux312_INTEGER);
constraint bool2int(aux313_BOOL,aux313_INTEGER);
constraint bool2int(aux314_BOOL,aux314_INTEGER);
constraint bool2int(aux315_BOOL,aux315_INTEGER);
constraint bool2int(aux316_BOOL,aux316_INTEGER);
constraint bool2int(aux317_BOOL,aux317_INTEGER);
constraint bool2int(aux318_BOOL,aux318_INTEGER);
constraint bool2int(aux319_BOOL,aux319_INTEGER);
constraint bool2int(aux320_BOOL,aux320_INTEGER);
constraint bool2int(aux321_BOOL,aux321_INTEGER);
constraint bool2int(aux322_BOOL,aux322_INTEGER);
constraint bool2int(aux323_BOOL,aux323_INTEGER);
constraint bool2int(aux324_BOOL,aux324_INTEGER);
constraint bool2int(aux325_BOOL,aux325_INTEGER);
constraint bool2int(aux326_BOOL,aux326_INTEGER);
constraint bool2int(aux327_BOOL,aux327_INTEGER);
constraint bool2int(aux328_BOOL,aux328_INTEGER);
constraint bool2int(aux329_BOOL,aux329_INTEGER);
constraint bool2int(aux330_BOOL,aux330_INTEGER);
constraint bool2int(aux331_BOOL,aux331_INTEGER);
constraint bool2int(aux332_BOOL,aux332_INTEGER);
constraint bool2int(aux333_BOOL,aux333_INTEGER);
constraint bool2int(aux334_BOOL,aux334_INTEGER);
constraint bool2int(aux335_BOOL,aux335_INTEGER);
constraint bool2int(aux336_BOOL,aux336_INTEGER);
constraint bool2int(aux337_BOOL,aux337_INTEGER);
constraint bool2int(aux338_BOOL,aux338_INTEGER);
constraint bool2int(aux339_BOOL,aux339_INTEGER);
constraint bool2int(aux340_BOOL,aux340_INTEGER);
constraint bool2int(aux341_BOOL,aux341_INTEGER);
constraint bool2int(aux342_BOOL,aux342_INTEGER);
constraint bool2int(aux343_BOOL,aux343_INTEGER);
constraint bool2int(aux344_BOOL,aux344_INTEGER);
constraint bool2int(aux345_BOOL,aux345_INTEGER);
constraint bool2int(aux346_BOOL,aux346_INTEGER);
constraint bool2int(aux347_BOOL,aux347_INTEGER);
constraint bool2int(aux348_BOOL,aux348_INTEGER);
constraint bool2int(aux349_BOOL,aux349_INTEGER);
constraint bool2int(aux350_BOOL,aux350_INTEGER);
constraint bool2int(aux351_BOOL,aux351_INTEGER);
constraint bool2int(aux352_BOOL,aux352_INTEGER);
constraint bool2int(aux353_BOOL,aux353_INTEGER);
constraint bool2int(aux354_BOOL,aux354_INTEGER);
constraint bool2int(aux355_BOOL,aux355_INTEGER);
constraint bool2int(aux356_BOOL,aux356_INTEGER);
constraint bool2int(aux357_BOOL,aux357_INTEGER);
constraint bool2int(aux358_BOOL,aux358_INTEGER);
constraint bool2int(aux359_BOOL,aux359_INTEGER);
constraint bool2int(aux360_BOOL,aux360_INTEGER);
constraint bool2int(aux361_BOOL,aux361_INTEGER);
constraint bool2int(aux362_BOOL,aux362_INTEGER);
constraint bool2int(aux363_BOOL,aux363_INTEGER);
constraint bool2int(aux364_BOOL,aux364_INTEGER);
constraint bool2int(aux365_BOOL,aux365_INTEGER);
constraint bool2int(aux366_BOOL,aux366_INTEGER);
constraint bool2int(aux367_BOOL,aux367_INTEGER);
constraint bool2int(aux368_BOOL,aux368_INTEGER);
constraint bool2int(aux369_BOOL,aux369_INTEGER);
constraint bool2int(aux370_BOOL,aux370_INTEGER);
constraint bool2int(aux371_BOOL,aux371_INTEGER);
constraint bool2int(aux372_BOOL,aux372_INTEGER);
constraint bool2int(aux373_BOOL,aux373_INTEGER);
constraint bool2int(aux374_BOOL,aux374_INTEGER);
constraint bool2int(aux375_BOOL,aux375_INTEGER);
constraint bool2int(aux376_BOOL,aux376_INTEGER);
constraint bool2int(aux377_BOOL,aux377_INTEGER);
constraint bool2int(aux378_BOOL,aux378_INTEGER);
constraint bool2int(aux379_BOOL,aux379_INTEGER);
constraint bool2int(aux380_BOOL,aux380_INTEGER);
constraint bool2int(aux381_BOOL,aux381_INTEGER);
constraint bool2int(aux382_BOOL,aux382_INTEGER);
constraint bool2int(aux383_BOOL,aux383_INTEGER);
constraint bool2int(aux384_BOOL,aux384_INTEGER);
constraint bool2int(aux385_BOOL,aux385_INTEGER);
constraint bool2int(aux386_BOOL,aux386_INTEGER);
constraint bool2int(aux387_BOOL,aux387_INTEGER);
constraint bool2int(aux388_BOOL,aux388_INTEGER);
constraint bool2int(aux389_BOOL,aux389_INTEGER);
constraint bool2int(aux390_BOOL,aux390_INTEGER);
constraint bool2int(aux391_BOOL,aux391_INTEGER);
constraint bool2int(aux392_BOOL,aux392_INTEGER);
constraint bool2int(aux393_BOOL,aux393_INTEGER);
constraint bool2int(aux394_BOOL,aux394_INTEGER);
constraint bool2int(aux395_BOOL,aux395_INTEGER);
constraint bool2int(aux396_BOOL,aux396_INTEGER);
constraint bool2int(aux398_BOOL,aux398_INTEGER);
constraint bool2int(aux401_BOOL,aux401_INTEGER);
constraint bool2int(aux407_BOOL,aux407_INTEGER);
constraint bool2int(aux408_BOOL,aux408_INTEGER);
constraint bool2int(aux410_BOOL,aux410_INTEGER);
constraint bool2int(aux411_BOOL,aux411_INTEGER);
constraint bool2int(aux413_BOOL,aux413_INTEGER);
constraint bool2int(aux415_BOOL,aux415_INTEGER);
constraint bool2int(aux417_BOOL,aux417_INTEGER);
constraint bool2int(aux421_BOOL,aux421_INTEGER);
constraint bool2int(aux422_BOOL,aux422_INTEGER);
constraint bool2int(aux424_BOOL,aux424_INTEGER);
constraint bool2int(aux425_BOOL,aux425_INTEGER);
constraint bool2int(aux427_BOOL,aux427_INTEGER);
constraint bool2int(aux429_BOOL,aux429_INTEGER);
constraint bool2int(aux431_BOOL,aux431_INTEGER);
constraint bool2int(aux435_BOOL,aux435_INTEGER);
constraint bool2int(aux436_BOOL,aux436_INTEGER);
constraint bool2int(aux438_BOOL,aux438_INTEGER);
constraint bool2int(aux439_BOOL,aux439_INTEGER);
constraint bool2int(aux441_BOOL,aux441_INTEGER);
constraint bool2int(aux443_BOOL,aux443_INTEGER);
constraint bool2int(aux445_BOOL,aux445_INTEGER);
constraint bool2int(aux449_BOOL,aux449_INTEGER);
constraint bool2int(aux450_BOOL,aux450_INTEGER);
constraint bool2int(aux452_BOOL,aux452_INTEGER);
constraint bool2int(aux453_BOOL,aux453_INTEGER);
constraint bool2int(aux455_BOOL,aux455_INTEGER);
constraint bool2int(aux457_BOOL,aux457_INTEGER);
constraint bool2int(aux459_BOOL,aux459_INTEGER);
constraint bool2int(aux463_BOOL,aux463_INTEGER);
constraint bool2int(aux464_BOOL,aux464_INTEGER);
constraint bool2int(aux466_BOOL,aux466_INTEGER);
constraint bool2int(aux467_BOOL,aux467_INTEGER);
constraint bool2int(aux469_BOOL,aux469_INTEGER);
constraint bool2int(aux471_BOOL,aux471_INTEGER);
constraint bool2int(aux473_BOOL,aux473_INTEGER);
constraint bool2int(aux477_BOOL,aux477_INTEGER);
constraint bool2int(aux478_BOOL,aux478_INTEGER);
constraint bool2int(aux480_BOOL,aux480_INTEGER);
constraint bool2int(aux481_BOOL,aux481_INTEGER);
constraint bool2int(aux483_BOOL,aux483_INTEGER);
constraint bool2int(aux485_BOOL,aux485_INTEGER);
constraint bool2int(aux487_BOOL,aux487_INTEGER);
constraint bool2int(aux491_BOOL,aux491_INTEGER);
constraint bool2int(aux492_BOOL,aux492_INTEGER);
constraint bool2int(aux494_BOOL,aux494_INTEGER);
constraint bool2int(aux495_BOOL,aux495_INTEGER);
constraint bool2int(aux497_BOOL,aux497_INTEGER);
constraint bool2int(aux499_BOOL,aux499_INTEGER);
constraint bool2int(aux501_BOOL,aux501_INTEGER);
constraint bool2int(aux505_BOOL,aux505_INTEGER);
constraint bool2int(aux506_BOOL,aux506_INTEGER);
constraint bool2int(aux508_BOOL,aux508_INTEGER);
constraint bool2int(aux509_BOOL,aux509_INTEGER);
constraint bool2int(aux511_BOOL,aux511_INTEGER);
constraint bool2int(aux513_BOOL,aux513_INTEGER);
constraint bool2int(aux515_BOOL,aux515_INTEGER);
constraint bool2int(aux519_BOOL,aux519_INTEGER);
constraint bool2int(aux520_BOOL,aux520_INTEGER);
constraint bool2int(aux522_BOOL,aux522_INTEGER);
constraint bool2int(aux523_BOOL,aux523_INTEGER);
constraint bool2int(aux525_BOOL,aux525_INTEGER);
constraint bool2int(aux527_BOOL,aux527_INTEGER);
constraint bool2int(aux529_BOOL,aux529_INTEGER);
constraint bool2int(aux533_BOOL,aux533_INTEGER);
constraint bool2int(aux534_BOOL,aux534_INTEGER);
constraint bool2int(aux536_BOOL,aux536_INTEGER);
constraint bool2int(aux537_BOOL,aux537_INTEGER);
constraint bool2int(aux539_BOOL,aux539_INTEGER);
constraint bool2int(aux541_BOOL,aux541_INTEGER);
constraint bool2int(aux543_BOOL,aux543_INTEGER);
constraint bool2int(aux547_BOOL,aux547_INTEGER);
constraint bool2int(aux548_BOOL,aux548_INTEGER);
constraint bool2int(aux550_BOOL,aux550_INTEGER);
constraint bool2int(aux551_BOOL,aux551_INTEGER);
constraint bool2int(aux553_BOOL,aux553_INTEGER);
constraint bool2int(aux555_BOOL,aux555_INTEGER);
constraint bool2int(aux557_BOOL,aux557_INTEGER);
constraint bool2int(aux561_BOOL,aux561_INTEGER);
constraint bool2int(aux562_BOOL,aux562_INTEGER);
constraint bool2int(aux564_BOOL,aux564_INTEGER);
constraint bool2int(aux565_BOOL,aux565_INTEGER);
constraint bool2int(aux567_BOOL,aux567_INTEGER);
constraint bool2int(aux569_BOOL,aux569_INTEGER);
constraint bool2int(aux571_BOOL,aux571_INTEGER);
constraint bool2int(aux575_BOOL,aux575_INTEGER);
constraint bool2int(aux576_BOOL,aux576_INTEGER);
constraint bool2int(aux578_BOOL,aux578_INTEGER);
constraint bool2int(aux579_BOOL,aux579_INTEGER);
constraint bool2int(aux581_BOOL,aux581_INTEGER);
constraint bool2int(aux583_BOOL,aux583_INTEGER);
constraint bool2int(aux585_BOOL,aux585_INTEGER);
constraint bool2int(aux589_BOOL,aux589_INTEGER);
constraint bool2int(aux590_BOOL,aux590_INTEGER);
constraint bool2int(aux592_BOOL,aux592_INTEGER);
constraint bool2int(aux593_BOOL,aux593_INTEGER);
constraint bool2int(aux595_BOOL,aux595_INTEGER);
constraint bool2int(aux597_BOOL,aux597_INTEGER);
constraint bool2int(aux599_BOOL,aux599_INTEGER);
constraint bool2int(aux603_BOOL,aux603_INTEGER);
constraint bool2int(aux604_BOOL,aux604_INTEGER);
constraint bool2int(aux606_BOOL,aux606_INTEGER);
constraint bool2int(aux607_BOOL,aux607_INTEGER);
constraint bool2int(aux609_BOOL,aux609_INTEGER);
constraint bool2int(aux611_BOOL,aux611_INTEGER);
constraint bool2int(aux613_BOOL,aux613_INTEGER);
constraint bool2int(aux617_BOOL,aux617_INTEGER);
constraint bool2int(aux618_BOOL,aux618_INTEGER);
constraint bool2int(aux620_BOOL,aux620_INTEGER);
constraint bool2int(aux621_BOOL,aux621_INTEGER);
constraint bool2int(aux623_BOOL,aux623_INTEGER);
constraint bool2int(aux625_BOOL,aux625_INTEGER);
constraint bool2int(aux627_BOOL,aux627_INTEGER);
constraint bool2int(aux631_BOOL,aux631_INTEGER);
constraint bool2int(aux632_BOOL,aux632_INTEGER);
constraint bool2int(aux634_BOOL,aux634_INTEGER);
constraint bool2int(aux635_BOOL,aux635_INTEGER);
constraint bool2int(aux637_BOOL,aux637_INTEGER);
constraint bool2int(aux639_BOOL,aux639_INTEGER);
constraint bool2int(aux641_BOOL,aux641_INTEGER);
constraint bool2int(aux645_BOOL,aux645_INTEGER);
constraint bool2int(aux646_BOOL,aux646_INTEGER);
constraint bool2int(aux648_BOOL,aux648_INTEGER);
constraint bool2int(aux649_BOOL,aux649_INTEGER);
constraint bool2int(aux651_BOOL,aux651_INTEGER);
constraint bool2int(aux653_BOOL,aux653_INTEGER);
constraint bool2int(aux655_BOOL,aux655_INTEGER);
constraint bool2int(aux659_BOOL,aux659_INTEGER);
constraint bool2int(aux660_BOOL,aux660_INTEGER);
constraint bool2int(aux662_BOOL,aux662_INTEGER);
constraint bool2int(aux663_BOOL,aux663_INTEGER);
constraint bool2int(aux665_BOOL,aux665_INTEGER);
constraint bool2int(aux667_BOOL,aux667_INTEGER);
constraint bool2int(aux669_BOOL,aux669_INTEGER);
constraint bool2int(aux673_BOOL,aux673_INTEGER);
constraint bool2int(aux674_BOOL,aux674_INTEGER);
constraint bool2int(aux676_BOOL,aux676_INTEGER);
constraint bool2int(aux677_BOOL,aux677_INTEGER);
constraint bool2int(aux679_BOOL,aux679_INTEGER);
constraint int_le_reif(plan2d_00020_00006, plan2d_00001_00001,aux397_BOOL);
constraint int_ne_reif(plan2d_00020_00004,plan2d_00020_00006,aux398_BOOL);
constraint int_lin_eq_reif([1,2],[aux148_INTEGER,aux398_INTEGER],0,aux399_BOOL);
constraint int_ne_reif(plan2d_00020_00004,plan2d_00001_00001,aux400_BOOL);
constraint int_ne_reif(plan2d_00020_00005,plan2d_00001_00001,aux401_BOOL);
constraint int_lin_eq_reif([2,1],[aux177_INTEGER,aux401_INTEGER],0,aux402_BOOL);
constraint int_ne_reif(plan2d_00020_00005,plan2d_00001_00002,aux403_BOOL);
constraint int_lin_eq_reif([1,1],[aux168_INTEGER,aux238_INTEGER],0,aux404_BOOL);
constraint int_lin_eq_reif([1,1,1],[aux168_INTEGER,aux237_INTEGER,aux238_INTEGER],0,false);
constraint int_ne_reif(plan2d_00020_00006,plan2d_00001_00004,aux406_BOOL);
constraint int_ne_reif(plan2d_00001_00001,plan2d_00001_00003,aux407_BOOL);
constraint int_ne_reif(plan2d_00001_00001,plan2d_00001_00004,aux408_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux185_INTEGER,aux407_INTEGER,aux408_INTEGER,aux40_INTEGER],0,false);
constraint int_ne_reif(plan2d_00001_00002,plan2d_00001_00004,aux410_BOOL);
constraint int_ne_reif(plan2d_00001_00002,plan2d_00001_00005,aux411_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux188_INTEGER,aux410_INTEGER,aux411_INTEGER,aux41_INTEGER],0,false);
constraint int_ne_reif(plan2d_00001_00003,plan2d_00001_00005,aux413_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux187_INTEGER,aux413_INTEGER,aux42_INTEGER],0,false);
constraint int_ne_reif(plan2d_00001_00004,plan2d_00001_00006,aux415_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux245_INTEGER,aux415_INTEGER,aux43_INTEGER],0,false);
constraint int_ne_reif(plan2d_00001_00005,plan2d_00002_00001,aux417_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux186_INTEGER,aux246_INTEGER,aux417_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux243_INTEGER,aux38_INTEGER,aux39_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux243_INTEGER,aux244_INTEGER,aux38_INTEGER,aux39_INTEGER],0,false);
constraint int_ne_reif(plan2d_00002_00001,plan2d_00002_00003,aux421_BOOL);
constraint int_ne_reif(plan2d_00002_00001,plan2d_00002_00004,aux422_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux108_INTEGER,aux119_INTEGER,aux421_INTEGER,aux422_INTEGER],0,false);
constraint int_ne_reif(plan2d_00002_00002,plan2d_00002_00004,aux424_BOOL);
constraint int_ne_reif(plan2d_00002_00002,plan2d_00002_00005,aux425_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux107_INTEGER,aux117_INTEGER,aux424_INTEGER,aux425_INTEGER],0,false);
constraint int_ne_reif(plan2d_00002_00003,plan2d_00002_00005,aux427_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux109_INTEGER,aux118_INTEGER,aux427_INTEGER],0,false);
constraint int_ne_reif(plan2d_00002_00004,plan2d_00002_00006,aux429_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux116_INTEGER,aux429_INTEGER,aux86_INTEGER],0,false);
constraint int_ne_reif(plan2d_00002_00005,plan2d_00003_00001,aux431_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux106_INTEGER,aux431_INTEGER,aux87_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux247_INTEGER,aux248_INTEGER,aux89_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux247_INTEGER,aux248_INTEGER,aux88_INTEGER,aux89_INTEGER],0,false);
constraint int_ne_reif(plan2d_00003_00001,plan2d_00003_00003,aux435_BOOL);
constraint int_ne_reif(plan2d_00003_00001,plan2d_00003_00004,aux436_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux196_INTEGER,aux435_INTEGER,aux436_INTEGER,aux63_INTEGER],0,false);
constraint int_ne_reif(plan2d_00003_00002,plan2d_00003_00004,aux438_BOOL);
constraint int_ne_reif(plan2d_00003_00002,plan2d_00003_00005,aux439_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux195_INTEGER,aux438_INTEGER,aux439_INTEGER,aux61_INTEGER],0,false);
constraint int_ne_reif(plan2d_00003_00003,plan2d_00003_00005,aux441_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux194_INTEGER,aux441_INTEGER,aux60_INTEGER],0,false);
constraint int_ne_reif(plan2d_00003_00004,plan2d_00003_00006,aux443_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux443_INTEGER,aux17_INTEGER,aux62_INTEGER],0,false);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00003_00005,aux445_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux193_INTEGER,aux445_INTEGER,aux18_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux160_INTEGER,aux161_INTEGER,aux19_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux160_INTEGER,aux161_INTEGER,aux16_INTEGER,aux19_INTEGER],0,false);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00004_00003,aux449_BOOL);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00004_00004,aux450_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux163_INTEGER,aux258_INTEGER,aux449_INTEGER,aux450_INTEGER],0,false);
constraint int_ne_reif(plan2d_00004_00002,plan2d_00004_00004,aux452_BOOL);
constraint int_ne_reif(plan2d_00004_00002,plan2d_00004_00005,aux453_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux164_INTEGER,aux257_INTEGER,aux452_INTEGER,aux453_INTEGER],0,false);
constraint int_ne_reif(plan2d_00004_00003,plan2d_00004_00005,aux455_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux165_INTEGER,aux255_INTEGER,aux455_INTEGER],0,false);
constraint int_ne_reif(plan2d_00004_00004,plan2d_00004_00006,aux457_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux162_INTEGER,aux201_INTEGER,aux457_INTEGER],0,false);
constraint int_ne_reif(plan2d_00004_00005,plan2d_00005_00001,aux459_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux202_INTEGER,aux256_INTEGER,aux459_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux120_INTEGER,aux121_INTEGER,aux203_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux120_INTEGER,aux121_INTEGER,aux203_INTEGER,aux204_INTEGER],0,false);
constraint int_ne_reif(plan2d_00005_00001,plan2d_00005_00003,aux463_BOOL);
constraint int_ne_reif(plan2d_00005_00001,plan2d_00005_00004,aux464_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux229_INTEGER,aux463_INTEGER,aux464_INTEGER,aux8_INTEGER],0,false);
constraint int_ne_reif(plan2d_00005_00002,plan2d_00005_00004,aux466_BOOL);
constraint int_ne_reif(plan2d_00005_00002,plan2d_00005_00005,aux467_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux232_INTEGER,aux466_INTEGER,aux467_INTEGER,aux11_INTEGER],0,false);
constraint int_ne_reif(plan2d_00005_00003,plan2d_00005_00005,aux469_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux231_INTEGER,aux469_INTEGER,aux10_INTEGER],0,false);
constraint int_ne_reif(plan2d_00005_00004,plan2d_00005_00006,aux471_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux207_INTEGER,aux471_INTEGER,aux9_INTEGER],0,false);
constraint int_ne_reif(plan2d_00005_00005,plan2d_00006_00001,aux473_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux208_INTEGER,aux230_INTEGER,aux473_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux205_INTEGER,aux12_INTEGER,aux13_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux205_INTEGER,aux206_INTEGER,aux12_INTEGER,aux13_INTEGER],0,false);
constraint int_ne_reif(plan2d_00006_00001,plan2d_00006_00003,aux477_BOOL);
constraint int_ne_reif(plan2d_00006_00001,plan2d_00006_00004,aux478_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux142_INTEGER,aux477_INTEGER,aux478_INTEGER,aux96_INTEGER],0,false);
constraint int_ne_reif(plan2d_00006_00002,plan2d_00006_00004,aux480_BOOL);
constraint int_ne_reif(plan2d_00006_00002,plan2d_00006_00005,aux481_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux143_INTEGER,aux480_INTEGER,aux481_INTEGER,aux95_INTEGER],0,false);
constraint int_ne_reif(plan2d_00006_00003,plan2d_00006_00005,aux483_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux140_INTEGER,aux483_INTEGER,aux97_INTEGER],0,false);
constraint int_ne_reif(plan2d_00006_00004,plan2d_00006_00006,aux485_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux141_INTEGER,aux217_INTEGER,aux485_INTEGER],0,false);
constraint int_ne_reif(plan2d_00006_00005,plan2d_00007_00001,aux487_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux218_INTEGER,aux487_INTEGER,aux94_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux166_INTEGER,aux167_INTEGER,aux220_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux166_INTEGER,aux167_INTEGER,aux219_INTEGER,aux220_INTEGER],0,false);
constraint int_ne_reif(plan2d_00007_00001,plan2d_00007_00003,aux491_BOOL);
constraint int_ne_reif(plan2d_00007_00001,plan2d_00007_00004,aux492_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux491_INTEGER,aux492_INTEGER,aux4_INTEGER,aux93_INTEGER],0,false);
constraint int_ne_reif(plan2d_00007_00002,plan2d_00007_00004,aux494_BOOL);
constraint int_ne_reif(plan2d_00007_00002,plan2d_00007_00005,aux495_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux494_INTEGER,aux495_INTEGER,aux5_INTEGER,aux92_INTEGER],0,false);
constraint int_ne_reif(plan2d_00007_00003,plan2d_00007_00005,aux497_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux497_INTEGER,aux6_INTEGER,aux91_INTEGER],0,false);
constraint int_ne_reif(plan2d_00007_00004,plan2d_00007_00006,aux499_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux499_INTEGER,aux7_INTEGER,aux98_INTEGER],0,false);
constraint int_ne_reif(plan2d_00007_00005,plan2d_00008_00001,aux501_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux501_INTEGER,aux90_INTEGER,aux99_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux101_INTEGER,aux14_INTEGER,aux15_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux100_INTEGER,aux101_INTEGER,aux14_INTEGER,aux15_INTEGER],0,false);
constraint int_ne_reif(plan2d_00008_00001,plan2d_00008_00003,aux505_BOOL);
constraint int_ne_reif(plan2d_00008_00001,plan2d_00008_00004,aux506_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux159_INTEGER,aux214_INTEGER,aux505_INTEGER,aux506_INTEGER],0,false);
constraint int_ne_reif(plan2d_00008_00002,plan2d_00008_00004,aux508_BOOL);
constraint int_ne_reif(plan2d_00008_00002,plan2d_00008_00005,aux509_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux158_INTEGER,aux213_INTEGER,aux508_INTEGER,aux509_INTEGER],0,false);
constraint int_ne_reif(plan2d_00008_00003,plan2d_00008_00005,aux511_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux157_INTEGER,aux215_INTEGER,aux511_INTEGER],0,false);
constraint int_ne_reif(plan2d_00008_00004,plan2d_00008_00006,aux513_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux156_INTEGER,aux513_INTEGER,aux53_INTEGER],0,false);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00008_00005,aux515_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux216_INTEGER,aux515_INTEGER,aux55_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux32_INTEGER,aux33_INTEGER,aux54_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux32_INTEGER,aux33_INTEGER,aux52_INTEGER,aux54_INTEGER],0,false);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00009_00003,aux519_BOOL);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00009_00004,aux520_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux273_INTEGER,aux519_INTEGER,aux520_INTEGER,aux70_INTEGER],0,false);
constraint int_ne_reif(plan2d_00009_00002,plan2d_00009_00004,aux522_BOOL);
constraint int_ne_reif(plan2d_00009_00002,plan2d_00009_00005,aux523_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux276_INTEGER,aux522_INTEGER,aux523_INTEGER,aux71_INTEGER],0,false);
constraint int_ne_reif(plan2d_00009_00003,plan2d_00009_00005,aux525_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux275_INTEGER,aux525_INTEGER,aux72_INTEGER],0,false);
constraint int_ne_reif(plan2d_00009_00004,plan2d_00009_00006,aux527_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux264_INTEGER,aux527_INTEGER,aux73_INTEGER],0,false);
constraint int_ne_reif(plan2d_00009_00005,plan2d_00010_00001,aux529_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux263_INTEGER,aux274_INTEGER,aux529_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux126_INTEGER,aux127_INTEGER,aux265_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux126_INTEGER,aux127_INTEGER,aux265_INTEGER,aux266_INTEGER],0,false);
constraint int_ne_reif(plan2d_00010_00001,plan2d_00010_00003,aux533_BOOL);
constraint int_ne_reif(plan2d_00010_00001,plan2d_00010_00004,aux534_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux182_INTEGER,aux533_INTEGER,aux534_INTEGER,aux20_INTEGER],0,false);
constraint int_ne_reif(plan2d_00010_00002,plan2d_00010_00004,aux536_BOOL);
constraint int_ne_reif(plan2d_00010_00002,plan2d_00010_00005,aux537_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux183_INTEGER,aux536_INTEGER,aux537_INTEGER,aux21_INTEGER],0,false);
constraint int_ne_reif(plan2d_00010_00003,plan2d_00010_00005,aux539_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux184_INTEGER,aux539_INTEGER,aux22_INTEGER],0,false);
constraint int_ne_reif(plan2d_00010_00004,plan2d_00010_00006,aux541_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux115_INTEGER,aux181_INTEGER,aux541_INTEGER],0,false);
constraint int_ne_reif(plan2d_00010_00005,plan2d_00011_00001,aux543_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux114_INTEGER,aux543_INTEGER,aux23_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux113_INTEGER,aux122_INTEGER,aux123_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux112_INTEGER,aux113_INTEGER,aux122_INTEGER,aux123_INTEGER],0,false);
constraint int_ne_reif(plan2d_00011_00001,plan2d_00011_00003,aux547_BOOL);
constraint int_ne_reif(plan2d_00011_00001,plan2d_00011_00004,aux548_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux547_INTEGER,aux548_INTEGER,aux28_INTEGER,aux44_INTEGER],0,false);
constraint int_ne_reif(plan2d_00011_00002,plan2d_00011_00004,aux550_BOOL);
constraint int_ne_reif(plan2d_00011_00002,plan2d_00011_00005,aux551_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux550_INTEGER,aux551_INTEGER,aux31_INTEGER,aux45_INTEGER],0,false);
constraint int_ne_reif(plan2d_00011_00003,plan2d_00011_00005,aux553_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux553_INTEGER,aux30_INTEGER,aux47_INTEGER],0,false);
constraint int_ne_reif(plan2d_00011_00004,plan2d_00011_00006,aux555_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux135_INTEGER,aux555_INTEGER,aux29_INTEGER],0,false);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00011_00005,aux557_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux137_INTEGER,aux557_INTEGER,aux46_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux136_INTEGER,aux138_INTEGER,aux139_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux134_INTEGER,aux136_INTEGER,aux138_INTEGER,aux139_INTEGER],0,false);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00012_00003,aux561_BOOL);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00012_00004,aux562_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux147_INTEGER,aux270_INTEGER,aux561_INTEGER,aux562_INTEGER],0,false);
constraint int_ne_reif(plan2d_00012_00002,plan2d_00012_00004,aux564_BOOL);
constraint int_ne_reif(plan2d_00012_00002,plan2d_00012_00005,aux565_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux144_INTEGER,aux267_INTEGER,aux564_INTEGER,aux565_INTEGER],0,false);
constraint int_ne_reif(plan2d_00012_00003,plan2d_00012_00005,aux567_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux145_INTEGER,aux268_INTEGER,aux567_INTEGER],0,false);
constraint int_ne_reif(plan2d_00012_00004,plan2d_00012_00006,aux569_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux146_INTEGER,aux228_INTEGER,aux569_INTEGER],0,false);
constraint int_ne_reif(plan2d_00012_00005,plan2d_00013_00001,aux571_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux227_INTEGER,aux269_INTEGER,aux571_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux225_INTEGER,aux271_INTEGER,aux272_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux225_INTEGER,aux226_INTEGER,aux271_INTEGER,aux272_INTEGER],0,false);
constraint int_ne_reif(plan2d_00013_00001,plan2d_00013_00003,aux575_BOOL);
constraint int_ne_reif(plan2d_00013_00001,plan2d_00013_00004,aux576_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux575_INTEGER,aux576_INTEGER,aux2_INTEGER,aux78_INTEGER],0,false);
constraint int_ne_reif(plan2d_00013_00002,plan2d_00013_00004,aux578_BOOL);
constraint int_ne_reif(plan2d_00013_00002,plan2d_00013_00005,aux579_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux578_INTEGER,aux579_INTEGER,aux3_INTEGER,aux79_INTEGER],0,false);
constraint int_ne_reif(plan2d_00013_00003,plan2d_00013_00005,aux581_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux581_INTEGER,aux0_INTEGER,aux77_INTEGER],0,false);
constraint int_ne_reif(plan2d_00013_00004,plan2d_00013_00006,aux583_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux221_INTEGER,aux583_INTEGER,aux1_INTEGER],0,false);
constraint int_ne_reif(plan2d_00013_00005,plan2d_00014_00001,aux585_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux224_INTEGER,aux585_INTEGER,aux76_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux223_INTEGER,aux80_INTEGER,aux81_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux222_INTEGER,aux223_INTEGER,aux80_INTEGER,aux81_INTEGER],0,false);
constraint int_ne_reif(plan2d_00014_00001,plan2d_00014_00003,aux589_BOOL);
constraint int_ne_reif(plan2d_00014_00001,plan2d_00014_00004,aux590_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux103_INTEGER,aux155_INTEGER,aux589_INTEGER,aux590_INTEGER],0,false);
constraint int_ne_reif(plan2d_00014_00002,plan2d_00014_00004,aux592_BOOL);
constraint int_ne_reif(plan2d_00014_00002,plan2d_00014_00005,aux593_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux104_INTEGER,aux154_INTEGER,aux592_INTEGER,aux593_INTEGER],0,false);
constraint int_ne_reif(plan2d_00014_00003,plan2d_00014_00005,aux595_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux105_INTEGER,aux153_INTEGER,aux595_INTEGER],0,false);
constraint int_ne_reif(plan2d_00014_00004,plan2d_00014_00006,aux597_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux152_INTEGER,aux192_INTEGER,aux597_INTEGER],0,false);
constraint int_ne_reif(plan2d_00014_00005,plan2d_00015_00001,aux599_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux102_INTEGER,aux191_INTEGER,aux599_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux128_INTEGER,aux129_INTEGER,aux190_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux128_INTEGER,aux129_INTEGER,aux189_INTEGER,aux190_INTEGER],0,false);
constraint int_ne_reif(plan2d_00015_00001,plan2d_00015_00003,aux603_BOOL);
constraint int_ne_reif(plan2d_00015_00001,plan2d_00015_00004,aux604_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux603_INTEGER,aux604_INTEGER,aux26_INTEGER,aux36_INTEGER],0,false);
constraint int_ne_reif(plan2d_00015_00002,plan2d_00015_00004,aux606_BOOL);
constraint int_ne_reif(plan2d_00015_00002,plan2d_00015_00005,aux607_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux606_INTEGER,aux607_INTEGER,aux27_INTEGER,aux37_INTEGER],0,false);
constraint int_ne_reif(plan2d_00015_00003,plan2d_00015_00005,aux609_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux609_INTEGER,aux24_INTEGER,aux35_INTEGER],0,false);
constraint int_ne_reif(plan2d_00015_00004,plan2d_00015_00006,aux611_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux611_INTEGER,aux25_INTEGER,aux82_INTEGER],0,false);
constraint int_ne_reif(plan2d_00015_00005,plan2d_00016_00001,aux613_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux613_INTEGER,aux34_INTEGER,aux85_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux74_INTEGER,aux75_INTEGER,aux83_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux74_INTEGER,aux75_INTEGER,aux83_INTEGER,aux84_INTEGER],0,false);
constraint int_ne_reif(plan2d_00016_00001,plan2d_00016_00003,aux617_BOOL);
constraint int_ne_reif(plan2d_00016_00001,plan2d_00016_00004,aux618_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux170_INTEGER,aux239_INTEGER,aux617_INTEGER,aux618_INTEGER],0,false);
constraint int_ne_reif(plan2d_00016_00002,plan2d_00016_00004,aux620_BOOL);
constraint int_ne_reif(plan2d_00016_00002,plan2d_00016_00005,aux621_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux169_INTEGER,aux240_INTEGER,aux620_INTEGER,aux621_INTEGER],0,false);
constraint int_ne_reif(plan2d_00016_00003,plan2d_00016_00005,aux623_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux172_INTEGER,aux241_INTEGER,aux623_INTEGER],0,false);
constraint int_ne_reif(plan2d_00016_00004,plan2d_00016_00006,aux625_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux171_INTEGER,aux199_INTEGER,aux625_INTEGER],0,false);
constraint int_ne_reif(plan2d_00017_00001,plan2d_00016_00005,aux627_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux197_INTEGER,aux242_INTEGER,aux627_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux198_INTEGER,aux249_INTEGER,aux250_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux198_INTEGER,aux200_INTEGER,aux249_INTEGER,aux250_INTEGER],0,false);
constraint int_ne_reif(plan2d_00017_00001,plan2d_00017_00003,aux631_BOOL);
constraint int_ne_reif(plan2d_00017_00001,plan2d_00017_00004,aux632_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux261_INTEGER,aux631_INTEGER,aux632_INTEGER,aux48_INTEGER],0,false);
constraint int_ne_reif(plan2d_00017_00002,plan2d_00017_00004,aux634_BOOL);
constraint int_ne_reif(plan2d_00017_00002,plan2d_00017_00005,aux635_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux262_INTEGER,aux634_INTEGER,aux635_INTEGER,aux49_INTEGER],0,false);
constraint int_ne_reif(plan2d_00017_00003,plan2d_00017_00005,aux637_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux260_INTEGER,aux637_INTEGER,aux50_INTEGER],0,false);
constraint int_ne_reif(plan2d_00017_00004,plan2d_00017_00006,aux639_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux209_INTEGER,aux639_INTEGER,aux51_INTEGER],0,false);
constraint int_ne_reif(plan2d_00017_00005,plan2d_00018_00001,aux641_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux212_INTEGER,aux259_INTEGER,aux641_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux211_INTEGER,aux64_INTEGER,aux65_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux210_INTEGER,aux211_INTEGER,aux64_INTEGER,aux65_INTEGER],0,false);
constraint int_ne_reif(plan2d_00018_00001,plan2d_00018_00003,aux645_BOOL);
constraint int_ne_reif(plan2d_00018_00001,plan2d_00018_00004,aux646_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux251_INTEGER,aux645_INTEGER,aux646_INTEGER,aux66_INTEGER],0,false);
constraint int_ne_reif(plan2d_00018_00002,plan2d_00018_00004,aux648_BOOL);
constraint int_ne_reif(plan2d_00018_00002,plan2d_00018_00005,aux649_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux254_INTEGER,aux648_INTEGER,aux649_INTEGER,aux67_INTEGER],0,false);
constraint int_ne_reif(plan2d_00018_00003,plan2d_00018_00005,aux651_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux253_INTEGER,aux651_INTEGER,aux68_INTEGER],0,false);
constraint int_ne_reif(plan2d_00018_00004,plan2d_00018_00006,aux653_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux234_INTEGER,aux252_INTEGER,aux653_INTEGER],0,false);
constraint int_ne_reif(plan2d_00018_00005,plan2d_00019_00001,aux655_BOOL);
constraint int_lin_eq_reif([1,1,2],[aux233_INTEGER,aux655_INTEGER,aux69_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux124_INTEGER,aux125_INTEGER,aux236_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux124_INTEGER,aux125_INTEGER,aux235_INTEGER,aux236_INTEGER],0,false);
constraint int_ne_reif(plan2d_00019_00001,plan2d_00019_00003,aux659_BOOL);
constraint int_ne_reif(plan2d_00019_00001,plan2d_00019_00004,aux660_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux130_INTEGER,aux659_INTEGER,aux660_INTEGER,aux56_INTEGER],0,false);
constraint int_ne_reif(plan2d_00019_00002,plan2d_00019_00004,aux662_BOOL);
constraint int_ne_reif(plan2d_00019_00002,plan2d_00019_00005,aux663_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux131_INTEGER,aux662_INTEGER,aux663_INTEGER,aux58_INTEGER],0,false);
constraint int_ne_reif(plan2d_00019_00003,plan2d_00019_00005,aux665_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux133_INTEGER,aux665_INTEGER,aux57_INTEGER],0,false);
constraint int_ne_reif(plan2d_00019_00004,plan2d_00019_00006,aux667_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux173_INTEGER,aux667_INTEGER,aux59_INTEGER],0,false);
constraint int_ne_reif(plan2d_00020_00001,plan2d_00019_00005,aux669_BOOL);
constraint int_lin_eq_reif([2,1,1],[aux132_INTEGER,aux175_INTEGER,aux669_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1],[aux110_INTEGER,aux111_INTEGER,aux174_INTEGER],0,false);
constraint int_lin_eq_reif([1,1,1,1],[aux110_INTEGER,aux111_INTEGER,aux174_INTEGER,aux176_INTEGER],0,false);
constraint int_ne_reif(plan2d_00020_00001,plan2d_00020_00003,aux673_BOOL);
constraint int_ne_reif(plan2d_00020_00001,plan2d_00020_00004,aux674_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux151_INTEGER,aux180_INTEGER,aux673_INTEGER,aux674_INTEGER],0,false);
constraint int_ne_reif(plan2d_00020_00002,plan2d_00020_00004,aux676_BOOL);
constraint int_ne_reif(plan2d_00020_00002,plan2d_00020_00005,aux677_BOOL);
constraint int_lin_eq_reif([1,1,1,1],[aux150_INTEGER,aux179_INTEGER,aux676_INTEGER,aux677_INTEGER],0,false);
constraint int_ne_reif(plan2d_00020_00003,plan2d_00020_00005,aux679_BOOL);
constraint int_lin_eq_reif([1,2,1],[aux149_INTEGER,aux178_INTEGER,aux679_INTEGER],0,false);
constraint int_le_reif(plan2d_00001_00002, plan2d_00001_00003,aux681_BOOL);
constraint int_le_reif(plan2d_00001_00003, plan2d_00001_00004,aux682_BOOL);
constraint int_le_reif(plan2d_00001_00004, plan2d_00001_00005,aux683_BOOL);
constraint int_le_reif(plan2d_00001_00005, plan2d_00001_00006,aux684_BOOL);
constraint int_le_reif(plan2d_00001_00006, plan2d_00002_00001,aux685_BOOL);
constraint int_le_reif(plan2d_00002_00001, plan2d_00002_00002,aux686_BOOL);
constraint int_le_reif(plan2d_00002_00002, plan2d_00002_00003,aux687_BOOL);
constraint int_le_reif(plan2d_00002_00003, plan2d_00002_00004,aux688_BOOL);
constraint int_le_reif(plan2d_00002_00004, plan2d_00002_00005,aux689_BOOL);
constraint int_le_reif(plan2d_00002_00005, plan2d_00002_00006,aux690_BOOL);
constraint int_le_reif(plan2d_00002_00006, plan2d_00003_00001,aux691_BOOL);
constraint int_le_reif(plan2d_00003_00001, plan2d_00003_00002,aux692_BOOL);
constraint int_le_reif(plan2d_00003_00002, plan2d_00003_00003,aux693_BOOL);
constraint int_le_reif(plan2d_00003_00003, plan2d_00003_00004,aux694_BOOL);
constraint int_le_reif(plan2d_00003_00004, plan2d_00003_00005,aux695_BOOL);
constraint int_le_reif(plan2d_00003_00005, plan2d_00003_00006,aux696_BOOL);
constraint int_le_reif(plan2d_00003_00006, plan2d_00004_00001,aux697_BOOL);
constraint int_le_reif(plan2d_00004_00001, plan2d_00004_00002,aux698_BOOL);
constraint int_le_reif(plan2d_00004_00002, plan2d_00004_00003,aux699_BOOL);
constraint int_le_reif(plan2d_00004_00003, plan2d_00004_00004,aux700_BOOL);
constraint int_le_reif(plan2d_00004_00004, plan2d_00004_00005,aux701_BOOL);
constraint int_le_reif(plan2d_00004_00005, plan2d_00004_00006,aux702_BOOL);
constraint int_le_reif(plan2d_00004_00006, plan2d_00005_00001,aux703_BOOL);
constraint int_le_reif(plan2d_00005_00001, plan2d_00005_00002,aux704_BOOL);
constraint int_le_reif(plan2d_00005_00002, plan2d_00005_00003,aux705_BOOL);
constraint int_le_reif(plan2d_00005_00003, plan2d_00005_00004,aux706_BOOL);
constraint int_le_reif(plan2d_00005_00004, plan2d_00005_00005,aux707_BOOL);
constraint int_le_reif(plan2d_00005_00005, plan2d_00005_00006,aux708_BOOL);
constraint int_le_reif(plan2d_00005_00006, plan2d_00006_00001,aux709_BOOL);
constraint int_le_reif(plan2d_00006_00001, plan2d_00006_00002,aux710_BOOL);
constraint int_le_reif(plan2d_00006_00002, plan2d_00006_00003,aux711_BOOL);
constraint int_le_reif(plan2d_00006_00003, plan2d_00006_00004,aux712_BOOL);
constraint int_le_reif(plan2d_00006_00004, plan2d_00006_00005,aux713_BOOL);
constraint int_le_reif(plan2d_00006_00005, plan2d_00006_00006,aux714_BOOL);
constraint int_le_reif(plan2d_00006_00006, plan2d_00007_00001,aux715_BOOL);
constraint int_le_reif(plan2d_00007_00001, plan2d_00007_00002,aux716_BOOL);
constraint int_le_reif(plan2d_00007_00002, plan2d_00007_00003,aux717_BOOL);
constraint int_le_reif(plan2d_00007_00003, plan2d_00007_00004,aux718_BOOL);
constraint int_le_reif(plan2d_00007_00004, plan2d_00007_00005,aux719_BOOL);
constraint int_le_reif(plan2d_00007_00005, plan2d_00007_00006,aux720_BOOL);
constraint int_le_reif(plan2d_00007_00006, plan2d_00008_00001,aux721_BOOL);
constraint int_le_reif(plan2d_00008_00001, plan2d_00008_00002,aux722_BOOL);
constraint int_le_reif(plan2d_00008_00002, plan2d_00008_00003,aux723_BOOL);
constraint int_le_reif(plan2d_00008_00003, plan2d_00008_00004,aux724_BOOL);
constraint int_le_reif(plan2d_00008_00004, plan2d_00008_00005,aux725_BOOL);
constraint int_le_reif(plan2d_00008_00005, plan2d_00008_00006,aux726_BOOL);
constraint int_le_reif(plan2d_00008_00006, plan2d_00009_00001,aux727_BOOL);
constraint int_le_reif(plan2d_00009_00001, plan2d_00009_00002,aux728_BOOL);
constraint int_le_reif(plan2d_00009_00002, plan2d_00009_00003,aux729_BOOL);
constraint int_le_reif(plan2d_00009_00003, plan2d_00009_00004,aux730_BOOL);
constraint int_le_reif(plan2d_00009_00004, plan2d_00009_00005,aux731_BOOL);
constraint int_le_reif(plan2d_00009_00005, plan2d_00009_00006,aux732_BOOL);
constraint int_le_reif(plan2d_00009_00006, plan2d_00010_00001,aux733_BOOL);
constraint int_le_reif(plan2d_00010_00001, plan2d_00010_00002,aux734_BOOL);
constraint int_le_reif(plan2d_00010_00002, plan2d_00010_00003,aux735_BOOL);
constraint int_le_reif(plan2d_00010_00003, plan2d_00010_00004,aux736_BOOL);
constraint int_le_reif(plan2d_00010_00004, plan2d_00010_00005,aux737_BOOL);
constraint int_le_reif(plan2d_00010_00005, plan2d_00010_00006,aux738_BOOL);
constraint int_le_reif(plan2d_00010_00006, plan2d_00011_00001,aux739_BOOL);
constraint int_le_reif(plan2d_00011_00001, plan2d_00011_00002,aux740_BOOL);
constraint int_le_reif(plan2d_00011_00002, plan2d_00011_00003,aux741_BOOL);
constraint int_le_reif(plan2d_00011_00003, plan2d_00011_00004,aux742_BOOL);
constraint int_le_reif(plan2d_00011_00004, plan2d_00011_00005,aux743_BOOL);
constraint int_le_reif(plan2d_00011_00005, plan2d_00011_00006,aux744_BOOL);
constraint int_le_reif(plan2d_00011_00006, plan2d_00012_00001,aux745_BOOL);
constraint int_le_reif(plan2d_00012_00001, plan2d_00012_00002,aux746_BOOL);
constraint int_le_reif(plan2d_00012_00002, plan2d_00012_00003,aux747_BOOL);
constraint int_le_reif(plan2d_00012_00003, plan2d_00012_00004,aux748_BOOL);
constraint int_le_reif(plan2d_00012_00004, plan2d_00012_00005,aux749_BOOL);
constraint int_le_reif(plan2d_00012_00005, plan2d_00012_00006,aux750_BOOL);
constraint int_le_reif(plan2d_00012_00006, plan2d_00013_00001,aux751_BOOL);
constraint int_le_reif(plan2d_00013_00001, plan2d_00013_00002,aux752_BOOL);
constraint int_le_reif(plan2d_00013_00002, plan2d_00013_00003,aux753_BOOL);
constraint int_le_reif(plan2d_00013_00003, plan2d_00013_00004,aux754_BOOL);
constraint int_le_reif(plan2d_00013_00004, plan2d_00013_00005,aux755_BOOL);
constraint int_le_reif(plan2d_00013_00005, plan2d_00013_00006,aux756_BOOL);
constraint int_le_reif(plan2d_00013_00006, plan2d_00014_00001,aux757_BOOL);
constraint int_le_reif(plan2d_00014_00001, plan2d_00014_00002,aux758_BOOL);
constraint int_le_reif(plan2d_00014_00002, plan2d_00014_00003,aux759_BOOL);
constraint int_le_reif(plan2d_00014_00003, plan2d_00014_00004,aux760_BOOL);
constraint int_le_reif(plan2d_00014_00004, plan2d_00014_00005,aux761_BOOL);
constraint int_le_reif(plan2d_00014_00005, plan2d_00014_00006,aux762_BOOL);
constraint int_le_reif(plan2d_00014_00006, plan2d_00015_00001,aux763_BOOL);
constraint int_le_reif(plan2d_00015_00001, plan2d_00015_00002,aux764_BOOL);
constraint int_le_reif(plan2d_00015_00002, plan2d_00015_00003,aux765_BOOL);
constraint int_le_reif(plan2d_00015_00003, plan2d_00015_00004,aux766_BOOL);
constraint int_le_reif(plan2d_00015_00004, plan2d_00015_00005,aux767_BOOL);
constraint int_le_reif(plan2d_00015_00005, plan2d_00015_00006,aux768_BOOL);
constraint int_le_reif(plan2d_00015_00006, plan2d_00016_00001,aux769_BOOL);
constraint int_le_reif(plan2d_00016_00001, plan2d_00016_00002,aux770_BOOL);
constraint int_le_reif(plan2d_00016_00002, plan2d_00016_00003,aux771_BOOL);
constraint int_le_reif(plan2d_00016_00003, plan2d_00016_00004,aux772_BOOL);
constraint int_le_reif(plan2d_00016_00004, plan2d_00016_00005,aux773_BOOL);
constraint int_le_reif(plan2d_00016_00005, plan2d_00016_00006,aux774_BOOL);
constraint int_le_reif(plan2d_00016_00006, plan2d_00017_00001,aux775_BOOL);
constraint int_le_reif(plan2d_00017_00001, plan2d_00017_00002,aux776_BOOL);
constraint int_le_reif(plan2d_00017_00002, plan2d_00017_00003,aux777_BOOL);
constraint int_le_reif(plan2d_00017_00003, plan2d_00017_00004,aux778_BOOL);
constraint int_le_reif(plan2d_00017_00004, plan2d_00017_00005,aux779_BOOL);
constraint int_le_reif(plan2d_00017_00005, plan2d_00017_00006,aux780_BOOL);
constraint int_le_reif(plan2d_00017_00006, plan2d_00018_00001,aux781_BOOL);
constraint int_le_reif(plan2d_00018_00001, plan2d_00018_00002,aux782_BOOL);
constraint int_le_reif(plan2d_00018_00002, plan2d_00018_00003,aux783_BOOL);
constraint int_le_reif(plan2d_00018_00003, plan2d_00018_00004,aux784_BOOL);
constraint int_le_reif(plan2d_00018_00004, plan2d_00018_00005,aux785_BOOL);
constraint int_le_reif(plan2d_00018_00005, plan2d_00018_00006,aux786_BOOL);
constraint int_le_reif(plan2d_00018_00006, plan2d_00019_00001,aux787_BOOL);
constraint int_le_reif(plan2d_00019_00001, plan2d_00019_00002,aux788_BOOL);
constraint int_le_reif(plan2d_00019_00002, plan2d_00019_00003,aux789_BOOL);
constraint int_le_reif(plan2d_00019_00003, plan2d_00019_00004,aux790_BOOL);
constraint int_le_reif(plan2d_00019_00004, plan2d_00019_00005,aux791_BOOL);
constraint int_le_reif(plan2d_00019_00005, plan2d_00019_00006,aux792_BOOL);
constraint int_le_reif(plan2d_00019_00006, plan2d_00020_00001,aux793_BOOL);
constraint int_le_reif(plan2d_00020_00001, plan2d_00020_00002,aux794_BOOL);
constraint int_le_reif(plan2d_00020_00002, plan2d_00020_00003,aux795_BOOL);
constraint int_le_reif(plan2d_00020_00003, plan2d_00020_00004,aux796_BOOL);
constraint int_le_reif(plan2d_00020_00004, plan2d_00020_00005,aux797_BOOL);
constraint int_le_reif(plan2d_00020_00005, plan2d_00020_00006,aux798_BOOL);
constraint int_ne_reif(plan2d_00013_00003,plan2d_00013_00004,aux0_BOOL);
constraint int_ne_reif(plan2d_00013_00004,plan2d_00013_00005,aux1_BOOL);
constraint int_ne_reif(plan2d_00013_00001,plan2d_00013_00002,aux2_BOOL);
constraint int_ne_reif(plan2d_00013_00002,plan2d_00013_00003,aux3_BOOL);
constraint int_ne_reif(plan2d_00007_00001,plan2d_00007_00002,aux4_BOOL);
constraint int_ne_reif(plan2d_00007_00002,plan2d_00007_00003,aux5_BOOL);
constraint int_ne_reif(plan2d_00007_00003,plan2d_00007_00004,aux6_BOOL);
constraint int_ne_reif(plan2d_00007_00004,plan2d_00007_00005,aux7_BOOL);
constraint int_ne_reif(plan2d_00005_00001,plan2d_00005_00002,aux8_BOOL);
constraint int_ne_reif(plan2d_00005_00004,plan2d_00005_00005,aux9_BOOL);
constraint int_ne_reif(plan2d_00005_00003,plan2d_00005_00004,aux10_BOOL);
constraint int_ne_reif(plan2d_00005_00002,plan2d_00005_00003,aux11_BOOL);
constraint int_ne_reif(plan2d_00005_00006,plan2d_00006_00003,aux12_BOOL);
constraint int_ne_reif(plan2d_00005_00006,plan2d_00006_00001,aux13_BOOL);
constraint int_ne_reif(plan2d_00007_00006,plan2d_00008_00003,aux14_BOOL);
constraint int_ne_reif(plan2d_00007_00006,plan2d_00008_00001,aux15_BOOL);
constraint int_ne_reif(plan2d_00004_00004,plan2d_00003_00006,aux16_BOOL);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00003_00004,aux17_BOOL);
constraint int_ne_reif(plan2d_00004_00002,plan2d_00003_00005,aux18_BOOL);
constraint int_ne_reif(plan2d_00004_00002,plan2d_00003_00006,aux19_BOOL);
constraint int_ne_reif(plan2d_00010_00001,plan2d_00010_00005,aux20_BOOL);
constraint int_ne_reif(plan2d_00010_00002,plan2d_00010_00006,aux21_BOOL);
constraint int_ne_reif(plan2d_00010_00003,plan2d_00010_00006,aux22_BOOL);
constraint int_ne_reif(plan2d_00010_00005,plan2d_00010_00006,aux23_BOOL);
constraint int_ne_reif(plan2d_00015_00003,plan2d_00015_00004,aux24_BOOL);
constraint int_ne_reif(plan2d_00015_00004,plan2d_00015_00005,aux25_BOOL);
constraint int_ne_reif(plan2d_00015_00001,plan2d_00015_00002,aux26_BOOL);
constraint int_ne_reif(plan2d_00015_00002,plan2d_00015_00003,aux27_BOOL);
constraint int_ne_reif(plan2d_00011_00001,plan2d_00011_00002,aux28_BOOL);
constraint int_ne_reif(plan2d_00011_00004,plan2d_00011_00005,aux29_BOOL);
constraint int_ne_reif(plan2d_00011_00003,plan2d_00011_00004,aux30_BOOL);
constraint int_ne_reif(plan2d_00011_00002,plan2d_00011_00003,aux31_BOOL);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00008_00006,aux32_BOOL);
constraint int_ne_reif(plan2d_00009_00003,plan2d_00008_00006,aux33_BOOL);
constraint int_ne_reif(plan2d_00015_00005,plan2d_00015_00006,aux34_BOOL);
constraint int_ne_reif(plan2d_00015_00003,plan2d_00015_00006,aux35_BOOL);
constraint int_ne_reif(plan2d_00015_00001,plan2d_00015_00005,aux36_BOOL);
constraint int_ne_reif(plan2d_00015_00002,plan2d_00015_00006,aux37_BOOL);
constraint int_ne_reif(plan2d_00001_00006,plan2d_00002_00003,aux38_BOOL);
constraint int_ne_reif(plan2d_00001_00006,plan2d_00002_00001,aux39_BOOL);
constraint int_ne_reif(plan2d_00001_00001,plan2d_00001_00002,aux40_BOOL);
constraint int_ne_reif(plan2d_00001_00002,plan2d_00001_00003,aux41_BOOL);
constraint int_ne_reif(plan2d_00001_00003,plan2d_00001_00004,aux42_BOOL);
constraint int_ne_reif(plan2d_00001_00004,plan2d_00001_00005,aux43_BOOL);
constraint int_ne_reif(plan2d_00011_00001,plan2d_00011_00005,aux44_BOOL);
constraint int_ne_reif(plan2d_00011_00002,plan2d_00011_00006,aux45_BOOL);
constraint int_ne_reif(plan2d_00011_00005,plan2d_00011_00006,aux46_BOOL);
constraint int_ne_reif(plan2d_00011_00003,plan2d_00011_00006,aux47_BOOL);
constraint int_ne_reif(plan2d_00017_00001,plan2d_00017_00002,aux48_BOOL);
constraint int_ne_reif(plan2d_00017_00002,plan2d_00017_00003,aux49_BOOL);
constraint int_ne_reif(plan2d_00017_00003,plan2d_00017_00004,aux50_BOOL);
constraint int_ne_reif(plan2d_00017_00004,plan2d_00017_00005,aux51_BOOL);
constraint int_ne_reif(plan2d_00009_00004,plan2d_00008_00006,aux52_BOOL);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00008_00004,aux53_BOOL);
constraint int_ne_reif(plan2d_00009_00002,plan2d_00008_00006,aux54_BOOL);
constraint int_ne_reif(plan2d_00009_00002,plan2d_00008_00005,aux55_BOOL);
constraint int_ne_reif(plan2d_00019_00001,plan2d_00019_00002,aux56_BOOL);
constraint int_ne_reif(plan2d_00019_00003,plan2d_00019_00004,aux57_BOOL);
constraint int_ne_reif(plan2d_00019_00002,plan2d_00019_00003,aux58_BOOL);
constraint int_ne_reif(plan2d_00019_00004,plan2d_00019_00005,aux59_BOOL);
constraint int_ne_reif(plan2d_00003_00003,plan2d_00003_00004,aux60_BOOL);
constraint int_ne_reif(plan2d_00003_00002,plan2d_00003_00003,aux61_BOOL);
constraint int_ne_reif(plan2d_00003_00004,plan2d_00003_00005,aux62_BOOL);
constraint int_ne_reif(plan2d_00003_00001,plan2d_00003_00002,aux63_BOOL);
constraint int_ne_reif(plan2d_00017_00006,plan2d_00018_00003,aux64_BOOL);
constraint int_ne_reif(plan2d_00017_00006,plan2d_00018_00001,aux65_BOOL);
constraint int_ne_reif(plan2d_00018_00001,plan2d_00018_00005,aux66_BOOL);
constraint int_ne_reif(plan2d_00018_00002,plan2d_00018_00006,aux67_BOOL);
constraint int_ne_reif(plan2d_00018_00003,plan2d_00018_00006,aux68_BOOL);
constraint int_ne_reif(plan2d_00018_00005,plan2d_00018_00006,aux69_BOOL);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00009_00002,aux70_BOOL);
constraint int_ne_reif(plan2d_00009_00002,plan2d_00009_00003,aux71_BOOL);
constraint int_ne_reif(plan2d_00009_00003,plan2d_00009_00004,aux72_BOOL);
constraint int_ne_reif(plan2d_00009_00004,plan2d_00009_00005,aux73_BOOL);
constraint int_ne_reif(plan2d_00015_00006,plan2d_00016_00001,aux74_BOOL);
constraint int_ne_reif(plan2d_00015_00006,plan2d_00016_00003,aux75_BOOL);
constraint int_ne_reif(plan2d_00013_00005,plan2d_00013_00006,aux76_BOOL);
constraint int_ne_reif(plan2d_00013_00003,plan2d_00013_00006,aux77_BOOL);
constraint int_ne_reif(plan2d_00013_00001,plan2d_00013_00005,aux78_BOOL);
constraint int_ne_reif(plan2d_00013_00002,plan2d_00013_00006,aux79_BOOL);
constraint int_ne_reif(plan2d_00013_00006,plan2d_00014_00003,aux80_BOOL);
constraint int_ne_reif(plan2d_00013_00006,plan2d_00014_00001,aux81_BOOL);
constraint int_ne_reif(plan2d_00015_00004,plan2d_00016_00001,aux82_BOOL);
constraint int_ne_reif(plan2d_00015_00006,plan2d_00016_00002,aux83_BOOL);
constraint int_ne_reif(plan2d_00015_00006,plan2d_00016_00004,aux84_BOOL);
constraint int_ne_reif(plan2d_00015_00005,plan2d_00016_00002,aux85_BOOL);
constraint int_ne_reif(plan2d_00002_00004,plan2d_00003_00001,aux86_BOOL);
constraint int_ne_reif(plan2d_00002_00005,plan2d_00003_00002,aux87_BOOL);
constraint int_ne_reif(plan2d_00002_00006,plan2d_00003_00004,aux88_BOOL);
constraint int_ne_reif(plan2d_00002_00006,plan2d_00003_00002,aux89_BOOL);
constraint int_ne_reif(plan2d_00007_00005,plan2d_00007_00006,aux90_BOOL);
constraint int_ne_reif(plan2d_00007_00003,plan2d_00007_00006,aux91_BOOL);
constraint int_ne_reif(plan2d_00007_00002,plan2d_00007_00006,aux92_BOOL);
constraint int_ne_reif(plan2d_00007_00001,plan2d_00007_00005,aux93_BOOL);
constraint int_ne_reif(plan2d_00006_00005,plan2d_00006_00006,aux94_BOOL);
constraint int_ne_reif(plan2d_00006_00002,plan2d_00006_00006,aux95_BOOL);
constraint int_ne_reif(plan2d_00006_00001,plan2d_00006_00005,aux96_BOOL);
constraint int_ne_reif(plan2d_00006_00003,plan2d_00006_00006,aux97_BOOL);
constraint int_ne_reif(plan2d_00007_00004,plan2d_00008_00001,aux98_BOOL);
constraint int_ne_reif(plan2d_00007_00005,plan2d_00008_00002,aux99_BOOL);
constraint int_ne_reif(plan2d_00007_00006,plan2d_00008_00004,aux100_BOOL);
constraint int_ne_reif(plan2d_00007_00006,plan2d_00008_00002,aux101_BOOL);
constraint int_ne_reif(plan2d_00014_00005,plan2d_00014_00006,aux102_BOOL);
constraint int_ne_reif(plan2d_00014_00001,plan2d_00014_00005,aux103_BOOL);
constraint int_ne_reif(plan2d_00014_00002,plan2d_00014_00006,aux104_BOOL);
constraint int_ne_reif(plan2d_00014_00003,plan2d_00014_00006,aux105_BOOL);
constraint int_ne_reif(plan2d_00002_00005,plan2d_00002_00006,aux106_BOOL);
constraint int_ne_reif(plan2d_00002_00002,plan2d_00002_00006,aux107_BOOL);
constraint int_ne_reif(plan2d_00002_00001,plan2d_00002_00005,aux108_BOOL);
constraint int_ne_reif(plan2d_00002_00003,plan2d_00002_00006,aux109_BOOL);
constraint int_ne_reif(plan2d_00020_00003,plan2d_00019_00006,aux110_BOOL);
constraint int_ne_reif(plan2d_00020_00001,plan2d_00019_00006,aux111_BOOL);
constraint int_ne_reif(plan2d_00010_00006,plan2d_00011_00004,aux112_BOOL);
constraint int_ne_reif(plan2d_00010_00006,plan2d_00011_00002,aux113_BOOL);
constraint int_ne_reif(plan2d_00010_00005,plan2d_00011_00002,aux114_BOOL);
constraint int_ne_reif(plan2d_00010_00004,plan2d_00011_00001,aux115_BOOL);
constraint int_ne_reif(plan2d_00002_00004,plan2d_00002_00005,aux116_BOOL);
constraint int_ne_reif(plan2d_00002_00002,plan2d_00002_00003,aux117_BOOL);
constraint int_ne_reif(plan2d_00002_00003,plan2d_00002_00004,aux118_BOOL);
constraint int_ne_reif(plan2d_00002_00001,plan2d_00002_00002,aux119_BOOL);
constraint int_ne_reif(plan2d_00004_00006,plan2d_00005_00001,aux120_BOOL);
constraint int_ne_reif(plan2d_00004_00006,plan2d_00005_00003,aux121_BOOL);
constraint int_ne_reif(plan2d_00010_00006,plan2d_00011_00003,aux122_BOOL);
constraint int_ne_reif(plan2d_00010_00006,plan2d_00011_00001,aux123_BOOL);
constraint int_ne_reif(plan2d_00018_00006,plan2d_00019_00003,aux124_BOOL);
constraint int_ne_reif(plan2d_00018_00006,plan2d_00019_00001,aux125_BOOL);
constraint int_ne_reif(plan2d_00009_00006,plan2d_00010_00001,aux126_BOOL);
constraint int_ne_reif(plan2d_00009_00006,plan2d_00010_00003,aux127_BOOL);
constraint int_ne_reif(plan2d_00014_00006,plan2d_00015_00001,aux128_BOOL);
constraint int_ne_reif(plan2d_00014_00006,plan2d_00015_00003,aux129_BOOL);
constraint int_ne_reif(plan2d_00019_00001,plan2d_00019_00005,aux130_BOOL);
constraint int_ne_reif(plan2d_00019_00002,plan2d_00019_00006,aux131_BOOL);
constraint int_ne_reif(plan2d_00019_00005,plan2d_00019_00006,aux132_BOOL);
constraint int_ne_reif(plan2d_00019_00003,plan2d_00019_00006,aux133_BOOL);
constraint int_ne_reif(plan2d_00012_00004,plan2d_00011_00006,aux134_BOOL);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00011_00004,aux135_BOOL);
constraint int_ne_reif(plan2d_00012_00002,plan2d_00011_00006,aux136_BOOL);
constraint int_ne_reif(plan2d_00012_00002,plan2d_00011_00005,aux137_BOOL);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00011_00006,aux138_BOOL);
constraint int_ne_reif(plan2d_00012_00003,plan2d_00011_00006,aux139_BOOL);
constraint int_ne_reif(plan2d_00006_00003,plan2d_00006_00004,aux140_BOOL);
constraint int_ne_reif(plan2d_00006_00004,plan2d_00006_00005,aux141_BOOL);
constraint int_ne_reif(plan2d_00006_00001,plan2d_00006_00002,aux142_BOOL);
constraint int_ne_reif(plan2d_00006_00002,plan2d_00006_00003,aux143_BOOL);
constraint int_ne_reif(plan2d_00012_00002,plan2d_00012_00003,aux144_BOOL);
constraint int_ne_reif(plan2d_00012_00003,plan2d_00012_00004,aux145_BOOL);
constraint int_ne_reif(plan2d_00012_00004,plan2d_00012_00005,aux146_BOOL);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00012_00002,aux147_BOOL);
constraint int_ne_reif(plan2d_00020_00004,plan2d_00020_00005,aux148_BOOL);
constraint int_ne_reif(plan2d_00020_00003,plan2d_00020_00004,aux149_BOOL);
constraint int_ne_reif(plan2d_00020_00002,plan2d_00020_00003,aux150_BOOL);
constraint int_ne_reif(plan2d_00020_00001,plan2d_00020_00002,aux151_BOOL);
constraint int_ne_reif(plan2d_00014_00004,plan2d_00014_00005,aux152_BOOL);
constraint int_ne_reif(plan2d_00014_00003,plan2d_00014_00004,aux153_BOOL);
constraint int_ne_reif(plan2d_00014_00002,plan2d_00014_00003,aux154_BOOL);
constraint int_ne_reif(plan2d_00014_00001,plan2d_00014_00002,aux155_BOOL);
constraint int_ne_reif(plan2d_00008_00004,plan2d_00008_00005,aux156_BOOL);
constraint int_ne_reif(plan2d_00008_00003,plan2d_00008_00004,aux157_BOOL);
constraint int_ne_reif(plan2d_00008_00002,plan2d_00008_00003,aux158_BOOL);
constraint int_ne_reif(plan2d_00008_00001,plan2d_00008_00002,aux159_BOOL);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00003_00006,aux160_BOOL);
constraint int_ne_reif(plan2d_00004_00003,plan2d_00003_00006,aux161_BOOL);
constraint int_ne_reif(plan2d_00004_00004,plan2d_00004_00005,aux162_BOOL);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00004_00002,aux163_BOOL);
constraint int_ne_reif(plan2d_00004_00002,plan2d_00004_00003,aux164_BOOL);
constraint int_ne_reif(plan2d_00004_00003,plan2d_00004_00004,aux165_BOOL);
constraint int_ne_reif(plan2d_00006_00006,plan2d_00007_00001,aux166_BOOL);
constraint int_ne_reif(plan2d_00006_00006,plan2d_00007_00003,aux167_BOOL);
constraint int_ne_reif(plan2d_00020_00006,plan2d_00001_00001,aux168_BOOL);
constraint int_ne_reif(plan2d_00016_00002,plan2d_00016_00003,aux169_BOOL);
constraint int_ne_reif(plan2d_00016_00001,plan2d_00016_00002,aux170_BOOL);
constraint int_ne_reif(plan2d_00016_00004,plan2d_00016_00005,aux171_BOOL);
constraint int_ne_reif(plan2d_00016_00003,plan2d_00016_00004,aux172_BOOL);
constraint int_ne_reif(plan2d_00020_00001,plan2d_00019_00004,aux173_BOOL);
constraint int_ne_reif(plan2d_00020_00002,plan2d_00019_00006,aux174_BOOL);
constraint int_ne_reif(plan2d_00020_00002,plan2d_00019_00005,aux175_BOOL);
constraint int_ne_reif(plan2d_00020_00004,plan2d_00019_00006,aux176_BOOL);
constraint int_ne_reif(plan2d_00020_00005,plan2d_00020_00006,aux177_BOOL);
constraint int_ne_reif(plan2d_00020_00003,plan2d_00020_00006,aux178_BOOL);
constraint int_ne_reif(plan2d_00020_00002,plan2d_00020_00006,aux179_BOOL);
constraint int_ne_reif(plan2d_00020_00001,plan2d_00020_00005,aux180_BOOL);
constraint int_ne_reif(plan2d_00010_00004,plan2d_00010_00005,aux181_BOOL);
constraint int_ne_reif(plan2d_00010_00001,plan2d_00010_00002,aux182_BOOL);
constraint int_ne_reif(plan2d_00010_00002,plan2d_00010_00003,aux183_BOOL);
constraint int_ne_reif(plan2d_00010_00003,plan2d_00010_00004,aux184_BOOL);
constraint int_ne_reif(plan2d_00001_00001,plan2d_00001_00005,aux185_BOOL);
constraint int_ne_reif(plan2d_00001_00005,plan2d_00001_00006,aux186_BOOL);
constraint int_ne_reif(plan2d_00001_00003,plan2d_00001_00006,aux187_BOOL);
constraint int_ne_reif(plan2d_00001_00002,plan2d_00001_00006,aux188_BOOL);
constraint int_ne_reif(plan2d_00014_00006,plan2d_00015_00004,aux189_BOOL);
constraint int_ne_reif(plan2d_00014_00006,plan2d_00015_00002,aux190_BOOL);
constraint int_ne_reif(plan2d_00014_00005,plan2d_00015_00002,aux191_BOOL);
constraint int_ne_reif(plan2d_00014_00004,plan2d_00015_00001,aux192_BOOL);
constraint int_ne_reif(plan2d_00003_00005,plan2d_00003_00006,aux193_BOOL);
constraint int_ne_reif(plan2d_00003_00003,plan2d_00003_00006,aux194_BOOL);
constraint int_ne_reif(plan2d_00003_00002,plan2d_00003_00006,aux195_BOOL);
constraint int_ne_reif(plan2d_00003_00001,plan2d_00003_00005,aux196_BOOL);
constraint int_ne_reif(plan2d_00017_00002,plan2d_00016_00005,aux197_BOOL);
constraint int_ne_reif(plan2d_00017_00002,plan2d_00016_00006,aux198_BOOL);
constraint int_ne_reif(plan2d_00017_00001,plan2d_00016_00004,aux199_BOOL);
constraint int_ne_reif(plan2d_00017_00004,plan2d_00016_00006,aux200_BOOL);
constraint int_ne_reif(plan2d_00004_00004,plan2d_00005_00001,aux201_BOOL);
constraint int_ne_reif(plan2d_00004_00005,plan2d_00005_00002,aux202_BOOL);
constraint int_ne_reif(plan2d_00004_00006,plan2d_00005_00002,aux203_BOOL);
constraint int_ne_reif(plan2d_00004_00006,plan2d_00005_00004,aux204_BOOL);
constraint int_ne_reif(plan2d_00005_00006,plan2d_00006_00002,aux205_BOOL);
constraint int_ne_reif(plan2d_00005_00006,plan2d_00006_00004,aux206_BOOL);
constraint int_ne_reif(plan2d_00005_00004,plan2d_00006_00001,aux207_BOOL);
constraint int_ne_reif(plan2d_00005_00005,plan2d_00006_00002,aux208_BOOL);
constraint int_ne_reif(plan2d_00017_00004,plan2d_00018_00001,aux209_BOOL);
constraint int_ne_reif(plan2d_00017_00006,plan2d_00018_00004,aux210_BOOL);
constraint int_ne_reif(plan2d_00017_00006,plan2d_00018_00002,aux211_BOOL);
constraint int_ne_reif(plan2d_00017_00005,plan2d_00018_00002,aux212_BOOL);
constraint int_ne_reif(plan2d_00008_00002,plan2d_00008_00006,aux213_BOOL);
constraint int_ne_reif(plan2d_00008_00001,plan2d_00008_00005,aux214_BOOL);
constraint int_ne_reif(plan2d_00008_00003,plan2d_00008_00006,aux215_BOOL);
constraint int_ne_reif(plan2d_00008_00005,plan2d_00008_00006,aux216_BOOL);
constraint int_ne_reif(plan2d_00006_00004,plan2d_00007_00001,aux217_BOOL);
constraint int_ne_reif(plan2d_00006_00005,plan2d_00007_00002,aux218_BOOL);
constraint int_ne_reif(plan2d_00006_00006,plan2d_00007_00004,aux219_BOOL);
constraint int_ne_reif(plan2d_00006_00006,plan2d_00007_00002,aux220_BOOL);
constraint int_ne_reif(plan2d_00013_00004,plan2d_00014_00001,aux221_BOOL);
constraint int_ne_reif(plan2d_00013_00006,plan2d_00014_00004,aux222_BOOL);
constraint int_ne_reif(plan2d_00013_00006,plan2d_00014_00002,aux223_BOOL);
constraint int_ne_reif(plan2d_00013_00005,plan2d_00014_00002,aux224_BOOL);
constraint int_ne_reif(plan2d_00012_00006,plan2d_00013_00002,aux225_BOOL);
constraint int_ne_reif(plan2d_00012_00006,plan2d_00013_00004,aux226_BOOL);
constraint int_ne_reif(plan2d_00012_00005,plan2d_00013_00002,aux227_BOOL);
constraint int_ne_reif(plan2d_00012_00004,plan2d_00013_00001,aux228_BOOL);
constraint int_ne_reif(plan2d_00005_00001,plan2d_00005_00005,aux229_BOOL);
constraint int_ne_reif(plan2d_00005_00005,plan2d_00005_00006,aux230_BOOL);
constraint int_ne_reif(plan2d_00005_00003,plan2d_00005_00006,aux231_BOOL);
constraint int_ne_reif(plan2d_00005_00002,plan2d_00005_00006,aux232_BOOL);
constraint int_ne_reif(plan2d_00018_00005,plan2d_00019_00002,aux233_BOOL);
constraint int_ne_reif(plan2d_00018_00004,plan2d_00019_00001,aux234_BOOL);
constraint int_ne_reif(plan2d_00018_00006,plan2d_00019_00004,aux235_BOOL);
constraint int_ne_reif(plan2d_00018_00006,plan2d_00019_00002,aux236_BOOL);
constraint int_ne_reif(plan2d_00020_00006,plan2d_00001_00003,aux237_BOOL);
constraint int_ne_reif(plan2d_00020_00006,plan2d_00001_00002,aux238_BOOL);
constraint int_ne_reif(plan2d_00016_00001,plan2d_00016_00005,aux239_BOOL);
constraint int_ne_reif(plan2d_00016_00002,plan2d_00016_00006,aux240_BOOL);
constraint int_ne_reif(plan2d_00016_00003,plan2d_00016_00006,aux241_BOOL);
constraint int_ne_reif(plan2d_00016_00005,plan2d_00016_00006,aux242_BOOL);
constraint int_ne_reif(plan2d_00001_00006,plan2d_00002_00002,aux243_BOOL);
constraint int_ne_reif(plan2d_00001_00006,plan2d_00002_00004,aux244_BOOL);
constraint int_ne_reif(plan2d_00001_00004,plan2d_00002_00001,aux245_BOOL);
constraint int_ne_reif(plan2d_00001_00005,plan2d_00002_00002,aux246_BOOL);
constraint int_ne_reif(plan2d_00002_00006,plan2d_00003_00001,aux247_BOOL);
constraint int_ne_reif(plan2d_00002_00006,plan2d_00003_00003,aux248_BOOL);
constraint int_ne_reif(plan2d_00017_00001,plan2d_00016_00006,aux249_BOOL);
constraint int_ne_reif(plan2d_00017_00003,plan2d_00016_00006,aux250_BOOL);
constraint int_ne_reif(plan2d_00018_00001,plan2d_00018_00002,aux251_BOOL);
constraint int_ne_reif(plan2d_00018_00004,plan2d_00018_00005,aux252_BOOL);
constraint int_ne_reif(plan2d_00018_00003,plan2d_00018_00004,aux253_BOOL);
constraint int_ne_reif(plan2d_00018_00002,plan2d_00018_00003,aux254_BOOL);
constraint int_ne_reif(plan2d_00004_00003,plan2d_00004_00006,aux255_BOOL);
constraint int_ne_reif(plan2d_00004_00005,plan2d_00004_00006,aux256_BOOL);
constraint int_ne_reif(plan2d_00004_00002,plan2d_00004_00006,aux257_BOOL);
constraint int_ne_reif(plan2d_00004_00001,plan2d_00004_00005,aux258_BOOL);
constraint int_ne_reif(plan2d_00017_00005,plan2d_00017_00006,aux259_BOOL);
constraint int_ne_reif(plan2d_00017_00003,plan2d_00017_00006,aux260_BOOL);
constraint int_ne_reif(plan2d_00017_00001,plan2d_00017_00005,aux261_BOOL);
constraint int_ne_reif(plan2d_00017_00002,plan2d_00017_00006,aux262_BOOL);
constraint int_ne_reif(plan2d_00009_00005,plan2d_00010_00002,aux263_BOOL);
constraint int_ne_reif(plan2d_00009_00004,plan2d_00010_00001,aux264_BOOL);
constraint int_ne_reif(plan2d_00009_00006,plan2d_00010_00002,aux265_BOOL);
constraint int_ne_reif(plan2d_00009_00006,plan2d_00010_00004,aux266_BOOL);
constraint int_ne_reif(plan2d_00012_00002,plan2d_00012_00006,aux267_BOOL);
constraint int_ne_reif(plan2d_00012_00003,plan2d_00012_00006,aux268_BOOL);
constraint int_ne_reif(plan2d_00012_00005,plan2d_00012_00006,aux269_BOOL);
constraint int_ne_reif(plan2d_00012_00001,plan2d_00012_00005,aux270_BOOL);
constraint int_ne_reif(plan2d_00012_00006,plan2d_00013_00003,aux271_BOOL);
constraint int_ne_reif(plan2d_00012_00006,plan2d_00013_00001,aux272_BOOL);
constraint int_ne_reif(plan2d_00009_00001,plan2d_00009_00005,aux273_BOOL);
constraint int_ne_reif(plan2d_00009_00005,plan2d_00009_00006,aux274_BOOL);
constraint int_ne_reif(plan2d_00009_00003,plan2d_00009_00006,aux275_BOOL);
constraint int_ne_reif(plan2d_00009_00002,plan2d_00009_00006,aux276_BOOL);
constraint int_eq_reif(plan2d_00020_00006,0,aux277_BOOL);
constraint int_eq_reif(0,plan2d_00008_00001,aux278_BOOL);
constraint int_eq_reif(0,plan2d_00003_00002,aux279_BOOL);
constraint int_eq_reif(plan2d_00018_00002,0,aux280_BOOL);
constraint int_eq_reif(plan2d_00009_00005,0,aux281_BOOL);
constraint int_eq_reif(0,plan2d_00007_00001,aux282_BOOL);
constraint int_eq_reif(0,plan2d_00003_00006,aux283_BOOL);
constraint int_eq_reif(0,plan2d_00015_00001,aux284_BOOL);
constraint int_eq_reif(0,plan2d_00014_00001,aux285_BOOL);
constraint int_eq_reif(0,plan2d_00002_00003,aux286_BOOL);
constraint int_eq_reif(0,plan2d_00019_00005,aux287_BOOL);
constraint int_eq_reif(plan2d_00013_00004,0,aux288_BOOL);
constraint int_eq_reif(plan2d_00017_00001,0,aux289_BOOL);
constraint int_eq_reif(0,plan2d_00006_00001,aux290_BOOL);
constraint int_eq_reif(plan2d_00012_00002,0,aux291_BOOL);
constraint int_eq_reif(plan2d_00018_00006,0,aux292_BOOL);
constraint int_eq_reif(0,plan2d_00014_00006,aux293_BOOL);
constraint int_eq_reif(plan2d_00004_00006,0,aux294_BOOL);
constraint int_eq_reif(0,plan2d_00002_00004,aux295_BOOL);
constraint int_eq_reif(0,plan2d_00010_00002,aux296_BOOL);
constraint int_eq_reif(plan2d_00020_00005,0,aux297_BOOL);
constraint int_eq_reif(plan2d_00005_00001,0,aux298_BOOL);
constraint int_eq_reif(plan2d_00018_00001,0,aux299_BOOL);
constraint int_eq_reif(plan2d_00009_00004,0,aux300_BOOL);
constraint int_eq_reif(plan2d_00013_00006,0,aux301_BOOL);
constraint int_eq_reif(0,plan2d_00002_00005,aux302_BOOL);
constraint int_eq_reif(0,plan2d_00016_00001,aux303_BOOL);
constraint int_eq_reif(plan2d_00013_00003,0,aux304_BOOL);
constraint int_eq_reif(plan2d_00017_00002,0,aux305_BOOL);
constraint int_eq_reif(plan2d_00012_00001,0,aux306_BOOL);
constraint int_eq_reif(0,plan2d_00008_00002,aux307_BOOL);
constraint int_eq_reif(0,plan2d_00011_00002,aux308_BOOL);
constraint int_eq_reif(0,plan2d_00015_00002,aux309_BOOL);
constraint int_eq_reif(plan2d_00017_00006,0,aux310_BOOL);
constraint int_eq_reif(plan2d_00004_00001,0,aux311_BOOL);
constraint int_eq_reif(0,plan2d_00002_00006,aux312_BOOL);
constraint int_eq_reif(plan2d_00005_00002,0,aux313_BOOL);
constraint int_eq_reif(0,plan2d_00011_00003,aux314_BOOL);
constraint int_eq_reif(plan2d_00013_00002,0,aux315_BOOL);
constraint int_eq_reif(0,plan2d_00015_00005,aux316_BOOL);
constraint int_eq_reif(plan2d_00017_00003,0,aux317_BOOL);
constraint int_eq_reif(0,plan2d_00014_00005,aux318_BOOL);
constraint int_eq_reif(0,plan2d_00003_00003,aux319_BOOL);
constraint int_eq_reif(0,plan2d_00001_00006,aux320_BOOL);
constraint int_eq_reif(0,plan2d_00006_00005,aux321_BOOL);
constraint int_eq_reif(0,plan2d_00007_00002,aux322_BOOL);
constraint int_eq_reif(0,plan2d_00016_00002,aux323_BOOL);
constraint int_eq_reif(0,plan2d_00019_00004,aux324_BOOL);
constraint int_eq_reif(0,plan2d_00002_00001,aux325_BOOL);
constraint int_eq_reif(plan2d_00009_00006,0,aux326_BOOL);
constraint int_eq_reif(0,plan2d_00003_00004,aux327_BOOL);
constraint int_eq_reif(plan2d_00005_00003,0,aux328_BOOL);
constraint int_eq_reif(0,plan2d_00008_00003,aux329_BOOL);
constraint int_eq_reif(plan2d_00013_00001,0,aux330_BOOL);
constraint int_eq_reif(0,plan2d_00019_00003,aux331_BOOL);
constraint int_eq_reif(0,plan2d_00010_00001,aux332_BOOL);
constraint int_eq_reif(plan2d_00017_00004,0,aux333_BOOL);
constraint int_eq_reif(0,plan2d_00001_00005,aux334_BOOL);
constraint int_eq_reif(0,plan2d_00016_00006,aux335_BOOL);
constraint int_eq_reif(0,plan2d_00010_00006,aux336_BOOL);
constraint int_eq_reif(0,plan2d_00019_00006,aux337_BOOL);
constraint int_eq_reif(0,plan2d_00001_00004,aux338_BOOL);
constraint int_eq_reif(0,plan2d_00007_00006,aux339_BOOL);
constraint int_eq_reif(0,plan2d_00014_00004,aux340_BOOL);
constraint int_eq_reif(0,plan2d_00002_00002,aux341_BOOL);
constraint int_eq_reif(0,plan2d_00006_00004,aux342_BOOL);
constraint int_eq_reif(plan2d_00020_00002,0,aux343_BOOL);
constraint int_eq_reif(plan2d_00005_00004,0,aux344_BOOL);
constraint int_eq_reif(plan2d_00009_00001,0,aux345_BOOL);
constraint int_eq_reif(0,plan2d_00016_00003,aux346_BOOL);
constraint int_eq_reif(0,plan2d_00001_00003,aux347_BOOL);
constraint int_eq_reif(plan2d_00004_00003,0,aux348_BOOL);
constraint int_eq_reif(plan2d_00017_00005,0,aux349_BOOL);
constraint int_eq_reif(0,plan2d_00008_00004,aux350_BOOL);
constraint int_eq_reif(0,plan2d_00011_00004,aux351_BOOL);
constraint int_eq_reif(0,plan2d_00015_00004,aux352_BOOL);
constraint int_eq_reif(plan2d_00020_00001,0,aux353_BOOL);
constraint int_eq_reif(plan2d_00004_00002,0,aux354_BOOL);
constraint int_eq_reif(0,plan2d_00019_00002,aux355_BOOL);
constraint int_eq_reif(plan2d_00005_00005,0,aux356_BOOL);
constraint int_eq_reif(plan2d_00018_00005,0,aux357_BOOL);
constraint int_eq_reif(0,plan2d_00007_00003,aux358_BOOL);
constraint int_eq_reif(0,plan2d_00014_00003,aux359_BOOL);
constraint int_eq_reif(0,plan2d_00010_00005,aux360_BOOL);
constraint int_eq_reif(0,plan2d_00011_00005,aux361_BOOL);
constraint int_eq_reif(0,plan2d_00006_00003,aux362_BOOL);
constraint int_eq_reif(0,plan2d_00015_00006,aux363_BOOL);
constraint int_eq_reif(plan2d_00012_00005,0,aux364_BOOL);
constraint int_eq_reif(0,plan2d_00003_00005,aux365_BOOL);
constraint int_eq_reif(0,plan2d_00001_00001,aux366_BOOL);
constraint int_eq_reif(0,plan2d_00016_00004,aux367_BOOL);
constraint int_eq_reif(plan2d_00020_00004,0,aux368_BOOL);
constraint int_eq_reif(0,plan2d_00006_00006,aux369_BOOL);
constraint int_eq_reif(0,plan2d_00008_00005,aux370_BOOL);
constraint int_eq_reif(0,plan2d_00008_00006,aux371_BOOL);
constraint int_eq_reif(plan2d_00009_00003,0,aux372_BOOL);
constraint int_eq_reif(plan2d_00018_00004,0,aux373_BOOL);
constraint int_eq_reif(0,plan2d_00007_00005,aux374_BOOL);
constraint int_eq_reif(0,plan2d_00010_00003,aux375_BOOL);
constraint int_eq_reif(plan2d_00004_00005,0,aux376_BOOL);
constraint int_eq_reif(plan2d_00012_00004,0,aux377_BOOL);
constraint int_eq_reif(0,plan2d_00001_00002,aux378_BOOL);
constraint int_eq_reif(0,plan2d_00011_00006,aux379_BOOL);
constraint int_eq_reif(0,plan2d_00014_00002,aux380_BOOL);
constraint int_eq_reif(plan2d_00020_00003,0,aux381_BOOL);
constraint int_eq_reif(0,plan2d_00006_00002,aux382_BOOL);
constraint int_eq_reif(plan2d_00009_00002,0,aux383_BOOL);
constraint int_eq_reif(plan2d_00018_00003,0,aux384_BOOL);
constraint int_eq_reif(0,plan2d_00016_00005,aux385_BOOL);
constraint int_eq_reif(0,plan2d_00011_00001,aux386_BOOL);
constraint int_eq_reif(0,plan2d_00015_00003,aux387_BOOL);
constraint int_eq_reif(plan2d_00004_00004,0,aux388_BOOL);
constraint int_eq_reif(plan2d_00013_00005,0,aux389_BOOL);
constraint int_eq_reif(plan2d_00012_00003,0,aux390_BOOL);
constraint int_eq_reif(0,plan2d_00019_00001,aux391_BOOL);
constraint int_eq_reif(plan2d_00012_00006,0,aux392_BOOL);
constraint int_eq_reif(0,plan2d_00003_00001,aux393_BOOL);
constraint int_eq_reif(plan2d_00005_00006,0,aux394_BOOL);
constraint int_eq_reif(0,plan2d_00007_00004,aux395_BOOL);
constraint int_eq_reif(0,plan2d_00010_00004,aux396_BOOL);
constraint array_bool_or([aux366_BOOL,aux397_BOOL],true);
constraint bool_clause([],[aux168_BOOL,aux40_BOOL]);
constraint bool_clause([aux400_BOOL],[aux399_BOOL]);
constraint bool_clause([aux403_BOOL],[aux402_BOOL]);
constraint bool_clause([aux237_BOOL],[aux404_BOOL]);
constraint int_lin_le([-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux277_INTEGER,aux286_INTEGER,aux295_INTEGER,aux302_INTEGER,aux312_INTEGER,aux320_INTEGER,aux325_INTEGER,aux334_INTEGER,aux338_INTEGER,aux341_INTEGER,aux347_INTEGER,aux366_INTEGER,aux378_INTEGER,2],0);
constraint int_lin_le([-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux277_INTEGER,aux286_INTEGER,aux295_INTEGER,aux297_INTEGER,aux302_INTEGER,aux320_INTEGER,aux325_INTEGER,aux334_INTEGER,aux338_INTEGER,aux341_INTEGER,aux347_INTEGER,aux366_INTEGER,aux378_INTEGER,2],0);
constraint int_lin_le([-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux277_INTEGER,aux286_INTEGER,aux295_INTEGER,aux297_INTEGER,aux320_INTEGER,aux325_INTEGER,aux334_INTEGER,aux338_INTEGER,aux341_INTEGER,aux347_INTEGER,aux366_INTEGER,aux368_INTEGER,aux378_INTEGER,2],0);
constraint int_lin_le([-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux277_INTEGER,aux286_INTEGER,aux297_INTEGER,aux320_INTEGER,aux325_INTEGER,aux334_INTEGER,aux338_INTEGER,aux341_INTEGER,aux347_INTEGER,aux366_INTEGER,aux368_INTEGER,aux378_INTEGER,aux381_INTEGER,2],0);
constraint int_lin_le([-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux277_INTEGER,aux297_INTEGER,aux320_INTEGER,aux325_INTEGER,aux334_INTEGER,aux338_INTEGER,aux341_INTEGER,aux343_INTEGER,aux347_INTEGER,aux366_INTEGER,aux368_INTEGER,aux378_INTEGER,aux381_INTEGER,2],0);
constraint int_lin_le([-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux277_INTEGER,aux297_INTEGER,aux320_INTEGER,aux325_INTEGER,aux334_INTEGER,aux338_INTEGER,aux343_INTEGER,aux347_INTEGER,aux353_INTEGER,aux366_INTEGER,aux368_INTEGER,aux378_INTEGER,aux381_INTEGER,2],0);
constraint int_lin_le([-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux277_INTEGER,aux297_INTEGER,aux320_INTEGER,aux334_INTEGER,aux337_INTEGER,aux338_INTEGER,aux343_INTEGER,aux347_INTEGER,aux353_INTEGER,aux366_INTEGER,aux368_INTEGER,aux378_INTEGER,aux381_INTEGER,2],0);
constraint int_lin_le([-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux277_INTEGER,aux297_INTEGER,aux320_INTEGER,aux334_INTEGER,aux337_INTEGER,aux338_INTEGER,aux343_INTEGER,aux347_INTEGER,aux353_INTEGER,aux366_INTEGER,aux368_INTEGER,aux378_INTEGER,aux381_INTEGER,2],0);
constraint int_lin_le([-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux277_INTEGER,aux287_INTEGER,aux297_INTEGER,aux334_INTEGER,aux337_INTEGER,aux338_INTEGER,aux343_INTEGER,aux347_INTEGER,aux353_INTEGER,aux366_INTEGER,aux368_INTEGER,aux378_INTEGER,aux381_INTEGER,2],0);
constraint int_lin_le([-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux277_INTEGER,aux287_INTEGER,aux297_INTEGER,aux324_INTEGER,aux337_INTEGER,aux338_INTEGER,aux343_INTEGER,aux347_INTEGER,aux353_INTEGER,aux366_INTEGER,aux368_INTEGER,aux378_INTEGER,aux381_INTEGER,2],0);
constraint int_lin_le([-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux277_INTEGER,aux287_INTEGER,aux297_INTEGER,aux324_INTEGER,aux331_INTEGER,aux337_INTEGER,aux343_INTEGER,aux347_INTEGER,aux353_INTEGER,aux366_INTEGER,aux368_INTEGER,aux378_INTEGER,aux381_INTEGER,2],0);
constraint int_lin_le([-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux277_INTEGER,aux287_INTEGER,aux297_INTEGER,aux324_INTEGER,aux331_INTEGER,aux337_INTEGER,aux343_INTEGER,aux353_INTEGER,aux355_INTEGER,aux366_INTEGER,aux368_INTEGER,aux378_INTEGER,aux381_INTEGER,2],0);
constraint int_lin_le([-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux277_INTEGER,aux287_INTEGER,aux297_INTEGER,aux324_INTEGER,aux331_INTEGER,aux337_INTEGER,aux343_INTEGER,aux353_INTEGER,aux355_INTEGER,aux366_INTEGER,aux368_INTEGER,aux381_INTEGER,aux391_INTEGER,2],0);
constraint gecode_global_cardinality([plan2d_00020_00001, plan2d_00012_00001, plan2d_00004_00001, plan2d_00017_00001, plan2d_00009_00001, plan2d_00013_00001, plan2d_00005_00001, plan2d_00018_00001, plan2d_00001_00001, plan2d_00014_00001, plan2d_00006_00001, plan2d_00019_00001, plan2d_00010_00001, plan2d_00002_00001, plan2d_00015_00001, plan2d_00007_00001, plan2d_00011_00001, plan2d_00003_00001, plan2d_00016_00001, plan2d_00008_00001],[0, 1, 2, 3],[5, 5, 8, 2])::domain;
constraint gecode_global_cardinality([plan2d_00020_00002, plan2d_00012_00002, plan2d_00004_00002, plan2d_00017_00002, plan2d_00009_00002, plan2d_00013_00002, plan2d_00005_00002, plan2d_00018_00002, plan2d_00001_00002, plan2d_00014_00002, plan2d_00006_00002, plan2d_00019_00002, plan2d_00010_00002, plan2d_00002_00002, plan2d_00015_00002, plan2d_00007_00002, plan2d_00011_00002, plan2d_00003_00002, plan2d_00016_00002, plan2d_00008_00002],[0, 1, 2, 3],[1, 5, 6, 8])::domain;
constraint gecode_global_cardinality([plan2d_00020_00003, plan2d_00012_00003, plan2d_00004_00003, plan2d_00017_00003, plan2d_00009_00003, plan2d_00013_00003, plan2d_00005_00003, plan2d_00018_00003, plan2d_00001_00003, plan2d_00014_00003, plan2d_00006_00003, plan2d_00019_00003, plan2d_00010_00003, plan2d_00002_00003, plan2d_00015_00003, plan2d_00007_00003, plan2d_00011_00003, plan2d_00003_00003, plan2d_00016_00003, plan2d_00008_00003],[0, 1, 2, 3],[1, 5, 7, 7])::domain;
constraint gecode_global_cardinality([plan2d_00020_00004, plan2d_00012_00004, plan2d_00004_00004, plan2d_00017_00004, plan2d_00009_00004, plan2d_00013_00004, plan2d_00005_00004, plan2d_00018_00004, plan2d_00001_00004, plan2d_00014_00004, plan2d_00006_00004, plan2d_00019_00004, plan2d_00010_00004, plan2d_00002_00004, plan2d_00015_00004, plan2d_00007_00004, plan2d_00011_00004, plan2d_00003_00004, plan2d_00016_00004, plan2d_00008_00004],[0, 1, 2, 3],[1, 5, 6, 8])::domain;
constraint gecode_global_cardinality([plan2d_00020_00005, plan2d_00012_00005, plan2d_00004_00005, plan2d_00017_00005, plan2d_00009_00005, plan2d_00013_00005, plan2d_00005_00005, plan2d_00018_00005, plan2d_00001_00005, plan2d_00014_00005, plan2d_00006_00005, plan2d_00019_00005, plan2d_00010_00005, plan2d_00002_00005, plan2d_00015_00005, plan2d_00007_00005, plan2d_00011_00005, plan2d_00003_00005, plan2d_00016_00005, plan2d_00008_00005],[0, 1, 2, 3],[4, 1, 8, 7])::domain;
constraint gecode_global_cardinality([plan2d_00020_00006, plan2d_00012_00006, plan2d_00004_00006, plan2d_00017_00006, plan2d_00009_00006, plan2d_00013_00006, plan2d_00005_00006, plan2d_00018_00006, plan2d_00001_00006, plan2d_00014_00006, plan2d_00006_00006, plan2d_00019_00006, plan2d_00010_00006, plan2d_00002_00006, plan2d_00015_00006, plan2d_00007_00006, plan2d_00011_00006, plan2d_00003_00006, plan2d_00016_00006, plan2d_00008_00006],[0, 1, 2, 3],[13, 1, 5, 1])::domain;
constraint bool_clause([],[aux40_BOOL,aux41_BOOL]);
constraint bool_clause([],[aux41_BOOL,aux42_BOOL]);
constraint bool_clause([],[aux42_BOOL,aux43_BOOL]);
constraint bool_clause([],[aux43_BOOL,aux186_BOOL]);
constraint bool_clause([],[aux39_BOOL,aux119_BOOL]);
constraint bool_clause([],[aux119_BOOL,aux117_BOOL]);
constraint bool_clause([],[aux117_BOOL,aux118_BOOL]);
constraint bool_clause([],[aux118_BOOL,aux116_BOOL]);
constraint bool_clause([],[aux116_BOOL,aux106_BOOL]);
constraint bool_clause([],[aux247_BOOL,aux63_BOOL]);
constraint bool_clause([],[aux63_BOOL,aux61_BOOL]);
constraint bool_clause([],[aux61_BOOL,aux60_BOOL]);
constraint bool_clause([],[aux60_BOOL,aux62_BOOL]);
constraint bool_clause([],[aux62_BOOL,aux193_BOOL]);
constraint bool_clause([],[aux160_BOOL,aux163_BOOL]);
constraint bool_clause([],[aux163_BOOL,aux164_BOOL]);
constraint bool_clause([],[aux164_BOOL,aux165_BOOL]);
constraint bool_clause([],[aux165_BOOL,aux162_BOOL]);
constraint bool_clause([],[aux162_BOOL,aux256_BOOL]);
constraint bool_clause([],[aux120_BOOL,aux8_BOOL]);
constraint bool_clause([],[aux8_BOOL,aux11_BOOL]);
constraint bool_clause([],[aux11_BOOL,aux10_BOOL]);
constraint bool_clause([],[aux10_BOOL,aux9_BOOL]);
constraint bool_clause([],[aux9_BOOL,aux230_BOOL]);
constraint bool_clause([],[aux13_BOOL,aux142_BOOL]);
constraint bool_clause([],[aux142_BOOL,aux143_BOOL]);
constraint bool_clause([],[aux143_BOOL,aux140_BOOL]);
constraint bool_clause([],[aux140_BOOL,aux141_BOOL]);
constraint bool_clause([],[aux141_BOOL,aux94_BOOL]);
constraint bool_clause([],[aux166_BOOL,aux4_BOOL]);
constraint bool_clause([],[aux4_BOOL,aux5_BOOL]);
constraint bool_clause([],[aux5_BOOL,aux6_BOOL]);
constraint bool_clause([],[aux6_BOOL,aux7_BOOL]);
constraint bool_clause([],[aux7_BOOL,aux90_BOOL]);
constraint bool_clause([],[aux15_BOOL,aux159_BOOL]);
constraint bool_clause([],[aux159_BOOL,aux158_BOOL]);
constraint bool_clause([],[aux158_BOOL,aux157_BOOL]);
constraint bool_clause([],[aux157_BOOL,aux156_BOOL]);
constraint bool_clause([],[aux156_BOOL,aux216_BOOL]);
constraint bool_clause([],[aux32_BOOL,aux70_BOOL]);
constraint bool_clause([],[aux70_BOOL,aux71_BOOL]);
constraint bool_clause([],[aux71_BOOL,aux72_BOOL]);
constraint bool_clause([],[aux72_BOOL,aux73_BOOL]);
constraint bool_clause([],[aux73_BOOL,aux274_BOOL]);
constraint bool_clause([],[aux126_BOOL,aux182_BOOL]);
constraint bool_clause([],[aux182_BOOL,aux183_BOOL]);
constraint bool_clause([],[aux183_BOOL,aux184_BOOL]);
constraint bool_clause([],[aux184_BOOL,aux181_BOOL]);
constraint bool_clause([],[aux181_BOOL,aux23_BOOL]);
constraint bool_clause([],[aux123_BOOL,aux28_BOOL]);
constraint bool_clause([],[aux28_BOOL,aux31_BOOL]);
constraint bool_clause([],[aux31_BOOL,aux30_BOOL]);
constraint bool_clause([],[aux30_BOOL,aux29_BOOL]);
constraint bool_clause([],[aux29_BOOL,aux46_BOOL]);
constraint bool_clause([],[aux138_BOOL,aux147_BOOL]);
constraint bool_clause([],[aux147_BOOL,aux144_BOOL]);
constraint bool_clause([],[aux144_BOOL,aux145_BOOL]);
constraint bool_clause([],[aux145_BOOL,aux146_BOOL]);
constraint bool_clause([],[aux146_BOOL,aux269_BOOL]);
constraint bool_clause([],[aux272_BOOL,aux2_BOOL]);
constraint bool_clause([],[aux2_BOOL,aux3_BOOL]);
constraint bool_clause([],[aux3_BOOL,aux0_BOOL]);
constraint bool_clause([],[aux0_BOOL,aux1_BOOL]);
constraint bool_clause([],[aux1_BOOL,aux76_BOOL]);
constraint bool_clause([],[aux81_BOOL,aux155_BOOL]);
constraint bool_clause([],[aux155_BOOL,aux154_BOOL]);
constraint bool_clause([],[aux154_BOOL,aux153_BOOL]);
constraint bool_clause([],[aux153_BOOL,aux152_BOOL]);
constraint bool_clause([],[aux152_BOOL,aux102_BOOL]);
constraint bool_clause([],[aux128_BOOL,aux26_BOOL]);
constraint bool_clause([],[aux26_BOOL,aux27_BOOL]);
constraint bool_clause([],[aux27_BOOL,aux24_BOOL]);
constraint bool_clause([],[aux24_BOOL,aux25_BOOL]);
constraint bool_clause([],[aux25_BOOL,aux34_BOOL]);
constraint bool_clause([],[aux74_BOOL,aux170_BOOL]);
constraint bool_clause([],[aux170_BOOL,aux169_BOOL]);
constraint bool_clause([],[aux169_BOOL,aux172_BOOL]);
constraint bool_clause([],[aux172_BOOL,aux171_BOOL]);
constraint bool_clause([],[aux171_BOOL,aux242_BOOL]);
constraint bool_clause([],[aux249_BOOL,aux48_BOOL]);
constraint bool_clause([],[aux48_BOOL,aux49_BOOL]);
constraint bool_clause([],[aux49_BOOL,aux50_BOOL]);
constraint bool_clause([],[aux50_BOOL,aux51_BOOL]);
constraint bool_clause([],[aux51_BOOL,aux259_BOOL]);
constraint bool_clause([],[aux65_BOOL,aux251_BOOL]);
constraint bool_clause([],[aux251_BOOL,aux254_BOOL]);
constraint bool_clause([],[aux254_BOOL,aux253_BOOL]);
constraint bool_clause([],[aux253_BOOL,aux252_BOOL]);
constraint bool_clause([],[aux252_BOOL,aux69_BOOL]);
constraint bool_clause([],[aux125_BOOL,aux56_BOOL]);
constraint bool_clause([],[aux56_BOOL,aux58_BOOL]);
constraint bool_clause([],[aux58_BOOL,aux57_BOOL]);
constraint bool_clause([],[aux57_BOOL,aux59_BOOL]);
constraint bool_clause([],[aux59_BOOL,aux132_BOOL]);
constraint bool_clause([],[aux111_BOOL,aux151_BOOL]);
constraint bool_clause([],[aux151_BOOL,aux150_BOOL]);
constraint bool_clause([],[aux150_BOOL,aux149_BOOL]);
constraint bool_clause([],[aux149_BOOL,aux148_BOOL]);
constraint bool_clause([],[aux148_BOOL,aux177_BOOL]);
constraint int_lin_le([-1,-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux286_INTEGER,aux295_INTEGER,aux302_INTEGER,aux312_INTEGER,aux320_INTEGER,aux325_INTEGER,aux334_INTEGER,aux338_INTEGER,aux341_INTEGER,aux347_INTEGER,aux366_INTEGER,aux378_INTEGER,aux393_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux279_INTEGER,aux286_INTEGER,aux295_INTEGER,aux302_INTEGER,aux312_INTEGER,aux320_INTEGER,aux325_INTEGER,aux334_INTEGER,aux338_INTEGER,aux341_INTEGER,aux347_INTEGER,aux378_INTEGER,aux393_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux279_INTEGER,aux286_INTEGER,aux295_INTEGER,aux302_INTEGER,aux312_INTEGER,aux319_INTEGER,aux320_INTEGER,aux325_INTEGER,aux334_INTEGER,aux338_INTEGER,aux341_INTEGER,aux347_INTEGER,aux393_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux279_INTEGER,aux286_INTEGER,aux295_INTEGER,aux302_INTEGER,aux312_INTEGER,aux319_INTEGER,aux320_INTEGER,aux325_INTEGER,aux327_INTEGER,aux334_INTEGER,aux338_INTEGER,aux341_INTEGER,aux393_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux279_INTEGER,aux286_INTEGER,aux295_INTEGER,aux302_INTEGER,aux312_INTEGER,aux319_INTEGER,aux320_INTEGER,aux325_INTEGER,aux327_INTEGER,aux334_INTEGER,aux341_INTEGER,aux365_INTEGER,aux393_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,1],[aux279_INTEGER,aux283_INTEGER,aux286_INTEGER,aux295_INTEGER,aux302_INTEGER,aux312_INTEGER,aux319_INTEGER,aux320_INTEGER,aux325_INTEGER,aux327_INTEGER,aux341_INTEGER,aux365_INTEGER,aux393_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux279_INTEGER,aux283_INTEGER,aux286_INTEGER,aux295_INTEGER,aux302_INTEGER,aux312_INTEGER,aux319_INTEGER,aux320_INTEGER,aux325_INTEGER,aux327_INTEGER,aux341_INTEGER,aux365_INTEGER,aux393_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux279_INTEGER,aux283_INTEGER,aux286_INTEGER,aux295_INTEGER,aux302_INTEGER,aux311_INTEGER,aux312_INTEGER,aux319_INTEGER,aux325_INTEGER,aux327_INTEGER,aux341_INTEGER,aux365_INTEGER,aux393_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux279_INTEGER,aux283_INTEGER,aux286_INTEGER,aux295_INTEGER,aux302_INTEGER,aux311_INTEGER,aux312_INTEGER,aux319_INTEGER,aux327_INTEGER,aux341_INTEGER,aux354_INTEGER,aux365_INTEGER,aux393_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux279_INTEGER,aux283_INTEGER,aux286_INTEGER,aux295_INTEGER,aux302_INTEGER,aux311_INTEGER,aux312_INTEGER,aux319_INTEGER,aux327_INTEGER,aux348_INTEGER,aux354_INTEGER,aux365_INTEGER,aux393_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux279_INTEGER,aux283_INTEGER,aux295_INTEGER,aux302_INTEGER,aux311_INTEGER,aux312_INTEGER,aux319_INTEGER,aux327_INTEGER,aux348_INTEGER,aux354_INTEGER,aux365_INTEGER,aux388_INTEGER,aux393_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux279_INTEGER,aux283_INTEGER,aux302_INTEGER,aux311_INTEGER,aux312_INTEGER,aux319_INTEGER,aux327_INTEGER,aux348_INTEGER,aux354_INTEGER,aux365_INTEGER,aux376_INTEGER,aux388_INTEGER,aux393_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux279_INTEGER,aux283_INTEGER,aux294_INTEGER,aux311_INTEGER,aux312_INTEGER,aux319_INTEGER,aux327_INTEGER,aux348_INTEGER,aux354_INTEGER,aux365_INTEGER,aux376_INTEGER,aux388_INTEGER,aux393_INTEGER,2],0);
constraint int_lin_le([-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux279_INTEGER,aux283_INTEGER,aux294_INTEGER,aux311_INTEGER,aux312_INTEGER,aux319_INTEGER,aux327_INTEGER,aux348_INTEGER,aux354_INTEGER,aux365_INTEGER,aux376_INTEGER,aux388_INTEGER,aux393_INTEGER,2],0);
constraint int_lin_le([-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux279_INTEGER,aux283_INTEGER,aux294_INTEGER,aux298_INTEGER,aux311_INTEGER,aux319_INTEGER,aux327_INTEGER,aux348_INTEGER,aux354_INTEGER,aux365_INTEGER,aux376_INTEGER,aux388_INTEGER,aux393_INTEGER,2],0);
constraint int_lin_le([-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux279_INTEGER,aux283_INTEGER,aux294_INTEGER,aux298_INTEGER,aux311_INTEGER,aux313_INTEGER,aux319_INTEGER,aux327_INTEGER,aux348_INTEGER,aux354_INTEGER,aux365_INTEGER,aux376_INTEGER,aux388_INTEGER,2],0);
constraint int_lin_le([-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux283_INTEGER,aux294_INTEGER,aux298_INTEGER,aux311_INTEGER,aux313_INTEGER,aux319_INTEGER,aux327_INTEGER,aux328_INTEGER,aux348_INTEGER,aux354_INTEGER,aux365_INTEGER,aux376_INTEGER,aux388_INTEGER,2],0);
constraint int_lin_le([-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux283_INTEGER,aux294_INTEGER,aux298_INTEGER,aux311_INTEGER,aux313_INTEGER,aux327_INTEGER,aux328_INTEGER,aux344_INTEGER,aux348_INTEGER,aux354_INTEGER,aux365_INTEGER,aux376_INTEGER,aux388_INTEGER,2],0);
constraint int_lin_le([-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux283_INTEGER,aux294_INTEGER,aux298_INTEGER,aux311_INTEGER,aux313_INTEGER,aux328_INTEGER,aux344_INTEGER,aux348_INTEGER,aux354_INTEGER,aux356_INTEGER,aux365_INTEGER,aux376_INTEGER,aux388_INTEGER,2],0);
constraint int_lin_le([-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux283_INTEGER,aux294_INTEGER,aux298_INTEGER,aux311_INTEGER,aux313_INTEGER,aux328_INTEGER,aux344_INTEGER,aux348_INTEGER,aux354_INTEGER,aux356_INTEGER,aux376_INTEGER,aux388_INTEGER,aux394_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux283_INTEGER,aux294_INTEGER,aux298_INTEGER,aux311_INTEGER,aux313_INTEGER,aux328_INTEGER,aux344_INTEGER,aux348_INTEGER,aux354_INTEGER,aux356_INTEGER,aux376_INTEGER,aux388_INTEGER,aux394_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux290_INTEGER,aux294_INTEGER,aux298_INTEGER,aux311_INTEGER,aux313_INTEGER,aux328_INTEGER,aux344_INTEGER,aux348_INTEGER,aux354_INTEGER,aux356_INTEGER,aux376_INTEGER,aux388_INTEGER,aux394_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux290_INTEGER,aux294_INTEGER,aux298_INTEGER,aux313_INTEGER,aux328_INTEGER,aux344_INTEGER,aux348_INTEGER,aux354_INTEGER,aux356_INTEGER,aux376_INTEGER,aux382_INTEGER,aux388_INTEGER,aux394_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux290_INTEGER,aux294_INTEGER,aux298_INTEGER,aux313_INTEGER,aux328_INTEGER,aux344_INTEGER,aux348_INTEGER,aux356_INTEGER,aux362_INTEGER,aux376_INTEGER,aux382_INTEGER,aux388_INTEGER,aux394_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux290_INTEGER,aux294_INTEGER,aux298_INTEGER,aux313_INTEGER,aux328_INTEGER,aux342_INTEGER,aux344_INTEGER,aux356_INTEGER,aux362_INTEGER,aux376_INTEGER,aux382_INTEGER,aux388_INTEGER,aux394_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux290_INTEGER,aux294_INTEGER,aux298_INTEGER,aux313_INTEGER,aux321_INTEGER,aux328_INTEGER,aux342_INTEGER,aux344_INTEGER,aux356_INTEGER,aux362_INTEGER,aux376_INTEGER,aux382_INTEGER,aux394_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux290_INTEGER,aux294_INTEGER,aux298_INTEGER,aux313_INTEGER,aux321_INTEGER,aux328_INTEGER,aux342_INTEGER,aux344_INTEGER,aux356_INTEGER,aux362_INTEGER,aux369_INTEGER,aux382_INTEGER,aux394_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,1],[aux290_INTEGER,aux294_INTEGER,aux298_INTEGER,aux313_INTEGER,aux321_INTEGER,aux328_INTEGER,aux342_INTEGER,aux344_INTEGER,aux356_INTEGER,aux362_INTEGER,aux369_INTEGER,aux382_INTEGER,aux394_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,1],[aux282_INTEGER,aux290_INTEGER,aux298_INTEGER,aux313_INTEGER,aux321_INTEGER,aux328_INTEGER,aux342_INTEGER,aux344_INTEGER,aux356_INTEGER,aux362_INTEGER,aux369_INTEGER,aux382_INTEGER,aux394_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,1],[aux282_INTEGER,aux290_INTEGER,aux313_INTEGER,aux321_INTEGER,aux322_INTEGER,aux328_INTEGER,aux342_INTEGER,aux344_INTEGER,aux356_INTEGER,aux362_INTEGER,aux369_INTEGER,aux382_INTEGER,aux394_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,1],[aux282_INTEGER,aux290_INTEGER,aux321_INTEGER,aux322_INTEGER,aux328_INTEGER,aux342_INTEGER,aux344_INTEGER,aux356_INTEGER,aux358_INTEGER,aux362_INTEGER,aux369_INTEGER,aux382_INTEGER,aux394_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,-1,1],[aux282_INTEGER,aux290_INTEGER,aux321_INTEGER,aux322_INTEGER,aux342_INTEGER,aux344_INTEGER,aux356_INTEGER,aux358_INTEGER,aux362_INTEGER,aux369_INTEGER,aux382_INTEGER,aux394_INTEGER,aux395_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,1],[aux282_INTEGER,aux290_INTEGER,aux321_INTEGER,aux322_INTEGER,aux342_INTEGER,aux356_INTEGER,aux358_INTEGER,aux362_INTEGER,aux369_INTEGER,aux374_INTEGER,aux382_INTEGER,aux394_INTEGER,aux395_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,1],[aux282_INTEGER,aux290_INTEGER,aux321_INTEGER,aux322_INTEGER,aux339_INTEGER,aux342_INTEGER,aux358_INTEGER,aux362_INTEGER,aux369_INTEGER,aux374_INTEGER,aux382_INTEGER,aux394_INTEGER,aux395_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux282_INTEGER,aux290_INTEGER,aux321_INTEGER,aux322_INTEGER,aux339_INTEGER,aux342_INTEGER,aux358_INTEGER,aux362_INTEGER,aux369_INTEGER,aux374_INTEGER,aux382_INTEGER,aux394_INTEGER,aux395_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,1],[aux278_INTEGER,aux282_INTEGER,aux290_INTEGER,aux321_INTEGER,aux322_INTEGER,aux339_INTEGER,aux342_INTEGER,aux358_INTEGER,aux362_INTEGER,aux369_INTEGER,aux374_INTEGER,aux382_INTEGER,aux395_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,1],[aux278_INTEGER,aux282_INTEGER,aux307_INTEGER,aux321_INTEGER,aux322_INTEGER,aux339_INTEGER,aux342_INTEGER,aux358_INTEGER,aux362_INTEGER,aux369_INTEGER,aux374_INTEGER,aux382_INTEGER,aux395_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,1],[aux278_INTEGER,aux282_INTEGER,aux307_INTEGER,aux321_INTEGER,aux322_INTEGER,aux329_INTEGER,aux339_INTEGER,aux342_INTEGER,aux358_INTEGER,aux362_INTEGER,aux369_INTEGER,aux374_INTEGER,aux395_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,1],[aux278_INTEGER,aux282_INTEGER,aux307_INTEGER,aux321_INTEGER,aux322_INTEGER,aux329_INTEGER,aux339_INTEGER,aux342_INTEGER,aux350_INTEGER,aux358_INTEGER,aux369_INTEGER,aux374_INTEGER,aux395_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,1],[aux278_INTEGER,aux282_INTEGER,aux307_INTEGER,aux321_INTEGER,aux322_INTEGER,aux329_INTEGER,aux339_INTEGER,aux350_INTEGER,aux358_INTEGER,aux369_INTEGER,aux370_INTEGER,aux374_INTEGER,aux395_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,1],[aux278_INTEGER,aux282_INTEGER,aux307_INTEGER,aux322_INTEGER,aux329_INTEGER,aux339_INTEGER,aux350_INTEGER,aux358_INTEGER,aux369_INTEGER,aux370_INTEGER,aux371_INTEGER,aux374_INTEGER,aux395_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,1],[aux278_INTEGER,aux282_INTEGER,aux307_INTEGER,aux322_INTEGER,aux329_INTEGER,aux339_INTEGER,aux350_INTEGER,aux358_INTEGER,aux369_INTEGER,aux370_INTEGER,aux371_INTEGER,aux374_INTEGER,aux395_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,1],[aux278_INTEGER,aux282_INTEGER,aux307_INTEGER,aux322_INTEGER,aux329_INTEGER,aux339_INTEGER,aux345_INTEGER,aux350_INTEGER,aux358_INTEGER,aux370_INTEGER,aux371_INTEGER,aux374_INTEGER,aux395_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux278_INTEGER,aux307_INTEGER,aux322_INTEGER,aux329_INTEGER,aux339_INTEGER,aux345_INTEGER,aux350_INTEGER,aux358_INTEGER,aux370_INTEGER,aux371_INTEGER,aux374_INTEGER,aux383_INTEGER,aux395_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux278_INTEGER,aux307_INTEGER,aux329_INTEGER,aux339_INTEGER,aux345_INTEGER,aux350_INTEGER,aux358_INTEGER,aux370_INTEGER,aux371_INTEGER,aux372_INTEGER,aux374_INTEGER,aux383_INTEGER,aux395_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux278_INTEGER,aux300_INTEGER,aux307_INTEGER,aux329_INTEGER,aux339_INTEGER,aux345_INTEGER,aux350_INTEGER,aux370_INTEGER,aux371_INTEGER,aux372_INTEGER,aux374_INTEGER,aux383_INTEGER,aux395_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,1],[aux278_INTEGER,aux281_INTEGER,aux300_INTEGER,aux307_INTEGER,aux329_INTEGER,aux339_INTEGER,aux345_INTEGER,aux350_INTEGER,aux370_INTEGER,aux371_INTEGER,aux372_INTEGER,aux374_INTEGER,aux383_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,1],[aux278_INTEGER,aux281_INTEGER,aux300_INTEGER,aux307_INTEGER,aux326_INTEGER,aux329_INTEGER,aux339_INTEGER,aux345_INTEGER,aux350_INTEGER,aux370_INTEGER,aux371_INTEGER,aux372_INTEGER,aux383_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux278_INTEGER,aux281_INTEGER,aux300_INTEGER,aux307_INTEGER,aux326_INTEGER,aux329_INTEGER,aux339_INTEGER,aux345_INTEGER,aux350_INTEGER,aux370_INTEGER,aux371_INTEGER,aux372_INTEGER,aux383_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux278_INTEGER,aux281_INTEGER,aux300_INTEGER,aux307_INTEGER,aux326_INTEGER,aux329_INTEGER,aux332_INTEGER,aux345_INTEGER,aux350_INTEGER,aux370_INTEGER,aux371_INTEGER,aux372_INTEGER,aux383_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux281_INTEGER,aux296_INTEGER,aux300_INTEGER,aux307_INTEGER,aux326_INTEGER,aux329_INTEGER,aux332_INTEGER,aux345_INTEGER,aux350_INTEGER,aux370_INTEGER,aux371_INTEGER,aux372_INTEGER,aux383_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux281_INTEGER,aux296_INTEGER,aux300_INTEGER,aux326_INTEGER,aux329_INTEGER,aux332_INTEGER,aux345_INTEGER,aux350_INTEGER,aux370_INTEGER,aux371_INTEGER,aux372_INTEGER,aux375_INTEGER,aux383_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux281_INTEGER,aux296_INTEGER,aux300_INTEGER,aux326_INTEGER,aux332_INTEGER,aux345_INTEGER,aux350_INTEGER,aux370_INTEGER,aux371_INTEGER,aux372_INTEGER,aux375_INTEGER,aux383_INTEGER,aux396_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux281_INTEGER,aux296_INTEGER,aux300_INTEGER,aux326_INTEGER,aux332_INTEGER,aux345_INTEGER,aux360_INTEGER,aux370_INTEGER,aux371_INTEGER,aux372_INTEGER,aux375_INTEGER,aux383_INTEGER,aux396_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux281_INTEGER,aux296_INTEGER,aux300_INTEGER,aux326_INTEGER,aux332_INTEGER,aux336_INTEGER,aux345_INTEGER,aux360_INTEGER,aux371_INTEGER,aux372_INTEGER,aux375_INTEGER,aux383_INTEGER,aux396_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux281_INTEGER,aux296_INTEGER,aux300_INTEGER,aux326_INTEGER,aux332_INTEGER,aux336_INTEGER,aux345_INTEGER,aux360_INTEGER,aux371_INTEGER,aux372_INTEGER,aux375_INTEGER,aux383_INTEGER,aux396_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux281_INTEGER,aux296_INTEGER,aux300_INTEGER,aux326_INTEGER,aux332_INTEGER,aux336_INTEGER,aux345_INTEGER,aux360_INTEGER,aux372_INTEGER,aux375_INTEGER,aux383_INTEGER,aux386_INTEGER,aux396_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux281_INTEGER,aux296_INTEGER,aux300_INTEGER,aux308_INTEGER,aux326_INTEGER,aux332_INTEGER,aux336_INTEGER,aux360_INTEGER,aux372_INTEGER,aux375_INTEGER,aux383_INTEGER,aux386_INTEGER,aux396_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,1],[aux281_INTEGER,aux296_INTEGER,aux300_INTEGER,aux308_INTEGER,aux314_INTEGER,aux326_INTEGER,aux332_INTEGER,aux336_INTEGER,aux360_INTEGER,aux372_INTEGER,aux375_INTEGER,aux386_INTEGER,aux396_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,1],[aux281_INTEGER,aux296_INTEGER,aux300_INTEGER,aux308_INTEGER,aux314_INTEGER,aux326_INTEGER,aux332_INTEGER,aux336_INTEGER,aux351_INTEGER,aux360_INTEGER,aux375_INTEGER,aux386_INTEGER,aux396_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux281_INTEGER,aux296_INTEGER,aux308_INTEGER,aux314_INTEGER,aux326_INTEGER,aux332_INTEGER,aux336_INTEGER,aux351_INTEGER,aux360_INTEGER,aux361_INTEGER,aux375_INTEGER,aux386_INTEGER,aux396_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux296_INTEGER,aux308_INTEGER,aux314_INTEGER,aux326_INTEGER,aux332_INTEGER,aux336_INTEGER,aux351_INTEGER,aux360_INTEGER,aux361_INTEGER,aux375_INTEGER,aux379_INTEGER,aux386_INTEGER,aux396_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,1],[aux296_INTEGER,aux308_INTEGER,aux314_INTEGER,aux326_INTEGER,aux332_INTEGER,aux336_INTEGER,aux351_INTEGER,aux360_INTEGER,aux361_INTEGER,aux375_INTEGER,aux379_INTEGER,aux386_INTEGER,aux396_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,1],[aux296_INTEGER,aux306_INTEGER,aux308_INTEGER,aux314_INTEGER,aux332_INTEGER,aux336_INTEGER,aux351_INTEGER,aux360_INTEGER,aux361_INTEGER,aux375_INTEGER,aux379_INTEGER,aux386_INTEGER,aux396_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,1],[aux291_INTEGER,aux296_INTEGER,aux306_INTEGER,aux308_INTEGER,aux314_INTEGER,aux336_INTEGER,aux351_INTEGER,aux360_INTEGER,aux361_INTEGER,aux375_INTEGER,aux379_INTEGER,aux386_INTEGER,aux396_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux291_INTEGER,aux306_INTEGER,aux308_INTEGER,aux314_INTEGER,aux336_INTEGER,aux351_INTEGER,aux360_INTEGER,aux361_INTEGER,aux375_INTEGER,aux379_INTEGER,aux386_INTEGER,aux390_INTEGER,aux396_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux291_INTEGER,aux306_INTEGER,aux308_INTEGER,aux314_INTEGER,aux336_INTEGER,aux351_INTEGER,aux360_INTEGER,aux361_INTEGER,aux377_INTEGER,aux379_INTEGER,aux386_INTEGER,aux390_INTEGER,aux396_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux291_INTEGER,aux306_INTEGER,aux308_INTEGER,aux314_INTEGER,aux336_INTEGER,aux351_INTEGER,aux360_INTEGER,aux361_INTEGER,aux364_INTEGER,aux377_INTEGER,aux379_INTEGER,aux386_INTEGER,aux390_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux291_INTEGER,aux306_INTEGER,aux308_INTEGER,aux314_INTEGER,aux336_INTEGER,aux351_INTEGER,aux361_INTEGER,aux364_INTEGER,aux377_INTEGER,aux379_INTEGER,aux386_INTEGER,aux390_INTEGER,aux392_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,1],[aux291_INTEGER,aux306_INTEGER,aux308_INTEGER,aux314_INTEGER,aux336_INTEGER,aux351_INTEGER,aux361_INTEGER,aux364_INTEGER,aux377_INTEGER,aux379_INTEGER,aux386_INTEGER,aux390_INTEGER,aux392_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,1],[aux291_INTEGER,aux306_INTEGER,aux308_INTEGER,aux314_INTEGER,aux330_INTEGER,aux351_INTEGER,aux361_INTEGER,aux364_INTEGER,aux377_INTEGER,aux379_INTEGER,aux386_INTEGER,aux390_INTEGER,aux392_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,1],[aux291_INTEGER,aux306_INTEGER,aux308_INTEGER,aux314_INTEGER,aux315_INTEGER,aux330_INTEGER,aux351_INTEGER,aux361_INTEGER,aux364_INTEGER,aux377_INTEGER,aux379_INTEGER,aux390_INTEGER,aux392_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,1],[aux291_INTEGER,aux304_INTEGER,aux306_INTEGER,aux314_INTEGER,aux315_INTEGER,aux330_INTEGER,aux351_INTEGER,aux361_INTEGER,aux364_INTEGER,aux377_INTEGER,aux379_INTEGER,aux390_INTEGER,aux392_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-2,1],[aux288_INTEGER,aux291_INTEGER,aux304_INTEGER,aux306_INTEGER,aux315_INTEGER,aux330_INTEGER,aux351_INTEGER,aux361_INTEGER,aux364_INTEGER,aux377_INTEGER,aux379_INTEGER,aux390_INTEGER,aux392_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,1],[aux288_INTEGER,aux291_INTEGER,aux304_INTEGER,aux306_INTEGER,aux315_INTEGER,aux330_INTEGER,aux361_INTEGER,aux364_INTEGER,aux377_INTEGER,aux379_INTEGER,aux389_INTEGER,aux390_INTEGER,aux392_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,1],[aux288_INTEGER,aux291_INTEGER,aux301_INTEGER,aux304_INTEGER,aux306_INTEGER,aux315_INTEGER,aux330_INTEGER,aux364_INTEGER,aux377_INTEGER,aux379_INTEGER,aux389_INTEGER,aux390_INTEGER,aux392_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux288_INTEGER,aux291_INTEGER,aux301_INTEGER,aux304_INTEGER,aux306_INTEGER,aux315_INTEGER,aux330_INTEGER,aux364_INTEGER,aux377_INTEGER,aux379_INTEGER,aux389_INTEGER,aux390_INTEGER,aux392_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux285_INTEGER,aux288_INTEGER,aux291_INTEGER,aux301_INTEGER,aux304_INTEGER,aux306_INTEGER,aux315_INTEGER,aux330_INTEGER,aux364_INTEGER,aux377_INTEGER,aux389_INTEGER,aux390_INTEGER,aux392_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux285_INTEGER,aux288_INTEGER,aux291_INTEGER,aux301_INTEGER,aux304_INTEGER,aux315_INTEGER,aux330_INTEGER,aux364_INTEGER,aux377_INTEGER,aux380_INTEGER,aux389_INTEGER,aux390_INTEGER,aux392_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux285_INTEGER,aux288_INTEGER,aux301_INTEGER,aux304_INTEGER,aux315_INTEGER,aux330_INTEGER,aux359_INTEGER,aux364_INTEGER,aux377_INTEGER,aux380_INTEGER,aux389_INTEGER,aux390_INTEGER,aux392_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux285_INTEGER,aux288_INTEGER,aux301_INTEGER,aux304_INTEGER,aux315_INTEGER,aux330_INTEGER,aux340_INTEGER,aux359_INTEGER,aux364_INTEGER,aux377_INTEGER,aux380_INTEGER,aux389_INTEGER,aux392_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux285_INTEGER,aux288_INTEGER,aux301_INTEGER,aux304_INTEGER,aux315_INTEGER,aux318_INTEGER,aux330_INTEGER,aux340_INTEGER,aux359_INTEGER,aux364_INTEGER,aux380_INTEGER,aux389_INTEGER,aux392_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-2,1],[aux285_INTEGER,aux288_INTEGER,aux293_INTEGER,aux301_INTEGER,aux304_INTEGER,aux315_INTEGER,aux318_INTEGER,aux330_INTEGER,aux340_INTEGER,aux359_INTEGER,aux380_INTEGER,aux389_INTEGER,aux392_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux285_INTEGER,aux288_INTEGER,aux293_INTEGER,aux301_INTEGER,aux304_INTEGER,aux315_INTEGER,aux318_INTEGER,aux330_INTEGER,aux340_INTEGER,aux359_INTEGER,aux380_INTEGER,aux389_INTEGER,aux392_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux284_INTEGER,aux285_INTEGER,aux288_INTEGER,aux293_INTEGER,aux301_INTEGER,aux304_INTEGER,aux315_INTEGER,aux318_INTEGER,aux330_INTEGER,aux340_INTEGER,aux359_INTEGER,aux380_INTEGER,aux389_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux284_INTEGER,aux285_INTEGER,aux288_INTEGER,aux293_INTEGER,aux301_INTEGER,aux304_INTEGER,aux309_INTEGER,aux315_INTEGER,aux318_INTEGER,aux340_INTEGER,aux359_INTEGER,aux380_INTEGER,aux389_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux284_INTEGER,aux285_INTEGER,aux288_INTEGER,aux293_INTEGER,aux301_INTEGER,aux304_INTEGER,aux309_INTEGER,aux318_INTEGER,aux340_INTEGER,aux359_INTEGER,aux380_INTEGER,aux387_INTEGER,aux389_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux284_INTEGER,aux285_INTEGER,aux288_INTEGER,aux293_INTEGER,aux301_INTEGER,aux309_INTEGER,aux318_INTEGER,aux340_INTEGER,aux352_INTEGER,aux359_INTEGER,aux380_INTEGER,aux387_INTEGER,aux389_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux284_INTEGER,aux285_INTEGER,aux293_INTEGER,aux301_INTEGER,aux309_INTEGER,aux316_INTEGER,aux318_INTEGER,aux340_INTEGER,aux352_INTEGER,aux359_INTEGER,aux380_INTEGER,aux387_INTEGER,aux389_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux284_INTEGER,aux285_INTEGER,aux293_INTEGER,aux301_INTEGER,aux309_INTEGER,aux316_INTEGER,aux318_INTEGER,aux340_INTEGER,aux352_INTEGER,aux359_INTEGER,aux363_INTEGER,aux380_INTEGER,aux387_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux284_INTEGER,aux285_INTEGER,aux293_INTEGER,aux301_INTEGER,aux309_INTEGER,aux316_INTEGER,aux318_INTEGER,aux340_INTEGER,aux352_INTEGER,aux359_INTEGER,aux363_INTEGER,aux380_INTEGER,aux387_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux284_INTEGER,aux285_INTEGER,aux293_INTEGER,aux303_INTEGER,aux309_INTEGER,aux316_INTEGER,aux318_INTEGER,aux340_INTEGER,aux352_INTEGER,aux359_INTEGER,aux363_INTEGER,aux380_INTEGER,aux387_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux284_INTEGER,aux293_INTEGER,aux303_INTEGER,aux309_INTEGER,aux316_INTEGER,aux318_INTEGER,aux323_INTEGER,aux340_INTEGER,aux352_INTEGER,aux359_INTEGER,aux363_INTEGER,aux380_INTEGER,aux387_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,1],[aux284_INTEGER,aux293_INTEGER,aux303_INTEGER,aux309_INTEGER,aux316_INTEGER,aux318_INTEGER,aux323_INTEGER,aux340_INTEGER,aux346_INTEGER,aux352_INTEGER,aux359_INTEGER,aux363_INTEGER,aux387_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,1],[aux284_INTEGER,aux293_INTEGER,aux303_INTEGER,aux309_INTEGER,aux316_INTEGER,aux318_INTEGER,aux323_INTEGER,aux340_INTEGER,aux346_INTEGER,aux352_INTEGER,aux363_INTEGER,aux367_INTEGER,aux387_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux284_INTEGER,aux293_INTEGER,aux303_INTEGER,aux309_INTEGER,aux316_INTEGER,aux318_INTEGER,aux323_INTEGER,aux346_INTEGER,aux352_INTEGER,aux363_INTEGER,aux367_INTEGER,aux385_INTEGER,aux387_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-1,1],[aux284_INTEGER,aux293_INTEGER,aux303_INTEGER,aux309_INTEGER,aux316_INTEGER,aux323_INTEGER,aux335_INTEGER,aux346_INTEGER,aux352_INTEGER,aux363_INTEGER,aux367_INTEGER,aux385_INTEGER,aux387_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,1],[aux284_INTEGER,aux293_INTEGER,aux303_INTEGER,aux309_INTEGER,aux316_INTEGER,aux323_INTEGER,aux335_INTEGER,aux346_INTEGER,aux352_INTEGER,aux363_INTEGER,aux367_INTEGER,aux385_INTEGER,aux387_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,1],[aux284_INTEGER,aux289_INTEGER,aux303_INTEGER,aux309_INTEGER,aux316_INTEGER,aux323_INTEGER,aux335_INTEGER,aux346_INTEGER,aux352_INTEGER,aux363_INTEGER,aux367_INTEGER,aux385_INTEGER,aux387_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,1],[aux289_INTEGER,aux303_INTEGER,aux305_INTEGER,aux309_INTEGER,aux316_INTEGER,aux323_INTEGER,aux335_INTEGER,aux346_INTEGER,aux352_INTEGER,aux363_INTEGER,aux367_INTEGER,aux385_INTEGER,aux387_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,1],[aux289_INTEGER,aux303_INTEGER,aux305_INTEGER,aux316_INTEGER,aux317_INTEGER,aux323_INTEGER,aux335_INTEGER,aux346_INTEGER,aux352_INTEGER,aux363_INTEGER,aux367_INTEGER,aux385_INTEGER,aux387_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,1],[aux289_INTEGER,aux303_INTEGER,aux305_INTEGER,aux316_INTEGER,aux317_INTEGER,aux323_INTEGER,aux333_INTEGER,aux335_INTEGER,aux346_INTEGER,aux352_INTEGER,aux363_INTEGER,aux367_INTEGER,aux385_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,1],[aux289_INTEGER,aux303_INTEGER,aux305_INTEGER,aux316_INTEGER,aux317_INTEGER,aux323_INTEGER,aux333_INTEGER,aux335_INTEGER,aux346_INTEGER,aux349_INTEGER,aux363_INTEGER,aux367_INTEGER,aux385_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,1],[aux289_INTEGER,aux303_INTEGER,aux305_INTEGER,aux310_INTEGER,aux317_INTEGER,aux323_INTEGER,aux333_INTEGER,aux335_INTEGER,aux346_INTEGER,aux349_INTEGER,aux363_INTEGER,aux367_INTEGER,aux385_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,1],[aux289_INTEGER,aux303_INTEGER,aux305_INTEGER,aux310_INTEGER,aux317_INTEGER,aux323_INTEGER,aux333_INTEGER,aux335_INTEGER,aux346_INTEGER,aux349_INTEGER,aux363_INTEGER,aux367_INTEGER,aux385_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux289_INTEGER,aux299_INTEGER,aux303_INTEGER,aux305_INTEGER,aux310_INTEGER,aux317_INTEGER,aux323_INTEGER,aux333_INTEGER,aux335_INTEGER,aux346_INTEGER,aux349_INTEGER,aux367_INTEGER,aux385_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,1],[aux280_INTEGER,aux289_INTEGER,aux299_INTEGER,aux305_INTEGER,aux310_INTEGER,aux317_INTEGER,aux323_INTEGER,aux333_INTEGER,aux335_INTEGER,aux346_INTEGER,aux349_INTEGER,aux367_INTEGER,aux385_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,1],[aux280_INTEGER,aux289_INTEGER,aux299_INTEGER,aux305_INTEGER,aux310_INTEGER,aux317_INTEGER,aux333_INTEGER,aux335_INTEGER,aux346_INTEGER,aux349_INTEGER,aux367_INTEGER,aux384_INTEGER,aux385_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,1],[aux280_INTEGER,aux289_INTEGER,aux299_INTEGER,aux305_INTEGER,aux310_INTEGER,aux317_INTEGER,aux333_INTEGER,aux335_INTEGER,aux349_INTEGER,aux367_INTEGER,aux373_INTEGER,aux384_INTEGER,aux385_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,1],[aux280_INTEGER,aux289_INTEGER,aux299_INTEGER,aux305_INTEGER,aux310_INTEGER,aux317_INTEGER,aux333_INTEGER,aux335_INTEGER,aux349_INTEGER,aux357_INTEGER,aux373_INTEGER,aux384_INTEGER,aux385_INTEGER,2],0);
constraint int_lin_le([-1,-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,1],[aux280_INTEGER,aux289_INTEGER,aux292_INTEGER,aux299_INTEGER,aux305_INTEGER,aux310_INTEGER,aux317_INTEGER,aux333_INTEGER,aux335_INTEGER,aux349_INTEGER,aux357_INTEGER,aux373_INTEGER,aux384_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux280_INTEGER,aux289_INTEGER,aux292_INTEGER,aux299_INTEGER,aux305_INTEGER,aux310_INTEGER,aux317_INTEGER,aux333_INTEGER,aux335_INTEGER,aux349_INTEGER,aux357_INTEGER,aux373_INTEGER,aux384_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux280_INTEGER,aux289_INTEGER,aux292_INTEGER,aux299_INTEGER,aux305_INTEGER,aux310_INTEGER,aux317_INTEGER,aux333_INTEGER,aux349_INTEGER,aux357_INTEGER,aux373_INTEGER,aux384_INTEGER,aux391_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux280_INTEGER,aux292_INTEGER,aux299_INTEGER,aux305_INTEGER,aux310_INTEGER,aux317_INTEGER,aux333_INTEGER,aux349_INTEGER,aux355_INTEGER,aux357_INTEGER,aux373_INTEGER,aux384_INTEGER,aux391_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux280_INTEGER,aux292_INTEGER,aux299_INTEGER,aux310_INTEGER,aux317_INTEGER,aux331_INTEGER,aux333_INTEGER,aux349_INTEGER,aux355_INTEGER,aux357_INTEGER,aux373_INTEGER,aux384_INTEGER,aux391_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux280_INTEGER,aux292_INTEGER,aux299_INTEGER,aux310_INTEGER,aux324_INTEGER,aux331_INTEGER,aux333_INTEGER,aux349_INTEGER,aux355_INTEGER,aux357_INTEGER,aux373_INTEGER,aux384_INTEGER,aux391_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux280_INTEGER,aux287_INTEGER,aux292_INTEGER,aux299_INTEGER,aux310_INTEGER,aux324_INTEGER,aux331_INTEGER,aux349_INTEGER,aux355_INTEGER,aux357_INTEGER,aux373_INTEGER,aux384_INTEGER,aux391_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux280_INTEGER,aux287_INTEGER,aux292_INTEGER,aux299_INTEGER,aux310_INTEGER,aux324_INTEGER,aux331_INTEGER,aux337_INTEGER,aux355_INTEGER,aux357_INTEGER,aux373_INTEGER,aux384_INTEGER,aux391_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,1],[aux280_INTEGER,aux287_INTEGER,aux292_INTEGER,aux299_INTEGER,aux310_INTEGER,aux324_INTEGER,aux331_INTEGER,aux337_INTEGER,aux355_INTEGER,aux357_INTEGER,aux373_INTEGER,aux384_INTEGER,aux391_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux280_INTEGER,aux287_INTEGER,aux292_INTEGER,aux299_INTEGER,aux324_INTEGER,aux331_INTEGER,aux337_INTEGER,aux353_INTEGER,aux355_INTEGER,aux357_INTEGER,aux373_INTEGER,aux384_INTEGER,aux391_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux280_INTEGER,aux287_INTEGER,aux292_INTEGER,aux324_INTEGER,aux331_INTEGER,aux337_INTEGER,aux343_INTEGER,aux353_INTEGER,aux355_INTEGER,aux357_INTEGER,aux373_INTEGER,aux384_INTEGER,aux391_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux287_INTEGER,aux292_INTEGER,aux324_INTEGER,aux331_INTEGER,aux337_INTEGER,aux343_INTEGER,aux353_INTEGER,aux355_INTEGER,aux357_INTEGER,aux373_INTEGER,aux381_INTEGER,aux384_INTEGER,aux391_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-1,1],[aux287_INTEGER,aux292_INTEGER,aux324_INTEGER,aux331_INTEGER,aux337_INTEGER,aux343_INTEGER,aux353_INTEGER,aux355_INTEGER,aux357_INTEGER,aux368_INTEGER,aux373_INTEGER,aux381_INTEGER,aux391_INTEGER,2],0);
constraint int_lin_le([-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,1],[aux287_INTEGER,aux292_INTEGER,aux297_INTEGER,aux324_INTEGER,aux331_INTEGER,aux337_INTEGER,aux343_INTEGER,aux353_INTEGER,aux355_INTEGER,aux357_INTEGER,aux368_INTEGER,aux381_INTEGER,aux391_INTEGER,2],0);
constraint int_lin_le([-1,-1,-2,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux277_INTEGER,aux287_INTEGER,aux292_INTEGER,aux297_INTEGER,aux324_INTEGER,aux331_INTEGER,aux337_INTEGER,aux343_INTEGER,aux353_INTEGER,aux355_INTEGER,aux368_INTEGER,aux381_INTEGER,aux391_INTEGER,2],0);
constraint int_lin_le([-2,-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,1],[aux277_INTEGER,aux287_INTEGER,aux292_INTEGER,aux297_INTEGER,aux324_INTEGER,aux331_INTEGER,aux337_INTEGER,aux343_INTEGER,aux353_INTEGER,aux355_INTEGER,aux368_INTEGER,aux381_INTEGER,aux391_INTEGER,2],0);
constraint array_bool_or([aux347_BOOL,aux681_BOOL],true);
constraint array_bool_or([aux338_BOOL,aux682_BOOL],true);
constraint array_bool_or([aux334_BOOL,aux683_BOOL],true);
constraint array_bool_or([aux320_BOOL,aux684_BOOL],true);
constraint array_bool_or([aux325_BOOL,aux685_BOOL],true);
constraint array_bool_or([aux341_BOOL,aux686_BOOL],true);
constraint array_bool_or([aux286_BOOL,aux687_BOOL],true);
constraint array_bool_or([aux295_BOOL,aux688_BOOL],true);
constraint array_bool_or([aux302_BOOL,aux689_BOOL],true);
constraint array_bool_or([aux312_BOOL,aux690_BOOL],true);
constraint array_bool_or([aux691_BOOL,aux393_BOOL],true);
constraint array_bool_or([aux279_BOOL,aux692_BOOL],true);
constraint array_bool_or([aux319_BOOL,aux693_BOOL],true);
constraint array_bool_or([aux327_BOOL,aux694_BOOL],true);
constraint array_bool_or([aux365_BOOL,aux695_BOOL],true);
constraint array_bool_or([aux283_BOOL,aux696_BOOL],true);
constraint array_bool_or([aux311_BOOL,aux697_BOOL],true);
constraint array_bool_or([aux698_BOOL,aux354_BOOL],true);
constraint array_bool_or([aux699_BOOL,aux348_BOOL],true);
constraint array_bool_or([aux700_BOOL,aux388_BOOL],true);
constraint array_bool_or([aux701_BOOL,aux376_BOOL],true);
constraint array_bool_or([aux702_BOOL,aux294_BOOL],true);
constraint array_bool_or([aux298_BOOL,aux703_BOOL],true);
constraint array_bool_or([aux313_BOOL,aux704_BOOL],true);
constraint array_bool_or([aux328_BOOL,aux705_BOOL],true);
constraint array_bool_or([aux344_BOOL,aux706_BOOL],true);
constraint array_bool_or([aux356_BOOL,aux707_BOOL],true);
constraint array_bool_or([aux394_BOOL,aux708_BOOL],true);
constraint array_bool_or([aux290_BOOL,aux709_BOOL],true);
constraint array_bool_or([aux382_BOOL,aux710_BOOL],true);
constraint array_bool_or([aux362_BOOL,aux711_BOOL],true);
constraint array_bool_or([aux342_BOOL,aux712_BOOL],true);
constraint array_bool_or([aux321_BOOL,aux713_BOOL],true);
constraint array_bool_or([aux369_BOOL,aux714_BOOL],true);
constraint array_bool_or([aux282_BOOL,aux715_BOOL],true);
constraint array_bool_or([aux322_BOOL,aux716_BOOL],true);
constraint array_bool_or([aux358_BOOL,aux717_BOOL],true);
constraint array_bool_or([aux395_BOOL,aux718_BOOL],true);
constraint array_bool_or([aux374_BOOL,aux719_BOOL],true);
constraint array_bool_or([aux339_BOOL,aux720_BOOL],true);
constraint array_bool_or([aux721_BOOL,aux278_BOOL],true);
constraint array_bool_or([aux307_BOOL,aux722_BOOL],true);
constraint array_bool_or([aux329_BOOL,aux723_BOOL],true);
constraint array_bool_or([aux350_BOOL,aux724_BOOL],true);
constraint array_bool_or([aux370_BOOL,aux725_BOOL],true);
constraint array_bool_or([aux371_BOOL,aux726_BOOL],true);
constraint array_bool_or([aux345_BOOL,aux727_BOOL],true);
constraint array_bool_or([aux728_BOOL,aux383_BOOL],true);
constraint array_bool_or([aux729_BOOL,aux372_BOOL],true);
constraint array_bool_or([aux730_BOOL,aux300_BOOL],true);
constraint array_bool_or([aux731_BOOL,aux281_BOOL],true);
constraint array_bool_or([aux732_BOOL,aux326_BOOL],true);
constraint array_bool_or([aux332_BOOL,aux733_BOOL],true);
constraint array_bool_or([aux296_BOOL,aux734_BOOL],true);
constraint array_bool_or([aux375_BOOL,aux735_BOOL],true);
constraint array_bool_or([aux396_BOOL,aux736_BOOL],true);
constraint array_bool_or([aux360_BOOL,aux737_BOOL],true);
constraint array_bool_or([aux336_BOOL,aux738_BOOL],true);
constraint array_bool_or([aux386_BOOL,aux739_BOOL],true);
constraint array_bool_or([aux740_BOOL,aux308_BOOL],true);
constraint array_bool_or([aux741_BOOL,aux314_BOOL],true);
constraint array_bool_or([aux742_BOOL,aux351_BOOL],true);
constraint array_bool_or([aux743_BOOL,aux361_BOOL],true);
constraint array_bool_or([aux744_BOOL,aux379_BOOL],true);
constraint array_bool_or([aux306_BOOL,aux745_BOOL],true);
constraint array_bool_or([aux291_BOOL,aux746_BOOL],true);
constraint array_bool_or([aux390_BOOL,aux747_BOOL],true);
constraint array_bool_or([aux377_BOOL,aux748_BOOL],true);
constraint array_bool_or([aux364_BOOL,aux749_BOOL],true);
constraint array_bool_or([aux392_BOOL,aux750_BOOL],true);
constraint array_bool_or([aux751_BOOL,aux330_BOOL],true);
constraint array_bool_or([aux752_BOOL,aux315_BOOL],true);
constraint array_bool_or([aux753_BOOL,aux304_BOOL],true);
constraint array_bool_or([aux754_BOOL,aux288_BOOL],true);
constraint array_bool_or([aux755_BOOL,aux389_BOOL],true);
constraint array_bool_or([aux756_BOOL,aux301_BOOL],true);
constraint array_bool_or([aux285_BOOL,aux757_BOOL],true);
constraint array_bool_or([aux380_BOOL,aux758_BOOL],true);
constraint array_bool_or([aux359_BOOL,aux759_BOOL],true);
constraint array_bool_or([aux340_BOOL,aux760_BOOL],true);
constraint array_bool_or([aux318_BOOL,aux761_BOOL],true);
constraint array_bool_or([aux293_BOOL,aux762_BOOL],true);
constraint array_bool_or([aux284_BOOL,aux763_BOOL],true);
constraint array_bool_or([aux309_BOOL,aux764_BOOL],true);
constraint array_bool_or([aux387_BOOL,aux765_BOOL],true);
constraint array_bool_or([aux352_BOOL,aux766_BOOL],true);
constraint array_bool_or([aux316_BOOL,aux767_BOOL],true);
constraint array_bool_or([aux363_BOOL,aux768_BOOL],true);
constraint array_bool_or([aux303_BOOL,aux769_BOOL],true);
constraint array_bool_or([aux770_BOOL,aux323_BOOL],true);
constraint array_bool_or([aux771_BOOL,aux346_BOOL],true);
constraint array_bool_or([aux772_BOOL,aux367_BOOL],true);
constraint array_bool_or([aux773_BOOL,aux385_BOOL],true);
constraint array_bool_or([aux774_BOOL,aux335_BOOL],true);
constraint array_bool_or([aux289_BOOL,aux775_BOOL],true);
constraint array_bool_or([aux305_BOOL,aux776_BOOL],true);
constraint array_bool_or([aux317_BOOL,aux777_BOOL],true);
constraint array_bool_or([aux333_BOOL,aux778_BOOL],true);
constraint array_bool_or([aux349_BOOL,aux779_BOOL],true);
constraint array_bool_or([aux310_BOOL,aux780_BOOL],true);
constraint array_bool_or([aux781_BOOL,aux299_BOOL],true);
constraint array_bool_or([aux782_BOOL,aux280_BOOL],true);
constraint array_bool_or([aux783_BOOL,aux384_BOOL],true);
constraint array_bool_or([aux784_BOOL,aux373_BOOL],true);
constraint array_bool_or([aux785_BOOL,aux357_BOOL],true);
constraint array_bool_or([aux786_BOOL,aux292_BOOL],true);
constraint array_bool_or([aux391_BOOL,aux787_BOOL],true);
constraint array_bool_or([aux355_BOOL,aux788_BOOL],true);
constraint array_bool_or([aux331_BOOL,aux789_BOOL],true);
constraint array_bool_or([aux324_BOOL,aux790_BOOL],true);
constraint array_bool_or([aux287_BOOL,aux791_BOOL],true);
constraint array_bool_or([aux337_BOOL,aux792_BOOL],true);
constraint array_bool_or([aux353_BOOL,aux793_BOOL],true);
constraint array_bool_or([aux343_BOOL,aux794_BOOL],true);
constraint array_bool_or([aux381_BOOL,aux795_BOOL],true);
constraint array_bool_or([aux368_BOOL,aux796_BOOL],true);
constraint array_bool_or([aux297_BOOL,aux797_BOOL],true);
constraint array_bool_or([aux277_BOOL,aux798_BOOL],true);

solve :: int_search([plan2d_00001_00001, plan2d_00001_00002, plan2d_00001_00003, plan2d_00001_00004, plan2d_00001_00005, plan2d_00001_00006, plan2d_00001_00006, plan2d_00002_00001, plan2d_00002_00002, plan2d_00002_00003, plan2d_00002_00004, plan2d_00002_00005, plan2d_00002_00006, plan2d_00002_00006, plan2d_00003_00001, plan2d_00003_00002, plan2d_00003_00003, plan2d_00003_00004, plan2d_00003_00005, plan2d_00003_00006, plan2d_00003_00006, plan2d_00004_00001, plan2d_00004_00002, plan2d_00004_00003, plan2d_00004_00004, plan2d_00004_00005, plan2d_00004_00006, plan2d_00004_00006, plan2d_00005_00001, plan2d_00005_00002, plan2d_00005_00003, plan2d_00005_00004, plan2d_00005_00005, plan2d_00005_00006, plan2d_00005_00006, plan2d_00006_00001, plan2d_00006_00002, plan2d_00006_00003, plan2d_00006_00004, plan2d_00006_00005, plan2d_00006_00006, plan2d_00006_00006, plan2d_00007_00001, plan2d_00007_00002, plan2d_00007_00003, plan2d_00007_00004, plan2d_00007_00005, plan2d_00007_00006, plan2d_00007_00006, plan2d_00008_00001, plan2d_00008_00002, plan2d_00008_00003, plan2d_00008_00004, plan2d_00008_00005, plan2d_00008_00006, plan2d_00008_00006, plan2d_00009_00001, plan2d_00009_00002, plan2d_00009_00003, plan2d_00009_00004, plan2d_00009_00005, plan2d_00009_00006, plan2d_00009_00006, plan2d_00010_00001, plan2d_00010_00002, plan2d_00010_00003, plan2d_00010_00004, plan2d_00010_00005, plan2d_00010_00006, plan2d_00010_00006, plan2d_00011_00001, plan2d_00011_00002, plan2d_00011_00003, plan2d_00011_00004, plan2d_00011_00005, plan2d_00011_00006, plan2d_00011_00006, plan2d_00012_00001, plan2d_00012_00002, plan2d_00012_00003, plan2d_00012_00004, plan2d_00012_00005, plan2d_00012_00006, plan2d_00012_00006, plan2d_00013_00001, plan2d_00013_00002, plan2d_00013_00003, plan2d_00013_00004, plan2d_00013_00005, plan2d_00013_00006, plan2d_00013_00006, plan2d_00014_00001, plan2d_00014_00002, plan2d_00014_00003, plan2d_00014_00004, plan2d_00014_00005, plan2d_00014_00006, plan2d_00014_00006, plan2d_00015_00001, plan2d_00015_00002, plan2d_00015_00003, plan2d_00015_00004, plan2d_00015_00005, plan2d_00015_00006, plan2d_00015_00006, plan2d_00016_00001, plan2d_00016_00002, plan2d_00016_00003, plan2d_00016_00004, plan2d_00016_00005, plan2d_00016_00006, plan2d_00016_00006, plan2d_00017_00001, plan2d_00017_00002, plan2d_00017_00003, plan2d_00017_00004, plan2d_00017_00005, plan2d_00017_00006, plan2d_00017_00006, plan2d_00018_00001, plan2d_00018_00002, plan2d_00018_00003, plan2d_00018_00004, plan2d_00018_00005, plan2d_00018_00006, plan2d_00018_00006, plan2d_00019_00001, plan2d_00019_00002, plan2d_00019_00003, plan2d_00019_00004, plan2d_00019_00005, plan2d_00019_00006, plan2d_00019_00006, plan2d_00020_00001, plan2d_00020_00002, plan2d_00020_00003, plan2d_00020_00004, plan2d_00020_00005, plan2d_00020_00006, plan2d_00020_00006], input_order, indomain_min, complete)
 satisfy;
